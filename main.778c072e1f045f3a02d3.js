/*! For license information please see main.778c072e1f045f3a02d3.js.LICENSE.txt */
!function(){var t={125:function(t){t.exports=function t(e,i,n){function r(a,s){if(!i[a]){if(!e[a]){if(o)return o(a,!0);throw new Error("Cannot find module '"+a+"'")}var q=i[a]={exports:{}};e[a][0].call(q.exports,(function(t){return r(e[a][1][t]||t)}),q,q.exports,t,e,i,n)}return i[a].exports}for(var o=void 0,a=0;a<n.length;a++)r(n[a]);return r}({1:[function(t,e,i){e.exports={name:"cannon",version:"0.6.2",description:"A lightweight 3D physics engine written in JavaScript.",homepage:"https://github.com/schteppe/cannon.js",author:"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",keywords:["cannon.js","cannon","physics","engine","3d"],main:"./build/cannon.js",engines:{node:"*"},repository:{type:"git",url:"https://github.com/schteppe/cannon.js.git"},bugs:{url:"https://github.com/schteppe/cannon.js/issues"},licenses:[{type:"MIT"}],devDependencies:{jshint:"latest","uglify-js":"latest",nodeunit:"^0.9.0",grunt:"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-concat":"~0.1.3","grunt-contrib-uglify":"^0.5.1","grunt-browserify":"^2.1.4","grunt-contrib-yuidoc":"^0.5.2",browserify:"*"},dependencies:{}}},{}],2:[function(t,e,i){e.exports={version:t("../package.json").version,AABB:t("./collision/AABB"),ArrayCollisionMatrix:t("./collision/ArrayCollisionMatrix"),Body:t("./objects/Body"),Box:t("./shapes/Box"),Broadphase:t("./collision/Broadphase"),Constraint:t("./constraints/Constraint"),ContactEquation:t("./equations/ContactEquation"),Narrowphase:t("./world/Narrowphase"),ConeTwistConstraint:t("./constraints/ConeTwistConstraint"),ContactMaterial:t("./material/ContactMaterial"),ConvexPolyhedron:t("./shapes/ConvexPolyhedron"),Cylinder:t("./shapes/Cylinder"),DistanceConstraint:t("./constraints/DistanceConstraint"),Equation:t("./equations/Equation"),EventTarget:t("./utils/EventTarget"),FrictionEquation:t("./equations/FrictionEquation"),GSSolver:t("./solver/GSSolver"),GridBroadphase:t("./collision/GridBroadphase"),Heightfield:t("./shapes/Heightfield"),HingeConstraint:t("./constraints/HingeConstraint"),LockConstraint:t("./constraints/LockConstraint"),Mat3:t("./math/Mat3"),Material:t("./material/Material"),NaiveBroadphase:t("./collision/NaiveBroadphase"),ObjectCollisionMatrix:t("./collision/ObjectCollisionMatrix"),Pool:t("./utils/Pool"),Particle:t("./shapes/Particle"),Plane:t("./shapes/Plane"),PointToPointConstraint:t("./constraints/PointToPointConstraint"),Quaternion:t("./math/Quaternion"),Ray:t("./collision/Ray"),RaycastVehicle:t("./objects/RaycastVehicle"),RaycastResult:t("./collision/RaycastResult"),RigidVehicle:t("./objects/RigidVehicle"),RotationalEquation:t("./equations/RotationalEquation"),RotationalMotorEquation:t("./equations/RotationalMotorEquation"),SAPBroadphase:t("./collision/SAPBroadphase"),SPHSystem:t("./objects/SPHSystem"),Shape:t("./shapes/Shape"),Solver:t("./solver/Solver"),Sphere:t("./shapes/Sphere"),SplitSolver:t("./solver/SplitSolver"),Spring:t("./objects/Spring"),Trimesh:t("./shapes/Trimesh"),Vec3:t("./math/Vec3"),Vec3Pool:t("./utils/Vec3Pool"),World:t("./world/World")}},{"../package.json":1,"./collision/AABB":3,"./collision/ArrayCollisionMatrix":4,"./collision/Broadphase":5,"./collision/GridBroadphase":6,"./collision/NaiveBroadphase":7,"./collision/ObjectCollisionMatrix":8,"./collision/Ray":9,"./collision/RaycastResult":10,"./collision/SAPBroadphase":11,"./constraints/ConeTwistConstraint":12,"./constraints/Constraint":13,"./constraints/DistanceConstraint":14,"./constraints/HingeConstraint":15,"./constraints/LockConstraint":16,"./constraints/PointToPointConstraint":17,"./equations/ContactEquation":19,"./equations/Equation":20,"./equations/FrictionEquation":21,"./equations/RotationalEquation":22,"./equations/RotationalMotorEquation":23,"./material/ContactMaterial":24,"./material/Material":25,"./math/Mat3":27,"./math/Quaternion":28,"./math/Vec3":30,"./objects/Body":31,"./objects/RaycastVehicle":32,"./objects/RigidVehicle":33,"./objects/SPHSystem":34,"./objects/Spring":35,"./shapes/Box":37,"./shapes/ConvexPolyhedron":38,"./shapes/Cylinder":39,"./shapes/Heightfield":40,"./shapes/Particle":41,"./shapes/Plane":42,"./shapes/Shape":43,"./shapes/Sphere":44,"./shapes/Trimesh":45,"./solver/GSSolver":46,"./solver/Solver":47,"./solver/SplitSolver":48,"./utils/EventTarget":49,"./utils/Pool":51,"./utils/Vec3Pool":54,"./world/Narrowphase":55,"./world/World":56}],3:[function(t,e,i){var n=t("../math/Vec3");function r(t){t=t||{},this.lowerBound=new n,t.lowerBound&&this.lowerBound.copy(t.lowerBound),this.upperBound=new n,t.upperBound&&this.upperBound.copy(t.upperBound)}t("../utils/Utils"),e.exports=r;var o=new n;r.prototype.setFromPoints=function(t,e,i,n){var r=this.lowerBound,a=this.upperBound,s=i;r.copy(t[0]),s&&s.vmult(r,r),a.copy(r);for(var q=1;q<t.length;q++){var l=t[q];s&&(s.vmult(l,o),l=o),l.x>a.x&&(a.x=l.x),l.x<r.x&&(r.x=l.x),l.y>a.y&&(a.y=l.y),l.y<r.y&&(r.y=l.y),l.z>a.z&&(a.z=l.z),l.z<r.z&&(r.z=l.z)}return e&&(e.vadd(r,r),e.vadd(a,a)),n&&(r.x-=n,r.y-=n,r.z-=n,a.x+=n,a.y+=n,a.z+=n),this},r.prototype.copy=function(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this},r.prototype.clone=function(){return(new r).copy(this)},r.prototype.extend=function(t){var e=t.lowerBound.x;this.lowerBound.x>e&&(this.lowerBound.x=e);var i=t.upperBound.x;this.upperBound.x<i&&(this.upperBound.x=i),e=t.lowerBound.y,this.lowerBound.y>e&&(this.lowerBound.y=e),i=t.upperBound.y,this.upperBound.y<i&&(this.upperBound.y=i),e=t.lowerBound.z,this.lowerBound.z>e&&(this.lowerBound.z=e),i=t.upperBound.z,this.upperBound.z<i&&(this.upperBound.z=i)},r.prototype.overlaps=function(t){var e=this.lowerBound,i=this.upperBound,n=t.lowerBound,r=t.upperBound;return(n.x<=i.x&&i.x<=r.x||e.x<=r.x&&r.x<=i.x)&&(n.y<=i.y&&i.y<=r.y||e.y<=r.y&&r.y<=i.y)&&(n.z<=i.z&&i.z<=r.z||e.z<=r.z&&r.z<=i.z)},r.prototype.contains=function(t){var e=this.lowerBound,i=this.upperBound,n=t.lowerBound,r=t.upperBound;return e.x<=n.x&&i.x>=r.x&&e.y<=n.y&&i.y>=r.y&&e.z<=n.z&&i.z>=r.z},r.prototype.getCorners=function(t,e,i,n,r,o,a,s){var q=this.lowerBound,l=this.upperBound;t.copy(q),e.set(l.x,q.y,q.z),i.set(l.x,l.y,q.z),n.set(q.x,l.y,l.z),r.set(l.x,q.y,q.z),o.set(q.x,l.y,q.z),a.set(q.x,q.y,l.z),s.copy(l)};var a=[new n,new n,new n,new n,new n,new n,new n,new n];r.prototype.toLocalFrame=function(t,e){var i=a,n=i[0],r=i[1],o=i[2],s=i[3],q=i[4],l=i[5],h=i[6],c=i[7];this.getCorners(n,r,o,s,q,l,h,c);for(var u=0;8!==u;u++){var p=i[u];t.pointToLocal(p,p)}return e.setFromPoints(i)},r.prototype.toWorldFrame=function(t,e){var i=a,n=i[0],r=i[1],o=i[2],s=i[3],q=i[4],l=i[5],h=i[6],c=i[7];this.getCorners(n,r,o,s,q,l,h,c);for(var u=0;8!==u;u++){var p=i[u];t.pointToWorld(p,p)}return e.setFromPoints(i)}},{"../math/Vec3":30,"../utils/Utils":53}],4:[function(t,e,i){function n(){this.matrix=[]}e.exports=n,n.prototype.get=function(t,e){if(t=t.index,(e=e.index)>t){var i=e;e=t,t=i}return this.matrix[(t*(t+1)>>1)+e-1]},n.prototype.set=function(t,e,i){if(t=t.index,(e=e.index)>t){var n=e;e=t,t=n}this.matrix[(t*(t+1)>>1)+e-1]=i?1:0},n.prototype.reset=function(){for(var t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0},n.prototype.setNumObjects=function(t){this.matrix.length=t*(t-1)>>1}},{}],5:[function(t,e,i){var n=t("../objects/Body"),r=t("../math/Vec3"),o=t("../math/Quaternion");function a(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}t("../shapes/Shape"),t("../shapes/Plane"),e.exports=a,a.prototype.collisionPairs=function(t,e,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")};var s=n.STATIC|n.KINEMATIC;a.prototype.needBroadphaseCollision=function(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&s)&&t.sleepState!==n.SLEEPING||0==(e.type&s)&&e.sleepState!==n.SLEEPING)},a.prototype.intersectionTest=function(t,e,i,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,i,n):this.doBoundingSphereBroadphase(t,e,i,n)};var q=new r;new r,new o,new r,a.prototype.doBoundingSphereBroadphase=function(t,e,i,n){var r=q;e.position.vsub(t.position,r);var o=Math.pow(t.boundingRadius+e.boundingRadius,2);r.norm2()<o&&(i.push(t),n.push(e))},a.prototype.doBoundingBoxBroadphase=function(t,e,i,n){t.aabbNeedsUpdate&&t.computeAABB(),e.aabbNeedsUpdate&&e.computeAABB(),t.aabb.overlaps(e.aabb)&&(i.push(t),n.push(e))};var l={keys:[]},h=[],c=[];a.prototype.makePairsUnique=function(t,e){for(var i=l,n=h,r=c,o=t.length,a=0;a!==o;a++)n[a]=t[a],r[a]=e[a];for(t.length=0,e.length=0,a=0;a!==o;a++){var s=n[a].id,q=r[a].id;i[u=s<q?s+","+q:q+","+s]=a,i.keys.push(u)}for(a=0;a!==i.keys.length;a++){var u=i.keys.pop(),p=i[u];t.push(n[p]),e.push(r[p]),delete i[u]}},a.prototype.setWorld=function(t){};var u=new r;a.boundingSphereCheck=function(t,e){var i=u;return t.position.vsub(e.position,i),Math.pow(t.shape.boundingSphereRadius+e.shape.boundingSphereRadius,2)>i.norm2()},a.prototype.aabbQuery=function(t,e,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}},{"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Plane":42,"../shapes/Shape":43}],6:[function(t,e,i){e.exports=a;var n=t("./Broadphase"),r=t("../math/Vec3"),o=t("../shapes/Shape");function a(t,e,i,o,a){n.apply(this),this.nx=i||10,this.ny=o||10,this.nz=a||10,this.aabbMin=t||new r(100,100,100),this.aabbMax=e||new r(-100,-100,-100);var s=this.nx*this.ny*this.nz;if(s<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=s,this.binLengths.length=s;for(var q=0;q<s;q++)this.bins[q]=[],this.binLengths[q]=0}a.prototype=new n,a.prototype.constructor=a;var s=new r;new r,a.prototype.collisionPairs=function(t,e,i){for(var n=t.numObjects(),r=t.bodies,a=this.aabbMax,q=this.aabbMin,l=this.nx,h=this.ny,c=this.nz,u=h*c,p=c,d=1,m=a.x,f=a.y,v=a.z,g=q.x,y=q.y,x=q.z,w=l/(m-g),b=h/(f-y),_=c/(v-x),M=(m-g)/l,S=(f-y)/h,E=(v-x)/c,T=.5*Math.sqrt(M*M+S*S+E*E),A=o.types,L=A.SPHERE,P=A.PLANE,z=(A.BOX,A.COMPOUND,A.CONVEXPOLYHEDRON,this.bins),R=this.binLengths,C=this.bins.length,O=0;O!==C;O++)R[O]=0;var I=Math.ceil;function N(t,e,i,n,r,o,a){var s=(t-g)*w|0,q=(e-y)*b|0,m=(i-x)*_|0,f=I((n-g)*w),v=I((r-y)*b),M=I((o-x)*_);s<0?s=0:s>=l&&(s=l-1),q<0?q=0:q>=h&&(q=h-1),m<0?m=0:m>=c&&(m=c-1),f<0?f=0:f>=l&&(f=l-1),v<0?v=0:v>=h&&(v=h-1),M<0?M=0:M>=c&&(M=c-1),q*=p,m*=d,f*=u,v*=p,M*=d;for(var S=s*=u;S<=f;S+=u)for(var E=q;E<=v;E+=p)for(var T=m;T<=M;T+=d){var A=S+E+T;z[A][R[A]++]=a}}for(q=Math.min,a=Math.max,O=0;O!==n;O++){var B=(it=r[O]).shape;switch(B.type){case L:var D=it.position.x,F=it.position.y,V=it.position.z,U=B.radius;N(D-U,F-U,V-U,D+U,F+U,V+U,it);break;case P:B.worldNormalNeedsUpdate&&B.computeWorldNormal(it.quaternion);var j=B.worldNormal,G=g+.5*M-it.position.x,H=y+.5*S-it.position.y,W=x+.5*E-it.position.z,k=s;k.set(G,H,W);for(var X=0,Y=0;X!==l;X++,Y+=u,k.y=H,k.x+=M)for(var Z=0,J=0;Z!==h;Z++,J+=p,k.z=W,k.y+=S)for(var Q=0,K=0;Q!==c;Q++,K+=d,k.z+=E)if(k.dot(j)<T){var $=Y+J+K;z[$][R[$]++]=it}break;default:it.aabbNeedsUpdate&&it.computeAABB(),N(it.aabb.lowerBound.x,it.aabb.lowerBound.y,it.aabb.lowerBound.z,it.aabb.upperBound.x,it.aabb.upperBound.y,it.aabb.upperBound.z,it)}}for(O=0;O!==C;O++){var tt=R[O];if(tt>1){var et=z[O];for(X=0;X!==tt;X++){var it=et[X];for(Z=0;Z!==X;Z++){var nt=et[Z];this.needBroadphaseCollision(it,nt)&&this.intersectionTest(it,nt,e,i)}}}}this.makePairsUnique(e,i)}},{"../math/Vec3":30,"../shapes/Shape":43,"./Broadphase":5}],7:[function(t,e,i){e.exports=o;var n=t("./Broadphase"),r=t("./AABB");function o(){n.apply(this)}o.prototype=new n,o.prototype.constructor=o,o.prototype.collisionPairs=function(t,e,i){var n,r,o,a,s=t.bodies,q=s.length;for(n=0;n!==q;n++)for(r=0;r!==n;r++)o=s[n],a=s[r],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,i)},new r,o.prototype.aabbQuery=function(t,e,i){i=i||[];for(var n=0;n<t.bodies.length;n++){var r=t.bodies[n];r.aabbNeedsUpdate&&r.computeAABB(),r.aabb.overlaps(e)&&i.push(r)}return i}},{"./AABB":3,"./Broadphase":5}],8:[function(t,e,i){function n(){this.matrix={}}e.exports=n,n.prototype.get=function(t,e){if(t=t.id,(e=e.id)>t){var i=e;e=t,t=i}return t+"-"+e in this.matrix},n.prototype.set=function(t,e,i){if(t=t.id,(e=e.id)>t){var n=e;e=t,t=n}i?this.matrix[t+"-"+e]=!0:delete this.matrix[t+"-"+e]},n.prototype.reset=function(){this.matrix={}},n.prototype.setNumObjects=function(t){}},{}],9:[function(t,e,i){e.exports=l;var n=t("../math/Vec3"),r=t("../math/Quaternion"),o=t("../math/Transform"),a=(t("../shapes/ConvexPolyhedron"),t("../shapes/Box"),t("../collision/RaycastResult")),s=t("../shapes/Shape"),q=t("../collision/AABB");function l(t,e){this.from=t?t.clone():new n,this.to=e?e.clone():new n,this._direction=new n,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=l.ANY,this.result=new a,this.hasHit=!1,this.callback=function(t){}}l.prototype.constructor=l,l.CLOSEST=1,l.ANY=2,l.ALL=4;var h=new q,c=[];l.prototype.intersectWorld=function(t,e){return this.mode=e.mode||l.ANY,this.result=e.result||new a,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(h),c.length=0,t.broadphase.aabbQuery(t,h,c),this.intersectBodies(c),this.hasHit};var u=new n,p=new n;function d(t,e,i,n){n.vsub(e,O),i.vsub(e,u),t.vsub(e,p);var r,o,a=O.dot(O),s=O.dot(u),q=O.dot(p),l=u.dot(u),h=u.dot(p);return(r=l*q-s*h)>=0&&(o=a*h-s*q)>=0&&r+o<a*l-s*s}l.pointInTriangle=d;var m=new n,f=new r;l.prototype.intersectBody=function(t,e){e&&(this.result=e,this._updateDirection());var i=this.checkCollisionResponse;if((!i||t.collisionResponse)&&0!=(this.collisionFilterGroup&t.collisionFilterMask)&&0!=(t.collisionFilterGroup&this.collisionFilterMask))for(var n=m,r=f,o=0,a=t.shapes.length;o<a;o++){var s=t.shapes[o];if((!i||s.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],n),n.vadd(t.position,n),this.intersectShape(s,r,n,t),this.result._shouldStop))break}},l.prototype.intersectBodies=function(t,e){e&&(this.result=e,this._updateDirection());for(var i=0,n=t.length;!this.result._shouldStop&&i<n;i++)this.intersectBody(t[i])},l.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},l.prototype.intersectShape=function(t,e,i,n){if(!(function(t,e,i){i.vsub(t,O);var n=O.dot(e);return e.mult(n,I),I.vadd(t,I),i.distanceTo(I)}(this.from,this._direction,i)>t.boundingSphereRadius)){var r=this[t.type];r&&r.call(this,t,e,i,n)}},new n,new n;var v=new n,g=new n,y=new n,x=new n;new n,new a,l.prototype.intersectBox=function(t,e,i,n){return this.intersectConvex(t.convexPolyhedronRepresentation,e,i,n)},l.prototype[s.types.BOX]=l.prototype.intersectBox,l.prototype.intersectPlane=function(t,e,i,r){var o=this.from,a=this.to,s=this._direction,q=new n(0,0,1);e.vmult(q,q);var l=new n;o.vsub(i,l);var h=l.dot(q);if(a.vsub(i,l),!(h*l.dot(q)>0||o.distanceTo(a)<h)){var c=q.dot(s);if(!(Math.abs(c)<this.precision)){var u=new n,p=new n,d=new n;o.vsub(i,u);var m=-q.dot(u)/c;s.scale(m,p),o.vadd(p,d),this.reportIntersection(q,d,t,r,-1)}}},l.prototype[s.types.PLANE]=l.prototype.intersectPlane,l.prototype.getAABB=function(t){var e=this.to,i=this.from;t.lowerBound.x=Math.min(e.x,i.x),t.lowerBound.y=Math.min(e.y,i.y),t.lowerBound.z=Math.min(e.z,i.z),t.upperBound.x=Math.max(e.x,i.x),t.upperBound.y=Math.max(e.y,i.y),t.upperBound.z=Math.max(e.z,i.z)};var w={faceList:[0]};l.prototype.intersectHeightfield=function(t,e,i,r){t.data,t.elementSize;var a=new n,s=new l(this.from,this.to);o.pointToLocalFrame(i,e,s.from,s.from),o.pointToLocalFrame(i,e,s.to,s.to);var q=[],h=null,c=null,u=null,p=null,d=t.getIndexOfPosition(s.from.x,s.from.y,q,!1);if(d&&(h=q[0],c=q[1],u=q[0],p=q[1]),(d=t.getIndexOfPosition(s.to.x,s.to.y,q,!1))&&((null===h||q[0]<h)&&(h=q[0]),(null===u||q[0]>u)&&(u=q[0]),(null===c||q[1]<c)&&(c=q[1]),(null===p||q[1]>p)&&(p=q[1])),null!==h){var m=[];t.getRectMinMax(h,c,u,p,m);for(var f=h;f<=u;f++)for(var v=c;v<=p;v++){if(this.result._shouldStop)return;if(t.getConvexTrianglePillar(f,v,!1),o.pointToWorldFrame(i,e,t.pillarOffset,a),this.intersectConvex(t.pillarConvex,e,a,r,w),this.result._shouldStop)return;t.getConvexTrianglePillar(f,v,!0),o.pointToWorldFrame(i,e,t.pillarOffset,a),this.intersectConvex(t.pillarConvex,e,a,r,w)}}},l.prototype[s.types.HEIGHTFIELD]=l.prototype.intersectHeightfield;var b=new n,_=new n;l.prototype.intersectSphere=function(t,e,i,n){var r=this.from,o=this.to,a=t.radius,s=Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)+Math.pow(o.z-r.z,2),q=2*((o.x-r.x)*(r.x-i.x)+(o.y-r.y)*(r.y-i.y)+(o.z-r.z)*(r.z-i.z)),l=Math.pow(r.x-i.x,2)+Math.pow(r.y-i.y,2)+Math.pow(r.z-i.z,2)-Math.pow(a,2),h=Math.pow(q,2)-4*s*l,c=b,u=_;if(!(h<0))if(0===h)r.lerp(o,h,c),c.vsub(i,u),u.normalize(),this.reportIntersection(u,c,t,n,-1);else{var p=(-q-Math.sqrt(h))/(2*s),d=(-q+Math.sqrt(h))/(2*s);if(p>=0&&p<=1&&(r.lerp(o,p,c),c.vsub(i,u),u.normalize(),this.reportIntersection(u,c,t,n,-1)),this.result._shouldStop)return;d>=0&&d<=1&&(r.lerp(o,d,c),c.vsub(i,u),u.normalize(),this.reportIntersection(u,c,t,n,-1))}},l.prototype[s.types.SPHERE]=l.prototype.intersectSphere;var M=new n,S=(new n,new n,new n);l.prototype.intersectConvex=function(t,e,i,n,r){for(var o=M,a=S,s=r&&r.faceList||null,q=t.faces,l=t.vertices,h=t.faceNormals,c=this._direction,u=this.from,p=this.to,m=u.distanceTo(p),f=s?s.length:q.length,w=this.result,b=0;!w._shouldStop&&b<f;b++){var _=s?s[b]:b,E=q[_],T=h[_],A=e,L=i;a.copy(l[E[0]]),A.vmult(a,a),a.vadd(L,a),a.vsub(u,a),A.vmult(T,o);var P=c.dot(o);if(!(Math.abs(P)<this.precision)){var z=o.dot(a)/P;if(!(z<0)){c.mult(z,v),v.vadd(u,v),g.copy(l[E[0]]),A.vmult(g,g),L.vadd(g,g);for(var R=1;!w._shouldStop&&R<E.length-1;R++){y.copy(l[E[R]]),x.copy(l[E[R+1]]),A.vmult(y,y),A.vmult(x,x),L.vadd(y,y),L.vadd(x,x);var C=v.distanceTo(u);!d(v,g,y,x)&&!d(v,y,g,x)||C>m||this.reportIntersection(o,v,t,n,_)}}}}},l.prototype[s.types.CONVEXPOLYHEDRON]=l.prototype.intersectConvex;var E=new n,T=new n,A=new n,L=new n,P=new n,z=new n,R=(new q,[]),C=new o;l.prototype.intersectTrimesh=function(t,e,i,n,r){var a=E,s=R,q=C,l=S,h=T,c=A,u=L,p=z,m=P,f=(r&&r.faceList,t.indices),w=(t.vertices,t.faceNormals,this.from),b=this.to,_=this._direction;q.position.copy(i),q.quaternion.copy(e),o.vectorToLocalFrame(i,e,_,h),o.pointToLocalFrame(i,e,w,c),o.pointToLocalFrame(i,e,b,u);var M=c.distanceSquared(u);t.tree.rayQuery(this,q,s);for(var O=0,I=s.length;!this.result._shouldStop&&O!==I;O++){var N=s[O];t.getNormal(N,a),t.getVertex(f[3*N],g),g.vsub(c,l);var B=h.dot(a),D=a.dot(l)/B;if(!(D<0)){h.scale(D,v),v.vadd(c,v),t.getVertex(f[3*N+1],y),t.getVertex(f[3*N+2],x);var F=v.distanceSquared(c);!d(v,y,g,x)&&!d(v,g,y,x)||F>M||(o.vectorToWorldFrame(e,a,m),o.pointToWorldFrame(i,e,v,p),this.reportIntersection(m,p,t,n,N))}}s.length=0},l.prototype[s.types.TRIMESH]=l.prototype.intersectTrimesh,l.prototype.reportIntersection=function(t,e,i,n,r){var o=this.from,a=this.to,s=o.distanceTo(e),q=this.result;if(!(this.skipBackfaces&&t.dot(this._direction)>0))switch(q.hitFaceIndex=void 0!==r?r:-1,this.mode){case l.ALL:this.hasHit=!0,q.set(o,a,t,e,i,n,s),q.hasHit=!0,this.callback(q);break;case l.CLOSEST:(s<q.distance||!q.hasHit)&&(this.hasHit=!0,q.hasHit=!0,q.set(o,a,t,e,i,n,s));break;case l.ANY:this.hasHit=!0,q.hasHit=!0,q.set(o,a,t,e,i,n,s),q._shouldStop=!0}};var O=new n,I=new n},{"../collision/AABB":3,"../collision/RaycastResult":10,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../shapes/Box":37,"../shapes/ConvexPolyhedron":38,"../shapes/Shape":43}],10:[function(t,e,i){var n=t("../math/Vec3");function r(){this.rayFromWorld=new n,this.rayToWorld=new n,this.hitNormalWorld=new n,this.hitPointWorld=new n,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}e.exports=r,r.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},r.prototype.abort=function(){this._shouldStop=!0},r.prototype.set=function(t,e,i,n,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(n),this.shape=r,this.body=o,this.distance=a}},{"../math/Vec3":30}],11:[function(t,e,i){t("../shapes/Shape");var n=t("../collision/Broadphase");function r(t){n.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var e=this.axisList;this._addBodyHandler=function(t){e.push(t.body)},this._removeBodyHandler=function(t){var i=e.indexOf(t.body);-1!==i&&e.splice(i,1)},t&&this.setWorld(t)}e.exports=r,r.prototype=new n,r.prototype.setWorld=function(t){this.axisList.length=0;for(var e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0},r.insertionSortX=function(t){for(var e=1,i=t.length;e<i;e++){for(var n=t[e],r=e-1;r>=0&&!(t[r].aabb.lowerBound.x<=n.aabb.lowerBound.x);r--)t[r+1]=t[r];t[r+1]=n}return t},r.insertionSortY=function(t){for(var e=1,i=t.length;e<i;e++){for(var n=t[e],r=e-1;r>=0&&!(t[r].aabb.lowerBound.y<=n.aabb.lowerBound.y);r--)t[r+1]=t[r];t[r+1]=n}return t},r.insertionSortZ=function(t){for(var e=1,i=t.length;e<i;e++){for(var n=t[e],r=e-1;r>=0&&!(t[r].aabb.lowerBound.z<=n.aabb.lowerBound.z);r--)t[r+1]=t[r];t[r+1]=n}return t},r.prototype.collisionPairs=function(t,e,i){var n,o,a=this.axisList,s=a.length,q=this.axisIndex;for(this.dirty&&(this.sortList(),this.dirty=!1),n=0;n!==s;n++){var l=a[n];for(o=n+1;o<s;o++){var h=a[o];if(this.needBroadphaseCollision(l,h)){if(!r.checkBounds(l,h,q))break;this.intersectionTest(l,h,e,i)}}}},r.prototype.sortList=function(){for(var t=this.axisList,e=this.axisIndex,i=t.length,n=0;n!==i;n++){var o=t[n];o.aabbNeedsUpdate&&o.computeAABB()}0===e?r.insertionSortX(t):1===e?r.insertionSortY(t):2===e&&r.insertionSortZ(t)},r.checkBounds=function(t,e,i){var n,r;0===i?(n=t.position.x,r=e.position.x):1===i?(n=t.position.y,r=e.position.y):2===i&&(n=t.position.z,r=e.position.z);var o=t.boundingRadius;return r-e.boundingRadius<n+o},r.prototype.autoDetectAxis=function(){for(var t=0,e=0,i=0,n=0,r=0,o=0,a=this.axisList,s=a.length,q=1/s,l=0;l!==s;l++){var h=a[l],c=h.position.x;t+=c,e+=c*c;var u=h.position.y;i+=u,n+=u*u;var p=h.position.z;r+=p,o+=p*p}var d=e-t*t*q,m=n-i*i*q,f=o-r*r*q;this.axisIndex=d>m?d>f?0:2:m>f?1:2},r.prototype.aabbQuery=function(t,e,i){i=i||[],this.dirty&&(this.sortList(),this.dirty=!1);var n=this.axisIndex,r="x";1===n&&(r="y"),2===n&&(r="z");for(var o=this.axisList,a=(e.lowerBound[r],e.upperBound[r],0);a<o.length;a++){var s=o[a];s.aabbNeedsUpdate&&s.computeAABB(),s.aabb.overlaps(e)&&i.push(s)}return i}},{"../collision/Broadphase":5,"../shapes/Shape":43}],12:[function(t,e,i){e.exports=s,t("./Constraint");var n=t("./PointToPointConstraint"),r=t("../equations/ConeEquation"),o=t("../equations/RotationalEquation"),a=(t("../equations/ContactEquation"),t("../math/Vec3"));function s(t,e,i){var s=void 0!==(i=i||{}).maxForce?i.maxForce:1e6,q=i.pivotA?i.pivotA.clone():new a,l=i.pivotB?i.pivotB.clone():new a;this.axisA=i.axisA?i.axisA.clone():new a,this.axisB=i.axisB?i.axisB.clone():new a,n.call(this,t,q,e,l,s),this.collideConnected=!!i.collideConnected,this.angle=void 0!==i.angle?i.angle:0;var h=this.coneEquation=new r(t,e,i),c=this.twistEquation=new o(t,e,i);this.twistAngle=void 0!==i.twistAngle?i.twistAngle:0,h.maxForce=0,h.minForce=-s,c.maxForce=0,c.minForce=-s,this.equations.push(h,c)}s.prototype=new n,s.constructor=s,new a,new a,s.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.coneEquation,r=this.twistEquation;n.prototype.update.call(this),t.vectorToWorldFrame(this.axisA,i.axisA),e.vectorToWorldFrame(this.axisB,i.axisB),this.axisA.tangents(r.axisA,r.axisA),t.vectorToWorldFrame(r.axisA,r.axisA),this.axisB.tangents(r.axisB,r.axisB),e.vectorToWorldFrame(r.axisB,r.axisB),i.angle=this.angle,r.maxAngle=this.twistAngle}},{"../equations/ConeEquation":18,"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],13:[function(t,e,i){e.exports=r;var n=t("../utils/Utils");function r(t,e,i){i=n.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=r.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}r.prototype.update=function(){throw new Error("method update() not implmemented in this Constraint subclass!")},r.prototype.enable=function(){for(var t=this.equations,e=0;e<t.length;e++)t[e].enabled=!0},r.prototype.disable=function(){for(var t=this.equations,e=0;e<t.length;e++)t[e].enabled=!1},r.idCounter=0},{"../utils/Utils":53}],14:[function(t,e,i){e.exports=o;var n=t("./Constraint"),r=t("../equations/ContactEquation");function o(t,e,i,o){n.call(this,t,e),void 0===i&&(i=t.position.distanceTo(e.position)),void 0===o&&(o=1e6),this.distance=i;var a=this.distanceEquation=new r(t,e);this.equations.push(a),a.minForce=-o,a.maxForce=o}o.prototype=new n,o.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.distanceEquation,n=.5*this.distance,r=i.ni;e.position.vsub(t.position,r),r.normalize(),r.mult(n,i.ri),r.mult(-n,i.rj)}},{"../equations/ContactEquation":19,"./Constraint":13}],15:[function(t,e,i){e.exports=s,t("./Constraint");var n=t("./PointToPointConstraint"),r=t("../equations/RotationalEquation"),o=t("../equations/RotationalMotorEquation"),a=(t("../equations/ContactEquation"),t("../math/Vec3"));function s(t,e,i){var s=void 0!==(i=i||{}).maxForce?i.maxForce:1e6,q=i.pivotA?i.pivotA.clone():new a,l=i.pivotB?i.pivotB.clone():new a;n.call(this,t,q,e,l,s),(this.axisA=i.axisA?i.axisA.clone():new a(1,0,0)).normalize(),(this.axisB=i.axisB?i.axisB.clone():new a(1,0,0)).normalize();var h=this.rotationalEquation1=new r(t,e,i),c=this.rotationalEquation2=new r(t,e,i),u=this.motorEquation=new o(t,e,s);u.enabled=!1,this.equations.push(h,c,u)}s.prototype=new n,s.constructor=s,s.prototype.enableMotor=function(){this.motorEquation.enabled=!0},s.prototype.disableMotor=function(){this.motorEquation.enabled=!1},s.prototype.setMotorSpeed=function(t){this.motorEquation.targetVelocity=t},s.prototype.setMotorMaxForce=function(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t};var q=new a,l=new a;s.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.motorEquation,r=this.rotationalEquation1,o=this.rotationalEquation2,a=q,s=l,h=this.axisA,c=this.axisB;n.prototype.update.call(this),t.quaternion.vmult(h,a),e.quaternion.vmult(c,s),a.tangents(r.axisA,o.axisA),r.axisB.copy(s),o.axisB.copy(s),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,i.axisA),e.quaternion.vmult(this.axisB,i.axisB))}},{"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../equations/RotationalMotorEquation":23,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],16:[function(t,e,i){e.exports=a,t("./Constraint");var n=t("./PointToPointConstraint"),r=t("../equations/RotationalEquation"),o=(t("../equations/RotationalMotorEquation"),t("../equations/ContactEquation"),t("../math/Vec3"));function a(t,e,i){var a=void 0!==(i=i||{}).maxForce?i.maxForce:1e6,s=new o,q=new o,l=new o;t.position.vadd(e.position,l),l.scale(.5,l),e.pointToLocalFrame(l,q),t.pointToLocalFrame(l,s),n.call(this,t,s,e,q,a);var h=this.rotationalEquation1=new r(t,e,i),c=this.rotationalEquation2=new r(t,e,i),u=this.rotationalEquation3=new r(t,e,i);this.equations.push(h,c,u)}a.prototype=new n,a.constructor=a,new o,new o,a.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=(this.motorEquation,this.rotationalEquation1),r=this.rotationalEquation2,a=this.rotationalEquation3;n.prototype.update.call(this),t.vectorToWorldFrame(o.UNIT_X,i.axisA),e.vectorToWorldFrame(o.UNIT_Y,i.axisB),t.vectorToWorldFrame(o.UNIT_Y,r.axisA),e.vectorToWorldFrame(o.UNIT_Z,r.axisB),t.vectorToWorldFrame(o.UNIT_Z,a.axisA),e.vectorToWorldFrame(o.UNIT_X,a.axisB)}},{"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../equations/RotationalMotorEquation":23,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],17:[function(t,e,i){e.exports=a;var n=t("./Constraint"),r=t("../equations/ContactEquation"),o=t("../math/Vec3");function a(t,e,i,a,s){n.call(this,t,i),s=void 0!==s?s:1e6,this.pivotA=e?e.clone():new o,this.pivotB=a?a.clone():new o;var q=this.equationX=new r(t,i),l=this.equationY=new r(t,i),h=this.equationZ=new r(t,i);this.equations.push(q,l,h),q.minForce=l.minForce=h.minForce=-s,q.maxForce=l.maxForce=h.maxForce=s,q.ni.set(1,0,0),l.ni.set(0,1,0),h.ni.set(0,0,1)}a.prototype=new n,a.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.equationX,n=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,i.ri),e.quaternion.vmult(this.pivotB,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),r.ri.copy(i.ri),r.rj.copy(i.rj)}},{"../equations/ContactEquation":19,"../math/Vec3":30,"./Constraint":13}],18:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=(t("../math/Mat3"),t("./Equation"));function o(t,e,i){var o=void 0!==(i=i||{}).maxForce?i.maxForce:1e6;r.call(this,t,e,-o,o),this.axisA=i.axisA?i.axisA.clone():new n(1,0,0),this.axisB=i.axisB?i.axisB.clone():new n(0,1,0),this.angle=void 0!==i.angle?i.angle:0}o.prototype=new r,o.prototype.constructor=o;var a=new n,s=new n;o.prototype.computeB=function(t){var e=this.a,i=this.b,n=this.axisA,r=this.axisB,o=a,q=s,l=this.jacobianElementA,h=this.jacobianElementB;return n.cross(r,o),r.cross(n,q),l.rotational.copy(q),h.rotational.copy(o),-(Math.cos(this.angle)-n.dot(r))*e-this.computeGW()*i-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],19:[function(t,e,i){e.exports=o;var n=t("./Equation"),r=t("../math/Vec3");function o(t,e,i){i=void 0!==i?i:1e6,n.call(this,t,e,0,i),this.restitution=0,this.ri=new r,this.rj=new r,this.ni=new r}t("../math/Mat3"),o.prototype=new n,o.prototype.constructor=o;var a=new r,s=new r,q=new r;o.prototype.computeB=function(t){var e=this.a,i=this.b,n=this.bi,r=this.bj,o=this.ri,l=this.rj,h=a,c=s,u=n.velocity,p=n.angularVelocity,d=(n.force,n.torque,r.velocity),m=r.angularVelocity,f=(r.force,r.torque,q),v=this.jacobianElementA,g=this.jacobianElementB,y=this.ni;o.cross(y,h),l.cross(y,c),y.negate(v.spatial),h.negate(v.rotational),g.spatial.copy(y),g.rotational.copy(c),f.copy(r.position),f.vadd(l,f),f.vsub(n.position,f),f.vsub(o,f);var x=y.dot(f),w=this.restitution+1;return-x*e-(w*d.dot(y)-w*u.dot(y)+m.dot(c)-p.dot(h))*i-t*this.computeGiMf()};var l=new r,h=new r,c=new r,u=new r,p=new r;o.prototype.getImpactVelocityAlongNormal=function(){var t=l,e=h,i=c,n=u,r=p;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(i,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,r),this.ni.dot(r)}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],20:[function(t,e,i){e.exports=o;var n=t("../math/JacobianElement"),r=t("../math/Vec3");function o(t,e,i,r){this.id=o.id++,this.minForce=void 0===i?-1e6:i,this.maxForce=void 0===r?1e6:r,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new n,this.jacobianElementB=new n,this.enabled=!0,this.setSpookParams(1e7,4,1/60)}o.prototype.constructor=o,o.id=0,o.prototype.setSpookParams=function(t,e,i){var n=e,r=t,o=i;this.a=4/(o*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(o*o*r*(1+4*n))},o.prototype.computeB=function(t,e,i){var n=this.computeGW();return-this.computeGq()*t-n*e-this.computeGiMf()*i},o.prototype.computeGq=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.position,o=n.position;return t.spatial.dot(r)+e.spatial.dot(o)};var a=new r;o.prototype.computeGW=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.velocity,o=n.velocity,s=i.angularVelocity||a,q=n.angularVelocity||a;return t.multiplyVectors(r,s)+e.multiplyVectors(o,q)},o.prototype.computeGWlambda=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.vlambda,o=n.vlambda,s=i.wlambda||a,q=n.wlambda||a;return t.multiplyVectors(r,s)+e.multiplyVectors(o,q)};var s=new r,q=new r,l=new r,h=new r;o.prototype.computeGiMf=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.force,o=i.torque,a=n.force,c=n.torque,u=i.invMassSolve,p=n.invMassSolve;return i.invInertiaWorldSolve?i.invInertiaWorldSolve.vmult(o,l):l.set(0,0,0),n.invInertiaWorldSolve?n.invInertiaWorldSolve.vmult(c,h):h.set(0,0,0),r.mult(u,s),a.mult(p,q),t.multiplyVectors(s,l)+e.multiplyVectors(q,h)};var c=new r;o.prototype.computeGiMGt=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.invMassSolve,o=n.invMassSolve,a=i.invInertiaWorldSolve,s=n.invInertiaWorldSolve,q=r+o;return a&&(a.vmult(t.rotational,c),q+=c.dot(t.rotational)),s&&(s.vmult(e.rotational,c),q+=c.dot(e.rotational)),q};var u=new r;new r,new r,new r,new r,new r,o.prototype.addToWlambda=function(t){var e=this.jacobianElementA,i=this.jacobianElementB,n=this.bi,r=this.bj,o=u;e.spatial.mult(n.invMassSolve*t,o),n.vlambda.vadd(o,n.vlambda),i.spatial.mult(r.invMassSolve*t,o),r.vlambda.vadd(o,r.vlambda),n.invInertiaWorldSolve&&(n.invInertiaWorldSolve.vmult(e.rotational,o),o.mult(t,o),n.wlambda.vadd(o,n.wlambda)),r.invInertiaWorldSolve&&(r.invInertiaWorldSolve.vmult(i.rotational,o),o.mult(t,o),r.wlambda.vadd(o,r.wlambda))},o.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{"../math/JacobianElement":26,"../math/Vec3":30}],21:[function(t,e,i){e.exports=o;var n=t("./Equation"),r=t("../math/Vec3");function o(t,e,i){n.call(this,t,e,-i,i),this.ri=new r,this.rj=new r,this.t=new r}t("../math/Mat3"),o.prototype=new n,o.prototype.constructor=o;var a=new r,s=new r;o.prototype.computeB=function(t){this.a;var e=this.b,i=(this.bi,this.bj,this.ri),n=this.rj,r=a,o=s,q=this.t;i.cross(q,r),n.cross(q,o);var l=this.jacobianElementA,h=this.jacobianElementB;return q.negate(l.spatial),r.negate(l.rotational),h.spatial.copy(q),h.rotational.copy(o),-this.computeGW()*e-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],22:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=(t("../math/Mat3"),t("./Equation"));function o(t,e,i){var o=void 0!==(i=i||{}).maxForce?i.maxForce:1e6;r.call(this,t,e,-o,o),this.axisA=i.axisA?i.axisA.clone():new n(1,0,0),this.axisB=i.axisB?i.axisB.clone():new n(0,1,0),this.maxAngle=Math.PI/2}o.prototype=new r,o.prototype.constructor=o;var a=new n,s=new n;o.prototype.computeB=function(t){var e=this.a,i=this.b,n=this.axisA,r=this.axisB,o=a,q=s,l=this.jacobianElementA,h=this.jacobianElementB;return n.cross(r,o),r.cross(n,q),l.rotational.copy(q),h.rotational.copy(o),-(Math.cos(this.maxAngle)-n.dot(r))*e-this.computeGW()*i-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],23:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=(t("../math/Mat3"),t("./Equation"));function o(t,e,i){i=void 0!==i?i:1e6,r.call(this,t,e,-i,i),this.axisA=new n,this.axisB=new n,this.targetVelocity=0}o.prototype=new r,o.prototype.constructor=o,o.prototype.computeB=function(t){this.a;var e=this.b,i=(this.bi,this.bj,this.axisA),n=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;return r.rotational.copy(i),n.negate(o.rotational),-(this.computeGW()-this.targetVelocity)*e-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],24:[function(t,e,i){var n=t("../utils/Utils");function r(t,e,i){i=n.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=r.idCounter++,this.materials=[t,e],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}e.exports=r,r.idCounter=0},{"../utils/Utils":53}],25:[function(t,e,i){function n(t){var e="";"string"==typeof(t=t||{})?(e=t,t={}):"object"==typeof t&&(e=""),this.name=e,this.id=n.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}e.exports=n,n.idCounter=0},{}],26:[function(t,e,i){e.exports=r;var n=t("./Vec3");function r(){this.spatial=new n,this.rotational=new n}r.prototype.multiplyElement=function(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)},r.prototype.multiplyVectors=function(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}},{"./Vec3":30}],27:[function(t,e,i){e.exports=r;var n=t("./Vec3");function r(t){this.elements=t||[0,0,0,0,0,0,0,0,0]}r.prototype.identity=function(){var t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1},r.prototype.setZero=function(){var t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0},r.prototype.setTrace=function(t){var e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z},r.prototype.getTrace=function(t){t=t||new n;var e=this.elements;t.x=e[0],t.y=e[4],t.z=e[8]},r.prototype.vmult=function(t,e){e=e||new n;var i=this.elements,r=t.x,o=t.y,a=t.z;return e.x=i[0]*r+i[1]*o+i[2]*a,e.y=i[3]*r+i[4]*o+i[5]*a,e.z=i[6]*r+i[7]*o+i[8]*a,e},r.prototype.smult=function(t){for(var e=0;e<this.elements.length;e++)this.elements[e]*=t},r.prototype.mmult=function(t,e){for(var i=e||new r,n=0;n<3;n++)for(var o=0;o<3;o++){for(var a=0,s=0;s<3;s++)a+=t.elements[n+3*s]*this.elements[s+3*o];i.elements[n+3*o]=a}return i},r.prototype.scale=function(t,e){e=e||new r;for(var i=this.elements,n=e.elements,o=0;3!==o;o++)n[3*o+0]=t.x*i[3*o+0],n[3*o+1]=t.y*i[3*o+1],n[3*o+2]=t.z*i[3*o+2];return e},r.prototype.solve=function(t,e){e=e||new n;for(var i,r=[],o=0;o<12;o++)r.push(0);for(o=0;o<3;o++)for(i=0;i<3;i++)r[o+4*i]=this.elements[o+3*i];r[3]=t.x,r[7]=t.y,r[11]=t.z;var a,s,q=3,l=q;do{if(0===r[(o=l-q)+4*o])for(i=o+1;i<l;i++)if(0!==r[o+4*i]){a=4;do{r[(s=4-a)+4*o]+=r[s+4*i]}while(--a);break}if(0!==r[o+4*o])for(i=o+1;i<l;i++){var h=r[o+4*i]/r[o+4*o];a=4;do{r[(s=4-a)+4*i]=s<=o?0:r[s+4*i]-r[s+4*o]*h}while(--a)}}while(--q);if(e.z=r[11]/r[10],e.y=(r[7]-r[6]*e.z)/r[5],e.x=(r[3]-r[2]*e.z-r[1]*e.y)/r[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw"Could not solve equation! Got x=["+e.toString()+"], b=["+t.toString()+"], A=["+this.toString()+"]";return e},r.prototype.e=function(t,e,i){if(void 0===i)return this.elements[e+3*t];this.elements[e+3*t]=i},r.prototype.copy=function(t){for(var e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this},r.prototype.toString=function(){for(var t="",e=0;e<9;e++)t+=this.elements[e]+",";return t},r.prototype.reverse=function(t){t=t||new r;for(var e,i=[],n=0;n<18;n++)i.push(0);for(n=0;n<3;n++)for(e=0;e<3;e++)i[n+6*e]=this.elements[n+3*e];i[3]=1,i[9]=0,i[15]=0,i[4]=0,i[10]=1,i[16]=0,i[5]=0,i[11]=0,i[17]=1;var o,a,s=3,q=s;do{if(0===i[(n=q-s)+6*n])for(e=n+1;e<q;e++)if(0!==i[n+6*e]){o=6;do{i[(a=6-o)+6*n]+=i[a+6*e]}while(--o);break}if(0!==i[n+6*n])for(e=n+1;e<q;e++){var l=i[n+6*e]/i[n+6*n];o=6;do{i[(a=6-o)+6*e]=a<=n?0:i[a+6*e]-i[a+6*n]*l}while(--o)}}while(--s);n=2;do{e=n-1;do{l=i[n+6*e]/i[n+6*n],o=6;do{i[(a=6-o)+6*e]=i[a+6*e]-i[a+6*n]*l}while(--o)}while(e--)}while(--n);n=2;do{l=1/i[n+6*n],o=6;do{i[(a=6-o)+6*n]=i[a+6*n]*l}while(--o)}while(n--);n=2;do{e=2;do{if(a=i[3+e+6*n],isNaN(a)||a===1/0)throw"Could not reverse! A=["+this.toString()+"]";t.e(n,e,a)}while(e--)}while(n--);return t},r.prototype.setRotationFromQuaternion=function(t){var e=t.x,i=t.y,n=t.z,r=t.w,o=e+e,a=i+i,s=n+n,q=e*o,l=e*a,h=e*s,c=i*a,u=i*s,p=n*s,d=r*o,m=r*a,f=r*s,v=this.elements;return v[0]=1-(c+p),v[1]=l-f,v[2]=h+m,v[3]=l+f,v[4]=1-(q+p),v[5]=u-d,v[6]=h-m,v[7]=u+d,v[8]=1-(q+c),this},r.prototype.transpose=function(t){for(var e=(t=t||new r).elements,i=this.elements,n=0;3!==n;n++)for(var o=0;3!==o;o++)e[3*n+o]=i[3*o+n];return t}},{"./Vec3":30}],28:[function(t,e,i){e.exports=r;var n=t("./Vec3");function r(t,e,i,n){this.x=void 0!==t?t:0,this.y=void 0!==e?e:0,this.z=void 0!==i?i:0,this.w=void 0!==n?n:1}r.prototype.set=function(t,e,i,n){this.x=t,this.y=e,this.z=i,this.w=n},r.prototype.toString=function(){return this.x+","+this.y+","+this.z+","+this.w},r.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},r.prototype.setFromAxisAngle=function(t,e){var i=Math.sin(.5*e);this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e)},r.prototype.toAxisAngle=function(t){t=t||new n,this.normalize();var e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]};var o=new n,a=new n;r.prototype.setFromVectors=function(t,e){if(t.isAntiparallelTo(e)){var i=o,n=a;t.tangents(i,n),this.setFromAxisAngle(i,Math.PI)}else{var r=t.cross(e);this.x=r.x,this.y=r.y,this.z=r.z,this.w=Math.sqrt(Math.pow(t.norm(),2)*Math.pow(e.norm(),2))+t.dot(e),this.normalize()}};var s=new n,q=new n,l=new n;r.prototype.mult=function(t,e){e=e||new r;var i=this.w,n=s,o=q,a=l;return n.set(this.x,this.y,this.z),o.set(t.x,t.y,t.z),e.w=i*t.w-n.dot(o),n.cross(o,a),e.x=i*o.x+t.w*n.x+a.x,e.y=i*o.y+t.w*n.y+a.y,e.z=i*o.z+t.w*n.z+a.z,e},r.prototype.inverse=function(t){var e=this.x,i=this.y,n=this.z,o=this.w;t=t||new r,this.conjugate(t);var a=1/(e*e+i*i+n*n+o*o);return t.x*=a,t.y*=a,t.z*=a,t.w*=a,t},r.prototype.conjugate=function(t){return(t=t||new r).x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t},r.prototype.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t)},r.prototype.normalizeFast=function(){var t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t)},r.prototype.vmult=function(t,e){e=e||new n;var i=t.x,r=t.y,o=t.z,a=this.x,s=this.y,q=this.z,l=this.w,h=l*i+s*o-q*r,c=l*r+q*i-a*o,u=l*o+a*r-s*i,p=-a*i-s*r-q*o;return e.x=h*l+p*-a+c*-q-u*-s,e.y=c*l+p*-s+u*-a-h*-q,e.z=u*l+p*-q+h*-s-c*-a,e},r.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},r.prototype.toEuler=function(t,e){var i,n,r;e=e||"YZX";var o=this.x,a=this.y,s=this.z,q=this.w;if("YZX"!==e)throw new Error("Euler order "+e+" not supported yet.");var l=o*a+s*q;if(l>.499&&(i=2*Math.atan2(o,q),n=Math.PI/2,r=0),l<-.499&&(i=-2*Math.atan2(o,q),n=-Math.PI/2,r=0),isNaN(i)){var h=o*o,c=a*a,u=s*s;i=Math.atan2(2*a*q-2*o*s,1-2*c-2*u),n=Math.asin(2*l),r=Math.atan2(2*o*q-2*a*s,1-2*h-2*u)}t.y=i,t.z=n,t.x=r},r.prototype.setFromEuler=function(t,e,i,n){n=n||"XYZ";var r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(i/2),s=Math.sin(t/2),q=Math.sin(e/2),l=Math.sin(i/2);return"XYZ"===n?(this.x=s*o*a+r*q*l,this.y=r*q*a-s*o*l,this.z=r*o*l+s*q*a,this.w=r*o*a-s*q*l):"YXZ"===n?(this.x=s*o*a+r*q*l,this.y=r*q*a-s*o*l,this.z=r*o*l-s*q*a,this.w=r*o*a+s*q*l):"ZXY"===n?(this.x=s*o*a-r*q*l,this.y=r*q*a+s*o*l,this.z=r*o*l+s*q*a,this.w=r*o*a-s*q*l):"ZYX"===n?(this.x=s*o*a-r*q*l,this.y=r*q*a+s*o*l,this.z=r*o*l-s*q*a,this.w=r*o*a+s*q*l):"YZX"===n?(this.x=s*o*a+r*q*l,this.y=r*q*a+s*o*l,this.z=r*o*l-s*q*a,this.w=r*o*a-s*q*l):"XZY"===n&&(this.x=s*o*a-r*q*l,this.y=r*q*a-s*o*l,this.z=r*o*l+s*q*a,this.w=r*o*a+s*q*l),this},r.prototype.clone=function(){return new r(this.x,this.y,this.z,this.w)}},{"./Vec3":30}],29:[function(t,e,i){var n=t("./Vec3"),r=t("./Quaternion");function o(t){t=t||{},this.position=new n,t.position&&this.position.copy(t.position),this.quaternion=new r,t.quaternion&&this.quaternion.copy(t.quaternion)}e.exports=o;var a=new r;o.pointToLocalFrame=function(t,e,i,r){return r=r||new n,i.vsub(t,r),e.conjugate(a),a.vmult(r,r),r},o.prototype.pointToLocal=function(t,e){return o.pointToLocalFrame(this.position,this.quaternion,t,e)},o.pointToWorldFrame=function(t,e,i,r){return r=r||new n,e.vmult(i,r),r.vadd(t,r),r},o.prototype.pointToWorld=function(t,e){return o.pointToWorldFrame(this.position,this.quaternion,t,e)},o.prototype.vectorToWorldFrame=function(t,e){return e=e||new n,this.quaternion.vmult(t,e),e},o.vectorToWorldFrame=function(t,e,i){return t.vmult(e,i),i},o.vectorToLocalFrame=function(t,e,i,r){return r=r||new n,e.w*=-1,e.vmult(i,r),e.w*=-1,r}},{"./Quaternion":28,"./Vec3":30}],30:[function(t,e,i){e.exports=r;var n=t("./Mat3");function r(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}r.ZERO=new r(0,0,0),r.UNIT_X=new r(1,0,0),r.UNIT_Y=new r(0,1,0),r.UNIT_Z=new r(0,0,1),r.prototype.cross=function(t,e){var i=t.x,n=t.y,o=t.z,a=this.x,s=this.y,q=this.z;return(e=e||new r).x=s*o-q*n,e.y=q*i-a*o,e.z=a*n-s*i,e},r.prototype.set=function(t,e,i){return this.x=t,this.y=e,this.z=i,this},r.prototype.setZero=function(){this.x=this.y=this.z=0},r.prototype.vadd=function(t,e){if(!e)return new r(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z},r.prototype.vsub=function(t,e){if(!e)return new r(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z},r.prototype.crossmat=function(){return new n([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},r.prototype.normalize=function(){var t=this.x,e=this.y,i=this.z,n=Math.sqrt(t*t+e*e+i*i);if(n>0){var r=1/n;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return n},r.prototype.unit=function(t){t=t||new r;var e=this.x,i=this.y,n=this.z,o=Math.sqrt(e*e+i*i+n*n);return o>0?(o=1/o,t.x=e*o,t.y=i*o,t.z=n*o):(t.x=1,t.y=0,t.z=0),t},r.prototype.norm=function(){var t=this.x,e=this.y,i=this.z;return Math.sqrt(t*t+e*e+i*i)},r.prototype.length=r.prototype.norm,r.prototype.norm2=function(){return this.dot(this)},r.prototype.lengthSquared=r.prototype.norm2,r.prototype.distanceTo=function(t){var e=this.x,i=this.y,n=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-i)*(o-i)+(a-n)*(a-n))},r.prototype.distanceSquared=function(t){var e=this.x,i=this.y,n=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-i)*(o-i)+(a-n)*(a-n)},r.prototype.mult=function(t,e){e=e||new r;var i=this.x,n=this.y,o=this.z;return e.x=t*i,e.y=t*n,e.z=t*o,e},r.prototype.scale=r.prototype.mult,r.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},r.prototype.isZero=function(){return 0===this.x&&0===this.y&&0===this.z},r.prototype.negate=function(t){return(t=t||new r).x=-this.x,t.y=-this.y,t.z=-this.z,t};var o=new r,a=new r;r.prototype.tangents=function(t,e){var i=this.norm();if(i>0){var n=o,r=1/i;n.set(this.x*r,this.y*r,this.z*r);var s=a;Math.abs(n.x)<.9?(s.set(1,0,0),n.cross(s,t)):(s.set(0,1,0),n.cross(s,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)},r.prototype.toString=function(){return this.x+","+this.y+","+this.z},r.prototype.toArray=function(){return[this.x,this.y,this.z]},r.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},r.prototype.lerp=function(t,e,i){var n=this.x,r=this.y,o=this.z;i.x=n+(t.x-n)*e,i.y=r+(t.y-r)*e,i.z=o+(t.z-o)*e},r.prototype.almostEquals=function(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)},r.prototype.almostZero=function(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)};var s=new r;r.prototype.isAntiparallelTo=function(t,e){return this.negate(s),s.almostEquals(t,e)},r.prototype.clone=function(){return new r(this.x,this.y,this.z)}},{"./Mat3":27}],31:[function(t,e,i){e.exports=l;var n=t("../utils/EventTarget"),r=(t("../shapes/Shape"),t("../math/Vec3")),o=t("../math/Mat3"),a=t("../math/Quaternion"),s=(t("../material/Material"),t("../collision/AABB")),q=t("../shapes/Box");function l(t){t=t||{},n.apply(this),this.id=l.idCounter++,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new r,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:1,this.collisionResponse=!0,this.position=new r,t.position&&this.position.copy(t.position),this.previousPosition=new r,this.initPosition=new r,this.velocity=new r,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new r,this.force=new r;var e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?l.STATIC:l.DYNAMIC,typeof t.type==typeof l.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=0,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new r,this.quaternion=new a,t.quaternion&&this.quaternion.copy(t.quaternion),this.initQuaternion=new a,this.angularVelocity=new r,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new r,this.interpolatedPosition=new r,this.interpolatedQuaternion=new a,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new r,this.invInertia=new r,this.invInertiaWorld=new o,this.invMassSolve=0,this.invInertiaSolve=new r,this.invInertiaWorldSolve=new o,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.aabb=new s,this.aabbNeedsUpdate=!0,this.wlambda=new r,t.shape&&this.addShape(t.shape),this.updateMassProperties()}l.prototype=new n,l.prototype.constructor=l,l.DYNAMIC=1,l.STATIC=2,l.KINEMATIC=4,l.AWAKE=0,l.SLEEPY=1,l.SLEEPING=2,l.idCounter=0,l.prototype.wakeUp=function(){var t=this.sleepState;this.sleepState=0,t===l.SLEEPING&&this.dispatchEvent({type:"wakeup"})},l.prototype.sleep=function(){this.sleepState=l.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0)},l.sleepyEvent={type:"sleepy"},l.sleepEvent={type:"sleep"},l.prototype.sleepTick=function(t){if(this.allowSleep){var e=this.sleepState,i=this.velocity.norm2()+this.angularVelocity.norm2(),n=Math.pow(this.sleepSpeedLimit,2);e===l.AWAKE&&i<n?(this.sleepState=l.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(l.sleepyEvent)):e===l.SLEEPY&&i>n?this.wakeUp():e===l.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(l.sleepEvent))}},l.prototype.updateSolveMassProperties=function(){this.sleepState===l.SLEEPING||this.type===l.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},l.prototype.pointToLocalFrame=function(t,e){return e=e||new r,t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e},l.prototype.vectorToLocalFrame=function(t,e){return e=e||new r,this.quaternion.conjugate().vmult(t,e),e},l.prototype.pointToWorldFrame=function(t,e){return e=e||new r,this.quaternion.vmult(t,e),e.vadd(this.position,e),e},l.prototype.vectorToWorldFrame=function(t,e){return e=e||new r,this.quaternion.vmult(t,e),e};var h=new r,c=new a;l.prototype.addShape=function(t,e,i){var n=new r,o=new a;return e&&n.copy(e),i&&o.copy(i),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(o),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,this},l.prototype.updateBoundingRadius=function(){for(var t=this.shapes,e=this.shapeOffsets,i=t.length,n=0,r=0;r!==i;r++){var o=t[r];o.updateBoundingSphereRadius();var a=e[r].norm(),s=o.boundingSphereRadius;a+s>n&&(n=a+s)}this.boundingRadius=n};var u=new s;l.prototype.computeAABB=function(){for(var t=this.shapes,e=this.shapeOffsets,i=this.shapeOrientations,n=t.length,r=h,o=c,a=this.quaternion,s=this.aabb,q=u,l=0;l!==n;l++){var p=t[l];i[l].mult(a,o),o.vmult(e[l],r),r.vadd(this.position,r),p.calculateWorldAABB(r,o,q.lowerBound,q.upperBound),0===l?s.copy(q):s.extend(q)}this.aabbNeedsUpdate=!1};var p=new o,d=new o;new o,l.prototype.updateInertiaWorld=function(t){var e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){var i=p,n=d;i.setRotationFromQuaternion(this.quaternion),i.transpose(n),i.scale(e,i),i.mmult(n,this.invInertiaWorld)}};var m=new r,f=new r;l.prototype.applyForce=function(t,e){if(this.type===l.DYNAMIC){var i=m;e.vsub(this.position,i);var n=f;i.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}};var v=new r,g=new r;l.prototype.applyLocalForce=function(t,e){if(this.type===l.DYNAMIC){var i=v,n=g;this.vectorToWorldFrame(t,i),this.pointToWorldFrame(e,n),this.applyForce(i,n)}};var y=new r,x=new r,w=new r;l.prototype.applyImpulse=function(t,e){if(this.type===l.DYNAMIC){var i=y;e.vsub(this.position,i);var n=x;n.copy(t),n.mult(this.invMass,n),this.velocity.vadd(n,this.velocity);var r=w;i.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}};var b=new r,_=new r;l.prototype.applyLocalImpulse=function(t,e){if(this.type===l.DYNAMIC){var i=b,n=_;this.vectorToWorldFrame(t,i),this.pointToWorldFrame(e,n),this.applyImpulse(i,n)}};var M=new r;l.prototype.updateMassProperties=function(){var t=M;this.invMass=this.mass>0?1/this.mass:0;var e=this.inertia,i=this.fixedRotation;this.computeAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),q.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!i?1/e.x:0,e.y>0&&!i?1/e.y:0,e.z>0&&!i?1/e.z:0),this.updateInertiaWorld(!0)},l.prototype.getVelocityAtWorldPoint=function(t,e){var i=new r;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}},{"../collision/AABB":3,"../material/Material":25,"../math/Mat3":27,"../math/Quaternion":28,"../math/Vec3":30,"../shapes/Box":37,"../shapes/Shape":43,"../utils/EventTarget":49}],32:[function(t,e,i){t("./Body");var n=t("../math/Vec3"),r=t("../math/Quaternion"),o=(t("../collision/RaycastResult"),t("../collision/Ray")),a=t("../objects/WheelInfo");function s(t){this.chassisBody=t.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=void 0!==t.indexRightAxis?t.indexRightAxis:1,this.indexForwardAxis=void 0!==t.indexForwardAxis?t.indexForwardAxis:0,this.indexUpAxis=void 0!==t.indexUpAxis?t.indexUpAxis:2}e.exports=s,new n,new n,new n;var q=new n,l=new n,h=new n;new o,s.prototype.addWheel=function(t){var e=new a(t=t||{}),i=this.wheelInfos.length;return this.wheelInfos.push(e),i},s.prototype.setSteeringValue=function(t,e){this.wheelInfos[e].steering=t},new n,s.prototype.applyEngineForce=function(t,e){this.wheelInfos[e].engineForce=t},s.prototype.setBrake=function(t,e){this.wheelInfos[e].brake=t},s.prototype.addToWorld=function(t){this.constraints,t.add(this.chassisBody);var e=this;this.preStepCallback=function(){e.updateVehicle(t.dt)},t.addEventListener("preStep",this.preStepCallback),this.world=t},s.prototype.getVehicleAxisWorld=function(t,e){e.set(0===t?1:0,1===t?1:0,2===t?1:0),this.chassisBody.vectorToWorldFrame(e,e)},s.prototype.updateVehicle=function(t){for(var e=this.wheelInfos,i=e.length,r=this.chassisBody,o=0;o<i;o++)this.updateWheelTransform(o);this.currentVehicleSpeedKmHour=3.6*r.velocity.norm();var a=new n;for(this.getVehicleAxisWorld(this.indexForwardAxis,a),a.dot(r.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1),o=0;o<i;o++)this.castRay(e[o]);this.updateSuspension(t);var s=new n,q=new n;for(o=0;o<i;o++){var l=(p=e[o]).suspensionForce;l>p.maxSuspensionForce&&(l=p.maxSuspensionForce),p.raycastResult.hitNormalWorld.scale(l*t,s),p.raycastResult.hitPointWorld.vsub(r.position,q),r.applyImpulse(s,p.raycastResult.hitPointWorld)}this.updateFriction(t);var h=new n,c=new n,u=new n;for(o=0;o<i;o++){var p=e[o];r.getVelocityAtWorldPoint(p.chassisConnectionPointWorld,u);var d=1;if(1===this.indexUpAxis&&(d=-1),p.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,c);var m=c.dot(p.raycastResult.hitNormalWorld);p.raycastResult.hitNormalWorld.scale(m,h),c.vsub(h,c);var f=c.dot(u);p.deltaRotation=d*f*t/p.radius}!p.sliding&&p.isInContact||0===p.engineForce||!p.useCustomSlidingRotationalSpeed||(p.deltaRotation=(p.engineForce>0?1:-1)*p.customSlidingRotationalSpeed*t),Math.abs(p.brake)>Math.abs(p.engineForce)&&(p.deltaRotation=0),p.rotation+=p.deltaRotation,p.deltaRotation*=.99}},s.prototype.updateSuspension=function(t){for(var e=this.chassisBody.mass,i=this.wheelInfos,n=i.length,r=0;r<n;r++){var o=i[r];if(o.isInContact){var a,s=o.suspensionRestLength-o.suspensionLength;a=o.suspensionStiffness*s*o.clippedInvContactDotSuspension;var q=o.suspensionRelativeVelocity;a-=(q<0?o.dampingCompression:o.dampingRelaxation)*q,o.suspensionForce=a*e,o.suspensionForce<0&&(o.suspensionForce=0)}else o.suspensionForce=0}},s.prototype.removeFromWorld=function(t){this.constraints,t.remove(this.chassisBody),t.removeEventListener("preStep",this.preStepCallback),this.world=null};var c=new n,u=new n;s.prototype.castRay=function(t){var e=c,i=u;this.updateWheelTransformWorld(t);var r=this.chassisBody,o=-1,a=t.suspensionRestLength+t.radius;t.directionWorld.scale(a,e);var s=t.chassisConnectionPointWorld;s.vadd(e,i);var q=t.raycastResult;q.reset();var l=r.collisionResponse;r.collisionResponse=!1,this.world.rayTest(s,i,q),r.collisionResponse=l;var h=q.body;if(t.raycastResult.groundObject=0,h){o=q.distance,t.raycastResult.hitNormalWorld=q.hitNormalWorld,t.isInContact=!0;var p=q.distance;t.suspensionLength=p-t.radius;var d=t.suspensionRestLength-t.maxSuspensionTravel,m=t.suspensionRestLength+t.maxSuspensionTravel;t.suspensionLength<d&&(t.suspensionLength=d),t.suspensionLength>m&&(t.suspensionLength=m,t.raycastResult.reset());var f=t.raycastResult.hitNormalWorld.dot(t.directionWorld),v=new n;r.getVelocityAtWorldPoint(t.raycastResult.hitPointWorld,v);var g=t.raycastResult.hitNormalWorld.dot(v);if(f>=-.1)t.suspensionRelativeVelocity=0,t.clippedInvContactDotSuspension=10;else{var y=-1/f;t.suspensionRelativeVelocity=g*y,t.clippedInvContactDotSuspension=y}}else t.suspensionLength=t.suspensionRestLength+0*t.maxSuspensionTravel,t.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.raycastResult.hitNormalWorld),t.clippedInvContactDotSuspension=1;return o},s.prototype.updateWheelTransformWorld=function(t){t.isInContact=!1;var e=this.chassisBody;e.pointToWorldFrame(t.chassisConnectionPointLocal,t.chassisConnectionPointWorld),e.vectorToWorldFrame(t.directionLocal,t.directionWorld),e.vectorToWorldFrame(t.axleLocal,t.axleWorld)},s.prototype.updateWheelTransform=function(t){var e=q,i=l,n=h,o=this.wheelInfos[t];this.updateWheelTransformWorld(o),o.directionLocal.scale(-1,e),i.copy(o.axleLocal),e.cross(i,n),n.normalize(),i.normalize();var a=o.steering,s=new r;s.setFromAxisAngle(e,a);var c=new r;c.setFromAxisAngle(i,o.rotation);var u=o.worldTransform.quaternion;this.chassisBody.quaternion.mult(s,u),u.mult(c,u),u.normalize();var p=o.worldTransform.position;p.copy(o.directionWorld),p.scale(o.suspensionLength,p),p.vadd(o.chassisConnectionPointWorld,p)};var p=[new n(1,0,0),new n(0,1,0),new n(0,0,1)];s.prototype.getWheelTransformWorld=function(t){return this.wheelInfos[t].worldTransform};var d=new n,m=[],f=[];s.prototype.updateFriction=function(t){for(var e=d,i=this.wheelInfos,r=i.length,o=this.chassisBody,a=f,s=m,q=0;q<r;q++)u=(E=i[q]).raycastResult.body,E.sideImpulse=0,E.forwardImpulse=0,a[q]||(a[q]=new n),s[q]||(s[q]=new n);for(q=0;q<r;q++)if(u=(E=i[q]).raycastResult.body){var l=s[q];this.getWheelTransformWorld(q).vectorToWorldFrame(p[this.indexRightAxis],l);var h=E.raycastResult.hitNormalWorld,c=l.dot(h);h.scale(c,e),l.vsub(e,l),l.normalize(),h.cross(l,a[q]),a[q].normalize(),E.sideImpulse=L(o,E.raycastResult.hitPointWorld,u,E.raycastResult.hitPointWorld,l),E.sideImpulse*=1}for(this.sliding=!1,q=0;q<r;q++){var u=(E=i[q]).raycastResult.body,v=0;if(E.slipInfo=1,u){var g=E.brake?E.brake:0;v=x(o,u,E.raycastResult.hitPointWorld,a[q],g);var y=g/(v+=E.engineForce*t);E.slipInfo*=y}if(E.forwardImpulse=0,E.skidInfo=1,u){E.skidInfo=1;var w=E.suspensionForce*t*E.frictionSlip,b=w*w;E.forwardImpulse=v;var _=.5*E.forwardImpulse,M=1*E.sideImpulse,S=_*_+M*M;E.sliding=!1,S>b&&(this.sliding=!0,E.sliding=!0,y=w/Math.sqrt(S),E.skidInfo*=y)}}if(this.sliding)for(q=0;q<r;q++)0!==(E=i[q]).sideImpulse&&E.skidInfo<1&&(E.forwardImpulse*=E.skidInfo,E.sideImpulse*=E.skidInfo);for(q=0;q<r;q++){var E=i[q],T=new n;if(T.copy(E.raycastResult.hitPointWorld),0!==E.forwardImpulse){var A=new n;a[q].scale(E.forwardImpulse,A),o.applyImpulse(A,T)}if(0!==E.sideImpulse){u=E.raycastResult.body;var P=new n;P.copy(E.raycastResult.hitPointWorld);var z=new n;s[q].scale(E.sideImpulse,z),o.pointToLocalFrame(T,T),T["xyz"[this.indexUpAxis]]*=E.rollInfluence,o.pointToWorldFrame(T,T),o.applyImpulse(z,T),z.scale(-1,z),u.applyImpulse(z,P)}}};var v=new n,g=new n,y=new n;function x(t,e,i,n,r){var o=0,a=i,s=v,q=g,l=y;return t.getVelocityAtWorldPoint(a,s),e.getVelocityAtWorldPoint(a,q),s.vsub(q,l),r<(o=-n.dot(l)*(1/(S(t,i,n)+S(e,i,n))))&&(o=r),o<-r&&(o=-r),o}var w=new n,b=new n,_=new n,M=new n;function S(t,e,i){var n=w,r=b,o=_,a=M;return e.vsub(t.position,n),n.cross(i,r),t.invInertiaWorld.vmult(r,a),a.cross(n,o),t.invMass+i.dot(o)}var E=new n,T=new n,A=new n;function L(t,e,i,n,r,o){if(r.norm2()>1.1)return 0;var a=E,s=T,q=A;return t.getVelocityAtWorldPoint(e,a),i.getVelocityAtWorldPoint(n,s),a.vsub(s,q),-.2*r.dot(q)*(1/(t.invMass+i.invMass))}},{"../collision/Ray":9,"../collision/RaycastResult":10,"../math/Quaternion":28,"../math/Vec3":30,"../objects/WheelInfo":36,"./Body":31}],33:[function(t,e,i){var n=t("./Body"),r=t("../shapes/Sphere"),o=t("../shapes/Box"),a=t("../math/Vec3"),s=t("../constraints/HingeConstraint");function q(t){if(this.wheelBodies=[],this.coordinateSystem=void 0===t.coordinateSystem?new a(1,2,3):t.coordinateSystem.clone(),this.chassisBody=t.chassisBody,!this.chassisBody){var e=new o(new a(5,2,.5));this.chassisBody=new n(1,e)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}e.exports=q,q.prototype.addWheel=function(t){var e=(t=t||{}).body;e||(e=new n(1,new r(1.2))),this.wheelBodies.push(e),this.wheelForces.push(0),new a;var i=void 0!==t.position?t.position.clone():new a,o=new a;this.chassisBody.pointToWorldFrame(i,o),e.position.set(o.x,o.y,o.z);var q=void 0!==t.axis?t.axis.clone():new a(0,1,0);this.wheelAxes.push(q);var l=new s(this.chassisBody,e,{pivotA:i,axisA:q,pivotB:a.ZERO,axisB:q,collideConnected:!1});return this.constraints.push(l),this.wheelBodies.length-1},q.prototype.setSteeringValue=function(t,e){var i=this.wheelAxes[e],n=Math.cos(t),r=Math.sin(t),o=i.x,a=i.y;this.constraints[e].axisA.set(n*o-r*a,r*o+n*a,0)},q.prototype.setMotorSpeed=function(t,e){var i=this.constraints[e];i.enableMotor(),i.motorTargetVelocity=t},q.prototype.disableMotor=function(t){this.constraints[t].disableMotor()};var l=new a;q.prototype.setWheelForce=function(t,e){this.wheelForces[e]=t},q.prototype.applyWheelForce=function(t,e){var i=this.wheelAxes[e],n=this.wheelBodies[e],r=n.torque;i.scale(t,l),n.vectorToWorldFrame(l,l),r.vadd(l,r)},q.prototype.addToWorld=function(t){for(var e=this.constraints,i=this.wheelBodies.concat([this.chassisBody]),n=0;n<i.length;n++)t.add(i[n]);for(n=0;n<e.length;n++)t.addConstraint(e[n]);t.addEventListener("preStep",this._update.bind(this))},q.prototype._update=function(){for(var t=this.wheelForces,e=0;e<t.length;e++)this.applyWheelForce(t[e],e)},q.prototype.removeFromWorld=function(t){for(var e=this.constraints,i=this.wheelBodies.concat([this.chassisBody]),n=0;n<i.length;n++)t.remove(i[n]);for(n=0;n<e.length;n++)t.removeConstraint(e[n])};var h=new a;q.prototype.getWheelSpeed=function(t){var e=this.wheelAxes[t],i=this.wheelBodies[t].angularVelocity;return this.chassisBody.vectorToWorldFrame(e,h),i.dot(h)}},{"../constraints/HingeConstraint":15,"../math/Vec3":30,"../shapes/Box":37,"../shapes/Sphere":44,"./Body":31}],34:[function(t,e,i){e.exports=r,t("../shapes/Shape");var n=t("../math/Vec3");function r(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}t("../math/Quaternion"),t("../shapes/Particle"),t("../objects/Body"),t("../material/Material"),r.prototype.add=function(t){this.particles.push(t),this.neighbors.length<this.particles.length&&this.neighbors.push([])},r.prototype.remove=function(t){var e=this.particles.indexOf(t);-1!==e&&(this.particles.splice(e,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var o=new n;r.prototype.getNeighbors=function(t,e){for(var i=this.particles.length,n=t.id,r=this.smoothingRadius*this.smoothingRadius,a=o,s=0;s!==i;s++){var q=this.particles[s];q.position.vsub(t.position,a),n!==q.id&&a.norm2()<r&&e.push(q)}};var a=new n,s=new n,q=new n,l=new n,h=new n,c=new n;r.prototype.update=function(){for(var t=this.particles.length,e=a,i=this.speedOfSound,n=this.eps,r=0;r!==t;r++){var o=this.particles[r];(M=this.neighbors[r]).length=0,this.getNeighbors(o,M),M.push(this.particles[r]);for(var u=M.length,p=0,d=0;d!==u;d++){o.position.vsub(M[d].position,e);var m=e.norm(),f=this.w(m);p+=M[d].mass*f}this.densities[r]=p,this.pressures[r]=i*i*(this.densities[r]-this.density)}var v=s,g=q,y=l,x=h,w=c;for(r=0;r!==t;r++){var b,_,M,S=this.particles[r];for(v.set(0,0,0),g.set(0,0,0),u=(M=this.neighbors[r]).length,d=0;d!==u;d++){var E=M[d];S.position.vsub(E.position,x);var T=x.norm();b=-E.mass*(this.pressures[r]/(this.densities[r]*this.densities[r]+n)+this.pressures[d]/(this.densities[d]*this.densities[d]+n)),this.gradw(x,y),y.mult(b,y),v.vadd(y,v),E.velocity.vsub(S.velocity,w),w.mult(1/(1e-4+this.densities[r]*this.densities[d])*this.viscosity*E.mass,w),_=this.nablaw(T),w.mult(_,w),g.vadd(w,g)}g.mult(S.mass,g),v.mult(S.mass,v),S.force.vadd(g,S.force),S.force.vadd(v,S.force)}},r.prototype.w=function(t){var e=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(e,9))*Math.pow(e*e-t*t,3)},r.prototype.gradw=function(t,e){var i=t.norm(),n=this.smoothingRadius;t.mult(945/(32*Math.PI*Math.pow(n,9))*Math.pow(n*n-i*i,2),e)},r.prototype.nablaw=function(t){var e=this.smoothingRadius;return 945/(32*Math.PI*Math.pow(e,9))*(e*e-t*t)*(7*t*t-3*e*e)}},{"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Particle":41,"../shapes/Shape":43}],35:[function(t,e,i){var n=t("../math/Vec3");function r(t,e,i){i=i||{},this.restLength="number"==typeof i.restLength?i.restLength:1,this.stiffness=i.stiffness||100,this.damping=i.damping||1,this.bodyA=t,this.bodyB=e,this.localAnchorA=new n,this.localAnchorB=new n,i.localAnchorA&&this.localAnchorA.copy(i.localAnchorA),i.localAnchorB&&this.localAnchorB.copy(i.localAnchorB),i.worldAnchorA&&this.setWorldAnchorA(i.worldAnchorA),i.worldAnchorB&&this.setWorldAnchorB(i.worldAnchorB)}e.exports=r,r.prototype.setWorldAnchorA=function(t){this.bodyA.pointToLocalFrame(t,this.localAnchorA)},r.prototype.setWorldAnchorB=function(t){this.bodyB.pointToLocalFrame(t,this.localAnchorB)},r.prototype.getWorldAnchorA=function(t){this.bodyA.pointToWorldFrame(this.localAnchorA,t)},r.prototype.getWorldAnchorB=function(t){this.bodyB.pointToWorldFrame(this.localAnchorB,t)};var o=new n,a=new n,s=new n,q=new n,l=new n,h=new n,c=new n,u=new n,p=new n,d=new n,m=new n;r.prototype.applyForce=function(){var t=this.stiffness,e=this.damping,i=this.restLength,n=this.bodyA,r=this.bodyB,f=o,v=a,g=s,y=q,x=m,w=l,b=h,_=c,M=u,S=p,E=d;this.getWorldAnchorA(w),this.getWorldAnchorB(b),w.vsub(n.position,_),b.vsub(r.position,M),b.vsub(w,f);var T=f.norm();v.copy(f),v.normalize(),r.velocity.vsub(n.velocity,g),r.angularVelocity.cross(M,x),g.vadd(x,g),n.angularVelocity.cross(_,x),g.vsub(x,g),v.mult(-t*(T-i)-e*g.dot(v),y),n.force.vsub(y,n.force),r.force.vadd(y,r.force),_.cross(y,S),M.cross(y,E),n.torque.vsub(S,n.torque),r.torque.vadd(E,r.torque)}},{"../math/Vec3":30}],36:[function(t,e,i){var n=t("../math/Vec3"),r=t("../math/Transform"),o=t("../collision/RaycastResult"),a=t("../utils/Utils");function s(t){t=a.defaults(t,{chassisConnectionPointLocal:new n,chassisConnectionPointWorld:new n,directionLocal:new n,directionWorld:new n,axleLocal:new n,axleWorld:new n,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new o,this.worldTransform=new r,this.isInContact=!1}e.exports=s;var q=new n,l=new n;q=new n,s.prototype.updateWheel=function(t){var e=this.raycastResult;if(this.isInContact){var i=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,l),t.getVelocityAtWorldPoint(l,q);var n=e.hitNormalWorld.dot(q);if(i>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{var r=-1/i;this.suspensionRelativeVelocity=n*r,this.clippedInvContactDotSuspension=r}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{"../collision/RaycastResult":10,"../math/Transform":29,"../math/Vec3":30,"../utils/Utils":53}],37:[function(t,e,i){e.exports=a;var n=t("./Shape"),r=t("../math/Vec3"),o=t("./ConvexPolyhedron");function a(t){n.call(this),this.type=n.types.BOX,this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}a.prototype=new n,a.prototype.constructor=a,a.prototype.updateConvexPolyhedronRepresentation=function(){var t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,n=r,a=[new n(-t,-e,-i),new n(t,-e,-i),new n(t,e,-i),new n(-t,e,-i),new n(-t,-e,i),new n(t,-e,i),new n(t,e,i),new n(-t,e,i)],s=(new n(0,0,1),new n(0,1,0),new n(1,0,0),new o(a,[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]]));this.convexPolyhedronRepresentation=s,s.material=this.material},a.prototype.calculateLocalInertia=function(t,e){return e=e||new r,a.calculateInertia(this.halfExtents,t,e),e},a.calculateInertia=function(t,e,i){var n=t;i.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),i.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),i.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)},a.prototype.getSideNormals=function(t,e){var i=t,n=this.halfExtents;if(i[0].set(n.x,0,0),i[1].set(0,n.y,0),i[2].set(0,0,n.z),i[3].set(-n.x,0,0),i[4].set(0,-n.y,0),i[5].set(0,0,-n.z),void 0!==e)for(var r=0;r!==i.length;r++)e.vmult(i[r],i[r]);return i},a.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},a.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};var s=new r;new r,a.prototype.forEachWorldCorner=function(t,e,i){for(var n=this.halfExtents,r=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]],o=0;o<r.length;o++)s.set(r[o][0],r[o][1],r[o][2]),e.vmult(s,s),t.vadd(s,s),i(s.x,s.y,s.z)};var q=[new r,new r,new r,new r,new r,new r,new r,new r];a.prototype.calculateWorldAABB=function(t,e,i,n){var r=this.halfExtents;q[0].set(r.x,r.y,r.z),q[1].set(-r.x,r.y,r.z),q[2].set(-r.x,-r.y,r.z),q[3].set(-r.x,-r.y,-r.z),q[4].set(r.x,-r.y,-r.z),q[5].set(r.x,r.y,-r.z),q[6].set(-r.x,r.y,-r.z),q[7].set(r.x,-r.y,r.z);var o=q[0];e.vmult(o,o),t.vadd(o,o),n.copy(o),i.copy(o);for(var a=1;a<8;a++){o=q[a],e.vmult(o,o),t.vadd(o,o);var s=o.x,l=o.y,h=o.z;s>n.x&&(n.x=s),l>n.y&&(n.y=l),h>n.z&&(n.z=h),s<i.x&&(i.x=s),l<i.y&&(i.y=l),h<i.z&&(i.z=h)}}},{"../math/Vec3":30,"./ConvexPolyhedron":38,"./Shape":43}],38:[function(t,e,i){e.exports=a;var n=t("./Shape"),r=t("../math/Vec3"),o=(t("../math/Quaternion"),t("../math/Transform"));function a(t,e,i){n.call(this),this.type=n.types.CONVEXPOLYHEDRON,this.vertices=t||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=e||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=i?i.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}a.prototype=new n,a.prototype.constructor=a;var s=new r;a.prototype.computeEdges=function(){var t=this.faces,e=this.vertices,i=(e.length,this.uniqueEdges);i.length=0;for(var n=s,r=0;r!==t.length;r++)for(var o=t[r],a=o.length,q=0;q!==a;q++){var l=(q+1)%a;e[o[q]].vsub(e[o[l]],n),n.normalize();for(var h=!1,c=0;c!==i.length;c++)if(i[c].almostEquals(n)||i[c].almostEquals(n)){h=!0;break}h||i.push(n.clone())}},a.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var t=0;t<this.faces.length;t++){for(var e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error("Vertex "+this.faces[t][e]+" not found!");var i=this.faceNormals[t]||new r;this.getFaceNormal(t,i),i.negate(i),this.faceNormals[t]=i;var n=this.vertices[this.faces[t][0]];if(i.dot(n)<0)for(console.error(".faceNormals["+t+"] = Vec3("+i.toString()+") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule."),e=0;e<this.faces[t].length;e++)console.warn(".vertices["+this.faces[t][e]+"] = Vec3("+this.vertices[this.faces[t][e]].toString()+")")}};var q=new r,l=new r;a.computeNormal=function(t,e,i,n){e.vsub(t,l),i.vsub(e,q),q.cross(l,n),n.isZero()||n.normalize()},a.prototype.getFaceNormal=function(t,e){var i=this.faces[t],n=this.vertices[i[0]],r=this.vertices[i[1]],o=this.vertices[i[2]];return a.computeNormal(n,r,o,e)};var h=new r;a.prototype.clipAgainstHull=function(t,e,i,n,o,a,s,q,l){for(var c=h,u=-1,p=-Number.MAX_VALUE,d=0;d<i.faces.length;d++){c.copy(i.faceNormals[d]),o.vmult(c,c);var m=c.dot(a);m>p&&(p=m,u=d)}for(var f=[],v=i.faces[u],g=v.length,y=0;y<g;y++){var x=i.vertices[v[y]],w=new r;w.copy(x),o.vmult(w,w),n.vadd(w,w),f.push(w)}u>=0&&this.clipFaceAgainstHull(a,t,e,f,s,q,l)};var c=new r,u=new r,p=new r,d=new r,m=new r,f=new r;a.prototype.findSeparatingAxis=function(t,e,i,n,r,o,a,s){var q=c,l=u,h=p,v=d,g=m,y=f,x=Number.MAX_VALUE,w=this;if(w.uniqueAxes)for(_=0;_!==w.uniqueAxes.length;_++){if(i.vmult(w.uniqueAxes[_],q),!1===(E=w.testSepAxis(q,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(q))}else for(var b=a?a.length:w.faces.length,_=0;_<b;_++){var M=a?a[_]:_;if(q.copy(w.faceNormals[M]),i.vmult(q,q),!1===(E=w.testSepAxis(q,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(q))}if(t.uniqueAxes)for(_=0;_!==t.uniqueAxes.length;_++){if(r.vmult(t.uniqueAxes[_],l),!1===(E=w.testSepAxis(l,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(l))}else{var S=s?s.length:t.faces.length;for(_=0;_<S;_++){var E;if(M=s?s[_]:_,l.copy(t.faceNormals[M]),r.vmult(l,l),!1===(E=w.testSepAxis(l,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(l))}}for(var T=0;T!==w.uniqueEdges.length;T++){i.vmult(w.uniqueEdges[T],v);for(var A=0;A!==t.uniqueEdges.length;A++)if(r.vmult(t.uniqueEdges[A],g),v.cross(g,y),!y.almostZero()){y.normalize();var L=w.testSepAxis(y,t,e,i,n,r);if(!1===L)return!1;L<x&&(x=L,o.copy(y))}}return n.vsub(e,h),h.dot(o)>0&&o.negate(o),!0};var v=[],g=[];a.prototype.testSepAxis=function(t,e,i,n,r,o){a.project(this,t,i,n,v),a.project(e,t,r,o,g);var s=v[0],q=v[1],l=g[0],h=g[1];if(s<h||l<q)return!1;var c=s-h,u=l-q;return c<u?c:u};var y=new r,x=new r;a.prototype.calculateLocalInertia=function(t,e){this.computeLocalAABB(y,x);var i=x.x-y.x,n=x.y-y.y,r=x.z-y.z;e.x=1/12*t*(2*n*2*n+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*n*2*n+2*i*2*i)},a.prototype.getPlaneConstantOfFace=function(t){var e=this.faces[t],i=this.faceNormals[t],n=this.vertices[e[0]];return-i.dot(n)};var w=new r,b=new r,_=new r,M=new r,S=new r,E=new r,T=new r,A=new r;a.prototype.clipFaceAgainstHull=function(t,e,i,n,r,o,a){for(var s=w,q=b,l=_,h=M,c=S,u=E,p=T,d=A,m=this,f=n,v=[],g=-1,y=Number.MAX_VALUE,x=0;x<m.faces.length;x++){s.copy(m.faceNormals[x]),i.vmult(s,s);var L=s.dot(t);L<y&&(y=L,g=x)}if(!(g<0)){var P=m.faces[g];P.connectedFaces=[];for(var z=0;z<m.faces.length;z++)for(var R=0;R<m.faces[z].length;R++)-1!==P.indexOf(m.faces[z][R])&&z!==g&&-1===P.connectedFaces.indexOf(z)&&P.connectedFaces.push(z);f.length;for(var C=P.length,O=0;O<C;O++){var I=m.vertices[P[O]],N=m.vertices[P[(O+1)%C]];I.vsub(N,q),l.copy(q),i.vmult(l,l),e.vadd(l,l),h.copy(this.faceNormals[g]),i.vmult(h,h),e.vadd(h,h),l.cross(h,c),c.negate(c),u.copy(I),i.vmult(u,u),e.vadd(u,u),u.dot(c);var B=P.connectedFaces[O];p.copy(this.faceNormals[B]);var D=this.getPlaneConstantOfFace(B);d.copy(p),i.vmult(d,d);var F=D-d.dot(e);for(this.clipFaceAgainstPlane(f,v,d,F);f.length;)f.shift();for(;v.length;)f.push(v.shift())}for(p.copy(this.faceNormals[g]),D=this.getPlaneConstantOfFace(g),d.copy(p),i.vmult(d,d),F=D-d.dot(e),z=0;z<f.length;z++){var V=d.dot(f[z])+F;if(V<=r&&(console.log("clamped: depth="+V+" to minDist="+r),V=r),V<=o){var U=f[z];if(V<=0){var j={point:U,normal:d,depth:V};a.push(j)}}}}},a.prototype.clipFaceAgainstPlane=function(t,e,i,n){var o,a,s=t.length;if(s<2)return e;var q=t[t.length-1],l=t[0];o=i.dot(q)+n;for(var h=0;h<s;h++){if(l=t[h],a=i.dot(l)+n,o<0)if(a<0)(c=new r).copy(l),e.push(c);else{var c=new r;q.lerp(l,o/(o-a),c),e.push(c)}else a<0&&(c=new r,q.lerp(l,o/(o-a),c),e.push(c),e.push(l));q=l,o=a}return e},a.prototype.computeWorldVertices=function(t,e){for(var i=this.vertices.length;this.worldVertices.length<i;)this.worldVertices.push(new r);for(var n=this.vertices,o=this.worldVertices,a=0;a!==i;a++)e.vmult(n[a],o[a]),t.vadd(o[a],o[a]);this.worldVerticesNeedsUpdate=!1},new r,a.prototype.computeLocalAABB=function(t,e){var i=this.vertices.length,n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var r=0;r<i;r++){var o=n[r];o.x<t.x?t.x=o.x:o.x>e.x&&(e.x=o.x),o.y<t.y?t.y=o.y:o.y>e.y&&(e.y=o.y),o.z<t.z?t.z=o.z:o.z>e.z&&(e.z=o.z)}},a.prototype.computeWorldFaceNormals=function(t){for(var e=this.faceNormals.length;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new r);for(var i=this.faceNormals,n=this.worldFaceNormals,o=0;o!==e;o++)t.vmult(i[o],n[o]);this.worldFaceNormalsNeedsUpdate=!1},a.prototype.updateBoundingSphereRadius=function(){for(var t=0,e=this.vertices,i=0,n=e.length;i!==n;i++){var r=e[i].norm2();r>t&&(t=r)}this.boundingSphereRadius=Math.sqrt(t)};var L=new r;a.prototype.calculateWorldAABB=function(t,e,i,n){for(var r,o,a,s,q,l,h=this.vertices.length,c=this.vertices,u=0;u<h;u++){L.copy(c[u]),e.vmult(L,L),t.vadd(L,L);var p=L;p.x<r||void 0===r?r=p.x:(p.x>s||void 0===s)&&(s=p.x),p.y<o||void 0===o?o=p.y:(p.y>q||void 0===q)&&(q=p.y),p.z<a||void 0===a?a=p.z:(p.z>l||void 0===l)&&(l=p.z)}i.set(r,o,a),n.set(s,q,l)},a.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},a.prototype.getAveragePointLocal=function(t){t=t||new r;for(var e=this.vertices.length,i=this.vertices,n=0;n<e;n++)t.vadd(i[n],t);return t.mult(1/e,t),t},a.prototype.transformAllPoints=function(t,e){var i=this.vertices.length,n=this.vertices;if(e){for(var r=0;r<i;r++){var o=n[r];e.vmult(o,o)}for(r=0;r<this.faceNormals.length;r++)o=this.faceNormals[r],e.vmult(o,o)}if(t)for(r=0;r<i;r++)(o=n[r]).vadd(t,o)};var P=new r,z=new r,R=new r;a.prototype.pointIsInside=function(t){var e=this.vertices.length,i=this.vertices,n=this.faces,r=this.faceNormals,o=this.faces.length,a=P;this.getAveragePointLocal(a);for(var s=0;s<o;s++){this.faces[s].length,e=r[s];var q=i[n[s][0]],l=z;t.vsub(q,l);var h=e.dot(l),c=R;a.vsub(q,c);var u=e.dot(c);if(h<0&&u>0||h>0&&u<0)return!1}return-1},new r;var C=new r,O=new r;a.project=function(t,e,i,n,r){var a=t.vertices.length,s=C,q=0,l=0,h=O,c=t.vertices;h.setZero(),o.vectorToLocalFrame(i,n,e,s),o.pointToLocalFrame(i,n,h,h);var u=h.dot(s);l=q=c[0].dot(s);for(var p=1;p<a;p++){var d=c[p].dot(s);d>q&&(q=d),d<l&&(l=d)}if((l-=u)>(q-=u)){var m=l;l=q,q=m}r[0]=q,r[1]=l}},{"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"./Shape":43}],39:[function(t,e,i){e.exports=a;var n=t("./Shape"),r=t("../math/Vec3"),o=(t("../math/Quaternion"),t("./ConvexPolyhedron"));function a(t,e,i,a){var s=a,q=[],l=[],h=[],c=[],u=[],p=Math.cos,d=Math.sin;q.push(new r(e*p(0),e*d(0),.5*-i)),c.push(0),q.push(new r(t*p(0),t*d(0),.5*i)),u.push(1);for(var m=0;m<s;m++){var f=2*Math.PI/s*(m+1),v=2*Math.PI/s*(m+.5);m<s-1?(q.push(new r(e*p(f),e*d(f),.5*-i)),c.push(2*m+2),q.push(new r(t*p(f),t*d(f),.5*i)),u.push(2*m+3),h.push([2*m+2,2*m+3,2*m+1,2*m])):h.push([0,1,2*m+1,2*m]),(s%2==1||m<s/2)&&l.push(new r(p(v),d(v),0))}h.push(u),l.push(new r(0,0,1));var g=[];for(m=0;m<c.length;m++)g.push(c[c.length-m-1]);h.push(g),this.type=n.types.CONVEXPOLYHEDRON,o.call(this,q,h,l)}a.prototype=new o},{"../math/Quaternion":28,"../math/Vec3":30,"./ConvexPolyhedron":38,"./Shape":43}],40:[function(t,e,i){var n=t("./Shape"),r=t("./ConvexPolyhedron"),o=t("../math/Vec3"),a=t("../utils/Utils");function s(t,e){e=a.defaults(e,{maxValue:null,minValue:null,elementSize:1}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,null===e.minValue&&this.updateMinValue(),null===e.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,n.call(this),this.pillarConvex=new r,this.pillarOffset=new o,this.type=n.types.HEIGHTFIELD,this.updateBoundingSphereRadius(),this._cachedPillars={}}e.exports=s,s.prototype=new n,s.prototype.update=function(){this._cachedPillars={}},s.prototype.updateMinValue=function(){for(var t=this.data,e=t[0][0],i=0;i!==t.length;i++)for(var n=0;n!==t[i].length;n++){var r=t[i][n];r<e&&(e=r)}this.minValue=e},s.prototype.updateMaxValue=function(){for(var t=this.data,e=t[0][0],i=0;i!==t.length;i++)for(var n=0;n!==t[i].length;n++){var r=t[i][n];r>e&&(e=r)}this.maxValue=e},s.prototype.setHeightValueAtIndex=function(t,e,i){this.data[t][e]=i,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)},s.prototype.getRectMinMax=function(t,e,i,n,r){r=r||[];for(var o=this.data,a=this.minValue,s=t;s<=i;s++)for(var q=e;q<=n;q++){var l=o[s][q];l>a&&(a=l)}r[0]=this.minValue,r[1]=a},s.prototype.getIndexOfPosition=function(t,e,i,n){var r=this.elementSize,o=this.data,a=Math.floor(t/r),s=Math.floor(e/r);return i[0]=a,i[1]=s,n&&(a<0&&(a=0),s<0&&(s=0),a>=o.length-1&&(a=o.length-1),s>=o[0].length-1&&(s=o[0].length-1)),!(a<0||s<0||a>=o.length-1||s>=o[0].length-1)},s.prototype.getHeightAt=function(t,e,i){var n=[];this.getIndexOfPosition(t,e,n,i);var r=[];return this.getRectMinMax(n[0],n[1]+1,n[0],n[1]+1,r),(r[0]+r[1])/2},s.prototype.getCacheConvexTrianglePillarKey=function(t,e,i){return t+"_"+e+"_"+(i?1:0)},s.prototype.getCachedConvexTrianglePillar=function(t,e,i){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]},s.prototype.setCachedConvexTrianglePillar=function(t,e,i,n,r){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]={convex:n,offset:r}},s.prototype.clearCachedConvexTrianglePillar=function(t,e,i){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]},s.prototype.getConvexTrianglePillar=function(t,e,i){var n=this.pillarConvex,a=this.pillarOffset;if(this.cacheEnabled){if(s=this.getCachedConvexTrianglePillar(t,e,i))return this.pillarConvex=s.convex,void(this.pillarOffset=s.offset);n=new r,a=new o,this.pillarConvex=n,this.pillarOffset=a}var s=this.data,q=this.elementSize,l=n.faces;n.vertices.length=6;for(var h=0;h<6;h++)n.vertices[h]||(n.vertices[h]=new o);for(l.length=5,h=0;h<5;h++)l[h]||(l[h]=[]);var c=n.vertices,u=(Math.min(s[t][e],s[t+1][e],s[t][e+1],s[t+1][e+1])-this.minValue)/2+this.minValue;i?(a.set((t+.75)*q,(e+.75)*q,u),c[0].set(.25*q,.25*q,s[t+1][e+1]-u),c[1].set(-.75*q,.25*q,s[t][e+1]-u),c[2].set(.25*q,-.75*q,s[t+1][e]-u),c[3].set(.25*q,.25*q,-u-1),c[4].set(-.75*q,.25*q,-u-1),c[5].set(.25*q,-.75*q,-u-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=2,l[2][1]=5,l[2][2]=3,l[2][3]=0,l[3][0]=3,l[3][1]=4,l[3][2]=1,l[3][3]=0,l[4][0]=1,l[4][1]=4,l[4][2]=5,l[4][3]=2):(a.set((t+.25)*q,(e+.25)*q,u),c[0].set(-.25*q,-.25*q,s[t][e]-u),c[1].set(.75*q,-.25*q,s[t+1][e]-u),c[2].set(-.25*q,.75*q,s[t][e+1]-u),c[3].set(-.25*q,-.25*q,-u-1),c[4].set(.75*q,-.25*q,-u-1),c[5].set(-.25*q,.75*q,-u-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=0,l[2][1]=2,l[2][2]=5,l[2][3]=3,l[3][0]=1,l[3][1]=0,l[3][2]=3,l[3][3]=4,l[4][0]=4,l[4][1]=5,l[4][2]=2,l[4][3]=1),n.computeNormals(),n.computeEdges(),n.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,i,n,a)},s.prototype.calculateLocalInertia=function(t,e){return(e=e||new o).set(0,0,0),e},s.prototype.volume=function(){return Number.MAX_VALUE},s.prototype.calculateWorldAABB=function(t,e,i,n){i.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),n.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},s.prototype.updateBoundingSphereRadius=function(){var t=this.data,e=this.elementSize;this.boundingSphereRadius=new o(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()}},{"../math/Vec3":30,"../utils/Utils":53,"./ConvexPolyhedron":38,"./Shape":43}],41:[function(t,e,i){e.exports=o;var n=t("./Shape"),r=t("../math/Vec3");function o(){n.call(this),this.type=n.types.PARTICLE}o.prototype=new n,o.prototype.constructor=o,o.prototype.calculateLocalInertia=function(t,e){return(e=e||new r).set(0,0,0),e},o.prototype.volume=function(){return 0},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},o.prototype.calculateWorldAABB=function(t,e,i,n){i.copy(t),n.copy(t)}},{"../math/Vec3":30,"./Shape":43}],42:[function(t,e,i){e.exports=o;var n=t("./Shape"),r=t("../math/Vec3");function o(){n.call(this),this.type=n.types.PLANE,this.worldNormal=new r,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}o.prototype=new n,o.prototype.constructor=o,o.prototype.computeWorldNormal=function(t){var e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1},o.prototype.calculateLocalInertia=function(t,e){return e||new r},o.prototype.volume=function(){return Number.MAX_VALUE};var a=new r;o.prototype.calculateWorldAABB=function(t,e,i,n){a.set(0,0,1),e.vmult(a,a);var r=Number.MAX_VALUE;i.set(-r,-r,-r),n.set(r,r,r),1===a.x&&(n.x=t.x),1===a.y&&(n.y=t.y),1===a.z&&(n.z=t.z),-1===a.x&&(i.x=t.x),-1===a.y&&(i.y=t.y),-1===a.z&&(i.z=t.z)},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{"../math/Vec3":30,"./Shape":43}],43:[function(t,e,i){e.exports=n;var n=t("./Shape");function n(){this.id=n.idCounter++,this.type=0,this.boundingSphereRadius=0,this.collisionResponse=!0,this.material=null}t("../math/Vec3"),t("../math/Quaternion"),t("../material/Material"),n.prototype.constructor=n,n.prototype.updateBoundingSphereRadius=function(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type},n.prototype.volume=function(){throw"volume() not implemented for shape type "+this.type},n.prototype.calculateLocalInertia=function(t,e){throw"calculateLocalInertia() not implemented for shape type "+this.type},n.idCounter=0,n.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"./Shape":43}],44:[function(t,e,i){e.exports=o;var n=t("./Shape"),r=t("../math/Vec3");function o(t){if(n.call(this),this.radius=void 0!==t?Number(t):1,this.type=n.types.SPHERE,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}o.prototype=new n,o.prototype.constructor=o,o.prototype.calculateLocalInertia=function(t,e){e=e||new r;var i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e},o.prototype.volume=function(){return 4*Math.PI*this.radius/3},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},o.prototype.calculateWorldAABB=function(t,e,i,n){for(var r=this.radius,o=["x","y","z"],a=0;a<o.length;a++){var s=o[a];i[s]=t[s]-r,n[s]=t[s]+r}}},{"../math/Vec3":30,"./Shape":43}],45:[function(t,e,i){e.exports=q;var n=t("./Shape"),r=t("../math/Vec3"),o=(t("../math/Quaternion"),t("../math/Transform")),a=t("../collision/AABB"),s=t("../utils/Octree");function q(t,e){n.call(this),this.type=n.types.TRIMESH,this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new a,this.edges=null,this.scale=new r(1,1,1),this.tree=new s,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}q.prototype=new n,q.prototype.constructor=q;var l=new r;q.prototype.updateTree=function(){var t=this.tree;t.reset(),t.aabb.copy(this.aabb);var e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;for(var i=new a,n=new r,o=new r,s=new r,q=[n,o,s],l=0;l<this.indices.length/3;l++){var h=3*l;this._getUnscaledVertex(this.indices[h],n),this._getUnscaledVertex(this.indices[h+1],o),this._getUnscaledVertex(this.indices[h+2],s),i.setFromPoints(q),t.insert(i,l)}t.removeEmptyNodes()};var h=new a;q.prototype.getTrianglesInAABB=function(t,e){h.copy(t);var i=this.scale,n=i.x,r=i.y,o=i.z,a=h.lowerBound,s=h.upperBound;return a.x/=n,a.y/=r,a.z/=o,s.x/=n,s.y/=r,s.z/=o,this.tree.aabbQuery(h,e)},q.prototype.setScale=function(t){var e=this.scale.x===this.scale.y===this.scale.z,i=t.x===t.y===t.z;e&&i||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()},q.prototype.updateNormals=function(){for(var t=l,e=this.normals,i=0;i<this.indices.length/3;i++){var n=3*i,r=this.indices[n],o=this.indices[n+1],a=this.indices[n+2];this.getVertex(r,m),this.getVertex(o,f),this.getVertex(a,v),q.computeNormal(f,m,v,t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z}},q.prototype.updateEdges=function(){for(var t={},e=function(e,i){t[r<o?r+"_"+o:o+"_"+r]=!0},i=0;i<this.indices.length/3;i++){var n=3*i,r=this.indices[n],o=this.indices[n+1];this.indices[n+2];e(),e(),e()}var a=Object.keys(t);for(this.edges=new Int16Array(2*a.length),i=0;i<a.length;i++){var s=a[i].split("_");this.edges[2*i]=parseInt(s[0],10),this.edges[2*i+1]=parseInt(s[1],10)}},q.prototype.getEdgeVertex=function(t,e,i){var n=this.edges[2*t+(e?1:0)];this.getVertex(n,i)};var c=new r,u=new r;q.prototype.getEdgeVector=function(t,e){var i=c,n=u;this.getEdgeVertex(t,0,i),this.getEdgeVertex(t,1,n),n.vsub(i,e)};var p=new r,d=new r;q.computeNormal=function(t,e,i,n){e.vsub(t,d),i.vsub(e,p),p.cross(d,n),n.isZero()||n.normalize()};var m=new r,f=new r,v=new r;q.prototype.getVertex=function(t,e){var i=this.scale;return this._getUnscaledVertex(t,e),e.x*=i.x,e.y*=i.y,e.z*=i.z,e},q.prototype._getUnscaledVertex=function(t,e){var i=3*t,n=this.vertices;return e.set(n[i],n[i+1],n[i+2])},q.prototype.getWorldVertex=function(t,e,i,n){return this.getVertex(t,n),o.pointToWorldFrame(e,i,n,n),n},q.prototype.getTriangleVertices=function(t,e,i,n){var r=3*t;this.getVertex(this.indices[r],e),this.getVertex(this.indices[r+1],i),this.getVertex(this.indices[r+2],n)},q.prototype.getNormal=function(t,e){var i=3*t;return e.set(this.normals[i],this.normals[i+1],this.normals[i+2])};var g=new a;q.prototype.calculateLocalInertia=function(t,e){this.computeLocalAABB(g);var i=g.upperBound.x-g.lowerBound.x,n=g.upperBound.y-g.lowerBound.y,r=g.upperBound.z-g.lowerBound.z;return e.set(1/12*t*(2*n*2*n+2*r*2*r),1/12*t*(2*i*2*i+2*r*2*r),1/12*t*(2*n*2*n+2*i*2*i))};var y=new r;q.prototype.computeLocalAABB=function(t){var e=t.lowerBound,i=t.upperBound,n=this.vertices.length,r=(this.vertices,y);this.getVertex(0,r),e.copy(r),i.copy(r);for(var o=0;o!==n;o++)this.getVertex(o,r),r.x<e.x?e.x=r.x:r.x>i.x&&(i.x=r.x),r.y<e.y?e.y=r.y:r.y>i.y&&(i.y=r.y),r.z<e.z?e.z=r.z:r.z>i.z&&(i.z=r.z)},q.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},q.prototype.updateBoundingSphereRadius=function(){for(var t=0,e=this.vertices,i=new r,n=0,o=e.length/3;n!==o;n++){this.getVertex(n,i);var a=i.norm2();a>t&&(t=a)}this.boundingSphereRadius=Math.sqrt(t)},new r;var x=new o,w=new a;q.prototype.calculateWorldAABB=function(t,e,i,n){var r=x,o=w;r.position=t,r.quaternion=e,this.aabb.toWorldFrame(r,o),i.copy(o.lowerBound),n.copy(o.upperBound)},q.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},q.createTorus=function(t,e,i,n,r){t=t||1,e=e||.5,i=i||8,n=n||6,r=r||2*Math.PI;for(var o=[],a=[],s=0;s<=i;s++)for(var l=0;l<=n;l++){var h=l/n*r,c=s/i*Math.PI*2,u=(t+e*Math.cos(c))*Math.cos(h),p=(t+e*Math.cos(c))*Math.sin(h),d=e*Math.sin(c);o.push(u,p,d)}for(s=1;s<=i;s++)for(l=1;l<=n;l++){var m=(n+1)*s+l-1,f=(n+1)*(s-1)+l-1,v=(n+1)*(s-1)+l,g=(n+1)*s+l;a.push(m,f,g),a.push(f,v,g)}return new q(o,a)}},{"../collision/AABB":3,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../utils/Octree":50,"./Shape":43}],46:[function(t,e,i){e.exports=r,t("../math/Vec3"),t("../math/Quaternion");var n=t("./Solver");function r(){n.call(this),this.iterations=10,this.tolerance=1e-7}r.prototype=new n;var o=[],a=[],s=[];r.prototype.solve=function(t,e){var i,n,r,q,l,h=0,c=this.iterations,u=this.tolerance*this.tolerance,p=this.equations,d=p.length,m=e.bodies,f=m.length,v=t;if(0!==d)for(var g=0;g!==f;g++)m[g].updateSolveMassProperties();var y=a,x=s,w=o;for(y.length=d,x.length=d,w.length=d,g=0;g!==d;g++){var b=p[g];w[g]=0,x[g]=b.computeB(v),y[g]=1/b.computeC()}if(0!==d){for(g=0;g!==f;g++){var _=(E=m[g]).vlambda,M=E.wlambda;_.set(0,0,0),M&&M.set(0,0,0)}for(h=0;h!==c;h++){q=0;for(var S=0;S!==d;S++)b=p[S],i=x[S],n=y[S],(l=w[S])+(r=n*(i-b.computeGWlambda()-b.eps*l))<b.minForce?r=b.minForce-l:l+r>b.maxForce&&(r=b.maxForce-l),w[S]+=r,q+=r>0?r:-r,b.addToWlambda(r);if(q*q<u)break}for(g=0;g!==f;g++){var E,T=(E=m[g]).velocity,A=E.angularVelocity;T.vadd(E.vlambda,T),A&&A.vadd(E.wlambda,A)}}return h}},{"../math/Quaternion":28,"../math/Vec3":30,"./Solver":47}],47:[function(t,e,i){function n(){this.equations=[]}e.exports=n,n.prototype.solve=function(t,e){return 0},n.prototype.addEquation=function(t){t.enabled&&this.equations.push(t)},n.prototype.removeEquation=function(t){var e=this.equations,i=e.indexOf(t);-1!==i&&e.splice(i,1)},n.prototype.removeAllEquations=function(){this.equations.length=0}},{}],48:[function(t,e,i){e.exports=o,t("../math/Vec3"),t("../math/Quaternion");var n=t("./Solver"),r=t("../objects/Body");function o(t){for(n.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=t,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}o.prototype=new n;var a=[],s=[],q={bodies:[]},l=r.STATIC;function h(t){for(var e=t.length,i=0;i!==e;i++){var n=t[i];if(!(n.visited||n.body.type&l))return n}return!1}var c=[];function u(t,e,i,n){for(c.push(t),t.visited=!0,e(t,i,n);c.length;)for(var r,o=c.pop();r=h(o.children);)r.visited=!0,e(r,i,n),c.push(r)}function p(t,e,i){e.push(t.body);for(var n=t.eqs.length,r=0;r!==n;r++){var o=t.eqs[r];-1===i.indexOf(o)&&i.push(o)}}function d(t,e){return e.id-t.id}o.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},o.prototype.solve=function(t,e){for(var i=a,n=this.nodePool,r=e.bodies,o=this.equations,l=o.length,c=r.length,m=this.subsolver;n.length<c;)n.push(this.createNode());i.length=c;for(var f=0;f<c;f++)i[f]=n[f];for(f=0;f!==c;f++){var v=i[f];v.body=r[f],v.children.length=0,v.eqs.length=0,v.visited=!1}for(var g=0;g!==l;g++){var y=o[g],x=(f=r.indexOf(y.bi),r.indexOf(y.bj)),w=i[f],b=i[x];w.children.push(b),w.eqs.push(y),b.children.push(w),b.eqs.push(y)}var _,M=0,S=s;m.tolerance=this.tolerance,m.iterations=this.iterations;for(var E=q;_=h(i);){S.length=0,E.bodies.length=0,u(_,p,E.bodies,S);var T=S.length;for(S=S.sort(d),f=0;f!==T;f++)m.addEquation(S[f]);m.solve(t,E),m.removeAllEquations(),M++}return M}},{"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"./Solver":47}],49:[function(t,e,i){var n=function(){};e.exports=n,n.prototype={constructor:n,addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;return void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e),this},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return this;var i=this._listeners;if(void 0===i[t])return this;var n=i[t].indexOf(e);return-1!==n&&i[t].splice(n,1),this},dispatchEvent:function(t){if(void 0===this._listeners)return this;var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=0,n=e.length;i<n;i++)e[i].call(this,t)}return this}}},{}],50:[function(t,e,i){var n=t("../collision/AABB"),r=t("../math/Vec3");function o(t){t=t||{},this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new n,this.data=[],this.children=[]}function a(t,e){(e=e||{}).root=null,e.aabb=t,o.call(this,e),this.maxDepth=void 0!==e.maxDepth?e.maxDepth:8}e.exports=a,a.prototype=new o,o.prototype.reset=function(t,e){this.children.length=this.data.length=0},o.prototype.insert=function(t,e,i){var n=this.data;if(i=i||0,!this.aabb.contains(t))return!1;var r=this.children;if(i<(this.maxDepth||this.root.maxDepth)){var o=!1;r.length||(this.subdivide(),o=!0);for(var a=0;8!==a;a++)if(r[a].insert(t,e,i+1))return!0;o&&(r.length=0)}return n.push(e),!0};var s=new r;o.prototype.subdivide=function(){var t=this.aabb,e=t.lowerBound,i=t.upperBound,a=this.children;a.push(new o({aabb:new n({lowerBound:new r(0,0,0)})}),new o({aabb:new n({lowerBound:new r(1,0,0)})}),new o({aabb:new n({lowerBound:new r(1,1,0)})}),new o({aabb:new n({lowerBound:new r(1,1,1)})}),new o({aabb:new n({lowerBound:new r(0,1,1)})}),new o({aabb:new n({lowerBound:new r(0,0,1)})}),new o({aabb:new n({lowerBound:new r(1,0,1)})}),new o({aabb:new n({lowerBound:new r(0,1,0)})})),i.vsub(e,s),s.scale(.5,s);for(var q=this.root||this,l=0;8!==l;l++){var h=a[l];h.root=q;var c=h.aabb.lowerBound;c.x*=s.x,c.y*=s.y,c.z*=s.z,c.vadd(e,c),c.vadd(s,h.aabb.upperBound)}},o.prototype.aabbQuery=function(t,e){this.data,this.children;for(var i=[this];i.length;){var n=i.pop();n.aabb.overlaps(t)&&Array.prototype.push.apply(e,n.data),Array.prototype.push.apply(i,n.children)}return e};var q=new n;o.prototype.rayQuery=function(t,e,i){return t.getAABB(q),q.toLocalFrame(e,q),this.aabbQuery(q,i),i},o.prototype.removeEmptyNodes=function(){for(var t=[this];t.length;){for(var e=t.pop(),i=e.children.length-1;i>=0;i--)e.children[i].data.length||e.children.splice(i,1);Array.prototype.push.apply(t,e.children)}}},{"../collision/AABB":3,"../math/Vec3":30}],51:[function(t,e,i){function n(){this.objects=[],this.type=Object}e.exports=n,n.prototype.release=function(){for(var t=arguments.length,e=0;e!==t;e++)this.objects.push(arguments[e])},n.prototype.get=function(){return 0===this.objects.length?this.constructObject():this.objects.pop()},n.prototype.constructObject=function(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}},{}],52:[function(t,e,i){function n(){this.data={keys:[]}}e.exports=n,n.prototype.get=function(t,e){if(t>e){var i=e;e=t,t=i}return this.data[t+"-"+e]},n.prototype.set=function(t,e,i){if(t>e){var n=e;e=t,t=n}var r=t+"-"+e;this.get(t,e)||this.data.keys.push(r),this.data[r]=i},n.prototype.reset=function(){for(var t=this.data,e=t.keys;e.length>0;)delete t[e.pop()]}},{}],53:[function(t,e,i){function n(){}e.exports=n,n.defaults=function(t,e){for(var i in t=t||{},e)i in t||(t[i]=e[i]);return t}},{}],54:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=t("./Pool");function o(){r.call(this),this.type=n}o.prototype=new r,o.prototype.constructObject=function(){return new n}},{"../math/Vec3":30,"./Pool":51}],55:[function(t,e,i){e.exports=u;var n=t("../collision/AABB"),r=t("../shapes/Shape"),o=t("../collision/Ray"),a=t("../math/Vec3"),s=t("../math/Transform"),q=(t("../shapes/ConvexPolyhedron"),t("../math/Quaternion")),l=(t("../solver/Solver"),t("../utils/Vec3Pool")),h=t("../equations/ContactEquation"),c=t("../equations/FrictionEquation");function u(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new l,this.world=t,this.currentContactMaterial=null,this.enableFrictionReduction=!1}u.prototype.createContactEquation=function(t,e,i,n,r,o){var a;this.contactPointPool.length?((a=this.contactPointPool.pop()).bi=t,a.bj=e):a=new h(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&i.collisionResponse&&n.collisionResponse;var s=this.currentContactMaterial;a.restitution=s.restitution,a.setSpookParams(s.contactEquationStiffness,s.contactEquationRelaxation,this.world.dt);var q=i.material||t.material,l=n.material||e.material;return q&&l&&q.restitution>=0&&l.restitution>=0&&(a.restitution=q.restitution*l.restitution),a.si=r||i,a.sj=o||n,a},u.prototype.createFrictionEquationsFromContact=function(t,e){var i=t.bi,n=t.bj,r=t.si,o=t.sj,a=this.world,s=this.currentContactMaterial,q=s.friction,l=r.material||i.material,h=o.material||n.material;if(l&&h&&l.friction>=0&&h.friction>=0&&(q=l.friction*h.friction),q>0){var u=q*a.gravity.length(),p=i.invMass+n.invMass;p>0&&(p=1/p);var d=this.frictionEquationPool,m=d.length?d.pop():new c(i,n,u*p),f=d.length?d.pop():new c(i,n,u*p);return m.bi=f.bi=i,m.bj=f.bj=n,m.minForce=f.minForce=-u*p,m.maxForce=f.maxForce=u*p,m.ri.copy(t.ri),m.rj.copy(t.rj),f.ri.copy(t.ri),f.rj.copy(t.rj),t.ni.tangents(m.t,f.t),m.setSpookParams(s.frictionEquationStiffness,s.frictionEquationRelaxation,a.dt),f.setSpookParams(s.frictionEquationStiffness,s.frictionEquationRelaxation,a.dt),m.enabled=f.enabled=t.enabled,e.push(m,f),!0}return!1};var p=new a,d=new a,m=new a;u.prototype.createFrictionFromAverage=function(t){var e=this.result[this.result.length-1];if(this.createFrictionEquationsFromContact(e,this.frictionResult)&&1!==t){var i=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];p.setZero(),d.setZero(),m.setZero();for(var r=e.bi,o=(e.bj,0);o!==t;o++)(e=this.result[this.result.length-1-o]).bodyA!==r?(p.vadd(e.ni,p),d.vadd(e.ri,d),m.vadd(e.rj,m)):(p.vsub(e.ni,p),d.vadd(e.rj,d),m.vadd(e.ri,m));var a=1/t;d.scale(a,i.ri),m.scale(a,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),p.normalize(),p.tangents(i.t,n.t)}};var f=new a,v=new a,g=new q,y=new q;u.prototype.getContacts=function(t,e,i,n,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=n,this.frictionResult=o;for(var s=g,q=y,l=f,h=v,c=0,u=t.length;c!==u;c++){var p=t[c],d=e[c],m=null;p.material&&d.material&&(m=i.getContactMaterial(p.material,d.material)||null);for(var x=0;x<p.shapes.length;x++){p.quaternion.mult(p.shapeOrientations[x],s),p.quaternion.vmult(p.shapeOffsets[x],l),l.vadd(p.position,l);for(var w=p.shapes[x],b=0;b<d.shapes.length;b++){d.quaternion.mult(d.shapeOrientations[b],q),d.quaternion.vmult(d.shapeOffsets[b],h),h.vadd(d.position,h);var _=d.shapes[b];if(!(l.distanceTo(h)>w.boundingSphereRadius+_.boundingSphereRadius)){var M=null;w.material&&_.material&&(M=i.getContactMaterial(w.material,_.material)||null),this.currentContactMaterial=M||m||i.defaultContactMaterial;var S=this[w.type|_.type];S&&(w.type<_.type?S.call(this,w,_,l,h,s,q,p,d,w,_):S.call(this,_,w,h,l,q,s,d,p,w,_))}}}}},u.prototype[r.types.BOX|r.types.BOX]=u.prototype.boxBox=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,i,n,r,o,a,s,t,e)},u.prototype[r.types.BOX|r.types.CONVEXPOLYHEDRON]=u.prototype.boxConvex=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,i,n,r,o,a,s,t,e)},u.prototype[r.types.BOX|r.types.PARTICLE]=u.prototype.boxParticle=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,i,n,r,o,a,s,t,e)},u.prototype[r.types.SPHERE]=u.prototype.sphereSphere=function(t,e,i,n,r,o,a,s){var q=this.createContactEquation(a,s,t,e);n.vsub(i,q.ni),q.ni.normalize(),q.ri.copy(q.ni),q.rj.copy(q.ni),q.ri.mult(t.radius,q.ri),q.rj.mult(-e.radius,q.rj),q.ri.vadd(i,q.ri),q.ri.vsub(a.position,q.ri),q.rj.vadd(n,q.rj),q.rj.vsub(s.position,q.rj),this.result.push(q),this.createFrictionEquationsFromContact(q,this.frictionResult)};var x=new a,w=new a,b=new a;u.prototype[r.types.PLANE|r.types.TRIMESH]=u.prototype.planeTrimesh=function(t,e,i,n,r,o,q,l){var h=new a,c=x;c.set(0,0,1),r.vmult(c,c);for(var u=0;u<e.vertices.length/3;u++){e.getVertex(u,h);var p=new a;p.copy(h),s.pointToWorldFrame(n,o,p,h);var d=w;if(h.vsub(i,d),c.dot(d)<=0){var m=this.createContactEquation(q,l,t,e);m.ni.copy(c);var f=b;c.scale(d.dot(c),f),h.vsub(f,f),m.ri.copy(f),m.ri.vsub(q.position,m.ri),m.rj.copy(h),m.rj.vsub(l.position,m.rj),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}};var _=new a,M=new a,S=(new a,new a),E=new a,T=new a,A=new a,L=new a,P=new a,z=new a,R=new a,C=new a,O=new a,I=new a,N=new n,B=[];u.prototype[r.types.SPHERE|r.types.TRIMESH]=u.prototype.sphereTrimesh=function(t,e,i,n,r,a,q,l){var h=T,c=A,u=L,p=P,d=z,m=R,f=N,v=E,g=M,y=B;s.pointToLocalFrame(n,a,i,d);var x=t.radius;f.lowerBound.set(d.x-x,d.y-x,d.z-x),f.upperBound.set(d.x+x,d.y+x,d.z+x),e.getTrianglesInAABB(f,y);for(var w=S,b=t.radius*t.radius,D=0;D<y.length;D++)for(var F=0;F<3;F++)e.getVertex(e.indices[3*y[D]+F],w),w.vsub(d,g),g.norm2()<=b&&(v.copy(w),s.pointToWorldFrame(n,a,v,w),w.vsub(i,g),(j=this.createContactEquation(q,l,t,e)).ni.copy(g),j.ni.normalize(),j.ri.copy(j.ni),j.ri.scale(t.radius,j.ri),j.ri.vadd(i,j.ri),j.ri.vsub(q.position,j.ri),j.rj.copy(w),j.rj.vsub(l.position,j.rj),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult));for(D=0;D<y.length;D++)for(F=0;F<3;F++){e.getVertex(e.indices[3*y[D]+F],h),e.getVertex(e.indices[3*y[D]+(F+1)%3],c),c.vsub(h,u),d.vsub(c,m);var V=m.dot(u);d.vsub(h,m);var U=m.dot(u);if(U>0&&V<0&&(d.vsub(h,m),p.copy(u),p.normalize(),U=m.dot(p),p.scale(U,m),m.vadd(h,m),(Y=m.distanceTo(d))<t.radius)){var j=this.createContactEquation(q,l,t,e);m.vsub(d,j.ni),j.ni.normalize(),j.ni.scale(t.radius,j.ri),s.pointToWorldFrame(n,a,m,m),m.vsub(l.position,j.rj),s.vectorToWorldFrame(a,j.ni,j.ni),s.vectorToWorldFrame(a,j.ri,j.ri),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult)}}for(var G=C,H=O,W=I,k=_,X=(D=0,y.length);D!==X;D++){e.getTriangleVertices(y[D],G,H,W),e.getNormal(y[D],k),d.vsub(G,m);var Y=m.dot(k);k.scale(Y,m),d.vsub(m,m),Y=m.distanceTo(d),o.pointInTriangle(m,G,H,W)&&Y<t.radius&&(j=this.createContactEquation(q,l,t,e),m.vsub(d,j.ni),j.ni.normalize(),j.ni.scale(t.radius,j.ri),s.pointToWorldFrame(n,a,m,m),m.vsub(l.position,j.rj),s.vectorToWorldFrame(a,j.ni,j.ni),s.vectorToWorldFrame(a,j.ri,j.ri),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult))}y.length=0};var D=new a,F=new a;u.prototype[r.types.SPHERE|r.types.PLANE]=u.prototype.spherePlane=function(t,e,i,n,r,o,a,s){var q=this.createContactEquation(a,s,t,e);if(q.ni.set(0,0,1),o.vmult(q.ni,q.ni),q.ni.negate(q.ni),q.ni.normalize(),q.ni.mult(t.radius,q.ri),i.vsub(n,D),q.ni.mult(q.ni.dot(D),F),D.vsub(F,q.rj),-D.dot(q.ni)<=t.radius){var l=q.ri,h=q.rj;l.vadd(i,l),l.vsub(a.position,l),h.vadd(n,h),h.vsub(s.position,h),this.result.push(q),this.createFrictionEquationsFromContact(q,this.frictionResult)}};var V=new a,U=new a,j=new a;function G(t,e,i){for(var n=null,r=t.length,o=0;o!==r;o++){var a=t[o],s=V;t[(o+1)%r].vsub(a,s);var q=U;s.cross(e,q);var l=j;i.vsub(a,l);var h=q.dot(l);if(!(null===n||h>0&&!0===n||h<=0&&!1===n))return!1;null===n&&(n=h>0)}return!0}var H=new a,W=new a,k=new a,X=new a,Y=[new a,new a,new a,new a,new a,new a],Z=new a,J=new a,Q=new a,K=new a;u.prototype[r.types.SPHERE|r.types.BOX]=u.prototype.sphereBox=function(t,e,i,n,r,o,a,s){var q=this.v3pool,l=Y;i.vsub(n,H),e.getSideNormals(l,o);for(var h=t.radius,c=!1,u=J,p=Q,d=K,m=null,f=0,v=0,g=0,y=null,x=0,w=l.length;x!==w&&!1===c;x++){var b=W;b.copy(l[x]);var _=b.norm();b.normalize();var M=H.dot(b);if(M<_+h&&M>0){var S=k,E=X;S.copy(l[(x+1)%3]),E.copy(l[(x+2)%3]);var T=S.norm(),A=E.norm();S.normalize(),E.normalize();var L=H.dot(S),P=H.dot(E);if(L<T&&L>-T&&P<A&&P>-A){var z=Math.abs(M-_-h);(null===y||z<y)&&(y=z,v=L,g=P,m=_,u.copy(b),p.copy(S),d.copy(E),f++)}}}if(f){c=!0;var R=this.createContactEquation(a,s,t,e);u.mult(-h,R.ri),R.ni.copy(u),R.ni.negate(R.ni),u.mult(m,u),p.mult(v,p),u.vadd(p,u),d.mult(g,d),u.vadd(d,R.rj),R.ri.vadd(i,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(n,R.rj),R.rj.vsub(s.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}for(var C=q.get(),O=Z,I=0;2!==I&&!c;I++)for(var N=0;2!==N&&!c;N++)for(var B=0;2!==B&&!c;B++)C.set(0,0,0),I?C.vadd(l[0],C):C.vsub(l[0],C),N?C.vadd(l[1],C):C.vsub(l[1],C),B?C.vadd(l[2],C):C.vsub(l[2],C),n.vadd(C,O),O.vsub(i,O),O.norm2()<h*h&&(c=!0,(R=this.createContactEquation(a,s,t,e)).ri.copy(O),R.ri.normalize(),R.ni.copy(R.ri),R.ri.mult(h,R.ri),R.rj.copy(C),R.ri.vadd(i,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(n,R.rj),R.rj.vsub(s.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult));q.release(C),C=null;var D=q.get(),F=q.get(),V=(R=q.get(),q.get()),U=(z=q.get(),l.length);for(I=0;I!==U&&!c;I++)for(N=0;N!==U&&!c;N++)if(I%3!=N%3){l[N].cross(l[I],D),D.normalize(),l[I].vadd(l[N],F),R.copy(i),R.vsub(F,R),R.vsub(n,R);var j=R.dot(D);for(D.mult(j,V),B=0;B===I%3||B===N%3;)B++;z.copy(i),z.vsub(V,z),z.vsub(F,z),z.vsub(n,z);var G=Math.abs(j),$=z.norm();if(G<l[B].norm()&&$<h){c=!0;var tt=this.createContactEquation(a,s,t,e);F.vadd(V,tt.rj),tt.rj.copy(tt.rj),z.negate(tt.ni),tt.ni.normalize(),tt.ri.copy(tt.rj),tt.ri.vadd(n,tt.ri),tt.ri.vsub(i,tt.ri),tt.ri.normalize(),tt.ri.mult(h,tt.ri),tt.ri.vadd(i,tt.ri),tt.ri.vsub(a.position,tt.ri),tt.rj.vadd(n,tt.rj),tt.rj.vsub(s.position,tt.rj),this.result.push(tt),this.createFrictionEquationsFromContact(tt,this.frictionResult)}}q.release(D,F,R,V,z)};var $=new a,tt=new a,et=new a,it=new a,nt=new a,rt=new a,ot=new a,at=new a,st=new a,qt=new a;u.prototype[r.types.SPHERE|r.types.CONVEXPOLYHEDRON]=u.prototype.sphereConvex=function(t,e,i,n,r,o,a,s){var q=this.v3pool;i.vsub(n,$);for(var l=e.faceNormals,h=e.faces,c=e.vertices,u=t.radius,p=0;p!==c.length;p++){var d=c[p],m=nt;o.vmult(d,m),n.vadd(m,m);var f=it;if(m.vsub(i,f),f.norm2()<u*u)return v=!0,(z=this.createContactEquation(a,s,t,e)).ri.copy(f),z.ri.normalize(),z.ni.copy(z.ri),z.ri.mult(u,z.ri),m.vsub(n,z.rj),z.ri.vadd(i,z.ri),z.ri.vsub(a.position,z.ri),z.rj.vadd(n,z.rj),z.rj.vsub(s.position,z.rj),this.result.push(z),void this.createFrictionEquationsFromContact(z,this.frictionResult)}for(var v=!1,g=(p=0,h.length);p!==g&&!1===v;p++){var y=l[p],x=h[p],w=rt;o.vmult(y,w);var b=ot;o.vmult(c[x[0]],b),b.vadd(n,b);var _=at;w.mult(-u,_),i.vadd(_,_);var M=st;_.vsub(b,M);var S=M.dot(w),E=qt;if(i.vsub(b,E),S<0&&E.dot(w)>0){for(var T=[],A=0,L=x.length;A!==L;A++){var P=q.get();o.vmult(c[x[A]],P),n.vadd(P,P),T.push(P)}if(G(T,w,i)){v=!0;var z=this.createContactEquation(a,s,t,e);w.mult(-u,z.ri),w.negate(z.ni);var R=q.get();w.mult(-S,R);var C=q.get();w.mult(-u,C),i.vsub(n,z.rj),z.rj.vadd(C,z.rj),z.rj.vadd(R,z.rj),z.rj.vadd(n,z.rj),z.rj.vsub(s.position,z.rj),z.ri.vadd(i,z.ri),z.ri.vsub(a.position,z.ri),q.release(R),q.release(C),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult),A=0;for(var O=T.length;A!==O;A++)q.release(T[A]);return}for(A=0;A!==x.length;A++){var I=q.get(),N=q.get();o.vmult(c[x[(A+1)%x.length]],I),o.vmult(c[x[(A+2)%x.length]],N),n.vadd(I,I),n.vadd(N,N);var B=tt;N.vsub(I,B);var D=et;B.unit(D);var F=q.get(),V=q.get();i.vsub(I,V);var U=V.dot(D);D.mult(U,F),F.vadd(I,F);var j=q.get();if(F.vsub(i,j),U>0&&U*U<B.norm2()&&j.norm2()<u*u){for(z=this.createContactEquation(a,s,t,e),F.vsub(n,z.rj),F.vsub(i,z.ni),z.ni.normalize(),z.ni.mult(u,z.ri),z.rj.vadd(n,z.rj),z.rj.vsub(s.position,z.rj),z.ri.vadd(i,z.ri),z.ri.vsub(a.position,z.ri),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult),A=0,O=T.length;A!==O;A++)q.release(T[A]);return q.release(I),q.release(N),q.release(F),q.release(j),void q.release(V)}q.release(I),q.release(N),q.release(F),q.release(j),q.release(V)}for(A=0,O=T.length;A!==O;A++)q.release(T[A])}}},new a,new a,u.prototype[r.types.PLANE|r.types.BOX]=u.prototype.planeBox=function(t,e,i,n,r,o,a,s){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.planeConvex(t,e.convexPolyhedronRepresentation,i,n,r,o,a,s)};var lt=new a,ht=new a,ct=new a,ut=new a;u.prototype[r.types.PLANE|r.types.CONVEXPOLYHEDRON]=u.prototype.planeConvex=function(t,e,i,n,r,o,a,s){var q=lt,l=ht;l.set(0,0,1),r.vmult(l,l);for(var h=0,c=ct,u=0;u!==e.vertices.length;u++)if(q.copy(e.vertices[u]),o.vmult(q,q),n.vadd(q,q),q.vsub(i,c),l.dot(c)<=0){var p=this.createContactEquation(a,s,t,e),d=ut;l.mult(l.dot(c),d),q.vsub(d,d),d.vsub(i,p.ri),p.ni.copy(l),q.vsub(n,p.rj),p.ri.vadd(i,p.ri),p.ri.vsub(a.position,p.ri),p.rj.vadd(n,p.rj),p.rj.vsub(s.position,p.rj),this.result.push(p),h++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(p,this.frictionResult)}this.enableFrictionReduction&&h&&this.createFrictionFromAverage(h)};var pt=new a,dt=new a;u.prototype[r.types.CONVEXPOLYHEDRON]=u.prototype.convexConvex=function(t,e,i,n,r,o,a,s,q,l,h,c){var u=pt;if(!(i.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,i,r,n,o,u,h,c)){var p=[],d=dt;t.clipAgainstHull(i,r,e,n,o,u,-100,100,p);for(var m=0,f=0;f!==p.length;f++){var v=this.createContactEquation(a,s,t,e,q,l),g=v.ri,y=v.rj;u.negate(v.ni),p[f].normal.negate(d),d.mult(p[f].depth,d),p[f].point.vadd(d,g),y.copy(p[f].point),g.vsub(i,g),y.vsub(n,y),g.vadd(i,g),g.vsub(a.position,g),y.vadd(n,y),y.vsub(s.position,y),this.result.push(v),m++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&m&&this.createFrictionFromAverage(m)}};var mt=new a,ft=new a,vt=new a;u.prototype[r.types.PLANE|r.types.PARTICLE]=u.prototype.planeParticle=function(t,e,i,n,r,o,a,s){var q=mt;q.set(0,0,1),a.quaternion.vmult(q,q);var l=ft;if(n.vsub(a.position,l),q.dot(l)<=0){var h=this.createContactEquation(s,a,e,t);h.ni.copy(q),h.ni.negate(h.ni),h.ri.set(0,0,0);var c=vt;q.mult(q.dot(n),c),n.vsub(c,c),h.rj.copy(c),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}};var gt=new a;u.prototype[r.types.PARTICLE|r.types.SPHERE]=u.prototype.sphereParticle=function(t,e,i,n,r,o,a,s){var q=gt;if(q.set(0,0,1),n.vsub(i,q),q.norm2()<=t.radius*t.radius){var l=this.createContactEquation(s,a,e,t);q.normalize(),l.rj.copy(q),l.rj.mult(t.radius,l.rj),l.ni.copy(q),l.ni.negate(l.ni),l.ri.set(0,0,0),this.result.push(l),this.createFrictionEquationsFromContact(l,this.frictionResult)}};var yt=new q,xt=new a,wt=(new a,new a),bt=new a,_t=new a;u.prototype[r.types.PARTICLE|r.types.CONVEXPOLYHEDRON]=u.prototype.convexParticle=function(t,e,i,n,r,o,a,s){var q=-1,l=wt,h=_t,c=null,u=xt;if(u.copy(n),u.vsub(i,u),r.conjugate(yt),yt.vmult(u,u),t.pointIsInside(u)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(i,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(var p=0,d=t.faces.length;p!==d;p++){var m=[t.worldVertices[t.faces[p][0]]],f=t.worldFaceNormals[p];n.vsub(m[0],bt);var v=-f.dot(bt);(null===c||Math.abs(v)<Math.abs(c))&&(c=v,q=p,l.copy(f))}if(-1!==q){var g=this.createContactEquation(s,a,e,t);l.mult(c,h),h.vadd(n,h),h.vsub(i,h),g.rj.copy(h),l.negate(g.ni),g.ri.set(0,0,0);var y=g.ri,x=g.rj;y.vadd(n,y),y.vsub(s.position,y),x.vadd(i,x),x.vsub(a.position,x),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}},u.prototype[r.types.BOX|r.types.HEIGHTFIELD]=u.prototype.boxHeightfield=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,i,n,r,o,a,s)};var Mt=new a,St=new a,Et=[0];u.prototype[r.types.CONVEXPOLYHEDRON|r.types.HEIGHTFIELD]=u.prototype.convexHeightfield=function(t,e,i,n,r,o,a,q){var l=e.data,h=e.elementSize,c=t.boundingSphereRadius,u=St,p=Et,d=Mt;s.pointToLocalFrame(n,o,i,d);var m=Math.floor((d.x-c)/h)-1,f=Math.ceil((d.x+c)/h)+1,v=Math.floor((d.y-c)/h)-1,g=Math.ceil((d.y+c)/h)+1;if(!(f<0||g<0||m>l.length||v>l[0].length)){m<0&&(m=0),f<0&&(f=0),v<0&&(v=0),g<0&&(g=0),m>=l.length&&(m=l.length-1),f>=l.length&&(f=l.length-1),g>=l[0].length&&(g=l[0].length-1),v>=l[0].length&&(v=l[0].length-1);var y=[];e.getRectMinMax(m,v,f,g,y);var x=y[0],w=y[1];if(!(d.z-c>w||d.z+c<x))for(var b=m;b<f;b++)for(var _=v;_<g;_++)e.getConvexTrianglePillar(b,_,!1),s.pointToWorldFrame(n,o,e.pillarOffset,u),i.distanceTo(u)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.convexConvex(t,e.pillarConvex,i,u,r,o,a,q,null,null,p,null),e.getConvexTrianglePillar(b,_,!0),s.pointToWorldFrame(n,o,e.pillarOffset,u),i.distanceTo(u)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.convexConvex(t,e.pillarConvex,i,u,r,o,a,q,null,null,p,null)}};var Tt=new a,At=new a;u.prototype[r.types.SPHERE|r.types.HEIGHTFIELD]=u.prototype.sphereHeightfield=function(t,e,i,n,r,o,a,q){var l=e.data,h=t.radius,c=e.elementSize,u=At,p=Tt;s.pointToLocalFrame(n,o,i,p);var d=Math.floor((p.x-h)/c)-1,m=Math.ceil((p.x+h)/c)+1,f=Math.floor((p.y-h)/c)-1,v=Math.ceil((p.y+h)/c)+1;if(!(m<0||v<0||d>l.length||v>l[0].length)){d<0&&(d=0),m<0&&(m=0),f<0&&(f=0),v<0&&(v=0),d>=l.length&&(d=l.length-1),m>=l.length&&(m=l.length-1),v>=l[0].length&&(v=l[0].length-1),f>=l[0].length&&(f=l[0].length-1);var g=[];e.getRectMinMax(d,f,m,v,g);var y=g[0],x=g[1];if(!(p.z-h>x||p.z+h<y))for(var w=this.result,b=d;b<m;b++)for(var _=f;_<v;_++){var M=w.length;if(e.getConvexTrianglePillar(b,_,!1),s.pointToWorldFrame(n,o,e.pillarOffset,u),i.distanceTo(u)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.sphereConvex(t,e.pillarConvex,i,u,r,o,a,q),e.getConvexTrianglePillar(b,_,!0),s.pointToWorldFrame(n,o,e.pillarOffset,u),i.distanceTo(u)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.sphereConvex(t,e.pillarConvex,i,u,r,o,a,q),w.length-M>2)return}}}},{"../collision/AABB":3,"../collision/Ray":9,"../equations/ContactEquation":19,"../equations/FrictionEquation":21,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../shapes/ConvexPolyhedron":38,"../shapes/Shape":43,"../solver/Solver":47,"../utils/Vec3Pool":54}],56:[function(t,e,i){e.exports=g;var n=t("../shapes/Shape"),r=t("../math/Vec3"),o=t("../math/Quaternion"),a=t("../solver/GSSolver"),s=(t("../utils/Vec3Pool"),t("../equations/ContactEquation"),t("../equations/FrictionEquation"),t("./Narrowphase")),q=t("../utils/EventTarget"),l=t("../collision/ArrayCollisionMatrix"),h=t("../material/Material"),c=t("../material/ContactMaterial"),u=t("../objects/Body"),p=t("../utils/TupleDictionary"),d=t("../collision/RaycastResult"),m=t("../collision/AABB"),f=t("../collision/Ray"),v=t("../collision/NaiveBroadphase");function g(){q.apply(this),this.dt=-1,this.allowSleep=!1,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=0,this.quatNormalizeFast=!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new r,this.broadphase=new v,this.bodies=[],this.solver=new a,this.constraints=[],this.narrowphase=new s(this),this.collisionMatrix=new l,this.collisionMatrixPrevious=new l,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new p,this.defaultMaterial=new h("default"),this.defaultContactMaterial=new c(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null}}g.prototype=new q,new m;var y=new f;if(g.prototype.getContactMaterial=function(t,e){return this.contactMaterialTable.get(t.id,e.id)},g.prototype.numObjects=function(){return this.bodies.length},g.prototype.collisionMatrixTick=function(){var t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset()},g.prototype.add=g.prototype.addBody=function(t){-1===this.bodies.indexOf(t)&&(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof u&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.dispatchEvent(this.addBodyEvent))},g.prototype.addConstraint=function(t){this.constraints.push(t)},g.prototype.removeConstraint=function(t){var e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)},g.prototype.rayTest=function(t,e,i){i instanceof d?this.raycastClosest(t,e,{skipBackfaces:!0},i):this.raycastAll(t,e,{skipBackfaces:!0},i)},g.prototype.raycastAll=function(t,e,i,n){return i.mode=f.ALL,i.from=t,i.to=e,i.callback=n,y.intersectWorld(this,i)},g.prototype.raycastAny=function(t,e,i,n){return i.mode=f.ANY,i.from=t,i.to=e,i.result=n,y.intersectWorld(this,i)},g.prototype.raycastClosest=function(t,e,i,n){return i.mode=f.CLOSEST,i.from=t,i.to=e,i.result=n,y.intersectWorld(this,i)},g.prototype.remove=function(t){t.world=null;var e=this.bodies.length-1,i=this.bodies,n=i.indexOf(t);if(-1!==n){i.splice(n,1);for(var r=0;r!==i.length;r++)i[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,this.dispatchEvent(this.removeBodyEvent)}},g.prototype.removeBody=g.prototype.remove,g.prototype.addMaterial=function(t){this.materials.push(t)},g.prototype.addContactMaterial=function(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)},"undefined"==typeof performance&&(performance={}),!performance.now){var x=Date.now();performance.timing&&performance.timing.navigationStart&&(x=performance.timing.navigationStart),performance.now=function(){return Date.now()-x}}var w=new r;g.prototype.step=function(t,e,i){if(i=i||10,0===(e=e||0))this.internalStep(t),this.time+=t;else{var n=Math.floor((this.time+e)/t)-Math.floor(this.time/t);n=Math.min(n,i);for(var r=performance.now(),o=0;o!==n&&(this.internalStep(t),!(performance.now()-r>1e3*t));o++);this.time+=e;for(var a=this.time%t/t,s=w,q=this.bodies,l=0;l!==q.length;l++){var h=q[l];h.type!==u.STATIC&&h.sleepState!==u.SLEEPING?(h.position.vsub(h.previousPosition,s),s.scale(a,s),h.position.vadd(s,h.interpolatedPosition)):(h.interpolatedPosition.copy(h.position),h.interpolatedQuaternion.copy(h.quaternion))}}};var b={type:"postStep"},_={type:"preStep"},M={type:"collide",body:null,contact:null},S=[],E=[],T=[],A=[],L=(new r,new r,new r,new r,new r,new r,new r,new r,new r,new o,new o),P=new o,z=new r;g.prototype.internalStep=function(t){this.dt=t;var e,i=this.contacts,r=T,o=A,a=this.numObjects(),s=this.bodies,q=this.solver,l=this.gravity,h=this.doProfiling,c=this.profile,p=u.DYNAMIC,d=this.constraints,m=E,f=(l.norm(),l.x),v=l.y,g=l.z,y=0;for(h&&(e=performance.now()),y=0;y!==a;y++)if((V=s[y]).type&p){var x=V.force,w=V.mass;x.x+=w*f,x.y+=w*v,x.z+=w*g}y=0;for(var R=this.subsystems.length;y!==R;y++)this.subsystems[y].update();h&&(e=performance.now()),r.length=0,o.length=0,this.broadphase.collisionPairs(this,r,o),h&&(c.broadphase=performance.now()-e);var C=d.length;for(y=0;y!==C;y++)if(!(j=d[y]).collideConnected)for(var O=r.length-1;O>=0;O-=1)(j.bodyA===r[O]&&j.bodyB===o[O]||j.bodyB===r[O]&&j.bodyA===o[O])&&(r.splice(O,1),o.splice(O,1));this.collisionMatrixTick(),h&&(e=performance.now());var I=S,N=i.length;for(y=0;y!==N;y++)I.push(i[y]);i.length=0;var B=this.frictionEquations.length;for(y=0;y!==B;y++)m.push(this.frictionEquations[y]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(r,o,this,i,I,this.frictionEquations,m),h&&(c.narrowphase=performance.now()-e),h&&(e=performance.now()),y=0;y<this.frictionEquations.length;y++)q.addEquation(this.frictionEquations[y]);for(var D=i.length,F=0;F!==D;F++){var V=(j=i[F]).bi,U=j.bj;j.si,j.sj,(V.material&&U.material&&this.getContactMaterial(V.material,U.material)||this.defaultContactMaterial).friction,V.material&&U.material&&(V.material.friction>=0&&U.material.friction>=0&&(V.material.friction,U.material.friction),V.material.restitution>=0&&U.material.restitution>=0&&(j.restitution=V.material.restitution*U.material.restitution)),q.addEquation(j),V.allowSleep&&V.type===u.DYNAMIC&&V.sleepState===u.SLEEPING&&U.sleepState===u.AWAKE&&U.type!==u.STATIC&&U.velocity.norm2()+U.angularVelocity.norm2()>=2*Math.pow(U.sleepSpeedLimit,2)&&(V._wakeUpAfterNarrowphase=!0),U.allowSleep&&U.type===u.DYNAMIC&&U.sleepState===u.SLEEPING&&V.sleepState===u.AWAKE&&V.type!==u.STATIC&&V.velocity.norm2()+V.angularVelocity.norm2()>=2*Math.pow(V.sleepSpeedLimit,2)&&(U._wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(V,U,!0),this.collisionMatrixPrevious.get(V,U)||(M.body=U,M.contact=j,V.dispatchEvent(M),M.body=V,U.dispatchEvent(M))}for(h&&(c.makeContactConstraints=performance.now()-e,e=performance.now()),y=0;y!==a;y++)(V=s[y])._wakeUpAfterNarrowphase&&(V.wakeUp(),V._wakeUpAfterNarrowphase=!1);for(C=d.length,y=0;y!==C;y++){var j;(j=d[y]).update(),O=0;for(var G=j.equations.length;O!==G;O++){var H=j.equations[O];q.addEquation(H)}}q.solve(t,this),h&&(c.solve=performance.now()-e),q.removeAllEquations();var W=Math.pow;for(y=0;y!==a;y++)if((V=s[y]).type&p){var k=W(1-V.linearDamping,t),X=V.velocity;X.mult(k,X);var Y=V.angularVelocity;if(Y){var Z=W(1-V.angularDamping,t);Y.mult(Z,Y)}}for(this.dispatchEvent(_),y=0;y!==a;y++)(V=s[y]).preStep&&V.preStep.call(V);h&&(e=performance.now());var J=L,Q=P,K=this.stepnumber,$=u.DYNAMIC|u.KINEMATIC,tt=K%(this.quatNormalizeSkip+1)==0,et=this.quatNormalizeFast,it=.5*t;for(n.types.PLANE,n.types.CONVEXPOLYHEDRON,y=0;y!==a;y++){var nt=s[y],rt=nt.force,ot=nt.torque;if(nt.type&$&&nt.sleepState!==u.SLEEPING){var at=nt.velocity,st=nt.angularVelocity,qt=nt.position,lt=nt.quaternion,ht=nt.invMass,ct=nt.invInertiaWorld;at.x+=rt.x*ht*t,at.y+=rt.y*ht*t,at.z+=rt.z*ht*t,nt.angularVelocity&&(ct.vmult(ot,z),z.mult(t,z),z.vadd(st,st)),qt.x+=at.x*t,qt.y+=at.y*t,qt.z+=at.z*t,nt.angularVelocity&&(J.set(st.x,st.y,st.z,0),J.mult(lt,Q),lt.x+=it*Q.x,lt.y+=it*Q.y,lt.z+=it*Q.z,lt.w+=it*Q.w,tt&&(et?lt.normalizeFast():lt.normalize())),nt.aabb&&(nt.aabbNeedsUpdate=!0),nt.updateInertiaWorld&&nt.updateInertiaWorld()}}for(this.clearForces(),this.broadphase.dirty=!0,h&&(c.integrate=performance.now()-e),this.time+=t,this.stepnumber+=1,this.dispatchEvent(b),y=0;y!==a;y++){var ut=(V=s[y]).postStep;ut&&ut.call(V)}if(this.allowSleep)for(y=0;y!==a;y++)s[y].sleepTick(this.time)},g.prototype.clearForces=function(){for(var t=this.bodies,e=t.length,i=0;i!==e;i++){var n=t[i];n.force,n.torque,n.force.set(0,0,0),n.torque.set(0,0,0)}}},{"../collision/AABB":3,"../collision/ArrayCollisionMatrix":4,"../collision/NaiveBroadphase":7,"../collision/Ray":9,"../collision/RaycastResult":10,"../equations/ContactEquation":19,"../equations/FrictionEquation":21,"../material/ContactMaterial":24,"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Shape":43,"../solver/GSSolver":46,"../utils/EventTarget":49,"../utils/TupleDictionary":52,"../utils/Vec3Pool":54,"./Narrowphase":55}]},{},[2])(2)}},e={};function i(n){var r=e[n];if(void 0!==r)return r.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,i),o.exports}i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},i.d=function(t,e){for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,i){for(var n=0;n<i.length;n++){var r=i[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,i){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===t(o)?o:String(o)),r)}var o}var n=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.onResize(),this.bindEvents()}var i,n;return i=t,(n=[{key:"bindEvents",value:function(){var t=this;window.addEventListener("resize",(function(){return t.onResize()}))}},{key:"onResize",value:function(){this.isMobile=window.matchMedia("(max-width: 767px)").matches,this.isSmallMobile=window.matchMedia("(max-width: 400px)").matches,this.W=window.innerWidth,this.H=window.innerHeight}}])&&e(i.prototype,n),Object.defineProperty(i,"prototype",{writable:!1}),t}();void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==0&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(null!=n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});var r=0,o=1,a=2,s=1,q=2,l=3,h=0,c=1,u=2,p=0,d=2,m=0,f=1,v=2,g=3,y=4,x=5,w=100,b=101,_=102,M=103,S=104,E=200,T=201,A=202,L=203,P=204,z=205,R=206,C=207,O=208,I=209,N=210,B=0,D=1,F=2,V=3,U=4,j=5,G=6,H=7,W=0,k=1,X=2,Y=0,Z=1,J=2,Q=3,K=4,$=5,tt=301,et=302,it=303,nt=304,rt=305,ot=306,at=307,st=1e3,qt=1001,lt=1002,ht=1003,ct=1004,ut=1005,pt=1006,dt=1007,mt=1008,ft=1009,vt=1010,gt=1011,yt=1012,xt=1013,wt=1014,bt=1015,_t=1016,Mt=1017,St=1018,Et=1019,Tt=1020,At=1021,Lt=1022,Pt=1023,zt=1024,Rt=1025,Ct=1026,Ot=1027,It=1028,Nt=33776,Bt=33777,Dt=33778,Ft=33779,Vt=35840,Ut=35841,jt=35842,Gt=35843,Ht=36196,Wt=37808,kt=37809,Xt=37810,Yt=37811,Zt=37812,Jt=37813,Qt=37814,Kt=37815,$t=37816,te=37817,ee=37818,ie=37819,ne=37820,re=37821,oe=2300,ae=2301,se=2302,qe=2400,le=2401,he=2402,ce=0,ue=3e3,pe=3001,de=3007,me=3002,fe=3003,ve=3004,ge=3005,ye=3006,xe=3200,we=3201,be=0,_e=1,Me=7680,Se=519,Ee=35044,Te=35048;function Ae(){}Object.assign(Ae.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners[t];if(void 0!==i){var n=i.indexOf(e);-1!==n&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=e.slice(0),n=0,r=i.length;n<r;n++)i[n].call(this,t)}}}});for(var Le=[],Pe=0;Pe<256;Pe++)Le[Pe]=(Pe<16?"0":"")+Pe.toString(16);var ze={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Le[255&t]+Le[t>>8&255]+Le[t>>16&255]+Le[t>>24&255]+"-"+Le[255&e]+Le[e>>8&255]+"-"+Le[e>>16&15|64]+Le[e>>24&255]+"-"+Le[63&i|128]+Le[i>>8&255]+"-"+Le[i>>16&255]+Le[i>>24&255]+Le[255&n]+Le[n>>8&255]+Le[n>>16&255]+Le[n>>24&255]).toUpperCase()},clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*ze.DEG2RAD},radToDeg:function(t){return t*ze.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function Re(t,e){this.x=t||0,this.y=e||0}function Ce(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}Object.defineProperties(Re.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(Re.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*i-o*n+t.x,this.y=r*n+o*i+t.y,this}}),Object.assign(Ce,{slerp:function(t,e,i,n){return i.copy(t).slerp(e,n)},slerpFlat:function(t,e,i,n,r,o,a){var s=i[n+0],q=i[n+1],l=i[n+2],h=i[n+3],c=r[o+0],u=r[o+1],p=r[o+2],d=r[o+3];if(h!==d||s!==c||q!==u||l!==p){var m=1-a,f=s*c+q*u+l*p+h*d,v=f>=0?1:-1,g=1-f*f;if(g>Number.EPSILON){var y=Math.sqrt(g),x=Math.atan2(y,f*v);m=Math.sin(m*x)/y,a=Math.sin(a*x)/y}var w=a*v;if(s=s*m+c*w,q=q*m+u*w,l=l*m+p*w,h=h*m+d*w,m===1-a){var b=1/Math.sqrt(s*s+q*q+l*l+h*h);s*=b,q*=b,l*=b,h*=b}}t[e]=s,t[e+1]=q,t[e+2]=l,t[e+3]=h}}),Object.defineProperties(Ce.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this._onChangeCallback()}}}),Object.assign(Ce.prototype,{isQuaternion:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,n=t._y,r=t._z,o=t.order,a=Math.cos,s=Math.sin,q=a(i/2),l=a(n/2),h=a(r/2),c=s(i/2),u=s(n/2),p=s(r/2);return"XYZ"===o?(this._x=c*l*h+q*u*p,this._y=q*u*h-c*l*p,this._z=q*l*p+c*u*h,this._w=q*l*h-c*u*p):"YXZ"===o?(this._x=c*l*h+q*u*p,this._y=q*u*h-c*l*p,this._z=q*l*p-c*u*h,this._w=q*l*h+c*u*p):"ZXY"===o?(this._x=c*l*h-q*u*p,this._y=q*u*h+c*l*p,this._z=q*l*p+c*u*h,this._w=q*l*h-c*u*p):"ZYX"===o?(this._x=c*l*h-q*u*p,this._y=q*u*h+c*l*p,this._z=q*l*p-c*u*h,this._w=q*l*h+c*u*p):"YZX"===o?(this._x=c*l*h+q*u*p,this._y=q*u*h+c*l*p,this._z=q*l*p-c*u*h,this._w=q*l*h-c*u*p):"XZY"===o&&(this._x=c*l*h-q*u*p,this._y=q*u*h-c*l*p,this._z=q*l*p+c*u*h,this._w=q*l*h+c*u*p),!1!==e&&this._onChangeCallback(),this},setFromAxisAngle:function(t,e){var i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this},setFromRotationMatrix:function(t){var e,i=t.elements,n=i[0],r=i[4],o=i[8],a=i[1],s=i[5],q=i[9],l=i[2],h=i[6],c=i[10],u=n+s+c;return u>0?(e=.5/Math.sqrt(u+1),this._w=.25/e,this._x=(h-q)*e,this._y=(o-l)*e,this._z=(a-r)*e):n>s&&n>c?(e=2*Math.sqrt(1+n-s-c),this._w=(h-q)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(o+l)/e):s>c?(e=2*Math.sqrt(1+s-n-c),this._w=(o-l)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(q+h)/e):(e=2*Math.sqrt(1+c-n-s),this._w=(a-r)/e,this._x=(o+l)/e,this._y=(q+h)/e,this._z=.25*e),this._onChangeCallback(),this},setFromUnitVectors:function(t,e){var i=t.dot(e)+1;return i<1e-6?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(ze.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var i=this.angleTo(t);if(0===i)return this;var n=Math.min(1,e/i);return this.slerp(t,n),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var i=t._x,n=t._y,r=t._z,o=t._w,a=e._x,s=e._y,q=e._z,l=e._w;return this._x=i*l+o*a+n*q-r*s,this._y=n*l+o*s+r*a-i*q,this._z=r*l+o*q+i*s-n*a,this._w=o*l-i*a-n*s-r*q,this._onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,o=this._w,a=o*t._w+i*t._x+n*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=n,this._z=r,this;var s=1-a*a;if(s<=Number.EPSILON){var q=1-e;return this._w=q*o+e*this._w,this._x=q*i+e*this._x,this._y=q*n+e*this._y,this._z=q*r+e*this._z,this.normalize(),this._onChangeCallback(),this}var l=Math.sqrt(s),h=Math.atan2(l,a),c=Math.sin((1-e)*h)/l,u=Math.sin(e*h)/l;return this._w=o*c+this._w*u,this._x=i*c+this._x*u,this._y=n*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}});var Oe=new Ne,Ie=new Ce;function Ne(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}Object.assign(Ne.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ie.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(Ie.setFromAxisAngle(t,e))},applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements,o=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*o,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*o,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*o,this},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,r=t.x,o=t.y,a=t.z,s=t.w,q=s*e+o*n-a*i,l=s*i+a*e-r*n,h=s*n+r*i-o*e,c=-r*e-o*i-a*n;return this.x=q*s+c*-r+l*-a-h*-o,this.y=l*s+c*-o+h*-r-q*-a,this.z=h*s+c*-a+q*-o-l*-r,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var i=t.x,n=t.y,r=t.z,o=e.x,a=e.y,s=e.z;return this.x=n*s-r*a,this.y=r*o-i*s,this.z=i*a-n*o,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(t){return Oe.copy(this).projectOnVector(t),this.sub(Oe)},reflect:function(t){return this.sub(Oe.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){var e=Math.sqrt(this.lengthSq()*t.lengthSq());0===e&&console.error("THREE.Vector3: angleTo() can't handle zero length vectors.");var i=this.dot(t)/e;return Math.acos(ze.clamp(i,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,i){var n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}});var Be,De=new Ne;function Fe(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Fe.prototype,{isMatrix3:!0,set:function(t,e,i,n,r,o,a,s,q){var l=this.elements;return l[0]=t,l[1]=n,l[2]=a,l[3]=e,l[4]=r,l[5]=s,l[6]=i,l[7]=o,l[8]=q,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(t){for(var e=0,i=t.count;e<i;e++)De.x=t.getX(e),De.y=t.getY(e),De.z=t.getZ(e),De.applyMatrix3(this),t.setXYZ(e,De.x,De.y,De.z);return t},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,o=i[0],a=i[3],s=i[6],q=i[1],l=i[4],h=i[7],c=i[2],u=i[5],p=i[8],d=n[0],m=n[3],f=n[6],v=n[1],g=n[4],y=n[7],x=n[2],w=n[5],b=n[8];return r[0]=o*d+a*v+s*x,r[3]=o*m+a*g+s*w,r[6]=o*f+a*y+s*b,r[1]=q*d+l*v+h*x,r[4]=q*m+l*g+h*w,r[7]=q*f+l*y+h*b,r[2]=c*d+u*v+p*x,r[5]=c*m+u*g+p*w,r[8]=c*f+u*y+p*b,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],o=t[4],a=t[5],s=t[6],q=t[7],l=t[8];return e*o*l-e*a*q-i*r*l+i*a*s+n*r*q-n*o*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var i=t.elements,n=this.elements,r=i[0],o=i[1],a=i[2],s=i[3],q=i[4],l=i[5],h=i[6],c=i[7],u=i[8],p=u*q-l*c,d=l*h-u*s,m=c*s-q*h,f=r*p+o*d+a*m;if(0===f){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var g=1/f;return n[0]=p*g,n[1]=(a*c-u*o)*g,n[2]=(l*o-a*q)*g,n[3]=d*g,n[4]=(u*r-a*h)*g,n[5]=(a*s-l*r)*g,n[6]=m*g,n[7]=(o*h-c*r)*g,n[8]=(q*r-o*s)*g,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,i,n,r,o,a){var s=Math.cos(r),q=Math.sin(r);this.set(i*s,i*q,-i*(s*o+q*a)+o+t,-n*q,n*s,-n*(-q*o+s*a)+a+e,0,0,1)},scale:function(t,e){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this},rotate:function(t){var e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],o=n[3],a=n[6],s=n[1],q=n[4],l=n[7];return n[0]=e*r+i*s,n[3]=e*o+i*q,n[6]=e*a+i*l,n[1]=-i*r+e*s,n[4]=-i*o+e*q,n[7]=-i*a+e*l,this},translate:function(t,e){var i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}});var Ve={getDataURL:function(t){var e;if("undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Be&&(Be=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Be.width=t.width,Be.height=t.height;var i=Be.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Be}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}},Ue=0;function je(t,e,i,n,r,o,a,s,q,l){Object.defineProperty(this,"id",{value:Ue++}),this.uuid=ze.generateUUID(),this.name="",this.image=void 0!==t?t:je.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:je.DEFAULT_MAPPING,this.wrapS=void 0!==i?i:qt,this.wrapT=void 0!==n?n:qt,this.magFilter=void 0!==r?r:pt,this.minFilter=void 0!==o?o:mt,this.anisotropy=void 0!==q?q:1,this.format=void 0!==a?a:Pt,this.type=void 0!==s?s:ft,this.offset=new Re(0,0),this.repeat=new Re(1,1),this.center=new Re(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Fe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==l?l:ue,this.version=0,this.onUpdate=null}function Ge(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}function He(t,e,i){this.width=t,this.height=e,this.scissor=new Ge(0,0,t,e),this.scissorTest=!1,this.viewport=new Ge(0,0,t,e),i=i||{},this.texture=new je(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:pt,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function We(t,e,i){He.call(this,t,e,i),this.samples=4}je.DEFAULT_IMAGE=void 0,je.DEFAULT_MAPPING=300,je.prototype=Object.assign(Object.create(Ae.prototype),{constructor:je,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var n=this.image;if(void 0===n.uuid&&(n.uuid=ze.generateUUID()),!e&&void 0===t.images[n.uuid]){var r;if(Array.isArray(n)){r=[];for(var o=0,a=n.length;o<a;o++)r.push(Ve.getDataURL(n[o]))}else r=Ve.getDataURL(n);t.images[n.uuid]={uuid:n.uuid,url:r}}i.image=n.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case st:t.x=t.x-Math.floor(t.x);break;case qt:t.x=t.x<0?0:1;break;case lt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case st:t.y=t.y-Math.floor(t.y);break;case qt:t.y=t.y<0?0:1;break;case lt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(je.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.defineProperties(Ge.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign(Ge.prototype,{isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*n+o[12]*r,this.y=o[1]*e+o[5]*i+o[9]*n+o[13]*r,this.z=o[2]*e+o[6]*i+o[10]*n+o[14]*r,this.w=o[3]*e+o[7]*i+o[11]*n+o[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,i,n,r,o=.01,a=.1,s=t.elements,q=s[0],l=s[4],h=s[8],c=s[1],u=s[5],p=s[9],d=s[2],m=s[6],f=s[10];if(Math.abs(l-c)<o&&Math.abs(h-d)<o&&Math.abs(p-m)<o){if(Math.abs(l+c)<a&&Math.abs(h+d)<a&&Math.abs(p+m)<a&&Math.abs(q+u+f-3)<a)return this.set(1,0,0,0),this;e=Math.PI;var v=(q+1)/2,g=(u+1)/2,y=(f+1)/2,x=(l+c)/4,w=(h+d)/4,b=(p+m)/4;return v>g&&v>y?v<o?(i=0,n=.707106781,r=.707106781):(n=x/(i=Math.sqrt(v)),r=w/i):g>y?g<o?(i=.707106781,n=0,r=.707106781):(i=x/(n=Math.sqrt(g)),r=b/n):y<o?(i=.707106781,n=.707106781,r=0):(i=w/(r=Math.sqrt(y)),n=b/r),this.set(i,n,r,e),this}var _=Math.sqrt((m-p)*(m-p)+(h-d)*(h-d)+(c-l)*(c-l));return Math.abs(_)<.001&&(_=1),this.x=(m-p)/_,this.y=(h-d)/_,this.z=(c-l)/_,this.w=Math.acos((q+u+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),He.prototype=Object.assign(Object.create(Ae.prototype),{constructor:He,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),We.prototype=Object.assign(Object.create(He.prototype),{constructor:We,isWebGLMultisampleRenderTarget:!0,copy:function(t){return He.prototype.copy.call(this,t),this.samples=t.samples,this}});var ke=new Ne,Xe=new $e,Ye=new Ne(0,0,0),Ze=new Ne(1,1,1),Je=new Ne,Qe=new Ne,Ke=new Ne;function $e(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign($e.prototype,{isMatrix4:!0,set:function(t,e,i,n,r,o,a,s,q,l,h,c,u,p,d,m){var f=this.elements;return f[0]=t,f[4]=e,f[8]=i,f[12]=n,f[1]=r,f[5]=o,f[9]=a,f[13]=s,f[2]=q,f[6]=l,f[10]=h,f[14]=c,f[3]=u,f[7]=p,f[11]=d,f[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new $e).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(t){var e=this.elements,i=t.elements,n=1/ke.setFromMatrixColumn(t,0).length(),r=1/ke.setFromMatrixColumn(t,1).length(),o=1/ke.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,n=t.y,r=t.z,o=Math.cos(i),a=Math.sin(i),s=Math.cos(n),q=Math.sin(n),l=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){var c=o*l,u=o*h,p=a*l,d=a*h;e[0]=s*l,e[4]=-s*h,e[8]=q,e[1]=u+p*q,e[5]=c-d*q,e[9]=-a*s,e[2]=d-c*q,e[6]=p+u*q,e[10]=o*s}else if("YXZ"===t.order){var m=s*l,f=s*h,v=q*l,g=q*h;e[0]=m+g*a,e[4]=v*a-f,e[8]=o*q,e[1]=o*h,e[5]=o*l,e[9]=-a,e[2]=f*a-v,e[6]=g+m*a,e[10]=o*s}else if("ZXY"===t.order)m=s*l,f=s*h,v=q*l,g=q*h,e[0]=m-g*a,e[4]=-o*h,e[8]=v+f*a,e[1]=f+v*a,e[5]=o*l,e[9]=g-m*a,e[2]=-o*q,e[6]=a,e[10]=o*s;else if("ZYX"===t.order)c=o*l,u=o*h,p=a*l,d=a*h,e[0]=s*l,e[4]=p*q-u,e[8]=c*q+d,e[1]=s*h,e[5]=d*q+c,e[9]=u*q-p,e[2]=-q,e[6]=a*s,e[10]=o*s;else if("YZX"===t.order){var y=o*s,x=o*q,w=a*s,b=a*q;e[0]=s*l,e[4]=b-y*h,e[8]=w*h+x,e[1]=h,e[5]=o*l,e[9]=-a*l,e[2]=-q*l,e[6]=x*h+w,e[10]=y-b*h}else"XZY"===t.order&&(y=o*s,x=o*q,w=a*s,b=a*q,e[0]=s*l,e[4]=-h,e[8]=q*l,e[1]=y*h+b,e[5]=o*l,e[9]=x*h-w,e[2]=w*h-x,e[6]=a*l,e[10]=b*h+y);return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(Ye,t,Ze)},lookAt:function(t,e,i){var n=this.elements;return Ke.subVectors(t,e),0===Ke.lengthSq()&&(Ke.z=1),Ke.normalize(),Je.crossVectors(i,Ke),0===Je.lengthSq()&&(1===Math.abs(i.z)?Ke.x+=1e-4:Ke.z+=1e-4,Ke.normalize(),Je.crossVectors(i,Ke)),Je.normalize(),Qe.crossVectors(Ke,Je),n[0]=Je.x,n[4]=Qe.x,n[8]=Ke.x,n[1]=Je.y,n[5]=Qe.y,n[9]=Ke.y,n[2]=Je.z,n[6]=Qe.z,n[10]=Ke.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,o=i[0],a=i[4],s=i[8],q=i[12],l=i[1],h=i[5],c=i[9],u=i[13],p=i[2],d=i[6],m=i[10],f=i[14],v=i[3],g=i[7],y=i[11],x=i[15],w=n[0],b=n[4],_=n[8],M=n[12],S=n[1],E=n[5],T=n[9],A=n[13],L=n[2],P=n[6],z=n[10],R=n[14],C=n[3],O=n[7],I=n[11],N=n[15];return r[0]=o*w+a*S+s*L+q*C,r[4]=o*b+a*E+s*P+q*O,r[8]=o*_+a*T+s*z+q*I,r[12]=o*M+a*A+s*R+q*N,r[1]=l*w+h*S+c*L+u*C,r[5]=l*b+h*E+c*P+u*O,r[9]=l*_+h*T+c*z+u*I,r[13]=l*M+h*A+c*R+u*N,r[2]=p*w+d*S+m*L+f*C,r[6]=p*b+d*E+m*P+f*O,r[10]=p*_+d*T+m*z+f*I,r[14]=p*M+d*A+m*R+f*N,r[3]=v*w+g*S+y*L+x*C,r[7]=v*b+g*E+y*P+x*O,r[11]=v*_+g*T+y*z+x*I,r[15]=v*M+g*A+y*R+x*N,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(t){for(var e=0,i=t.count;e<i;e++)ke.x=t.getX(e),ke.y=t.getY(e),ke.z=t.getZ(e),ke.applyMatrix4(this),t.setXYZ(e,ke.x,ke.y,ke.z);return t},determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],o=t[1],a=t[5],s=t[9],q=t[13],l=t[2],h=t[6],c=t[10],u=t[14];return t[3]*(+r*s*h-n*q*h-r*a*c+i*q*c+n*a*u-i*s*u)+t[7]*(+e*s*u-e*q*c+r*o*c-n*o*u+n*q*l-r*s*l)+t[11]*(+e*q*h-e*a*u-r*o*h+i*o*u+r*a*l-i*q*l)+t[15]*(-n*a*l-e*s*h+e*a*c+n*o*h-i*o*c+i*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t,e,i){var n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this},getInverse:function(t,e){var i=this.elements,n=t.elements,r=n[0],o=n[1],a=n[2],s=n[3],q=n[4],l=n[5],h=n[6],c=n[7],u=n[8],p=n[9],d=n[10],m=n[11],f=n[12],v=n[13],g=n[14],y=n[15],x=p*g*c-v*d*c+v*h*m-l*g*m-p*h*y+l*d*y,w=f*d*c-u*g*c-f*h*m+q*g*m+u*h*y-q*d*y,b=u*v*c-f*p*c+f*l*m-q*v*m-u*l*y+q*p*y,_=f*p*h-u*v*h-f*l*d+q*v*d+u*l*g-q*p*g,M=r*x+o*w+a*b+s*_;if(0===M){var S="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(S);return console.warn(S),this.identity()}var E=1/M;return i[0]=x*E,i[1]=(v*d*s-p*g*s-v*a*m+o*g*m+p*a*y-o*d*y)*E,i[2]=(l*g*s-v*h*s+v*a*c-o*g*c-l*a*y+o*h*y)*E,i[3]=(p*h*s-l*d*s-p*a*c+o*d*c+l*a*m-o*h*m)*E,i[4]=w*E,i[5]=(u*g*s-f*d*s+f*a*m-r*g*m-u*a*y+r*d*y)*E,i[6]=(f*h*s-q*g*s-f*a*c+r*g*c+q*a*y-r*h*y)*E,i[7]=(q*d*s-u*h*s+u*a*c-r*d*c-q*a*m+r*h*m)*E,i[8]=b*E,i[9]=(f*p*s-u*v*s-f*o*m+r*v*m+u*o*y-r*p*y)*E,i[10]=(q*v*s-f*l*s+f*o*c-r*v*c-q*o*y+r*l*y)*E,i[11]=(u*l*s-q*p*s-u*o*c+r*p*c+q*o*m-r*l*m)*E,i[12]=_*E,i[13]=(u*v*a-f*p*a+f*o*d-r*v*d-u*o*g+r*p*g)*E,i[14]=(f*l*a-q*v*a-f*o*h+r*v*h+q*o*g-r*l*g)*E,i[15]=(q*p*a-u*l*a+u*o*h-r*p*h-q*o*d+r*l*d)*E,this},scale:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=1-i,o=t.x,a=t.y,s=t.z,q=r*o,l=r*a;return this.set(q*o+i,q*a-n*s,q*s+n*a,0,q*a+n*s,l*a+i,l*s-n*o,0,q*s-n*a,l*s+n*o,r*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){var n=this.elements,r=e._x,o=e._y,a=e._z,s=e._w,q=r+r,l=o+o,h=a+a,c=r*q,u=r*l,p=r*h,d=o*l,m=o*h,f=a*h,v=s*q,g=s*l,y=s*h,x=i.x,w=i.y,b=i.z;return n[0]=(1-(d+f))*x,n[1]=(u+y)*x,n[2]=(p-g)*x,n[3]=0,n[4]=(u-y)*w,n[5]=(1-(c+f))*w,n[6]=(m+v)*w,n[7]=0,n[8]=(p+g)*b,n[9]=(m-v)*b,n[10]=(1-(c+d))*b,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this},decompose:function(t,e,i){var n=this.elements,r=ke.set(n[0],n[1],n[2]).length(),o=ke.set(n[4],n[5],n[6]).length(),a=ke.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],Xe.copy(this);var s=1/r,q=1/o,l=1/a;return Xe.elements[0]*=s,Xe.elements[1]*=s,Xe.elements[2]*=s,Xe.elements[4]*=q,Xe.elements[5]*=q,Xe.elements[6]*=q,Xe.elements[8]*=l,Xe.elements[9]*=l,Xe.elements[10]*=l,e.setFromRotationMatrix(Xe),i.x=r,i.y=o,i.z=a,this},makePerspective:function(t,e,i,n,r,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var a=this.elements,s=2*r/(e-t),q=2*r/(i-n),l=(e+t)/(e-t),h=(i+n)/(i-n),c=-(o+r)/(o-r),u=-2*o*r/(o-r);return a[0]=s,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=q,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=c,a[14]=u,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(t,e,i,n,r,o){var a=this.elements,s=1/(e-t),q=1/(i-n),l=1/(o-r),h=(e+t)*s,c=(i+n)*q,u=(o+r)*l;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*q,a[9]=0,a[13]=-c,a[2]=0,a[6]=0,a[10]=-2*l,a[14]=-u,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}});var ti=new $e,ei=new Ce;function ii(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||ii.DefaultOrder}function ni(){this.mask=1}ii.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ii.DefaultOrder="XYZ",Object.defineProperties(ii.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}}),Object.assign(ii.prototype,{isEuler:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=ze.clamp,r=t.elements,o=r[0],a=r[4],s=r[8],q=r[1],l=r[5],h=r[9],c=r[2],u=r[6],p=r[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(u,l),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(s,p),this._z=Math.atan2(q,l)):(this._y=Math.atan2(-c,o),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,p),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(q,o))):"ZYX"===e?(this._y=Math.asin(-n(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,p),this._z=Math.atan2(q,o)):(this._x=0,this._z=Math.atan2(-a,l))):"YZX"===e?(this._z=Math.asin(n(q,-1,1)),Math.abs(q)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-c,o)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===e?(this._z=Math.asin(-n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-h,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==i&&this._onChangeCallback(),this},setFromQuaternion:function(t,e,i){return ti.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ti,e,i)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(t){return ei.setFromEuler(this),this.setFromQuaternion(ei,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new Ne(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}}),Object.assign(ni.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}});var ri=0,oi=new Ne,ai=new Ce,si=new $e,qi=new Ne,li=new Ne,hi=new Ne,ci=new Ce,ui=new Ne(1,0,0),pi=new Ne(0,1,0),di=new Ne(0,0,1),mi={type:"added"},fi={type:"removed"};function vi(){Object.defineProperty(this,"id",{value:ri++}),this.uuid=ze.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=vi.DefaultUp.clone();var t=new Ne,e=new ii,i=new Ce,n=new Ne(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new $e},normalMatrix:{value:new Fe}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=vi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ni,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function gi(){vi.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}vi.DefaultUp=new Ne(0,1,0),vi.DefaultMatrixAutoUpdate=!0,vi.prototype=Object.assign(Object.create(Ae.prototype),{constructor:vi,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return ai.setFromAxisAngle(t,e),this.quaternion.multiply(ai),this},rotateOnWorldAxis:function(t,e){return ai.setFromAxisAngle(t,e),this.quaternion.premultiply(ai),this},rotateX:function(t){return this.rotateOnAxis(ui,t)},rotateY:function(t){return this.rotateOnAxis(pi,t)},rotateZ:function(t){return this.rotateOnAxis(di,t)},translateOnAxis:function(t,e){return oi.copy(t).applyQuaternion(this.quaternion),this.position.add(oi.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(ui,t)},translateY:function(t){return this.translateOnAxis(pi,t)},translateZ:function(t){return this.translateOnAxis(di,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(si.getInverse(this.matrixWorld))},lookAt:function(t,e,i){t.isVector3?qi.copy(t):qi.set(t,e,i);var n=this.parent;this.updateWorldMatrix(!0,!1),li.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?si.lookAt(li,qi,this.up):si.lookAt(qi,li,this.up),this.quaternion.setFromRotationMatrix(si),n&&(si.extractRotation(n.matrixWorld),ai.setFromRotationMatrix(si),this.quaternion.premultiply(ai.inverse()))},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(mi)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var i=this.children.indexOf(t);return-1!==i&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(fi)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),si.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),si.multiply(t.parent.matrixWorld)),t.applyMatrix(si),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new Ne),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new Ce),this.updateMatrixWorld(!0),this.matrixWorld.decompose(li,t,hi),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new Ne),this.updateMatrixWorld(!0),this.matrixWorld.decompose(li,ci,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new Ne),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var n=this.children,r=0,o=n.length;r<o;r++)n[r].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isMesh&&this.drawMode!==ce&&(n.drawMode=this.drawMode),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var a=o.shapes;if(Array.isArray(a))for(var s=0,q=a.length;s<q;s++){var l=a[s];r(t.shapes,l)}else r(t.shapes,a)}}if(void 0!==this.material)if(Array.isArray(this.material)){var h=[];for(s=0,q=this.material.length;s<q;s++)h.push(r(t.materials,this.material[s]));n.material=h}else n.material=r(t.materials,this.material);if(this.children.length>0)for(n.children=[],s=0;s<this.children.length;s++)n.children.push(this.children[s].toJSON(t).object);if(e){var c=m(t.geometries),u=m(t.materials),p=m(t.textures),d=m(t.images);a=m(t.shapes),c.length>0&&(i.geometries=c),u.length>0&&(i.materials=u),p.length>0&&(i.textures=p),d.length>0&&(i.images=d),a.length>0&&(i.shapes=a)}return i.object=n,i;function m(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var i=0;i<t.children.length;i++){var n=t.children[i];this.add(n.clone())}return this}}),gi.prototype=Object.assign(Object.create(vi.prototype),{constructor:gi,isScene:!0,copy:function(t,e){return vi.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});var yi=[new Ne,new Ne,new Ne,new Ne,new Ne,new Ne,new Ne,new Ne],xi=new Ne,wi=new Ne,bi=new Ne,_i=new Ne,Mi=new Ne,Si=new Ne,Ei=new Ne,Ti=new Ne,Ai=new Ne,Li=new Ne,Pi=new Ne;function zi(t,e){this.min=void 0!==t?t:new Ne(1/0,1/0,1/0),this.max=void 0!==e?e:new Ne(-1/0,-1/0,-1/0)}function Ri(t,e,i,n,r){var o,a;for(o=0,a=t.length-3;o<=a;o+=3){Pi.fromArray(t,o);var s=r.x*Math.abs(Pi.x)+r.y*Math.abs(Pi.y)+r.z*Math.abs(Pi.z),q=e.dot(Pi),l=i.dot(Pi),h=n.dot(Pi);if(Math.max(-Math.max(q,l,h),Math.min(q,l,h))>s)return!1}return!0}Object.assign(zi.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,o=-1/0,a=-1/0,s=0,q=t.length;s<q;s+=3){var l=t[s],h=t[s+1],c=t[s+2];l<e&&(e=l),h<i&&(i=h),c<n&&(n=c),l>r&&(r=l),h>o&&(o=h),c>a&&(a=c)}return this.min.set(e,i,n),this.max.set(r,o,a),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,o=-1/0,a=-1/0,s=0,q=t.count;s<q;s++){var l=t.getX(s),h=t.getY(s),c=t.getZ(s);l<e&&(e=l),h<i&&(i=h),c<n&&(n=c),l>r&&(r=l),h>o&&(o=h),c>a&&(a=c)}return this.min.set(e,i,n),this.max.set(r,o,a),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var i=xi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new Ne),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new Ne),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){var e,i;t.updateWorldMatrix(!1,!1);var n=t.geometry;if(void 0!==n)if(n.isGeometry){var r=n.vertices;for(e=0,i=r.length;e<i;e++)xi.copy(r[e]),xi.applyMatrix4(t.matrixWorld),this.expandByPoint(xi)}else if(n.isBufferGeometry){var o=n.attributes.position;if(void 0!==o)for(e=0,i=o.count;e<i;e++)xi.fromBufferAttribute(o,e).applyMatrix4(t.matrixWorld),this.expandByPoint(xi)}var a=t.children;for(e=0,i=a.length;e<i;e++)this.expandByObject(a[e]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new Ne),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,xi),xi.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(Ti),Ai.subVectors(this.max,Ti),wi.subVectors(t.a,Ti),bi.subVectors(t.b,Ti),_i.subVectors(t.c,Ti),Mi.subVectors(bi,wi),Si.subVectors(_i,bi),Ei.subVectors(wi,_i);var e=[0,-Mi.z,Mi.y,0,-Si.z,Si.y,0,-Ei.z,Ei.y,Mi.z,0,-Mi.x,Si.z,0,-Si.x,Ei.z,0,-Ei.x,-Mi.y,Mi.x,0,-Si.y,Si.x,0,-Ei.y,Ei.x,0];return!!Ri(e,wi,bi,_i,Ai)&&!!Ri(e=[1,0,0,0,1,0,0,0,1],wi,bi,_i,Ai)&&(Li.crossVectors(Mi,Si),Ri(e=[Li.x,Li.y,Li.z],wi,bi,_i,Ai))},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new Ne),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return xi.copy(t).clamp(this.min,this.max).sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(xi).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()||(yi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),yi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),yi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),yi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),yi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),yi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),yi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),yi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(yi)),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var Ci=new zi;function Oi(t,e){this.center=void 0!==t?t:new Ne,this.radius=void 0!==e?e:0}Object.assign(Oi.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){var i=this.center;void 0!==e?i.copy(e):Ci.setFromPoints(t).getCenter(i);for(var n=0,r=0,o=t.length;r<o;r++)n=Math.max(n,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new Ne),e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new zi),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});var Ii=new Ne,Ni=new Ne,Bi=new Ne,Di=new Ne,Fi=new Ne,Vi=new Ne,Ui=new Ne;function ji(t,e){this.origin=void 0!==t?t:new Ne,this.direction=void 0!==e?e:new Ne}Object.assign(ji.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new Ne),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,Ii)),this},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new Ne),e.subVectors(t,this.origin);var i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){var e=Ii.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ii.copy(this.direction).multiplyScalar(e).add(this.origin),Ii.distanceToSquared(t))},distanceSqToSegment:function(t,e,i,n){Ni.copy(t).add(e).multiplyScalar(.5),Bi.copy(e).sub(t).normalize(),Di.copy(this.origin).sub(Ni);var r,o,a,s,q=.5*t.distanceTo(e),l=-this.direction.dot(Bi),h=Di.dot(this.direction),c=-Di.dot(Bi),u=Di.lengthSq(),p=Math.abs(1-l*l);if(p>0)if(o=l*h-c,s=q*p,(r=l*c-h)>=0)if(o>=-s)if(o<=s){var d=1/p;a=(r*=d)*(r+l*(o*=d)+2*h)+o*(l*r+o+2*c)+u}else o=q,a=-(r=Math.max(0,-(l*o+h)))*r+o*(o+2*c)+u;else o=-q,a=-(r=Math.max(0,-(l*o+h)))*r+o*(o+2*c)+u;else o<=-s?a=-(r=Math.max(0,-(-l*q+h)))*r+(o=r>0?-q:Math.min(Math.max(-q,-c),q))*(o+2*c)+u:o<=s?(r=0,a=(o=Math.min(Math.max(-q,-c),q))*(o+2*c)+u):a=-(r=Math.max(0,-(l*q+h)))*r+(o=r>0?q:Math.min(Math.max(-q,-c),q))*(o+2*c)+u;else o=l>0?-q:q,a=-(r=Math.max(0,-(l*o+h)))*r+o*(o+2*c)+u;return i&&i.copy(this.direction).multiplyScalar(r).add(this.origin),n&&n.copy(Bi).multiplyScalar(o).add(Ni),a},intersectSphere:function(t,e){Ii.subVectors(t.center,this.origin);var i=Ii.dot(this.direction),n=Ii.dot(Ii)-i*i,r=t.radius*t.radius;if(n>r)return null;var o=Math.sqrt(r-n),a=i-o,s=i+o;return a<0&&s<0?null:a<0?this.at(s,e):this.at(a,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var i,n,r,o,a,s,q=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,c=this.origin;return q>=0?(i=(t.min.x-c.x)*q,n=(t.max.x-c.x)*q):(i=(t.max.x-c.x)*q,n=(t.min.x-c.x)*q),l>=0?(r=(t.min.y-c.y)*l,o=(t.max.y-c.y)*l):(r=(t.max.y-c.y)*l,o=(t.min.y-c.y)*l),i>o||r>n?null:((r>i||i!=i)&&(i=r),(o<n||n!=n)&&(n=o),h>=0?(a=(t.min.z-c.z)*h,s=(t.max.z-c.z)*h):(a=(t.max.z-c.z)*h,s=(t.min.z-c.z)*h),i>s||a>n?null:((a>i||i!=i)&&(i=a),(s<n||n!=n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))},intersectsBox:function(t){return null!==this.intersectBox(t,Ii)},intersectTriangle:function(t,e,i,n,r){Fi.subVectors(e,t),Vi.subVectors(i,t),Ui.crossVectors(Fi,Vi);var o,a=this.direction.dot(Ui);if(a>0){if(n)return null;o=1}else{if(!(a<0))return null;o=-1,a=-a}Di.subVectors(this.origin,t);var s=o*this.direction.dot(Vi.crossVectors(Di,Vi));if(s<0)return null;var q=o*this.direction.dot(Fi.cross(Di));if(q<0)return null;if(s+q>a)return null;var l=-o*Di.dot(Ui);return l<0?null:this.at(l/a,r)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});var Gi=new Ne,Hi=new Ne,Wi=new Fe;function ki(t,e){this.normal=void 0!==t?t:new Ne(1,0,0),this.constant=void 0!==e?e:0}Object.assign(ki.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,i){var n=Gi.subVectors(i,e).cross(Hi.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new Ne),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new Ne);var i=t.delta(Gi),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;var r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?void 0:e.copy(i).multiplyScalar(r).add(t.start)},intersectsLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new Ne),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){var i=e||Wi.getNormalMatrix(t),n=this.coplanarPoint(Gi).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});var Xi=new Ne,Yi=new Ne,Zi=new Ne,Ji=new Ne,Qi=new Ne,Ki=new Ne,$i=new Ne,tn=new Ne,en=new Ne,nn=new Ne;function rn(t,e,i){this.a=void 0!==t?t:new Ne,this.b=void 0!==e?e:new Ne,this.c=void 0!==i?i:new Ne}Object.assign(rn,{getNormal:function(t,e,i,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new Ne),n.subVectors(i,e),Xi.subVectors(t,e),n.cross(Xi);var r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)},getBarycoord:function(t,e,i,n,r){Xi.subVectors(n,e),Yi.subVectors(i,e),Zi.subVectors(t,e);var o=Xi.dot(Xi),a=Xi.dot(Yi),s=Xi.dot(Zi),q=Yi.dot(Yi),l=Yi.dot(Zi),h=o*q-a*a;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new Ne),0===h)return r.set(-2,-1,-1);var c=1/h,u=(q*s-a*l)*c,p=(o*l-a*s)*c;return r.set(1-u-p,p,u)},containsPoint:function(t,e,i,n){return rn.getBarycoord(t,e,i,n,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1},getUV:function(t,e,i,n,r,o,a,s){return this.getBarycoord(t,e,i,n,Ji),s.set(0,0),s.addScaledVector(r,Ji.x),s.addScaledVector(o,Ji.y),s.addScaledVector(a,Ji.z),s},isFrontFacing:function(t,e,i,n){return Xi.subVectors(i,e),Yi.subVectors(t,e),Xi.cross(Yi).dot(n)<0}}),Object.assign(rn.prototype,{set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return Xi.subVectors(this.c,this.b),Yi.subVectors(this.a,this.b),.5*Xi.cross(Yi).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new Ne),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return rn.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new ki),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return rn.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,i,n,r){return rn.getUV(t,this.a,this.b,this.c,e,i,n,r)},containsPoint:function(t){return rn.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return rn.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new Ne);var i,n,r=this.a,o=this.b,a=this.c;Qi.subVectors(o,r),Ki.subVectors(a,r),tn.subVectors(t,r);var s=Qi.dot(tn),q=Ki.dot(tn);if(s<=0&&q<=0)return e.copy(r);en.subVectors(t,o);var l=Qi.dot(en),h=Ki.dot(en);if(l>=0&&h<=l)return e.copy(o);var c=s*h-l*q;if(c<=0&&s>=0&&l<=0)return i=s/(s-l),e.copy(r).addScaledVector(Qi,i);nn.subVectors(t,a);var u=Qi.dot(nn),p=Ki.dot(nn);if(p>=0&&u<=p)return e.copy(a);var d=u*q-s*p;if(d<=0&&q>=0&&p<=0)return n=q/(q-p),e.copy(r).addScaledVector(Ki,n);var m=l*p-u*h;if(m<=0&&h-l>=0&&u-p>=0)return $i.subVectors(a,o),n=(h-l)/(h-l+(u-p)),e.copy(o).addScaledVector($i,n);var f=1/(m+d+c);return i=d*f,n=c*f,e.copy(r).addScaledVector(Qi,i).addScaledVector(Ki,n)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});var on={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},an={h:0,s:0,l:0},sn={h:0,s:0,l:0};function qn(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}function ln(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function hn(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function cn(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function un(t,e,i,n,r,o){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new Ne,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new qn,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==o?o:0}Object.assign(qn.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(t,e,i){if(t=ze.euclideanModulo(t,1),e=ze.clamp(e,0,1),i=ze.clamp(i,0,1),0===e)this.r=this.g=this.b=i;else{var n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=ln(r,n,t+1/3),this.g=ln(r,n,t),this.b=ln(r,n,t-1/3)}return this},setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var n,r=i[1],o=i[2];switch(r){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var a=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,q=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(a,s,q)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){var l=i[1],h=l.length;if(3===h)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this},setColorName:function(t){var e=on[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=hn(t.r),this.g=hn(t.g),this.b=hn(t.b),this},copyLinearToSRGB:function(t){return this.r=cn(t.r),this.g=cn(t.g),this.b=cn(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e,i,n=this.r,r=this.g,o=this.b,a=Math.max(n,r,o),s=Math.min(n,r,o),q=(s+a)/2;if(s===a)e=0,i=0;else{var l=a-s;switch(i=q<=.5?l/(a+s):l/(2-a-s),a){case n:e=(r-o)/l+(r<o?6:0);break;case r:e=(o-n)/l+2;break;case o:e=(n-r)/l+4}e/=6}return t.h=e,t.s=i,t.l=q,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){return this.getHSL(an),an.h+=t,an.s+=e,an.l+=i,this.setHSL(an.h,an.s,an.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(an),t.getHSL(sn);var i=ze.lerp(an.h,sn.h,e),n=ze.lerp(an.s,sn.s,e),r=ze.lerp(an.l,sn.l,e);return this.setHSL(i,n,r),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}}),qn.NAMES=on,Object.assign(un.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var pn=0;function dn(){Object.defineProperty(this,"id",{value:pn++}),this.uuid=ze.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=f,this.side=h,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=p,this.opacity=1,this.transparent=!1,this.blendSrc=P,this.blendDst=z,this.blendEquation=w,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=V,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Se,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Me,this.stencilZFail=Me,this.stencilZPass=Me,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.needsUpdate=!0}function mn(t){dn.call(this),this.type="MeshBasicMaterial",this.color=new qn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=W,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}function fn(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=Ee,this.updateRange={offset:0,count:-1},this.version=0}function vn(t,e,i){fn.call(this,new Int8Array(t),e,i)}function gn(t,e,i){fn.call(this,new Uint8Array(t),e,i)}function yn(t,e,i){fn.call(this,new Uint8ClampedArray(t),e,i)}function xn(t,e,i){fn.call(this,new Int16Array(t),e,i)}function wn(t,e,i){fn.call(this,new Uint16Array(t),e,i)}function bn(t,e,i){fn.call(this,new Int32Array(t),e,i)}function _n(t,e,i){fn.call(this,new Uint32Array(t),e,i)}function Mn(t,e,i){fn.call(this,new Float32Array(t),e,i)}function Sn(t,e,i){fn.call(this,new Float64Array(t),e,i)}function En(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Tn(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}dn.prototype=Object.assign(Object.create(Ae.prototype),{constructor:dn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i)if("shading"!==e){var n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});var i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(i.size=this.size),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==f&&(i.blending=this.blending),!0===this.flatShading&&(i.flatShading=this.flatShading),this.side!==h&&(i.side=this.side),this.vertexColors!==p&&(i.vertexColors=this.vertexColors),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){var r=n(t.textures),o=n(t.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var e=t.clippingPlanes,i=null;if(null!==e){var n=e.length;i=new Array(n);for(var r=0;r!==n;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),mn.prototype=Object.create(dn.prototype),mn.prototype.constructor=mn,mn.prototype.isMeshBasicMaterial=!0,mn.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},Object.defineProperty(fn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(fn.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),o=new qn),e[i++]=o.r,e[i++]=o.g,e[i++]=o.b}return this},copyVector2sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),o=new Re),e[i++]=o.x,e[i++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),o=new Ne),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),o=new Ge),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z,e[i++]=o.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),vn.prototype=Object.create(fn.prototype),vn.prototype.constructor=vn,gn.prototype=Object.create(fn.prototype),gn.prototype.constructor=gn,yn.prototype=Object.create(fn.prototype),yn.prototype.constructor=yn,xn.prototype=Object.create(fn.prototype),xn.prototype.constructor=xn,wn.prototype=Object.create(fn.prototype),wn.prototype.constructor=wn,bn.prototype=Object.create(fn.prototype),bn.prototype.constructor=bn,_n.prototype=Object.create(fn.prototype),_n.prototype.constructor=_n,Mn.prototype=Object.create(fn.prototype),Mn.prototype.constructor=Mn,Sn.prototype=Object.create(fn.prototype),Sn.prototype.constructor=Sn,Object.assign(En.prototype,{computeGroups:function(t){for(var e,i=[],n=void 0,r=t.faces,o=0;o<r.length;o++){var a=r[o];a.materialIndex!==n&&(n=a.materialIndex,void 0!==e&&(e.count=3*o-e.start,i.push(e)),e={start:3*o,materialIndex:n})}void 0!==e&&(e.count=3*o-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,i=t.faces,n=t.vertices,r=t.faceVertexUvs,o=r[0]&&r[0].length>0,a=r[1]&&r[1].length>0,s=t.morphTargets,q=s.length;if(q>0){e=[];for(var l=0;l<q;l++)e[l]={name:s[l].name,data:[]};this.morphTargets.position=e}var h,c=t.morphNormals,u=c.length;if(u>0){for(h=[],l=0;l<u;l++)h[l]={name:c[l].name,data:[]};this.morphTargets.normal=h}var p=t.skinIndices,d=t.skinWeights,m=p.length===n.length,f=d.length===n.length;for(n.length>0&&0===i.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported."),l=0;l<i.length;l++){var v=i[l];this.vertices.push(n[v.a],n[v.b],n[v.c]);var g=v.vertexNormals;if(3===g.length)this.normals.push(g[0],g[1],g[2]);else{var y=v.normal;this.normals.push(y,y,y)}var x,w=v.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var b=v.color;this.colors.push(b,b,b)}!0===o&&(void 0!==(x=r[0][l])?this.uvs.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new Re,new Re,new Re))),!0===a&&(void 0!==(x=r[1][l])?this.uvs2.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new Re,new Re,new Re)));for(var _=0;_<q;_++){var M=s[_].vertices;e[_].data.push(M[v.a],M[v.b],M[v.c])}for(_=0;_<u;_++){var S=c[_].vertexNormals[l];h[_].data.push(S.a,S.b,S.c)}m&&this.skinIndices.push(p[v.a],p[v.b],p[v.c]),f&&this.skinWeights.push(d[v.a],d[v.b],d[v.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});var An=1,Ln=new $e,Pn=new vi,zn=new Ne,Rn=new zi,Cn=new zi,On=new Ne;function In(){Object.defineProperty(this,"id",{value:An+=2}),this.uuid=ze.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}In.prototype=Object.assign(Object.create(Ae.prototype),{constructor:In,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Tn(t)>65535?_n:wn)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;void 0!==i&&((new Fe).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0);var n=this.attributes.tangent;return void 0!==n&&((new Fe).getNormalMatrix(t).applyToBufferAttribute(n),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Ln.makeRotationX(t),this.applyMatrix(Ln),this},rotateY:function(t){return Ln.makeRotationY(t),this.applyMatrix(Ln),this},rotateZ:function(t){return Ln.makeRotationZ(t),this.applyMatrix(Ln),this},translate:function(t,e,i){return Ln.makeTranslation(t,e,i),this.applyMatrix(Ln),this},scale:function(t,e,i){return Ln.makeScale(t,e,i),this.applyMatrix(Ln),this},lookAt:function(t){return Pn.lookAt(t),Pn.updateMatrix(),this.applyMatrix(Pn.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(zn).negate(),this.translate(zn.x,zn.y,zn.z),this},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var i=new Mn(3*e.vertices.length,3),n=new Mn(3*e.colors.length,3);if(this.setAttribute("position",i.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new Mn(e.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Mn(e,3)),this},updateFromObject:function(t){var e,i=t.geometry;if(t.isMesh){var n=i.__directGeometry;if(!0===i.elementsNeedUpdate&&(n=void 0,i.elementsNeedUpdate=!1),void 0===n)return this.fromGeometry(i);n.verticesNeedUpdate=i.verticesNeedUpdate,n.normalsNeedUpdate=i.normalsNeedUpdate,n.colorsNeedUpdate=i.colorsNeedUpdate,n.uvsNeedUpdate=i.uvsNeedUpdate,n.groupsNeedUpdate=i.groupsNeedUpdate,i.verticesNeedUpdate=!1,i.normalsNeedUpdate=!1,i.colorsNeedUpdate=!1,i.uvsNeedUpdate=!1,i.groupsNeedUpdate=!1,i=n}return!0===i.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(i.vertices),e.needsUpdate=!0),i.verticesNeedUpdate=!1),!0===i.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(i.normals),e.needsUpdate=!0),i.normalsNeedUpdate=!1),!0===i.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(i.colors),e.needsUpdate=!0),i.colorsNeedUpdate=!1),i.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(i.uvs),e.needsUpdate=!0),i.uvsNeedUpdate=!1),i.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(i.lineDistances),e.needsUpdate=!0),i.lineDistancesNeedUpdate=!1),i.groupsNeedUpdate&&(i.computeGroups(t.geometry),this.groups=i.groups,i.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new En).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new fn(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.setAttribute("normal",new fn(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.setAttribute("color",new fn(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new fn(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var o=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new fn(o,2).copyVector2sArray(t.uvs2))}for(var a in this.groups=t.groups,t.morphTargets){for(var s=[],q=t.morphTargets[a],l=0,h=q.length;l<h;l++){var c=q[l],u=new Mn(3*c.data.length,3);u.name=c.name,s.push(u.copyVector3sArray(c.data))}this.morphAttributes[a]=s}if(t.skinIndices.length>0){var p=new Mn(4*t.skinIndices.length,4);this.setAttribute("skinIndex",p.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var d=new Mn(4*t.skinWeights.length,4);this.setAttribute("skinWeight",d.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new zi);var t=this.attributes.position,e=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(var i=0,n=e.length;i<n;i++){var r=e[i];Rn.setFromBufferAttribute(r),this.boundingBox.expandByPoint(Rn.min),this.boundingBox.expandByPoint(Rn.max)}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Oi);var t=this.attributes.position,e=this.morphAttributes.position;if(t){var i=this.boundingSphere.center;if(Rn.setFromBufferAttribute(t),e)for(var n=0,r=e.length;n<r;n++){var o=e[n];Cn.setFromBufferAttribute(o),Rn.expandByPoint(Cn.min),Rn.expandByPoint(Cn.max)}Rn.getCenter(i);var a=0;for(n=0,r=t.count;n<r;n++)On.fromBufferAttribute(t,n),a=Math.max(a,i.distanceToSquared(On));if(e)for(n=0,r=e.length;n<r;n++)for(var s=0,q=(o=e[n]).count;s<q;s++)On.fromBufferAttribute(o,s),a=Math.max(a,i.distanceToSquared(On));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var i=e.position.array;if(void 0===e.normal)this.setAttribute("normal",new fn(new Float32Array(i.length),3));else for(var n=e.normal.array,r=0,o=n.length;r<o;r++)n[r]=0;var a,s,q,l=e.normal.array,h=new Ne,c=new Ne,u=new Ne,p=new Ne,d=new Ne;if(t){var m=t.array;for(r=0,o=t.count;r<o;r+=3)a=3*m[r+0],s=3*m[r+1],q=3*m[r+2],h.fromArray(i,a),c.fromArray(i,s),u.fromArray(i,q),p.subVectors(u,c),d.subVectors(h,c),p.cross(d),l[a]+=p.x,l[a+1]+=p.y,l[a+2]+=p.z,l[s]+=p.x,l[s+1]+=p.y,l[s+2]+=p.z,l[q]+=p.x,l[q+1]+=p.y,l[q+2]+=p.z}else for(r=0,o=i.length;r<o;r+=9)h.fromArray(i,r),c.fromArray(i,r+3),u.fromArray(i,r+6),p.subVectors(u,c),d.subVectors(h,c),p.cross(d),l[r]=p.x,l[r+1]=p.y,l[r+2]=p.z,l[r+3]=p.x,l[r+4]=p.y,l[r+5]=p.z,l[r+6]=p.x,l[r+7]=p.y,l[r+8]=p.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var i=this.attributes;for(var n in i)if(void 0!==t.attributes[n])for(var r=i[n].array,o=t.attributes[n],a=o.array,s=o.itemSize*e,q=Math.min(a.length,r.length-s),l=0,h=s;l<q;l++,h++)r[h]=a[l];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){for(var t=this.attributes.normal,e=0,i=t.count;e<i;e++)On.x=t.getX(e),On.y=t.getY(e),On.z=t.getZ(e),On.normalize(),t.setXYZ(e,On.x,On.y,On.z)},toNonIndexed:function(){function t(t,e){for(var i=t.array,n=t.itemSize,r=new i.constructor(e.length*n),o=0,a=0,s=0,q=e.length;s<q;s++){o=e[s]*n;for(var l=0;l<n;l++)r[a++]=i[o++]}return new fn(r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new In,i=this.index.array,n=this.attributes;for(var r in n){var o=t(n[r],i);e.setAttribute(r,o)}var a=this.morphAttributes;for(r in a){for(var s=[],q=a[r],l=0,h=q.length;l<h;l++)o=t(q[l],i),s.push(o);e.morphAttributes[r]=s}for(var c=this.groups,u=(l=0,c.length);l<u;l++){var p=c[l];e.addGroup(p.start,p.count,p.materialIndex)}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;null!==n&&(t.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});var r=this.attributes;for(var i in r){var o=(u=r[i]).toJSON();""!==u.name&&(o.name=u.name),t.data.attributes[i]=o}var a={},s=!1;for(var i in this.morphAttributes){for(var q=this.morphAttributes[i],l=[],h=0,c=q.length;h<c;h++){var u;o=(u=q[h]).toJSON(),""!==u.name&&(o.name=u.name),l.push(o)}l.length>0&&(a[i]=l,s=!0)}s&&(t.data.morphAttributes=a);var p=this.groups;p.length>0&&(t.data.groups=JSON.parse(JSON.stringify(p)));var d=this.boundingSphere;return null!==d&&(t.data.boundingSphere={center:d.center.toArray(),radius:d.radius}),t},clone:function(){return(new In).copy(this)},copy:function(t){var e,i,n;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;null!==r&&this.setIndex(r.clone());var o=t.attributes;for(e in o){var a=o[e];this.setAttribute(e,a.clone())}var s=t.morphAttributes;for(e in s){var q=[],l=s[e];for(i=0,n=l.length;i<n;i++)q.push(l[i].clone());this.morphAttributes[e]=q}var h=t.groups;for(i=0,n=h.length;i<n;i++){var c=h[i];this.addGroup(c.start,c.count,c.materialIndex)}var u=t.boundingBox;null!==u&&(this.boundingBox=u.clone());var p=t.boundingSphere;return null!==p&&(this.boundingSphere=p.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var Nn=new $e,Bn=new ji,Dn=new Oi,Fn=new Ne,Vn=new Ne,Un=new Ne,jn=new Ne,Gn=new Ne,Hn=new Ne,Wn=new Ne,kn=new Ne,Xn=new Ne,Yn=new Re,Zn=new Re,Jn=new Re,Qn=new Ne,Kn=new Ne;function $n(t,e){vi.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new In,this.material=void 0!==e?e:new mn({color:16777215*Math.random()}),this.drawMode=ce,this.updateMorphTargets()}function tr(t,e,i,n,r,o,a,s){if(null===(e.side===c?n.intersectTriangle(a,o,r,!0,s):n.intersectTriangle(r,o,a,e.side!==u,s)))return null;Kn.copy(s),Kn.applyMatrix4(t.matrixWorld);var q=i.ray.origin.distanceTo(Kn);return q<i.near||q>i.far?null:{distance:q,point:Kn.clone(),object:t}}function er(t,e,i,n,r,o,a,s,q,l,h){Fn.fromBufferAttribute(r,q),Vn.fromBufferAttribute(r,l),Un.fromBufferAttribute(r,h);var c=t.morphTargetInfluences;if(e.morphTargets&&o&&c){Wn.set(0,0,0),kn.set(0,0,0),Xn.set(0,0,0);for(var u=0,p=o.length;u<p;u++){var d=c[u],m=o[u];0!==d&&(jn.fromBufferAttribute(m,q),Gn.fromBufferAttribute(m,l),Hn.fromBufferAttribute(m,h),Wn.addScaledVector(jn.sub(Fn),d),kn.addScaledVector(Gn.sub(Vn),d),Xn.addScaledVector(Hn.sub(Un),d))}Fn.add(Wn),Vn.add(kn),Un.add(Xn)}var f=tr(t,e,i,n,Fn,Vn,Un,Qn);if(f){a&&(Yn.fromBufferAttribute(a,q),Zn.fromBufferAttribute(a,l),Jn.fromBufferAttribute(a,h),f.uv=rn.getUV(Qn,Fn,Vn,Un,Yn,Zn,Jn,new Re)),s&&(Yn.fromBufferAttribute(s,q),Zn.fromBufferAttribute(s,l),Jn.fromBufferAttribute(s,h),f.uv2=rn.getUV(Qn,Fn,Vn,Un,Yn,Zn,Jn,new Re));var v=new un(q,l,h);rn.getNormal(Fn,Vn,Un,v.normal),f.face=v}return f}$n.prototype=Object.assign(Object.create(vi.prototype),{constructor:$n,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return vi.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,o=Object.keys(r);if(o.length>0){var a=r[o[0]];if(void 0!==a)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=a.length;t<e;t++)i=a[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){var i,n=this.geometry,r=this.material,o=this.matrixWorld;if(void 0!==r&&(null===n.boundingSphere&&n.computeBoundingSphere(),Dn.copy(n.boundingSphere),Dn.applyMatrix4(o),!1!==t.ray.intersectsSphere(Dn)&&(Nn.getInverse(o),Bn.copy(t.ray).applyMatrix4(Nn),null===n.boundingBox||!1!==Bn.intersectsBox(n.boundingBox))))if(this.drawMode===ce){if(n.isBufferGeometry){var a,s,q,l,h,c,u,p,d,m=n.index,f=n.attributes.position,v=n.morphAttributes.position,g=n.attributes.uv,y=n.attributes.uv2,x=n.groups,w=n.drawRange;if(null!==m)if(Array.isArray(r))for(l=0,c=x.length;l<c;l++)for(d=r[(p=x[l]).materialIndex],h=Math.max(p.start,w.start),u=Math.min(p.start+p.count,w.start+w.count);h<u;h+=3)a=m.getX(h),s=m.getX(h+1),q=m.getX(h+2),(i=er(this,d,t,Bn,f,v,g,y,a,s,q))&&(i.faceIndex=Math.floor(h/3),i.face.materialIndex=p.materialIndex,e.push(i));else for(l=Math.max(0,w.start),c=Math.min(m.count,w.start+w.count);l<c;l+=3)a=m.getX(l),s=m.getX(l+1),q=m.getX(l+2),(i=er(this,r,t,Bn,f,v,g,y,a,s,q))&&(i.faceIndex=Math.floor(l/3),e.push(i));else if(void 0!==f)if(Array.isArray(r))for(l=0,c=x.length;l<c;l++)for(d=r[(p=x[l]).materialIndex],h=Math.max(p.start,w.start),u=Math.min(p.start+p.count,w.start+w.count);h<u;h+=3)(i=er(this,d,t,Bn,f,v,g,y,a=h,s=h+1,q=h+2))&&(i.faceIndex=Math.floor(h/3),i.face.materialIndex=p.materialIndex,e.push(i));else for(l=Math.max(0,w.start),c=Math.min(f.count,w.start+w.count);l<c;l+=3)(i=er(this,r,t,Bn,f,v,g,y,a=l,s=l+1,q=l+2))&&(i.faceIndex=Math.floor(l/3),e.push(i))}else if(n.isGeometry){var b,_,M,S,E=Array.isArray(r),T=n.vertices,A=n.faces,L=n.faceVertexUvs[0];L.length>0&&(S=L);for(var P=0,z=A.length;P<z;P++){var R=A[P],C=E?r[R.materialIndex]:r;if(void 0!==C&&(b=T[R.a],_=T[R.b],M=T[R.c],i=tr(this,C,t,Bn,b,_,M,Qn))){if(S&&S[P]){var O=S[P];Yn.copy(O[0]),Zn.copy(O[1]),Jn.copy(O[2]),i.uv=rn.getUV(Qn,b,_,M,Yn,Zn,Jn,new Re)}i.face=R,i.faceIndex=P,e.push(i)}}}}else console.warn("THREE.Mesh: TriangleStripDrawMode and TriangleFanDrawMode are not supported by .raycast().")},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ir=0,nr=new $e,rr=new vi,or=new Ne;function ar(){Object.defineProperty(this,"id",{value:ir+=2}),this.uuid=ze.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}ar.prototype=Object.assign(Object.create(Ae.prototype),{constructor:ar,isGeometry:!0,applyMatrix:function(t){for(var e=(new Fe).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++)this.vertices[i].applyMatrix4(t);for(i=0,n=this.faces.length;i<n;i++){var r=this.faces[i];r.normal.applyMatrix3(e).normalize();for(var o=0,a=r.vertexNormals.length;o<a;o++)r.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return nr.makeRotationX(t),this.applyMatrix(nr),this},rotateY:function(t){return nr.makeRotationY(t),this.applyMatrix(nr),this},rotateZ:function(t){return nr.makeRotationZ(t),this.applyMatrix(nr),this},translate:function(t,e,i){return nr.makeTranslation(t,e,i),this.applyMatrix(nr),this},scale:function(t,e,i){return nr.makeScale(t,e,i),this.applyMatrix(nr),this},lookAt:function(t){return rr.lookAt(t),rr.updateMatrix(),this.applyMatrix(rr.matrix),this},fromBufferGeometry:function(t){var e=this,i=null!==t.index?t.index.array:void 0,n=t.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var r=n.position.array,o=void 0!==n.normal?n.normal.array:void 0,a=void 0!==n.color?n.color.array:void 0,s=void 0!==n.uv?n.uv.array:void 0,q=void 0!==n.uv2?n.uv2.array:void 0;void 0!==q&&(this.faceVertexUvs[1]=[]);for(var l=0;l<r.length;l+=3)e.vertices.push((new Ne).fromArray(r,l)),void 0!==a&&e.colors.push((new qn).fromArray(a,l));function h(t,i,n,r){var l=void 0===a?[]:[e.colors[t].clone(),e.colors[i].clone(),e.colors[n].clone()],h=new un(t,i,n,void 0===o?[]:[(new Ne).fromArray(o,3*t),(new Ne).fromArray(o,3*i),(new Ne).fromArray(o,3*n)],l,r);e.faces.push(h),void 0!==s&&e.faceVertexUvs[0].push([(new Re).fromArray(s,2*t),(new Re).fromArray(s,2*i),(new Re).fromArray(s,2*n)]),void 0!==q&&e.faceVertexUvs[1].push([(new Re).fromArray(q,2*t),(new Re).fromArray(q,2*i),(new Re).fromArray(q,2*n)])}var c=t.groups;if(c.length>0)for(l=0;l<c.length;l++)for(var u=c[l],p=u.start,d=p,m=p+u.count;d<m;d+=3)void 0!==i?h(i[d],i[d+1],i[d+2],u.materialIndex):h(d,d+1,d+2,u.materialIndex);else if(void 0!==i)for(l=0;l<i.length;l+=3)h(i[l],i[l+1],i[l+2]);else for(l=0;l<r.length/3;l+=3)h(l,l+1,l+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(or).negate(),this.translate(or.x,or.y,or.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,n=new $e;return n.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var t=new Ne,e=new Ne,i=0,n=this.faces.length;i<n;i++){var r=this.faces[i],o=this.vertices[r.a],a=this.vertices[r.b],s=this.vertices[r.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){var e,i,n,r,o,a;for(void 0===t&&(t=!0),a=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)a[e]=new Ne;if(t){var s,q,l,h=new Ne,c=new Ne;for(n=0,r=this.faces.length;n<r;n++)o=this.faces[n],s=this.vertices[o.a],q=this.vertices[o.b],l=this.vertices[o.c],h.subVectors(l,q),c.subVectors(s,q),h.cross(c),a[o.a].add(h),a[o.b].add(h),a[o.c].add(h)}else for(this.computeFaceNormals(),n=0,r=this.faces.length;n<r;n++)a[(o=this.faces[n]).a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(e=0,i=this.vertices.length;e<i;e++)a[e].normalize();for(n=0,r=this.faces.length;n<r;n++){var u=(o=this.faces[n]).vertexNormals;3===u.length?(u[0].copy(a[o.a]),u[1].copy(a[o.b]),u[2].copy(a[o.c])):(u[0]=a[o.a].clone(),u[1]=a[o.b].clone(),u[2]=a[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var n=(i=this.faces[t]).vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,n,r;for(i=0,n=this.faces.length;i<n;i++)for((r=this.faces[i]).__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var o=new ar;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)q=new Ne,l={a:new Ne,b:new Ne,c:new Ne},a.push(q),s.push(l)}var q,l,h=this.morphNormals[t];for(o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,n=this.faces.length;i<n;i++)r=this.faces[i],q=h.faceNormals[i],l=h.vertexNormals[i],q.copy(r.normal),l.a.copy(r.vertexNormals[0]),l.b.copy(r.vertexNormals[1]),l.c.copy(r.vertexNormals[2])}for(i=0,n=this.faces.length;i<n;i++)(r=this.faces[i]).normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new zi),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Oi),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t&&t.isGeometry){var n,r=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,q=t.faces,l=this.colors,h=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new Fe).getNormalMatrix(e));for(var c=0,u=a.length;c<u;c++){var p=a[c].clone();void 0!==e&&p.applyMatrix4(e),o.push(p)}for(c=0,u=h.length;c<u;c++)l.push(h[c].clone());for(c=0,u=q.length;c<u;c++){var d,m,f,v=q[c],g=v.vertexNormals,y=v.vertexColors;(d=new un(v.a+r,v.b+r,v.c+r)).normal.copy(v.normal),void 0!==n&&d.normal.applyMatrix3(n).normalize();for(var x=0,w=g.length;x<w;x++)m=g[x].clone(),void 0!==n&&m.applyMatrix3(n).normalize(),d.vertexNormals.push(m);for(d.color.copy(v.color),x=0,w=y.length;x<w;x++)f=y[x],d.vertexColors.push(f.clone());d.materialIndex=v.materialIndex+i,s.push(d)}for(c=0,u=t.faceVertexUvs.length;c<u;c++){var b=t.faceVertexUvs[c];for(void 0===this.faceVertexUvs[c]&&(this.faceVertexUvs[c]=[]),x=0,w=b.length;x<w;x++){for(var _=b[x],M=[],S=0,E=_.length;S<E;S++)M.push(_[S].clone());this.faceVertexUvs[c].push(M)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,i,n,r,o,a,s,q={},l=[],h=[],c=Math.pow(10,4);for(i=0,n=this.vertices.length;i<n;i++)t=this.vertices[i],void 0===q[e=Math.round(t.x*c)+"_"+Math.round(t.y*c)+"_"+Math.round(t.z*c)]?(q[e]=i,l.push(this.vertices[i]),h[i]=l.length-1):h[i]=h[q[e]];var u=[];for(i=0,n=this.faces.length;i<n;i++){(r=this.faces[i]).a=h[r.a],r.b=h[r.b],r.c=h[r.c],o=[r.a,r.b,r.c];for(var p=0;p<3;p++)if(o[p]===o[(p+1)%3]){u.push(i);break}}for(i=u.length-1;i>=0;i--){var d=u[i];for(this.faces.splice(d,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(d,1)}var m=this.vertices.length-l.length;return this.vertices=l,m},setFromPoints:function(t){this.vertices=[];for(var e=0,i=t.length;e<i;e++){var n=t[e];this.vertices.push(new Ne(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,i=0;i<e;i++)t[i]._id=i;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));var n,r,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];for(o&&o.length===e&&(n=[]),a&&a.length===e&&(r=[]),i=0;i<e;i++){var s=t[i]._id;n&&n.push(o[s]),r&&r.push(a[s])}n&&(this.faceVertexUvs[0]=n),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}for(var n=[],r=0;r<this.vertices.length;r++){var o=this.vertices[r];n.push(o.x,o.y,o.z)}var a=[],s=[],q={},l=[],h={},c=[],u={};for(r=0;r<this.faces.length;r++){var p=this.faces[r],d=void 0!==this.faceVertexUvs[0][r],m=p.normal.length()>0,f=p.vertexNormals.length>0,v=1!==p.color.r||1!==p.color.g||1!==p.color.b,g=p.vertexColors.length>0,y=0;if(y=_(y,0,0),y=_(y,1,!0),y=_(y,2,!1),y=_(y,3,d),y=_(y,4,m),y=_(y,5,f),y=_(y,6,v),y=_(y,7,g),a.push(y),a.push(p.a,p.b,p.c),a.push(p.materialIndex),d){var x=this.faceVertexUvs[0][r];a.push(E(x[0]),E(x[1]),E(x[2]))}if(m&&a.push(M(p.normal)),f){var w=p.vertexNormals;a.push(M(w[0]),M(w[1]),M(w[2]))}if(v&&a.push(S(p.color)),g){var b=p.vertexColors;a.push(S(b[0]),S(b[1]),S(b[2]))}}function _(t,e,i){return i?t|1<<e:t&~(1<<e)}function M(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==q[e]||(q[e]=s.length/3,s.push(t.x,t.y,t.z)),q[e]}function S(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==h[e]||(h[e]=l.length,l.push(t.getHex())),h[e]}function E(t){var e=t.x.toString()+t.y.toString();return void 0!==u[e]||(u[e]=c.length/2,c.push(t.x,t.y)),u[e]}return t.data={},t.data.vertices=n,t.data.normals=s,l.length>0&&(t.data.colors=l),c.length>0&&(t.data.uvs=[c]),t.data.faces=a,t},clone:function(){return(new ar).copy(this)},copy:function(t){var e,i,n,r,o,a;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());var q=t.colors;for(e=0,i=q.length;e<i;e++)this.colors.push(q[e].clone());var l=t.faces;for(e=0,i=l.length;e<i;e++)this.faces.push(l[e].clone());for(e=0,i=t.faceVertexUvs.length;e<i;e++){var h=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,r=h.length;n<r;n++){var c=h[n],u=[];for(o=0,a=c.length;o<a;o++){var p=c[o];u.push(p.clone())}this.faceVertexUvs[e].push(u)}}var d=t.morphTargets;for(e=0,i=d.length;e<i;e++){var m={};if(m.name=d[e].name,void 0!==d[e].vertices)for(m.vertices=[],n=0,r=d[e].vertices.length;n<r;n++)m.vertices.push(d[e].vertices[n].clone());if(void 0!==d[e].normals)for(m.normals=[],n=0,r=d[e].normals.length;n<r;n++)m.normals.push(d[e].normals[n].clone());this.morphTargets.push(m)}var f=t.morphNormals;for(e=0,i=f.length;e<i;e++){var v={};if(void 0!==f[e].vertexNormals)for(v.vertexNormals=[],n=0,r=f[e].vertexNormals.length;n<r;n++){var g=f[e].vertexNormals[n],y={};y.a=g.a.clone(),y.b=g.b.clone(),y.c=g.c.clone(),v.vertexNormals.push(y)}if(void 0!==f[e].faceNormals)for(v.faceNormals=[],n=0,r=f[e].faceNormals.length;n<r;n++)v.faceNormals.push(f[e].faceNormals[n].clone());this.morphNormals.push(v)}var x=t.skinWeights;for(e=0,i=x.length;e<i;e++)this.skinWeights.push(x[e].clone());var w=t.skinIndices;for(e=0,i=w.length;e<i;e++)this.skinIndices.push(w[e].clone());var b=t.lineDistances;for(e=0,i=b.length;e<i;e++)this.lineDistances.push(b[e]);var _=t.boundingBox;null!==_&&(this.boundingBox=_.clone());var M=t.boundingSphere;return null!==M&&(this.boundingSphere=M.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class sr extends In{constructor(t,e,i,n,r,o){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};var a=this;t=t||1,e=e||1,i=i||1,n=Math.floor(n)||1,r=Math.floor(r)||1,o=Math.floor(o)||1;var s=[],q=[],l=[],h=[],c=0,u=0;function p(t,e,i,n,r,o,p,d,m,f,v){var g,y,x=o/m,w=p/f,b=o/2,_=p/2,M=d/2,S=m+1,E=f+1,T=0,A=0,L=new Ne;for(y=0;y<E;y++){var P=y*w-_;for(g=0;g<S;g++){var z=g*x-b;L[t]=z*n,L[e]=P*r,L[i]=M,q.push(L.x,L.y,L.z),L[t]=0,L[e]=0,L[i]=d>0?1:-1,l.push(L.x,L.y,L.z),h.push(g/m),h.push(1-y/f),T+=1}}for(y=0;y<f;y++)for(g=0;g<m;g++){var R=c+g+S*y,C=c+g+S*(y+1),O=c+(g+1)+S*(y+1),I=c+(g+1)+S*y;s.push(R,C,I),s.push(C,O,I),A+=6}a.addGroup(u,A,v),u+=A,c+=T}p("z","y","x",-1,-1,i,e,t,o,r,0),p("z","y","x",1,-1,i,e,-t,o,r,1),p("x","z","y",1,1,t,i,e,n,o,2),p("x","z","y",1,-1,t,i,-e,n,o,3),p("x","y","z",1,-1,t,e,i,n,r,4),p("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(s),this.setAttribute("position",new Mn(q,3)),this.setAttribute("normal",new Mn(l,3)),this.setAttribute("uv",new Mn(h,2))}}function qr(t){var e={};for(var i in t)for(var n in e[i]={},t[i]){var r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}return e}function lr(t){for(var e={},i=0;i<t.length;i++){var n=qr(t[i]);for(var r in n)e[r]=n[r]}return e}var hr="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",cr="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function ur(t){dn.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=hr,this.fragmentShader=cr,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function pr(){vi.call(this),this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e}function dr(t,e,i,n){pr.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}ur.prototype=Object.create(dn.prototype),ur.prototype.constructor=ur,ur.prototype.isShaderMaterial=!0,ur.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=qr(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},ur.prototype.toJSON=function(t){var e=dn.prototype.toJSON.call(this,t);for(var i in e.uniforms={},this.uniforms){var n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var r={};for(var o in this.extensions)!0===this.extensions[o]&&(r[o]=!0);return Object.keys(r).length>0&&(e.extensions=r),e},pr.prototype=Object.assign(Object.create(vi.prototype),{constructor:pr,isCamera:!0,copy:function(t,e){return vi.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new Ne),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){vi.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),dr.prototype=Object.assign(Object.create(pr.prototype),{constructor:dr,isPerspectiveCamera:!0,copy:function(t,e){return pr.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*ze.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*ze.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*ze.RAD2DEG*Math.atan(Math.tan(.5*ze.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,n,r,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*ze.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n,o=this.view;if(null!==this.view&&this.view.enabled){var a=o.fullWidth,s=o.fullHeight;r+=o.offsetX*n/a,e-=o.offsetY*i/s,n*=o.width/a,i*=o.height/s}var q=this.filmOffset;0!==q&&(r+=t*q/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});var mr=90;function fr(t,e,i,n){vi.call(this),this.type="CubeCamera";var r=new dr(mr,1,t,e);r.up.set(0,-1,0),r.lookAt(new Ne(1,0,0)),this.add(r);var o=new dr(mr,1,t,e);o.up.set(0,-1,0),o.lookAt(new Ne(-1,0,0)),this.add(o);var a=new dr(mr,1,t,e);a.up.set(0,0,1),a.lookAt(new Ne(0,1,0)),this.add(a);var s=new dr(mr,1,t,e);s.up.set(0,0,-1),s.lookAt(new Ne(0,-1,0)),this.add(s);var q=new dr(mr,1,t,e);q.up.set(0,-1,0),q.lookAt(new Ne(0,0,1)),this.add(q);var l=new dr(mr,1,t,e);l.up.set(0,-1,0),l.lookAt(new Ne(0,0,-1)),this.add(l),n=n||{format:Lt,magFilter:pt,minFilter:pt},this.renderTarget=new vr(i,i,n),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=t.getRenderTarget(),n=this.renderTarget,h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,o),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,q),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(i)},this.clear=function(t,e,i,n){for(var r=t.getRenderTarget(),o=this.renderTarget,a=0;a<6;a++)t.setRenderTarget(o,a),t.clear(e,i,n);t.setRenderTarget(r)}}function vr(t,e,i){He.call(this,t,e,i)}function gr(t,e,i,n,r,o,a,s,q,l,h,c){je.call(this,null,o,a,s,q,l,n,r,h,c),this.image={data:t||null,width:e||1,height:i||1},this.magFilter=void 0!==q?q:ht,this.minFilter=void 0!==l?l:ht,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}fr.prototype=Object.create(vi.prototype),fr.prototype.constructor=fr,vr.prototype=Object.create(He.prototype),vr.prototype.constructor=vr,vr.prototype.isWebGLRenderTargetCube=!0,vr.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=e.format,this.texture.encoding=e.encoding;var i=new gi,n={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV;","\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},r=new ur({type:"CubemapFromEquirect",uniforms:qr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:c,blending:m});r.uniforms.tEquirect.value=e;var o=new $n(new sr(5,5,5),r);i.add(o);var a=new fr(1,10,1);return a.renderTarget=this,a.renderTarget.texture.name="CubeCameraTexture",a.update(t,i),o.geometry.dispose(),o.material.dispose(),this},gr.prototype=Object.create(je.prototype),gr.prototype.constructor=gr,gr.prototype.isDataTexture=!0;var yr=new Oi,xr=new Ne;function wr(t,e,i,n,r,o){this.planes=[void 0!==t?t:new ki,void 0!==e?e:new ki,void 0!==i?i:new ki,void 0!==n?n:new ki,void 0!==r?r:new ki,void 0!==o?o:new ki]}Object.assign(wr.prototype,{set:function(t,e,i,n,r,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,n=i[0],r=i[1],o=i[2],a=i[3],s=i[4],q=i[5],l=i[6],h=i[7],c=i[8],u=i[9],p=i[10],d=i[11],m=i[12],f=i[13],v=i[14],g=i[15];return e[0].setComponents(a-n,h-s,d-c,g-m).normalize(),e[1].setComponents(a+n,h+s,d+c,g+m).normalize(),e[2].setComponents(a+r,h+q,d+u,g+f).normalize(),e[3].setComponents(a-r,h-q,d-u,g-f).normalize(),e[4].setComponents(a-o,h-l,d-p,g-v).normalize(),e[5].setComponents(a+o,h+l,d+p,g+v).normalize(),this},intersectsObject:function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),yr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(yr)},intersectsSprite:function(t){return yr.center.set(0,0,0),yr.radius=.7071067811865476,yr.applyMatrix4(t.matrixWorld),this.intersectsSphere(yr)},intersectsSphere:function(t){for(var e=this.planes,i=t.center,n=-t.radius,r=0;r<6;r++)if(e[r].distanceToPoint(i)<n)return!1;return!0},intersectsBox:function(t){for(var e=this.planes,i=0;i<6;i++){var n=e[i];if(xr.x=n.normal.x>0?t.max.x:t.min.x,xr.y=n.normal.y>0?t.max.y:t.min.y,xr.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(xr)<0)return!1}return!0},containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}});var br={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = saturate( clearcoat );\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy *= normalScale;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tbool frontFacing = dot( cross( S, T ), N ) > 0.0;\n\t\t\tmapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = clearcoatNormalScale * mapN.xy;\n\t\tclearcoatNormal = normalize( vTBN * mapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\n\t#endif\n#endif",clearcoat_normalmap_pars_fragment:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 encodeHalfRGBA ( vec2 v ) {\n\tvec4 encoded = vec4( 0.0 );\n\tconst vec2 offset = vec2( 1.0 / 255.0, 0.0 );\n\tencoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\n\tencoded.xy = encoded.xy - ( encoded.yy * offset );\n\tencoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\n\tencoded.zw = encoded.zw - ( encoded.ww * offset );\n\treturn encoded;\n}\nvec2 decodeHalfRGBA( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn decodeHalfRGBA( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},_r={common:{diffuse:{value:new qn(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Fe},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Re(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new qn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new qn(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Fe}},sprite:{diffuse:{value:new qn(15658734)},opacity:{value:1},center:{value:new Re(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Fe}}},Mr={basic:{uniforms:lr([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.fog]),vertexShader:br.meshbasic_vert,fragmentShader:br.meshbasic_frag},lambert:{uniforms:lr([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.fog,_r.lights,{emissive:{value:new qn(0)}}]),vertexShader:br.meshlambert_vert,fragmentShader:br.meshlambert_frag},phong:{uniforms:lr([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.gradientmap,_r.fog,_r.lights,{emissive:{value:new qn(0)},specular:{value:new qn(1118481)},shininess:{value:30}}]),vertexShader:br.meshphong_vert,fragmentShader:br.meshphong_frag},standard:{uniforms:lr([_r.common,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.roughnessmap,_r.metalnessmap,_r.fog,_r.lights,{emissive:{value:new qn(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:br.meshphysical_vert,fragmentShader:br.meshphysical_frag},matcap:{uniforms:lr([_r.common,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.fog,{matcap:{value:null}}]),vertexShader:br.meshmatcap_vert,fragmentShader:br.meshmatcap_frag},points:{uniforms:lr([_r.points,_r.fog]),vertexShader:br.points_vert,fragmentShader:br.points_frag},dashed:{uniforms:lr([_r.common,_r.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:br.linedashed_vert,fragmentShader:br.linedashed_frag},depth:{uniforms:lr([_r.common,_r.displacementmap]),vertexShader:br.depth_vert,fragmentShader:br.depth_frag},normal:{uniforms:lr([_r.common,_r.bumpmap,_r.normalmap,_r.displacementmap,{opacity:{value:1}}]),vertexShader:br.normal_vert,fragmentShader:br.normal_frag},sprite:{uniforms:lr([_r.sprite,_r.fog]),vertexShader:br.sprite_vert,fragmentShader:br.sprite_frag},background:{uniforms:{uvTransform:{value:new Fe},t2D:{value:null}},vertexShader:br.background_vert,fragmentShader:br.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:br.cube_vert,fragmentShader:br.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:br.equirect_vert,fragmentShader:br.equirect_frag},distanceRGBA:{uniforms:lr([_r.common,_r.displacementmap,{referencePosition:{value:new Ne},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:br.distanceRGBA_vert,fragmentShader:br.distanceRGBA_frag},shadow:{uniforms:lr([_r.lights,_r.fog,{color:{value:new qn(0)},opacity:{value:1}}]),vertexShader:br.shadow_vert,fragmentShader:br.shadow_frag}};function Sr(){var t=null,e=!1,i=null;function n(r,o){!1!==e&&(i(r,o),t.requestAnimationFrame(n))}return{start:function(){!0!==e&&null!==i&&(t.requestAnimationFrame(n),e=!0)},stop:function(){e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function Er(t){var e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);var n=e.get(i);n&&(t.deleteBuffer(n.buffer),e.delete(i))},update:function(i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=e.get(i);void 0===r?e.set(i,function(e,i){var n=e.array,r=e.usage,o=t.createBuffer();t.bindBuffer(i,o),t.bufferData(i,n,r),e.onUploadCallback();var a=5126;return n instanceof Float32Array?a=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?a=5123:n instanceof Int16Array?a=5122:n instanceof Uint32Array?a=5125:n instanceof Int32Array?a=5124:n instanceof Int8Array?a=5120:n instanceof Uint8Array&&(a=5121),{buffer:o,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(i,n)):r.version<i.version&&(function(e,i,n){var r=i.array,o=i.updateRange;t.bindBuffer(n,e),-1===o.count?t.bufferSubData(n,0,r):(t.bufferSubData(n,o.offset*r.BYTES_PER_ELEMENT,r.subarray(o.offset,o.offset+o.count)),o.count=-1)}(r.buffer,i,n),r.version=i.version)}}}function Tr(t,e,i,n){ar.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new Ar(t,e,i,n)),this.mergeVertices()}function Ar(t,e,i,n){In.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r,o,a=(t=t||1)/2,s=(e=e||1)/2,q=Math.floor(i)||1,l=Math.floor(n)||1,h=q+1,c=l+1,u=t/q,p=e/l,d=[],m=[],f=[],v=[];for(o=0;o<c;o++){var g=o*p-s;for(r=0;r<h;r++){var y=r*u-a;m.push(y,-g,0),f.push(0,0,1),v.push(r/q),v.push(1-o/l)}}for(o=0;o<l;o++)for(r=0;r<q;r++){var x=r+h*o,w=r+h*(o+1),b=r+1+h*(o+1),_=r+1+h*o;d.push(x,w,_),d.push(w,b,_)}this.setIndex(d),this.setAttribute("position",new Mn(m,3)),this.setAttribute("normal",new Mn(f,3)),this.setAttribute("uv",new Mn(v,2))}function Lr(t,e,i,n){var r,o,a=new qn(0),s=0,q=null,l=0;function u(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,n)}return{getClearColor:function(){return a},setClearColor:function(t,e){a.set(t),u(a,s=void 0!==e?e:1)},getClearAlpha:function(){return s},setClearAlpha:function(t){u(a,s=t)},render:function(e,n,p,d){var m=n.background,f=t.vr,v=f.getSession&&f.getSession();if(v&&"additive"===v.environmentBlendMode&&(m=null),null===m?(u(a,s),q=null,l=0):m&&m.isColor&&(u(m,1),d=!0,q=null,l=0),(t.autoClear||d)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLRenderTargetCube)){void 0===o&&((o=new $n(new sr(1,1,1),new ur({type:"BackgroundCubeMaterial",uniforms:qr(Mr.cube.uniforms),vertexShader:Mr.cube.vertexShader,fragmentShader:Mr.cube.fragmentShader,side:c,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.tCube.value}}),i.update(o));var g=m.isWebGLRenderTargetCube?m.texture:m;o.material.uniforms.tCube.value=g,o.material.uniforms.tFlip.value=m.isWebGLRenderTargetCube?1:-1,q===m&&l===g.version||(o.material.needsUpdate=!0,q=m,l=g.version),e.unshift(o,o.geometry,o.material,0,0,null)}else m&&m.isTexture&&(void 0===r&&((r=new $n(new Ar(2,2),new ur({type:"BackgroundMaterial",uniforms:qr(Mr.background.uniforms),vertexShader:Mr.background.vertexShader,fragmentShader:Mr.background.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(r.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(r)),r.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),r.material.uniforms.uvTransform.value.copy(m.matrix),q===m&&l===m.version||(r.material.needsUpdate=!0,q=m,l=m.version),e.unshift(r,r.geometry,r.material,0,0,null))}}}function Pr(t,e,i,n){var r,o=n.isWebGL2;this.setMode=function(t){r=t},this.render=function(e,n){t.drawArrays(r,e,n),i.update(n,r)},this.renderInstances=function(n,a,s,q){if(0!==q){var l,h;if(o)l=t,h="drawArraysInstanced";else if(h="drawArraysInstancedANGLE",null===(l=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[h](r,a,s,q),i.update(s,r,q)}}}function zr(t,e,i){var n;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext,a=void 0!==i.precision?i.precision:"highp",s=r(a);s!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",s,"instead."),a=s);var q=!0===i.logarithmicDepthBuffer,l=t.getParameter(34930),h=t.getParameter(35660),c=t.getParameter(3379),u=t.getParameter(34076),p=t.getParameter(34921),d=t.getParameter(36347),m=t.getParameter(36348),f=t.getParameter(36349),v=h>0,g=o||!!e.get("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==n)return n;var i=e.get("EXT_texture_filter_anisotropic");return n=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:q,maxTextures:l,maxVertexTextures:h,maxTextureSize:c,maxCubemapSize:u,maxAttributes:p,maxVertexUniforms:d,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:v,floatFragmentTextures:g,floatVertexTextures:v&&g,maxSamples:o?t.getParameter(36183):0}}function Rr(){var t=this,e=null,i=0,n=!1,r=!1,o=new ki,a=new Fe,s={value:null,needsUpdate:!1};function q(){s.value!==e&&(s.value=e,s.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function l(e,i,n,r){var q=null!==e?e.length:0,l=null;if(0!==q){if(l=s.value,!0!==r||null===l){var h=n+4*q,c=i.matrixWorldInverse;a.getNormalMatrix(c),(null===l||l.length<h)&&(l=new Float32Array(h));for(var u=0,p=n;u!==q;++u,p+=4)o.copy(e[u]).applyMatrix4(c,a),o.normal.toArray(l,p),l[p+3]=o.constant}s.value=l,s.needsUpdate=!0}return t.numPlanes=q,l}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(t,r,o){var a=0!==t.length||r||0!==i||n;return n=r,e=l(t,o,0),i=t.length,a},this.beginShadows=function(){r=!0,l(null)},this.endShadows=function(){r=!1,q()},this.setState=function(t,o,a,h,c,u){if(!n||null===t||0===t.length||r&&!a)r?l(null):q();else{var p=r?0:i,d=4*p,m=c.clippingState||null;s.value=m,m=l(t,h,d,u);for(var f=0;f!==d;++f)m[f]=e[f];c.clippingState=m,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=p}}}function Cr(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=n,n}}}function Or(t,e,i){var n=new WeakMap,r=new WeakMap;function o(t){var a=t.target,s=n.get(a);for(var q in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[q]);a.removeEventListener("dispose",o),n.delete(a);var l=r.get(s);l&&(e.remove(l),r.delete(s)),i.memory.geometries--}function a(t){var i=[],n=t.index,o=t.attributes.position,a=0;if(null!==n){var s=n.array;a=n.version;for(var q=0,l=s.length;q<l;q+=3){var h=s[q+0],c=s[q+1],u=s[q+2];i.push(h,c,c,u,u,h)}}else for(s=o.array,a=o.version,q=0,l=s.length/3-1;q<l;q+=3)h=q+0,c=q+1,u=q+2,i.push(h,c,c,u,u,h);var p=new(Tn(i)>65535?_n:wn)(i,1);p.version=a,e.update(p,34963);var d=r.get(t);d&&e.remove(d),r.set(t,p)}return{get:function(t,e){var r=n.get(e);return r||(e.addEventListener("dispose",o),e.isBufferGeometry?r=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new In).setFromObject(t)),r=e._bufferGeometry),n.set(e,r),i.memory.geometries++,r)},update:function(t){var i=t.index,n=t.attributes;for(var r in null!==i&&e.update(i,34963),n)e.update(n[r],34962);var o=t.morphAttributes;for(var r in o)for(var a=o[r],s=0,q=a.length;s<q;s++)e.update(a[s],34962)},getWireframeAttribute:function(t){var e=r.get(t);if(e){var i=t.index;null!==i&&e.version<i.version&&a(t)}else a(t);return r.get(t)}}}function Ir(t,e,i,n){var r,o,a,s=n.isWebGL2;this.setMode=function(t){r=t},this.setIndex=function(t){o=t.type,a=t.bytesPerElement},this.render=function(e,n){t.drawElements(r,n,o,e*a),i.update(n,r)},this.renderInstances=function(n,q,l,h){if(0!==h){var c,u;if(s)c=t,u="drawElementsInstanced";else if(u="drawElementsInstancedANGLE",null===(c=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[u](r,l,o,q*a,h),i.update(l,r,h)}}}function Nr(t){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(n=n||1,e.calls++,i){case 4:e.triangles+=n*(t/3);break;case 5:case 6:e.triangles+=n*(t-2);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Br(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Dr(t){var e={},i=new Float32Array(8);return{update:function(n,r,o,a){var s=n.morphTargetInfluences,q=s.length,l=e[r.id];if(void 0===l){l=[];for(var h=0;h<q;h++)l[h]=[h,0];e[r.id]=l}var c=o.morphTargets&&r.morphAttributes.position,u=o.morphNormals&&r.morphAttributes.normal;for(h=0;h<q;h++)0!==(p=l[h])[1]&&(c&&r.deleteAttribute("morphTarget"+h),u&&r.deleteAttribute("morphNormal"+h));for(h=0;h<q;h++)(p=l[h])[0]=h,p[1]=s[h];for(l.sort(Br),h=0;h<8;h++){var p;if(p=l[h]){var d=p[0],m=p[1];if(m){c&&r.setAttribute("morphTarget"+h,c[d]),u&&r.setAttribute("morphNormal"+h,u[d]),i[h]=m;continue}}i[h]=0}a.getUniforms().setValue(t,"morphTargetInfluences",i)}}}function Fr(t,e,i,n){var r={};return{update:function(t){var o=n.render.frame,a=t.geometry,s=e.get(t,a);return r[s.id]!==o&&(a.isGeometry&&s.updateFromObject(t),e.update(s),r[s.id]=o),t.isInstancedMesh&&i.update(t.instanceMatrix,34962),s},dispose:function(){r={}}}}function Vr(t,e,i,n,r,o,a,s,q,l){t=void 0!==t?t:[],e=void 0!==e?e:tt,a=void 0!==a?a:Lt,je.call(this,t,e,i,n,r,o,a,s,q,l),this.flipY=!1}function Ur(t,e,i,n){je.call(this,null),this.image={data:t||null,width:e||1,height:i||1,depth:n||1},this.magFilter=ht,this.minFilter=ht,this.wrapR=qt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function jr(t,e,i,n){je.call(this,null),this.image={data:t||null,width:e||1,height:i||1,depth:n||1},this.magFilter=ht,this.minFilter=ht,this.wrapR=qt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Mr.physical={uniforms:lr([Mr.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new qn(0)},clearcoatNormalScale:{value:new Re(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:br.meshphysical_vert,fragmentShader:br.meshphysical_frag},Tr.prototype=Object.create(ar.prototype),Tr.prototype.constructor=Tr,Ar.prototype=Object.create(In.prototype),Ar.prototype.constructor=Ar,Vr.prototype=Object.create(je.prototype),Vr.prototype.constructor=Vr,Vr.prototype.isCubeTexture=!0,Object.defineProperty(Vr.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),Ur.prototype=Object.create(je.prototype),Ur.prototype.constructor=Ur,Ur.prototype.isDataTexture2DArray=!0,jr.prototype=Object.create(je.prototype),jr.prototype.constructor=jr,jr.prototype.isDataTexture3D=!0;var Gr=new je,Hr=new Ur,Wr=new jr,kr=new Vr,Xr=[],Yr=[],Zr=new Float32Array(16),Jr=new Float32Array(9),Qr=new Float32Array(4);function Kr(t,e,i){var n=t[0];if(n<=0||n>0)return t;var r=e*i,o=Xr[r];if(void 0===o&&(o=new Float32Array(r),Xr[r]=o),0!==e){n.toArray(o,0);for(var a=1,s=0;a!==e;++a)s+=i,t[a].toArray(o,s)}return o}function $r(t,e){if(t.length!==e.length)return!1;for(var i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function to(t,e){for(var i=0,n=e.length;i<n;i++)t[i]=e[i]}function eo(t,e){var i=Yr[e];void 0===i&&(i=new Int32Array(e),Yr[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function io(t,e){var i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function no(t,e){var i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if($r(i,e))return;t.uniform2fv(this.addr,e),to(i,e)}}function ro(t,e){var i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if($r(i,e))return;t.uniform3fv(this.addr,e),to(i,e)}}function oo(t,e){var i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if($r(i,e))return;t.uniform4fv(this.addr,e),to(i,e)}}function ao(t,e){var i=this.cache,n=e.elements;if(void 0===n){if($r(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),to(i,e)}else{if($r(i,n))return;Qr.set(n),t.uniformMatrix2fv(this.addr,!1,Qr),to(i,n)}}function so(t,e){var i=this.cache,n=e.elements;if(void 0===n){if($r(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),to(i,e)}else{if($r(i,n))return;Jr.set(n),t.uniformMatrix3fv(this.addr,!1,Jr),to(i,n)}}function qo(t,e){var i=this.cache,n=e.elements;if(void 0===n){if($r(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),to(i,e)}else{if($r(i,n))return;Zr.set(n),t.uniformMatrix4fv(this.addr,!1,Zr),to(i,n)}}function lo(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(e||Gr,r)}function ho(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||Hr,r)}function co(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||Wr,r)}function uo(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(e||kr,r)}function po(t,e){var i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function mo(t,e){var i=this.cache;$r(i,e)||(t.uniform2iv(this.addr,e),to(i,e))}function fo(t,e){var i=this.cache;$r(i,e)||(t.uniform3iv(this.addr,e),to(i,e))}function vo(t,e){var i=this.cache;$r(i,e)||(t.uniform4iv(this.addr,e),to(i,e))}function go(t,e){t.uniform1fv(this.addr,e)}function yo(t,e){t.uniform1iv(this.addr,e)}function xo(t,e){t.uniform2iv(this.addr,e)}function wo(t,e){t.uniform3iv(this.addr,e)}function bo(t,e){t.uniform4iv(this.addr,e)}function _o(t,e){var i=Kr(e,this.size,2);t.uniform2fv(this.addr,i)}function Mo(t,e){var i=Kr(e,this.size,3);t.uniform3fv(this.addr,i)}function So(t,e){var i=Kr(e,this.size,4);t.uniform4fv(this.addr,i)}function Eo(t,e){var i=Kr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function To(t,e){var i=Kr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Ao(t,e){var i=Kr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function Lo(t,e,i){var n=e.length,r=eo(i,n);t.uniform1iv(this.addr,r);for(var o=0;o!==n;++o)i.safeSetTexture2D(e[o]||Gr,r[o])}function Po(t,e,i){var n=e.length,r=eo(i,n);t.uniform1iv(this.addr,r);for(var o=0;o!==n;++o)i.safeSetTextureCube(e[o]||kr,r[o])}function zo(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return io;case 35664:return no;case 35665:return ro;case 35666:return oo;case 35674:return ao;case 35675:return so;case 35676:return qo;case 35678:case 36198:return lo;case 35679:return co;case 35680:return uo;case 36289:return ho;case 5124:case 35670:return po;case 35667:case 35671:return mo;case 35668:case 35672:return fo;case 35669:case 35673:return vo}}(e.type)}function Ro(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return go;case 35664:return _o;case 35665:return Mo;case 35666:return So;case 35674:return Eo;case 35675:return To;case 35676:return Ao;case 35678:return Lo;case 35680:return Po;case 5124:case 35670:return yo;case 35667:case 35671:return xo;case 35668:case 35672:return wo;case 35669:case 35673:return bo}}(e.type)}function Co(t){this.id=t,this.seq=[],this.map={}}Ro.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),to(e,t)},Co.prototype.setValue=function(t,e,i){for(var n=this.seq,r=0,o=n.length;r!==o;++r){var a=n[r];a.setValue(t,e[a.id],i)}};var Oo=/([\w\d_]+)(\])?(\[|\.)?/g;function Io(t,e){t.seq.push(e),t.map[e.id]=e}function No(t,e,i){var n=t.name,r=n.length;for(Oo.lastIndex=0;;){var o=Oo.exec(n),a=Oo.lastIndex,s=o[1],q="]"===o[2],l=o[3];if(q&&(s|=0),void 0===l||"["===l&&a+2===r){Io(i,void 0===l?new zo(s,t,e):new Ro(s,t,e));break}var h=i.map[s];void 0===h&&Io(i,h=new Co(s)),i=h}}function Bo(t,e){this.seq=[],this.map={};for(var i=t.getProgramParameter(e,35718),n=0;n<i;++n){var r=t.getActiveUniform(e,n);No(r,t.getUniformLocation(e,r.name),this)}}function Do(t,e,i){var n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}Bo.prototype.setValue=function(t,e,i,n){var r=this.map[e];void 0!==r&&r.setValue(t,i,n)},Bo.prototype.setOptional=function(t,e,i){var n=e[i];void 0!==n&&this.setValue(t,i,n)},Bo.upload=function(t,e,i,n){for(var r=0,o=e.length;r!==o;++r){var a=e[r],s=i[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,n)}},Bo.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var o=t[n];o.id in e&&i.push(o)}return i};var Fo=0;function Vo(t){switch(t){case ue:return["Linear","( value )"];case pe:return["sRGB","( value )"];case me:return["RGBE","( value )"];case ve:return["RGBM","( value, 7.0 )"];case ge:return["RGBM","( value, 16.0 )"];case ye:return["RGBD","( value, 256.0 )"];case de:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case fe:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+t)}}function Uo(t,e,i){var n=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return n&&""===r?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+r+function(t){for(var e=t.split("\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(t.getShaderSource(e))}function jo(t,e){var i=Vo(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function Go(t,e){var i;switch(e){case Z:i="Linear";break;case J:i="Reinhard";break;case Q:i="Uncharted2";break;case K:i="OptimizedCineon";break;case $:i="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function Ho(t){return""!==t}function Wo(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ko(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var Xo=/^[ \t]*#include +<([\w\d./]+)>/gm;function Yo(t){return t.replace(Xo,Zo)}function Zo(t,e){var i=br[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return Yo(i)}var Jo=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function Qo(t){return t.replace(Jo,Ko)}function Ko(t,e,i,n){for(var r="",o=parseInt(e);o<parseInt(i);o++)r+=n.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return r}function $o(t){var e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ta(t,e,i,n,r,o){var a,h,c,u,p=t.getContext(),d=n.defines,m=r.vertexShader,f=r.fragmentShader,v=function(t){var e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===s?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===q?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===l&&(e="SHADOWMAP_TYPE_VSM"),e}(o),g=function(t){var e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case tt:case et:e="ENVMAP_TYPE_CUBE";break;case ot:case at:e="ENVMAP_TYPE_CUBE_UV";break;case it:case nt:e="ENVMAP_TYPE_EQUIREC";break;case rt:e="ENVMAP_TYPE_SPHERE"}return e}(o),y=function(t){var e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case et:case nt:e="ENVMAP_MODE_REFRACTION"}return e}(o),x=function(t){var e="ENVMAP_BLENDING_MULTIPLY";if(t.envMap)switch(t.combine){case W:e="ENVMAP_BLENDING_MULTIPLY";break;case k:e="ENVMAP_BLENDING_MIX";break;case X:e="ENVMAP_BLENDING_ADD"}return e}(o),w=t.gammaFactor>0?t.gammaFactor:1,b=o.isWebGL2?"":function(t,e,i){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ho).join("\n")}(n.extensions,o,e),_=function(t){var e=[];for(var i in t){var n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(d),M=p.createProgram(),S=o.numMultiviewViews;if(n.isRawShaderMaterial?((a=[_].filter(Ho).join("\n")).length>0&&(a+="\n"),(h=[b,_].filter(Ho).join("\n")).length>0&&(h+="\n")):(a=[$o(o),"#define SHADER_NAME "+r.name,_,o.instancing?"#define USE_INSTANCING":"",o.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+w,"#define MAX_BONES "+o.maxBones,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+y:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.normalMap&&o.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",o.normalMap&&o.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",o.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",o.displacementMap&&o.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexTangents?"#define USE_TANGENT":"",o.vertexColors?"#define USE_COLOR":"",o.vertexUvs?"#define USE_UV":"",o.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",o.flatShading?"#define FLAT_SHADED":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals&&!1===o.flatShading?"#define USE_MORPHNORMALS":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ho).join("\n"),h=[b,$o(o),"#define SHADER_NAME "+r.name,_,o.alphaTest?"#define ALPHATEST "+o.alphaTest+(o.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+w,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.matcap?"#define USE_MATCAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+g:"",o.envMap?"#define "+y:"",o.envMap?"#define "+x:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.normalMap&&o.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",o.normalMap&&o.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",o.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.sheen?"#define USE_SHEEN":"",o.vertexTangents?"#define USE_TANGENT":"",o.vertexColors?"#define USE_COLOR":"",o.vertexUvs?"#define USE_UV":"",o.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",o.gradientMap?"#define USE_GRADIENTMAP":"",o.flatShading?"#define FLAT_SHADED":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",o.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensions&&n.extensions.shaderTextureLOD||o.envMap)&&(o.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",o.toneMapping!==Y?"#define TONE_MAPPING":"",o.toneMapping!==Y?br.tonemapping_pars_fragment:"",o.toneMapping!==Y?Go("toneMapping",o.toneMapping):"",o.dithering?"#define DITHERING":"",o.outputEncoding||o.mapEncoding||o.matcapEncoding||o.envMapEncoding||o.emissiveMapEncoding?br.encodings_pars_fragment:"",o.mapEncoding?jo("mapTexelToLinear",o.mapEncoding):"",o.matcapEncoding?jo("matcapTexelToLinear",o.matcapEncoding):"",o.envMapEncoding?jo("envMapTexelToLinear",o.envMapEncoding):"",o.emissiveMapEncoding?jo("emissiveMapTexelToLinear",o.emissiveMapEncoding):"",o.outputEncoding?("linearToOutputTexel",c=o.outputEncoding,u=Vo(c),"vec4 linearToOutputTexel( vec4 value ) { return LinearTo"+u[0]+u[1]+"; }"):"",o.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ho).join("\n")),m=ko(m=Wo(m=Yo(m),o),o),f=ko(f=Wo(f=Yo(f),o),o),m=Qo(m),f=Qo(f),o.isWebGL2&&!n.isRawShaderMaterial){var E=!1,T=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&null!==m.match(T)&&null!==f.match(T)&&(E=!0,m=m.replace(T,""),f=f.replace(T,"")),a=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+a,h=["#version 300 es\n","#define varying in",E?"":"out highp vec4 pc_fragColor;",E?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+h,S>0&&(a=(a=a.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","layout(num_views = "+S+") in;","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace(["uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;"].join("\n"),["uniform mat4 modelViewMatrices["+S+"];","uniform mat4 projectionMatrices["+S+"];","uniform mat4 viewMatrices["+S+"];","uniform mat3 normalMatrices["+S+"];","#define modelViewMatrix modelViewMatrices[VIEW_ID]","#define projectionMatrix projectionMatrices[VIEW_ID]","#define viewMatrix viewMatrices[VIEW_ID]","#define normalMatrix normalMatrices[VIEW_ID]"].join("\n")),h=(h=h.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace("uniform mat4 viewMatrix;",["uniform mat4 viewMatrices["+S+"];","#define viewMatrix viewMatrices[VIEW_ID]"].join("\n")))}var A,L,P=h+f,z=Do(p,35633,a+m),R=Do(p,35632,P);if(p.attachShader(M,z),p.attachShader(M,R),void 0!==n.index0AttributeName?p.bindAttribLocation(M,0,n.index0AttributeName):!0===o.morphTargets&&p.bindAttribLocation(M,0,"position"),p.linkProgram(M),t.debug.checkShaderErrors){var C=p.getProgramInfoLog(M).trim(),O=p.getShaderInfoLog(z).trim(),I=p.getShaderInfoLog(R).trim(),N=!0,B=!0;if(!1===p.getProgramParameter(M,35714)){N=!1;var D=Uo(p,z,"vertex"),F=Uo(p,R,"fragment");console.error("THREE.WebGLProgram: shader error: ",p.getError(),"35715",p.getProgramParameter(M,35715),"gl.getProgramInfoLog",C,D,F)}else""!==C?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",C):""!==O&&""!==I||(B=!1);B&&(this.diagnostics={runnable:N,material:n,programLog:C,vertexShader:{log:O,prefix:a},fragmentShader:{log:I,prefix:h}})}return p.deleteShader(z),p.deleteShader(R),this.getUniforms=function(){return void 0===A&&(A=new Bo(p,M)),A},this.getAttributes=function(){return void 0===L&&(L=function(t,e){for(var i={},n=t.getProgramParameter(e,35721),r=0;r<n;r++){var o=t.getActiveAttrib(e,r).name;i[o]=t.getAttribLocation(e,o)}return i}(p,M)),L},this.destroy=function(){p.deleteProgram(M),this.program=void 0},this.name=r.name,this.id=Fo++,this.cacheKey=i,this.usedTimes=1,this.program=M,this.vertexShader=z,this.fragmentShader=R,this.numMultiviewViews=S,this}function ea(t,e,i){var n=[],r=i.isWebGL2,o=i.logarithmicDepthBuffer,a=i.floatVertexTextures,s=i.precision,q=i.maxVertexUniforms,l=i.vertexTextures,h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","numMultiviewViews","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function d(t,e){var i;return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=t.texture.encoding):i=ue,i===ue&&e&&(i=de),i}this.getParameters=function(e,n,p,m,f,v,g){var y=h[e.type],x=g.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(a)return 1024;var i=q,n=Math.floor((i-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}(g):0;null!==e.precision&&(s=i.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",s,"instead.");var w=t.getRenderTarget(),b=w&&w.isWebGLMultiviewRenderTarget?w.numViews:0;return{isWebGL2:r,shaderID:y,precision:s,instancing:!0===g.isInstancedMesh,supportsVertexTextures:l,numMultiviewViews:b,outputEncoding:d(w?w.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:d(e.map,t.gammaInput),matcap:!!e.matcap,matcapEncoding:d(e.matcap,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:d(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===ot||e.envMap.mapping===at),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:d(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===_e,tangentSpaceNormalMap:e.normalMapType===be,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.displacementMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||!e.displacementMap),fog:!!m,useFog:e.fog,fogExp2:m&&m.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:o,skinning:e.skinning&&x>0,maxBones:x,useVertexTexture:a,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:n.directional.length,numPointLights:n.point.length,numSpotLights:n.spot.length,numRectAreaLights:n.rectArea.length,numHemiLights:n.hemi.length,numDirLightShadows:n.directionalShadowMap.length,numPointLightShadows:n.pointShadowMap.length,numSpotLightShadows:n.spotShadowMap.length,numClippingPlanes:f,numClipIntersection:v,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&p.length>0,shadowMapType:t.shadowMap.type,toneMapping:e.toneMapped?t.toneMapping:Y,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===u,flipSided:e.side===c,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCacheKey=function(e,i){var n=[];if(i.shaderID?n.push(i.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var o=0;o<p.length;o++)n.push(i[p[o]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.push(t.gammaFactor),n.join()},this.acquireProgram=function(i,r,o,a){for(var s,q=0,l=n.length;q<l;q++){var h=n[q];if(h.cacheKey===a){++(s=h).usedTimes;break}}return void 0===s&&(s=new ta(t,e,a,i,r,o),n.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=n.indexOf(t);n[e]=n[n.length-1],n.pop(),t.destroy()}},this.programs=n}function ia(){var t=new WeakMap;return{get:function(e){var i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function na(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ra(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function oa(){var t=[],e=0,i=[],n=[],r={id:-1};function o(i,n,o,a,s,q){var l=t[e];return void 0===l?(l={id:i.id,object:i,geometry:n,material:o,program:o.program||r,groupOrder:a,renderOrder:i.renderOrder,z:s,group:q},t[e]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=o,l.program=o.program||r,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=s,l.group=q),e++,l}return{opaque:i,transparent:n,init:function(){e=0,i.length=0,n.length=0},push:function(t,e,r,a,s,q){var l=o(t,e,r,a,s,q);(!0===r.transparent?n:i).push(l)},unshift:function(t,e,r,a,s,q){var l=o(t,e,r,a,s,q);(!0===r.transparent?n:i).unshift(l)},sort:function(){i.length>1&&i.sort(na),n.length>1&&n.sort(ra)}}}function aa(){var t=new WeakMap;function e(i){var n=i.target;n.removeEventListener("dispose",e),t.delete(n)}return{get:function(i,n){var r,o=t.get(i);return void 0===o?(r=new oa,t.set(i,new WeakMap),t.get(i).set(n,r),i.addEventListener("dispose",e)):void 0===(r=o.get(n))&&(r=new oa,o.set(n,r)),r},dispose:function(){t=new WeakMap}}}function sa(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var i;switch(e.type){case"DirectionalLight":i={direction:new Ne,color:new qn,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"SpotLight":i={position:new Ne,direction:new Ne,color:new qn,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"PointLight":i={position:new Ne,color:new qn,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Re,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":i={direction:new Ne,skyColor:new qn,groundColor:new qn};break;case"RectAreaLight":i={color:new qn,position:new Ne,halfWidth:new Ne,halfHeight:new Ne}}return t[e.id]=i,i}}}var qa=0;function la(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function ha(){for(var t=new sa,e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},i=0;i<9;i++)e.probe.push(new Ne);var n=new Ne,r=new $e,o=new $e;return{setup:function(i,a,s){for(var q=0,l=0,h=0,c=0;c<9;c++)e.probe[c].set(0,0,0);var u=0,p=0,d=0,m=0,f=0,v=0,g=0,y=0,x=s.matrixWorldInverse;i.sort(la),c=0;for(var w=i.length;c<w;c++){var b=i[c],_=b.color,M=b.intensity,S=b.distance,E=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)q+=_.r*M,l+=_.g*M,h+=_.b*M;else if(b.isLightProbe)for(var T=0;T<9;T++)e.probe[T].addScaledVector(b.sh.coefficients[T],M);else if(b.isDirectionalLight){if((L=t.get(b)).color.copy(b.color).multiplyScalar(b.intensity),L.direction.setFromMatrixPosition(b.matrixWorld),n.setFromMatrixPosition(b.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(x),L.shadow=b.castShadow,b.castShadow){var A=b.shadow;L.shadowBias=A.bias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,e.directionalShadowMap[u]=E,e.directionalShadowMatrix[u]=b.shadow.matrix,v++}e.directional[u]=L,u++}else if(b.isSpotLight)(L=t.get(b)).position.setFromMatrixPosition(b.matrixWorld),L.position.applyMatrix4(x),L.color.copy(_).multiplyScalar(M),L.distance=S,L.direction.setFromMatrixPosition(b.matrixWorld),n.setFromMatrixPosition(b.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(x),L.coneCos=Math.cos(b.angle),L.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),L.decay=b.decay,L.shadow=b.castShadow,b.castShadow&&(A=b.shadow,L.shadowBias=A.bias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,e.spotShadowMap[d]=E,e.spotShadowMatrix[d]=b.shadow.matrix,y++),e.spot[d]=L,d++;else if(b.isRectAreaLight)(L=t.get(b)).color.copy(_).multiplyScalar(M),L.position.setFromMatrixPosition(b.matrixWorld),L.position.applyMatrix4(x),o.identity(),r.copy(b.matrixWorld),r.premultiply(x),o.extractRotation(r),L.halfWidth.set(.5*b.width,0,0),L.halfHeight.set(0,.5*b.height,0),L.halfWidth.applyMatrix4(o),L.halfHeight.applyMatrix4(o),e.rectArea[m]=L,m++;else if(b.isPointLight)(L=t.get(b)).position.setFromMatrixPosition(b.matrixWorld),L.position.applyMatrix4(x),L.color.copy(b.color).multiplyScalar(b.intensity),L.distance=b.distance,L.decay=b.decay,L.shadow=b.castShadow,b.castShadow&&(A=b.shadow,L.shadowBias=A.bias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,L.shadowCameraNear=A.camera.near,L.shadowCameraFar=A.camera.far,e.pointShadowMap[p]=E,e.pointShadowMatrix[p]=b.shadow.matrix,g++),e.point[p]=L,p++;else if(b.isHemisphereLight){var L;(L=t.get(b)).direction.setFromMatrixPosition(b.matrixWorld),L.direction.transformDirection(x),L.direction.normalize(),L.skyColor.copy(b.color).multiplyScalar(M),L.groundColor.copy(b.groundColor).multiplyScalar(M),e.hemi[f]=L,f++}}e.ambient[0]=q,e.ambient[1]=l,e.ambient[2]=h;var P=e.hash;P.directionalLength===u&&P.pointLength===p&&P.spotLength===d&&P.rectAreaLength===m&&P.hemiLength===f&&P.numDirectionalShadows===v&&P.numPointShadows===g&&P.numSpotShadows===y||(e.directional.length=u,e.spot.length=d,e.rectArea.length=m,e.point.length=p,e.hemi.length=f,e.directionalShadowMap.length=v,e.pointShadowMap.length=g,e.spotShadowMap.length=y,e.directionalShadowMatrix.length=v,e.pointShadowMatrix.length=g,e.spotShadowMatrix.length=y,P.directionalLength=u,P.pointLength=p,P.spotLength=d,P.rectAreaLength=m,P.hemiLength=f,P.numDirectionalShadows=v,P.numPointShadows=g,P.numSpotShadows=y,e.version=qa++)},state:e}}function ca(){var t=new ha,e=[],i=[];return{init:function(){e.length=0,i.length=0},state:{lightsArray:e,shadowsArray:i,lights:t},setupLights:function(n){t.setup(e,i,n)},pushLight:function(t){e.push(t)},pushShadow:function(t){i.push(t)}}}function ua(){var t=new WeakMap;function e(i){var n=i.target;n.removeEventListener("dispose",e),t.delete(n)}return{get:function(i,n){var r;return!1===t.has(i)?(r=new ca,t.set(i,new WeakMap),t.get(i).set(n,r),i.addEventListener("dispose",e)):!1===t.get(i).has(n)?(r=new ca,t.get(i).set(n,r)):r=t.get(i).get(n),r},dispose:function(){t=new WeakMap}}}function pa(t){dn.call(this),this.type="MeshDepthMaterial",this.depthPacking=xe,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function da(t){dn.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Ne,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}pa.prototype=Object.create(dn.prototype),pa.prototype.constructor=pa,pa.prototype.isMeshDepthMaterial=!0,pa.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},da.prototype=Object.create(dn.prototype),da.prototype.constructor=da,da.prototype.isMeshDistanceMaterial=!0,da.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var ma="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n  \n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\n}",fa="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function va(t,e,i){var n=new wr,r=new Re,o=new Re,a=new Ge,q=[],p=[],d={},f={0:c,1:h,2:u},v=new ur({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Re},radius:{value:4}},vertexShader:fa,fragmentShader:ma}),g=v.clone();g.defines.HORIZONAL_PASS=1;var y=new In;y.setAttribute("position",new fn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var x=new $n(y,v),w=this;function b(i,n){var r=e.update(x);v.uniforms.shadow_pass.value=i.map.texture,v.uniforms.resolution.value=i.mapSize,v.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,r,v,x,null),g.uniforms.shadow_pass.value=i.mapPass.texture,g.uniforms.resolution.value=i.mapSize,g.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,r,g,x,null)}function _(t,e,i){var n=t<<0|e<<1|i<<2,r=q[n];return void 0===r&&(r=new pa({depthPacking:we,morphTargets:t,skinning:e}),q[n]=r),r}function M(t,e,i){var n=t<<0|e<<1|i<<2,r=p[n];return void 0===r&&(r=new da({morphTargets:t,skinning:e}),p[n]=r),r}function S(e,i,n,r,o,a){var s=e.geometry,q=null,h=_,c=e.customDepthMaterial;if(!0===n.isPointLight&&(h=M,c=e.customDistanceMaterial),void 0===c){var u=!1;!0===i.morphTargets&&(!0===s.isBufferGeometry?u=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:!0===s.isGeometry&&(u=s.morphTargets&&s.morphTargets.length>0));var p=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?p=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),q=h(u,p,!0===e.isInstancedMesh)}else q=c;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){var m=q.uuid,v=i.uuid,g=d[m];void 0===g&&(g={},d[m]=g);var y=g[v];void 0===y&&(y=q.clone(),g[v]=y),q=y}return q.visible=i.visible,q.wireframe=i.wireframe,q.side=a===l?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:f[i.side],q.clipShadows=i.clipShadows,q.clippingPlanes=i.clippingPlanes,q.clipIntersection=i.clipIntersection,q.wireframeLinewidth=i.wireframeLinewidth,q.linewidth=i.linewidth,!0===n.isPointLight&&!0===q.isMeshDistanceMaterial&&(q.referencePosition.setFromMatrixPosition(n.matrixWorld),q.nearDistance=r,q.farDistance=o),q}function E(i,r,o,a,s){if(!1!==i.visible){if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&s===l)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,i.matrixWorld);var q=e.update(i),h=i.material;if(Array.isArray(h))for(var c=q.groups,u=0,p=c.length;u<p;u++){var d=c[u],m=h[d.materialIndex];if(m&&m.visible){var f=S(i,m,a,o.near,o.far,s);t.renderBufferDirect(o,null,q,f,i,d)}}else h.visible&&(f=S(i,h,a,o.near,o.far,s),t.renderBufferDirect(o,null,q,f,i,null))}for(var v=i.children,g=0,y=v.length;g<y;g++)E(v[g],r,o,a,s)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=s,this.render=function(e,s,q){if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)&&0!==e.length){var h=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),p=t.state;p.setBlending(m),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(var d=0,f=e.length;d<f;d++){var v=e[d],g=v.shadow;if(void 0!==g){r.copy(g.mapSize);var y=g.getFrameExtents();if(r.multiply(y),o.copy(g.mapSize),(r.x>i||r.y>i)&&(console.warn("THREE.WebGLShadowMap:",v,"has shadow exceeding max texture size, reducing"),r.x>i&&(o.x=Math.floor(i/y.x),r.x=o.x*y.x,g.mapSize.x=o.x),r.y>i&&(o.y=Math.floor(i/y.y),r.y=o.y*y.y,g.mapSize.y=o.y)),null===g.map&&!g.isPointLightShadow&&this.type===l){var x={minFilter:pt,magFilter:pt,format:Pt};g.map=new He(r.x,r.y,x),g.map.texture.name=v.name+".shadowMap",g.mapPass=new He(r.x,r.y,x),g.camera.updateProjectionMatrix()}null===g.map&&(x={minFilter:ht,magFilter:ht,format:Pt},g.map=new He(r.x,r.y,x),g.map.texture.name=v.name+".shadowMap",g.camera.updateProjectionMatrix()),t.setRenderTarget(g.map),t.clear();for(var _=g.getViewportCount(),M=0;M<_;M++){var S=g.getViewport(M);a.set(o.x*S.x,o.y*S.y,o.x*S.z,o.y*S.w),p.viewport(a),g.updateMatrices(v,M),n=g.getFrustum(),E(s,q,g.camera,v,this.type)}g.isPointLightShadow||this.type!==l||b(g,q)}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}w.needsUpdate=!1,t.setRenderTarget(h,c,u)}}}function ga(t,e,i){var n=i.isWebGL2,s=new function(){var e=!1,i=new Ge,n=null,r=new Ge(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,o,a,s){!0===s&&(e*=a,n*=a,o*=a),i.set(e,n,o,a),!1===r.equals(i)&&(t.clearColor(e,n,o,a),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},q=new function(){var e=!1,i=null,n=null,r=null;return{setTest:function(t){t?yt(2929):xt(2929)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case B:t.depthFunc(512);break;case D:t.depthFunc(519);break;case F:t.depthFunc(513);break;case V:t.depthFunc(515);break;case U:t.depthFunc(514);break;case j:t.depthFunc(518);break;case G:t.depthFunc(516);break;case H:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,n=null,r=null}}},l=new function(){var e=!1,i=null,n=null,r=null,o=null,a=null,s=null,q=null,l=null;return{setTest:function(t){e||(t?yt(2960):xt(2960))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,a){n===e&&r===i&&o===a||(t.stencilFunc(e,i,a),n=e,r=i,o=a)},setOp:function(e,i,n){a===e&&s===i&&q===n||(t.stencilOp(e,i,n),a=e,s=i,q=n)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,i=null,n=null,r=null,o=null,a=null,s=null,q=null,l=null}}},h=t.getParameter(34921),p=new Uint8Array(h),d=new Uint8Array(h),W=new Uint8Array(h),k={},X=null,Y=null,Z=null,J=null,Q=null,K=null,$=null,tt=null,et=null,it=!1,nt=null,rt=null,ot=null,at=null,st=null,qt=t.getParameter(35661),lt=!1,ht=0,ct=t.getParameter(7938);-1!==ct.indexOf("WebGL")?(ht=parseFloat(/^WebGL\ ([0-9])/.exec(ct)[1]),lt=ht>=1):-1!==ct.indexOf("OpenGL ES")&&(ht=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ct)[1]),lt=ht>=2);var ut=null,pt={},dt=new Ge,mt=new Ge;function ft(e,i,n){var r=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(var a=0;a<n;a++)t.texImage2D(i+a,0,6408,1,1,0,6408,5121,r);return o}var vt={};function gt(i,r){p[i]=1,0===d[i]&&(t.enableVertexAttribArray(i),d[i]=1),W[i]!==r&&((n?t:e.get("ANGLE_instanced_arrays"))[n?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),W[i]=r)}function yt(e){!0!==k[e]&&(t.enable(e),k[e]=!0)}function xt(e){!1!==k[e]&&(t.disable(e),k[e]=!1)}vt[3553]=ft(3553,3553,1),vt[34067]=ft(34067,34069,6),s.setClear(0,0,0,1),q.setClear(1),l.setClear(0),yt(2929),q.setFunc(V),St(!1),Et(o),yt(2884),Mt(m);var wt={[w]:32774,[b]:32778,[_]:32779};if(n)wt[M]=32775,wt[S]=32776;else{var bt=e.get("EXT_blend_minmax");null!==bt&&(wt[M]=bt.MIN_EXT,wt[S]=bt.MIN_EXT)}var _t={[E]:0,[T]:1,[A]:768,[P]:770,[N]:776,[O]:774,[R]:772,[L]:769,[z]:771,[I]:775,[C]:773};function Mt(e,i,n,r,o,a,s,q){if(e!==m){if(Y||(yt(3042),Y=!0),e===x)o=o||i,a=a||n,s=s||r,i===J&&o===$||(t.blendEquationSeparate(wt[i],wt[o]),J=i,$=o),n===Q&&r===K&&a===tt&&s===et||(t.blendFuncSeparate(_t[n],_t[r],_t[a],_t[s]),Q=n,K=r,tt=a,et=s),Z=e,it=null;else if(e!==Z||q!==it){if(J===w&&$===w||(t.blendEquation(32774),J=w,$=w),q)switch(e){case f:t.blendFuncSeparate(1,771,1,771);break;case v:t.blendFunc(1,1);break;case g:t.blendFuncSeparate(0,0,769,771);break;case y:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case f:t.blendFuncSeparate(770,771,1,771);break;case v:t.blendFunc(770,1);break;case g:t.blendFunc(0,769);break;case y:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}Q=null,K=null,tt=null,et=null,Z=e,it=q}}else Y&&(xt(3042),Y=!1)}function St(e){nt!==e&&(e?t.frontFace(2304):t.frontFace(2305),nt=e)}function Et(e){e!==r?(yt(2884),e!==rt&&(e===o?t.cullFace(1029):e===a?t.cullFace(1028):t.cullFace(1032))):xt(2884),rt=e}function Tt(e,i,n){e?(yt(32823),at===i&&st===n||(t.polygonOffset(i,n),at=i,st=n)):xt(32823)}function At(e){void 0===e&&(e=33984+qt-1),ut!==e&&(t.activeTexture(e),ut=e)}return{buffers:{color:s,depth:q,stencil:l},initAttributes:function(){for(var t=0,e=p.length;t<e;t++)p[t]=0},enableAttribute:function(t){gt(t,0)},enableAttributeAndDivisor:gt,disableUnusedAttributes:function(){for(var e=0,i=d.length;e!==i;++e)d[e]!==p[e]&&(t.disableVertexAttribArray(e),d[e]=0)},enable:yt,disable:xt,useProgram:function(e){return X!==e&&(t.useProgram(e),X=e,!0)},setBlending:Mt,setMaterial:function(t,e){t.side===u?xt(2884):yt(2884);var i=t.side===c;e&&(i=!i),St(i),t.blending===f&&!1===t.transparent?Mt(m):Mt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),q.setFunc(t.depthFunc),q.setTest(t.depthTest),q.setMask(t.depthWrite),s.setMask(t.colorWrite);var n=t.stencilWrite;l.setTest(n),n&&(l.setMask(t.stencilWriteMask),l.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),l.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Tt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:St,setCullFace:Et,setLineWidth:function(e){e!==ot&&(lt&&t.lineWidth(e),ot=e)},setPolygonOffset:Tt,setScissorTest:function(t){t?yt(3089):xt(3089)},activeTexture:At,bindTexture:function(e,i){null===ut&&At();var n=pt[ut];void 0===n&&(n={type:void 0,texture:void 0},pt[ut]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||vt[e]),n.type=e,n.texture=i)},unbindTexture:function(){var e=pt[ut];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===dt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),dt.copy(e))},viewport:function(e){!1===mt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),mt.copy(e))},reset:function(){for(var e=0;e<d.length;e++)1===d[e]&&(t.disableVertexAttribArray(e),d[e]=0);k={},ut=null,pt={},X=null,Z=null,nt=null,rt=null,s.reset(),q.reset(),l.reset()}}}function ya(t,e,i,n,r,o,a){var s,q=r.isWebGL2,l=r.maxTextures,h=r.maxCubemapSize,c=r.maxTextureSize,u=r.maxSamples,p=new WeakMap,d="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d");function m(t,e){return d?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function f(t,e,i,n){var r=1;if((t.width>n||t.height>n)&&(r=n/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){var o=e?ze.floorPowerOfTwo:Math.floor,a=o(r*t.width),q=o(r*t.height);void 0===s&&(s=m(a,q));var l=i?m(a,q):s;return l.width=a,l.height=q,l.getContext("2d").drawImage(t,0,0,a,q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+q+")."),l}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function v(t){return ze.isPowerOfTwo(t.width)&&ze.isPowerOfTwo(t.height)}function g(t,e){return t.generateMipmaps&&e&&t.minFilter!==ht&&t.minFilter!==pt}function y(e,i,r,o){t.generateMipmap(e),n.get(i).__maxMipLevel=Math.log(Math.max(r,o))*Math.LOG2E}function x(t,i){if(!1===q)return t;var n=t;return 6403===t&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===t&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===t&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),33325===n||33326===n||34842===n||34836===n?e.get("EXT_color_buffer_float"):34843!==n&&34837!==n||console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),n}function w(t){return t===ht||t===ct||t===ut?9728:9729}function b(e){var i=e.target;i.removeEventListener("dispose",b),function(e){var i=n.get(e);void 0!==i.__webglInit&&(t.deleteTexture(i.__webglTexture),n.remove(e))}(i),i.isVideoTexture&&p.delete(i),a.memory.textures--}function _(e){var i=e.target;i.removeEventListener("dispose",_),function(e){var i=n.get(e),r=n.get(e.texture);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLRenderTargetCube)for(var o=0;o<6;o++)t.deleteFramebuffer(i.__webglFramebuffer[o]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[o]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);if(e.isWebGLMultiviewRenderTarget){t.deleteTexture(i.__webglColorTexture),t.deleteTexture(i.__webglDepthStencilTexture),a.memory.textures-=2,o=0;for(var s=i.__webglViewFramebuffers.length;o<s;o++)t.deleteFramebuffer(i.__webglViewFramebuffers[o])}n.remove(e.texture),n.remove(e)}}(i),a.memory.textures--}var M=0;function S(t,e){var r=n.get(t);if(t.isVideoTexture&&function(t){var e=a.render.frame;p.get(t)!==e&&(p.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){var o=t.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==o.complete)return void R(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,r.__webglTexture)}function E(e,r){if(6===e.image.length){var a=n.get(e);if(e.version>0&&a.__version!==e.version){z(a,e),i.activeTexture(33984+r),i.bindTexture(34067,a.__webglTexture),t.pixelStorei(37440,e.flipY);for(var s=e&&e.isCompressedTexture,l=e.image[0]&&e.image[0].isDataTexture,c=[],u=0;u<6;u++)c[u]=s||l?l?e.image[u].image:e.image[u]:f(e.image[u],!1,!0,h);var p,d=c[0],m=v(d)||q,w=o.convert(e.format),b=o.convert(e.type),_=x(w,b);if(P(34067,e,m),s){for(u=0;u<6;u++){p=c[u].mipmaps;for(var M=0;M<p.length;M++){var S=p[M];e.format!==Pt&&e.format!==Lt?null!==w?i.compressedTexImage2D(34069+u,M,_,S.width,S.height,0,S.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+u,M,_,S.width,S.height,0,w,b,S.data)}}a.__maxMipLevel=p.length-1}else{for(p=e.mipmaps,u=0;u<6;u++)if(l)for(i.texImage2D(34069+u,0,_,c[u].width,c[u].height,0,w,b,c[u].data),M=0;M<p.length;M++){var E=(S=p[M]).image[u].image;i.texImage2D(34069+u,M+1,_,E.width,E.height,0,w,b,E.data)}else for(i.texImage2D(34069+u,0,_,w,b,c[u]),M=0;M<p.length;M++)S=p[M],i.texImage2D(34069+u,M+1,_,w,b,S.image[u]);a.__maxMipLevel=p.length}g(e,m)&&y(34067,e,d.width,d.height),a.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(33984+r),i.bindTexture(34067,a.__webglTexture)}}function T(t,e){i.activeTexture(33984+e),i.bindTexture(34067,n.get(t).__webglTexture)}var A={[st]:10497,[qt]:33071,[lt]:33648},L={[ht]:9728,[ct]:9984,[ut]:9986,[pt]:9729,[dt]:9985,[mt]:9987};function P(i,o,a){a?(t.texParameteri(i,10242,A[o.wrapS]),t.texParameteri(i,10243,A[o.wrapT]),32879!==i&&35866!==i||t.texParameteri(i,32882,A[o.wrapR]),t.texParameteri(i,10240,L[o.magFilter]),t.texParameteri(i,10241,L[o.minFilter])):(t.texParameteri(i,10242,33071),t.texParameteri(i,10243,33071),32879!==i&&35866!==i||t.texParameteri(i,32882,33071),o.wrapS===qt&&o.wrapT===qt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(i,10240,w(o.magFilter)),t.texParameteri(i,10241,w(o.minFilter)),o.minFilter!==ht&&o.minFilter!==pt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var s=e.get("EXT_texture_filter_anisotropic");if(s){if(o.type===bt&&null===e.get("OES_texture_float_linear"))return;if(o.type===_t&&null===(q||e.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function z(e,i){void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",b),e.__webglTexture=t.createTexture(),a.memory.textures++)}function R(e,n,r){var a=3553;n.isDataTexture2DArray&&(a=35866),n.isDataTexture3D&&(a=32879),z(e,n),i.activeTexture(33984+r),i.bindTexture(a,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment);var s=function(t){return!q&&(t.wrapS!==qt||t.wrapT!==qt||t.minFilter!==ht&&t.minFilter!==pt)}(n)&&!1===v(n.image),l=f(n.image,s,!1,c),h=v(l)||q,u=o.convert(n.format),p=o.convert(n.type),d=x(u,p);P(a,n,h);var m,w=n.mipmaps;if(n.isDepthTexture){if(d=6402,n.type===bt){if(!1===q)throw new Error("Float Depth Texture only supported in WebGL2.0");d=36012}else q&&(d=33189);n.format===Ct&&6402===d&&n.type!==yt&&n.type!==wt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=yt,p=o.convert(n.type)),n.format===Ot&&(d=34041,n.type!==Tt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Tt,p=o.convert(n.type))),i.texImage2D(3553,0,d,l.width,l.height,0,u,p,null)}else if(n.isDataTexture)if(w.length>0&&h){for(var b=0,_=w.length;b<_;b++)m=w[b],i.texImage2D(3553,b,d,m.width,m.height,0,u,p,m.data);n.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else i.texImage2D(3553,0,d,l.width,l.height,0,u,p,l.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(b=0,_=w.length;b<_;b++)m=w[b],n.format!==Pt&&n.format!==Lt?null!==u?i.compressedTexImage2D(3553,b,d,m.width,m.height,0,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,b,d,m.width,m.height,0,u,p,m.data);e.__maxMipLevel=w.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,d,l.width,l.height,l.depth,0,u,p,l.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,d,l.width,l.height,l.depth,0,u,p,l.data),e.__maxMipLevel=0;else if(w.length>0&&h){for(b=0,_=w.length;b<_;b++)m=w[b],i.texImage2D(3553,b,d,u,p,m);n.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else i.texImage2D(3553,0,d,u,p,l),e.__maxMipLevel=0;g(n,h)&&y(3553,n,l.width,l.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function C(e,r,a,s){var q=o.convert(r.texture.format),l=o.convert(r.texture.type),h=x(q,l);i.texImage2D(s,0,h,r.width,r.height,0,q,l,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,a,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function O(e,i,n){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){if(n){var r=I(i);t.renderbufferStorageMultisample(36161,r,33189,i.width,i.height)}else t.renderbufferStorage(36161,33189,i.width,i.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer)n?(r=I(i),t.renderbufferStorageMultisample(36161,r,35056,i.width,i.height)):t.renderbufferStorage(36161,34041,i.width,i.height),t.framebufferRenderbuffer(36160,33306,36161,e);else{var a=x(o.convert(i.texture.format),o.convert(i.texture.type));n?(r=I(i),t.renderbufferStorageMultisample(36161,r,a,i.width,i.height)):t.renderbufferStorage(36161,a,i.width,i.height)}t.bindRenderbuffer(36161,null)}function I(t){return q&&t.isWebGLMultisampleRenderTarget?Math.min(u,t.samples):0}var N=!1,B=!1;this.allocateTextureUnit=function(){var t=M;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),M+=1,t},this.resetTextureUnits=function(){M=0},this.setTexture2D=S,this.setTexture2DArray=function(t,e){var r=n.get(t);t.version>0&&r.__version!==t.version?R(r,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){var r=n.get(t);t.version>0&&r.__version!==t.version?R(r,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=E,this.setTextureCubeDynamic=T,this.setupRenderTarget=function(r){var s=n.get(r),l=n.get(r.texture);r.addEventListener("dispose",_),l.__webglTexture=t.createTexture(),a.memory.textures++;var h=!0===r.isWebGLRenderTargetCube,c=!0===r.isWebGLMultisampleRenderTarget,u=!0===r.isWebGLMultiviewRenderTarget,p=v(r)||q;if(h){s.__webglFramebuffer=[];for(var d=0;d<6;d++)s.__webglFramebuffer[d]=t.createFramebuffer()}else if(s.__webglFramebuffer=t.createFramebuffer(),c)if(q){s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var m=x(o.convert(r.texture.format),o.convert(r.texture.type)),f=I(r);t.renderbufferStorageMultisample(36161,f,m,r.width,r.height),t.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),r.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),O(s.__webglDepthRenderbuffer,r,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");else if(u){var w=r.width,b=r.height,M=r.numViews;t.bindFramebuffer(36160,s.__webglFramebuffer);var E=e.get("OVR_multiview2");a.memory.textures+=2;var T=t.createTexture();t.bindTexture(35866,T),t.texParameteri(35866,10240,9728),t.texParameteri(35866,10241,9728),t.texImage3D(35866,0,32856,w,b,M,0,6408,5121,null),E.framebufferTextureMultiviewOVR(36160,36064,T,0,0,M);var A=t.createTexture();t.bindTexture(35866,A),t.texParameteri(35866,10240,9728),t.texParameteri(35866,10241,9728),t.texImage3D(35866,0,35056,w,b,M,0,34041,34042,null),E.framebufferTextureMultiviewOVR(36160,33306,A,0,0,M);var L=new Array(M);for(d=0;d<M;++d)L[d]=t.createFramebuffer(),t.bindFramebuffer(36160,L[d]),t.framebufferTextureLayer(36160,36064,T,0,d);s.__webglColorTexture=T,s.__webglDepthStencilTexture=A,s.__webglViewFramebuffers=L,t.bindFramebuffer(36160,null),t.bindTexture(35866,null)}if(h){for(i.bindTexture(34067,l.__webglTexture),P(34067,r.texture,p),d=0;d<6;d++)C(s.__webglFramebuffer[d],r,36064,34069+d);g(r.texture,p)&&y(34067,r.texture,r.width,r.height),i.bindTexture(34067,null)}else u||(i.bindTexture(3553,l.__webglTexture),P(3553,r.texture,p),C(s.__webglFramebuffer,r,36064,3553),g(r.texture,p)&&y(3553,r.texture,r.width,r.height),i.bindTexture(3553,null));r.depthBuffer&&function(e){var i=n.get(e),r=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),S(i.depthTexture,0);var r=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Ct)t.framebufferTexture2D(36160,36096,3553,r,0);else{if(i.depthTexture.format!==Ot)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,r,0)}}(i.__webglFramebuffer,e)}else if(r){i.__webglDepthbuffer=[];for(var o=0;o<6;o++)t.bindFramebuffer(36160,i.__webglFramebuffer[o]),i.__webglDepthbuffer[o]=t.createRenderbuffer(),O(i.__webglDepthbuffer[o],e)}else t.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),O(i.__webglDepthbuffer,e);t.bindFramebuffer(36160,null)}(r)},this.updateRenderTargetMipmap=function(t){var e=t.texture;if(g(e,v(t)||q)){var r=t.isWebGLRenderTargetCube?34067:3553,o=n.get(e).__webglTexture;i.bindTexture(r,o),y(r,e,t.width,t.height),i.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(q){var i=n.get(e);t.bindFramebuffer(36008,i.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,i.__webglFramebuffer);var r=e.width,o=e.height,a=16384;e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024),t.blitFramebuffer(0,0,r,o,0,0,r,o,a,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===N&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),N=!0),t=t.texture),S(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLRenderTargetCube&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),B=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?E(t,e):T(t,e)}}function xa(t,e,i){var n=i.isWebGL2;return{convert:function(t){var i;if(t===ft)return 5121;if(t===Mt)return 32819;if(t===St)return 32820;if(t===Et)return 33635;if(t===vt)return 5120;if(t===gt)return 5122;if(t===yt)return 5123;if(t===xt)return 5124;if(t===wt)return 5125;if(t===bt)return 5126;if(t===_t)return n?5131:null!==(i=e.get("OES_texture_half_float"))?i.HALF_FLOAT_OES:null;if(t===At)return 6406;if(t===Lt)return 6407;if(t===Pt)return 6408;if(t===zt)return 6409;if(t===Rt)return 6410;if(t===Ct)return 6402;if(t===Ot)return 34041;if(t===It)return 6403;if(t===Nt||t===Bt||t===Dt||t===Ft){if(null===(i=e.get("WEBGL_compressed_texture_s3tc")))return null;if(t===Nt)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Bt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Dt)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Ft)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===Vt||t===Ut||t===jt||t===Gt){if(null===(i=e.get("WEBGL_compressed_texture_pvrtc")))return null;if(t===Vt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===Ut)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===jt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Gt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}return t===Ht?null!==(i=e.get("WEBGL_compressed_texture_etc1"))?i.COMPRESSED_RGB_ETC1_WEBGL:null:t===Wt||t===kt||t===Xt||t===Yt||t===Zt||t===Jt||t===Qt||t===Kt||t===$t||t===te||t===ee||t===ie||t===ne||t===re?null!==(i=e.get("WEBGL_compressed_texture_astc"))?t:null:t===Tt?n?34042:null!==(i=e.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}function wa(t,e,i,n){He.call(this,t,e,n),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=i}function ba(t,e){var i,n,r,o,a,s,q,l=t.extensions,h=t.properties,c=0;function u(t){return t.isArrayCamera?t.cameras:(a[0]=t,a)}this.isAvailable=function(){if(void 0===q){var t=l.get("OVR_multiview2");if(q=null!==t&&!1===e.getContextAttributes().antialias){c=e.getParameter(t.MAX_VIEWS_OVR),i=new wa(0,0,2),s=new Re,o=[],r=[],a=[];for(var n=0;n<c;n++)o[n]=new $e,r[n]=new Fe}}return q},this.attachCamera=function(e){!1!==function(t){if(void 0===t.isArrayCamera)return!0;var e=t.cameras;if(e.length>c)return!1;for(var i=1,n=e.length;i<n;i++)if(e[0].viewport.z!==e[i].viewport.z||e[0].viewport.w!==e[i].viewport.w)return!1;return!0}(e)&&(n=t.getRenderTarget(),function(e){if(n?s.set(n.width,n.height):t.getDrawingBufferSize(s),e.isArrayCamera){var r=e.cameras[0].viewport;i.setSize(r.z,r.w),i.setNumViews(e.cameras.length)}else i.setSize(s.x,s.y),i.setNumViews(2)}(e),t.setRenderTarget(i))},this.detachCamera=function(r){i===t.getRenderTarget()&&(t.setRenderTarget(n),function(t){var n=i,r=n.numViews,o=h.get(n).__webglViewFramebuffers,a=n.width,q=n.height;if(t.isArrayCamera)for(var l=0;l<r;l++){var c=t.cameras[l].viewport,u=c.x,p=c.y,d=u+c.z,m=p+c.w;e.bindFramebuffer(36008,o[l]),e.blitFramebuffer(0,0,a,q,u,p,d,m,16384,9728)}else e.bindFramebuffer(36008,o[0]),e.blitFramebuffer(0,0,a,q,0,0,s.x,s.y,16384,9728)}(r))},this.updateCameraProjectionMatricesUniform=function(t,i){for(var n=u(t),r=0;r<n.length;r++)o[r].copy(n[r].projectionMatrix);i.setValue(e,"projectionMatrices",o)},this.updateCameraViewMatricesUniform=function(t,i){for(var n=u(t),r=0;r<n.length;r++)o[r].copy(n[r].matrixWorldInverse);i.setValue(e,"viewMatrices",o)},this.updateObjectMatricesUniforms=function(t,i,n){for(var a=u(i),s=0;s<a.length;s++)o[s].multiplyMatrices(a[s].matrixWorldInverse,t.matrixWorld),r[s].getNormalMatrix(o[s]);n.setValue(e,"modelViewMatrices",o),n.setValue(e,"normalMatrices",r)}}function _a(){vi.call(this),this.type="Group"}function Ma(t){dr.call(this),this.cameras=t||[]}wa.prototype=Object.assign(Object.create(He.prototype),{constructor:wa,isWebGLMultiviewRenderTarget:!0,copy:function(t){return He.prototype.copy.call(this,t),this.numViews=t.numViews,this},setNumViews:function(t){return this.numViews!==t&&(this.numViews=t,this.dispose()),this}}),_a.prototype=Object.assign(Object.create(vi.prototype),{constructor:_a,isGroup:!0}),Ma.prototype=Object.assign(Object.create(dr.prototype),{constructor:Ma,isArrayCamera:!0});var Sa,Ea=new Ne,Ta=new Ne;function Aa(t,e,i){Ea.setFromMatrixPosition(e.matrixWorld),Ta.setFromMatrixPosition(i.matrixWorld);var n=Ea.distanceTo(Ta),r=e.projectionMatrix.elements,o=i.projectionMatrix.elements,a=r[14]/(r[10]-1),s=r[14]/(r[10]+1),q=(r[9]+1)/r[5],l=(r[9]-1)/r[5],h=(r[8]-1)/r[0],c=(o[8]+1)/o[0],u=a*h,p=a*c,d=n/(-h+c),m=d*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(d),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);var f=a+d,v=s+d,g=u-m,y=p+(n-m),x=q*s/v*f,w=l*s/v*f;t.projectionMatrix.makePerspective(g,y,x,w,f,v)}function La(t){var e,i,n=this,r=null,o=null,a=null,s=[],q=new $e,l=new $e,h=1,c="local-floor";"undefined"!=typeof window&&"VRFrameData"in window&&(o=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",w,!1));var u=new $e,p=new Ce,d=new Ne,m=new dr;m.viewport=new Ge,m.layers.enable(1);var f=new dr;f.viewport=new Ge,f.layers.enable(2);var v=new Ma([m,f]);function g(){return null!==r&&!0===r.isPresenting}v.layers.enable(1),v.layers.enable(2);var y,x=new Re;function w(){if(g()){var o=r.getEyeParameters("left");e=2*o.renderWidth*h,i=o.renderHeight*h,y=t.getPixelRatio(),t.getSize(x),t.setDrawingBufferSize(e,i,1),m.viewport.set(0,0,e/2,i),f.viewport.set(e/2,0,e/2,i),S.start(),n.dispatchEvent({type:"sessionstart"})}else n.enabled&&t.setDrawingBufferSize(x.width,x.height,y),S.stop(),n.dispatchEvent({type:"sessionend"})}var b=[];function _(t){for(var e=navigator.getGamepads&&navigator.getGamepads(),i=0,n=e.length;i<n;i++){var r=e[i];if(r&&("Daydream Controller"===r.id||"Gear VR Controller"===r.id||"Oculus Go Controller"===r.id||"OpenVR Gamepad"===r.id||r.id.startsWith("Oculus Touch")||r.id.startsWith("HTC Vive Focus")||r.id.startsWith("Spatial Controller"))){var o=r.hand;if(0===t&&(""===o||"right"===o))return r;if(1===t&&"left"===o)return r}}}function M(t,n){null!==n&&4===n.length&&t.set(n[0]*e,n[1]*i,n[2]*e,n[3]*i)}this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new _a).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.getDevice=function(){return r},this.setDevice=function(t){void 0!==t&&(r=t),S.setContext(t)},this.setFramebufferScaleFactor=function(t){h=t},this.setReferenceSpaceType=function(t){c=t},this.setPoseTarget=function(t){void 0!==t&&(a=t)},this.getCamera=function(t){var e="local-floor"===c?1.6:0;if(!1===g())return t.position.set(0,e,0),t.rotation.set(0,0,0),t;if(r.depthNear=t.near,r.depthFar=t.far,r.getFrameData(o),"local-floor"===c){var i=r.stageParameters;i?q.fromArray(i.sittingToStandingTransform):q.makeTranslation(0,e,0)}var n=o.pose,h=null!==a?a:t;h.matrix.copy(q),h.matrix.decompose(h.position,h.quaternion,h.scale),null!==n.orientation&&(p.fromArray(n.orientation),h.quaternion.multiply(p)),null!==n.position&&(p.setFromRotationMatrix(q),d.fromArray(n.position),d.applyQuaternion(p),h.position.add(d)),h.updateMatrixWorld(),m.near=t.near,f.near=t.near,m.far=t.far,f.far=t.far,m.matrixWorldInverse.fromArray(o.leftViewMatrix),f.matrixWorldInverse.fromArray(o.rightViewMatrix),l.getInverse(q),"local-floor"===c&&(m.matrixWorldInverse.multiply(l),f.matrixWorldInverse.multiply(l));var y=h.parent;null!==y&&(u.getInverse(y.matrixWorld),m.matrixWorldInverse.multiply(u),f.matrixWorldInverse.multiply(u)),m.matrixWorld.getInverse(m.matrixWorldInverse),f.matrixWorld.getInverse(f.matrixWorldInverse),m.projectionMatrix.fromArray(o.leftProjectionMatrix),f.projectionMatrix.fromArray(o.rightProjectionMatrix),Aa(v,m,f);var x=r.getLayers();if(x.length){var w=x[0];M(m.viewport,w.leftBounds),M(f.viewport,w.rightBounds)}return function(){for(var t=0;t<s.length;t++){var e=s[t],i=_(t);if(void 0!==i&&void 0!==i.pose){if(null===i.pose)return;var n=i.pose;!1===n.hasPosition&&e.position.set(.2,-.6,-.05),null!==n.position&&e.position.fromArray(n.position),null!==n.orientation&&e.quaternion.fromArray(n.orientation),e.matrix.compose(e.position,e.quaternion,e.scale),e.matrix.premultiply(q),e.matrix.decompose(e.position,e.quaternion,e.scale),e.matrixWorldNeedsUpdate=!0,e.visible=!0;var r="Daydream Controller"===i.id?0:1;void 0===b[t]&&(b[t]=!1),b[t]!==i.buttons[r].pressed&&(b[t]=i.buttons[r].pressed,!0===b[t]?e.dispatchEvent({type:"selectstart"}):(e.dispatchEvent({type:"selectend"}),e.dispatchEvent({type:"select"})))}else e.visible=!1}}(),v},this.getStandingMatrix=function(){return q},this.isPresenting=g;var S=new Sr;this.setAnimationLoop=function(t){S.setAnimationLoop(t),g()&&S.start()},this.submitFrame=function(){g()&&r.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",w)},this.setFrameOfReferenceType=function(){console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.")}}function Pa(t,e){var i=this,n=null,r=null,o="local-floor",a=null,s=[],q=[];function l(){return null!==n&&null!==r}var h=new dr;h.layers.enable(1),h.viewport=new Ge;var c=new dr;c.layers.enable(2),c.viewport=new Ge;var u=new Ma([h,c]);function p(t){for(var e=0;e<s.length;e++)q[e]===t.inputSource&&s[e].dispatchEvent({type:t.type})}function d(){t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),x.stop(),i.dispatchEvent({type:"sessionend"})}function m(t){r=t,x.setContext(n),x.start(),i.dispatchEvent({type:"sessionstart"})}function f(){for(var t=0;t<s.length;t++)q[t]=v(t)}function v(t){for(var e=n.inputSources,i=0;i<e.length;i++){var r=e[i],o=r.handedness;if(0===t&&("none"===o||"right"===o))return r;if(1===t&&"left"===o)return r}}function g(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}u.layers.enable(1),u.layers.enable(2),this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new _a).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.setFramebufferScaleFactor=function(){},this.setReferenceSpaceType=function(t){o=t},this.getSession=function(){return n},this.setSession=function(t){null!==(n=t)&&(n.addEventListener("select",p),n.addEventListener("selectstart",p),n.addEventListener("selectend",p),n.addEventListener("end",d),n.updateRenderState({baseLayer:new XRWebGLLayer(n,e)}),n.requestReferenceSpace(o).then(m),n.addEventListener("inputsourceschange",f),f())},this.getCamera=function(t){if(l()){var e=t.parent,i=u.cameras;g(u,e);for(var n=0;n<i.length;n++)g(i[n],e);t.matrixWorld.copy(u.matrixWorld);for(var r=t.children,o=(n=0,r.length);n<o;n++)r[n].updateMatrixWorld(!0);return Aa(u,h,c),u}return t},this.isPresenting=l;var y=null,x=new Sr;x.setAnimationLoop((function(e,i){if(null!==(a=i.getViewerPose(r))){var o=a.views,l=n.renderState.baseLayer;t.setFramebuffer(l.framebuffer);for(var h=0;h<o.length;h++){var c=o[h],p=l.getViewport(c),d=c.transform.inverse.matrix,m=u.cameras[h];m.matrix.fromArray(d).getInverse(m.matrix),m.projectionMatrix.fromArray(c.projectionMatrix),m.viewport.set(p.x,p.y,p.width,p.height),0===h&&u.matrix.copy(m.matrix)}}for(h=0;h<s.length;h++){var f=s[h],v=q[h];if(v){var g=i.getPose(v.targetRaySpace,r);if(null!==g){f.matrix.fromArray(g.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.visible=!0;continue}}f.visible=!1}y&&y(e)})),this.setAnimationLoop=function(t){y=t},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new $e},this.getDevice=function(){console.warn("THREE.WebXRManager: getDevice() has been deprecated.")},this.setDevice=function(){console.warn("THREE.WebXRManager: setDevice() has been deprecated.")},this.setFrameOfReferenceType=function(){console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.")},this.submitFrame=function(){}}function za(t){var e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),i=void 0!==t.context?t.context:null,n=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,q=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat,u=null,p=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Z,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var d,m,f,v,g,y,x,w,b,_,M,S,E,T,A,L,P,z,R=this,C=!1,O=null,I=0,N=0,B=null,D=null,F=-1,V={geometry:null,program:null,wireframe:!1},U=null,j=null,G=new Ge,H=new Ge,W=null,k=e.width,X=e.height,Y=1,J=new Ge(0,0,k,X),Q=new Ge(0,0,k,X),K=!1,$=new wr,tt=new Rr,et=!1,it=!1,nt=new $e,rt=new Ne;function ot(){return null===B?Y:1}try{var at={alpha:n,depth:r,stencil:o,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:q,powerPreference:l,failIfMajorPerformanceCaveat:h,xrCompatible:!0};if(e.addEventListener("webglcontextlost",ct,!1),e.addEventListener("webglcontextrestored",ut,!1),null===(d=i||e.getContext("webgl",at)||e.getContext("experimental-webgl",at)))throw null!==e.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===d.getShaderPrecisionFormat&&(d.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function st(){m=new Cr(d),!1===(f=new zr(d,m,t)).isWebGL2&&(m.get("WEBGL_depth_texture"),m.get("OES_texture_float"),m.get("OES_texture_half_float"),m.get("OES_texture_half_float_linear"),m.get("OES_standard_derivatives"),m.get("OES_element_index_uint"),m.get("ANGLE_instanced_arrays")),m.get("OES_texture_float_linear"),z=new xa(d,m,f),(v=new ga(d,m,f)).scissor(H.copy(Q).multiplyScalar(Y).floor()),v.viewport(G.copy(J).multiplyScalar(Y).floor()),g=new Nr(d),y=new ia,x=new ya(d,m,v,y,f,z,g),w=new Er(d),b=new Or(d,w,g),_=new Fr(d,b,w,g),A=new Dr(d),M=new ea(R,m,f),S=new aa,E=new ua,T=new Lr(R,v,_,s),L=new Pr(d,m,g,f),P=new Ir(d,m,g,f),g.programs=M.programs,R.capabilities=f,R.extensions=m,R.properties=y,R.renderLists=S,R.state=v,R.info=g}st();var qt="undefined"!=typeof navigator&&"xr"in navigator&&"isSessionSupported"in navigator.xr?new Pa(R,d):new La(R);this.vr=qt;var lt=new ba(R,d),ht=new va(R,_,f.maxTextureSize);function ct(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function ut(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1,st()}function pt(t){var e=t.target;e.removeEventListener("dispose",pt),function(t){dt(t),y.remove(t)}(e)}function dt(t){var e=y.get(t).program;t.program=void 0,void 0!==e&&M.releaseProgram(e)}this.shadowMap=ht,this.getContext=function(){return d},this.getContextAttributes=function(){return d.getContextAttributes()},this.forceContextLoss=function(){var t=m.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=m.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(t){void 0!==t&&(Y=t,this.setSize(k,X,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Re),t.set(k,X)},this.setSize=function(t,i,n){qt.isPresenting()?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(k=t,X=i,e.width=Math.floor(t*Y),e.height=Math.floor(i*Y),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Re),t.set(k*Y,X*Y).floor()},this.setDrawingBufferSize=function(t,i,n){k=t,X=i,Y=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new Ge),t.copy(G)},this.getViewport=function(t){return t.copy(J)},this.setViewport=function(t,e,i,n){t.isVector4?J.set(t.x,t.y,t.z,t.w):J.set(t,e,i,n),v.viewport(G.copy(J).multiplyScalar(Y).floor())},this.getScissor=function(t){return t.copy(Q)},this.setScissor=function(t,e,i,n){t.isVector4?Q.set(t.x,t.y,t.z,t.w):Q.set(t,e,i,n),v.scissor(H.copy(Q).multiplyScalar(Y).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(t){v.setScissorTest(K=t)},this.getClearColor=function(){return T.getClearColor()},this.setClearColor=function(){T.setClearColor.apply(T,arguments)},this.getClearAlpha=function(){return T.getClearAlpha()},this.setClearAlpha=function(){T.setClearAlpha.apply(T,arguments)},this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=16384),(void 0===e||e)&&(n|=256),(void 0===i||i)&&(n|=1024),d.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ct,!1),e.removeEventListener("webglcontextrestored",ut,!1),S.dispose(),E.dispose(),y.dispose(),_.dispose(),qt.dispose(),vt.stop()},this.renderBufferImmediate=function(t,e){v.initAttributes();var i=y.get(t);t.hasPositions&&!i.position&&(i.position=d.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=d.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=d.createBuffer()),t.hasColors&&!i.color&&(i.color=d.createBuffer());var n=e.getAttributes();t.hasPositions&&(d.bindBuffer(34962,i.position),d.bufferData(34962,t.positionArray,35048),v.enableAttribute(n.position),d.vertexAttribPointer(n.position,3,5126,!1,0,0)),t.hasNormals&&(d.bindBuffer(34962,i.normal),d.bufferData(34962,t.normalArray,35048),v.enableAttribute(n.normal),d.vertexAttribPointer(n.normal,3,5126,!1,0,0)),t.hasUvs&&(d.bindBuffer(34962,i.uv),d.bufferData(34962,t.uvArray,35048),v.enableAttribute(n.uv),d.vertexAttribPointer(n.uv,2,5126,!1,0,0)),t.hasColors&&(d.bindBuffer(34962,i.color),d.bufferData(34962,t.colorArray,35048),v.enableAttribute(n.color),d.vertexAttribPointer(n.color,3,5126,!1,0,0)),v.disableUnusedAttributes(),d.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,n,r,o){var a=r.isMesh&&r.matrixWorld.determinant()<0;v.setMaterial(n,a);var s=Mt(t,e,n,r),q=!1;V.geometry===i.id&&V.program===s.id&&V.wireframe===(!0===n.wireframe)||(V.geometry=i.id,V.program=s.id,V.wireframe=!0===n.wireframe,q=!0),r.morphTargetInfluences&&(A.update(r,i,n,s),q=!0);var l,h=i.index,c=i.attributes.position,u=1;!0===n.wireframe&&(h=b.getWireframeAttribute(i),u=2);var p=L;null!==h&&(l=w.get(h),(p=P).setIndex(l)),q&&(function(t,e,i,n){if(!1!==f.isWebGL2||!t.isInstancedMesh&&!e.isInstancedBufferGeometry||null!==m.get("ANGLE_instanced_arrays")){v.initAttributes();var r=e.attributes,o=n.getAttributes(),a=i.defaultAttributeValues;for(var s in o){var q=o[s];if(q>=0){var l=r[s];if(void 0!==l){var h=l.normalized,c=l.itemSize;if(void 0===(_=w.get(l)))continue;var u=_.buffer,p=_.type,g=_.bytesPerElement;if(l.isInterleavedBufferAttribute){var y=l.data,x=y.stride,b=l.offset;y&&y.isInstancedInterleavedBuffer?(v.enableAttributeAndDivisor(q,y.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=y.meshPerAttribute*y.count)):v.enableAttribute(q),d.bindBuffer(34962,u),d.vertexAttribPointer(q,c,p,h,x*g,b*g)}else l.isInstancedBufferAttribute?(v.enableAttributeAndDivisor(q,l.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=l.meshPerAttribute*l.count)):v.enableAttribute(q),d.bindBuffer(34962,u),d.vertexAttribPointer(q,c,p,h,0,0)}else if("instanceMatrix"===s){var _;if(void 0===(_=w.get(t.instanceMatrix)))continue;u=_.buffer,p=_.type,v.enableAttributeAndDivisor(q+0,1),v.enableAttributeAndDivisor(q+1,1),v.enableAttributeAndDivisor(q+2,1),v.enableAttributeAndDivisor(q+3,1),d.bindBuffer(34962,u),d.vertexAttribPointer(q+0,4,p,!1,64,0),d.vertexAttribPointer(q+1,4,p,!1,64,16),d.vertexAttribPointer(q+2,4,p,!1,64,32),d.vertexAttribPointer(q+3,4,p,!1,64,48)}else if(void 0!==a){var M=a[s];if(void 0!==M)switch(M.length){case 2:d.vertexAttrib2fv(q,M);break;case 3:d.vertexAttrib3fv(q,M);break;case 4:d.vertexAttrib4fv(q,M);break;default:d.vertexAttrib1fv(q,M)}}}}v.disableUnusedAttributes()}}(r,i,n,s),null!==h&&d.bindBuffer(34963,l.buffer));var g=1/0;null!==h?g=h.count:void 0!==c&&(g=c.count);var y=i.drawRange.start*u,x=i.drawRange.count*u,_=null!==o?o.start*u:0,M=null!==o?o.count*u:1/0,S=Math.max(y,_),E=Math.min(g,y+x,_+M)-1,T=Math.max(0,E-S+1);if(0!==T){if(r.isMesh)if(!0===n.wireframe)v.setLineWidth(n.wireframeLinewidth*ot()),p.setMode(1);else switch(r.drawMode){case ce:p.setMode(4);break;case 1:p.setMode(5);break;case 2:p.setMode(6)}else if(r.isLine){var z=n.linewidth;void 0===z&&(z=1),v.setLineWidth(z*ot()),r.isLineSegments?p.setMode(1):r.isLineLoop?p.setMode(2):p.setMode(3)}else r.isPoints?p.setMode(0):r.isSprite&&p.setMode(4);r.isInstancedMesh?p.renderInstances(i,S,T,r.count):i.isInstancedBufferGeometry?p.renderInstances(i,S,T,i.maxInstancedCount):p.render(S,T)}},this.compile=function(t,e){(p=E.get(t,e)).init(),t.traverse((function(t){t.isLight&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(e),t.traverse((function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)wt(e.material[i],t.fog,e);else wt(e.material,t.fog,e)}))};var mt=null,vt=new Sr;function gt(t,e,i,n){if(!1!==t.visible){if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||$.intersectsSprite(t)){n&&rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(nt);var r=_.update(t);(o=t.material).visible&&u.push(t,r,o,i,rt.z,null)}}else if(t.isImmediateRenderObject)n&&rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(nt),u.push(t,null,t.material,i,rt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==g.render.frame&&(t.skeleton.update(),t.skeleton.frame=g.render.frame),!t.frustumCulled||$.intersectsObject(t))){n&&rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(nt),r=_.update(t);var o=t.material;if(Array.isArray(o))for(var a=r.groups,s=0,q=a.length;s<q;s++){var l=a[s],h=o[l.materialIndex];h&&h.visible&&u.push(t,r,h,i,rt.z,l)}else o.visible&&u.push(t,r,o,i,rt.z,null)}var c=t.children;for(s=0,q=c.length;s<q;s++)gt(c[s],e,i,n)}}function yt(t,e,i,n){for(var r=0,o=t.length;r<o;r++){var a=t[r],s=a.object,q=a.geometry,l=void 0===n?a.material:n,h=a.group;if(i.isArrayCamera)if(j=i,qt.enabled&&lt.isAvailable())xt(s,e,i,q,l,h);else for(var c=i.cameras,u=0,d=c.length;u<d;u++){var m=c[u];s.layers.test(m.layers)&&(v.viewport(G.copy(m.viewport)),p.setupLights(m),xt(s,e,m,q,l,h))}else j=null,xt(s,e,i,q,l,h)}}function xt(t,e,i,n,r,o){if(t.onBeforeRender(R,e,i,n,r,o),p=E.get(e,j||i),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){v.setMaterial(r);var a=Mt(i,e.fog,r,t);V.geometry=null,V.program=null,V.wireframe=!1,function(t,e){t.render((function(t){R.renderBufferImmediate(t,e)}))}(t,a)}else R.renderBufferDirect(i,e.fog,n,r,t,o);t.onAfterRender(R,e,i,n,r,o),p=E.get(e,j||i)}function wt(t,e,i){var n=y.get(t),r=p.state.lights,o=p.state.shadowsArray,a=r.state.version,s=M.getParameters(t,r.state,o,e,tt.numPlanes,tt.numIntersection,i),q=M.getProgramCacheKey(t,s),l=n.program,h=!0;if(void 0===l)t.addEventListener("dispose",pt);else if(l.cacheKey!==q)dt(t);else if(n.lightsStateVersion!==a)n.lightsStateVersion=a,h=!1;else{if(void 0!==s.shaderID)return;h=!1}if(h){if(s.shaderID){var c=Mr[s.shaderID];n.shader={name:t.type,uniforms:qr(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(n.shader,R),q=M.getProgramCacheKey(t,s),l=M.acquireProgram(t,n.shader,s,q),n.program=l,t.program=l}var u=l.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var d=0;d<R.maxMorphTargets;d++)u["morphTarget"+d]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals)for(t.numSupportedMorphNormals=0,d=0;d<R.maxMorphNormals;d++)u["morphNormal"+d]>=0&&t.numSupportedMorphNormals++;var m=n.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=tt.numPlanes,n.numIntersection=tt.numIntersection,m.clippingPlanes=tt.uniform),n.fog=e,n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=a,n.needsLights&&(m.ambientLightColor.value=r.state.ambient,m.lightProbe.value=r.state.probe,m.directionalLights.value=r.state.directional,m.spotLights.value=r.state.spot,m.rectAreaLights.value=r.state.rectArea,m.pointLights.value=r.state.point,m.hemisphereLights.value=r.state.hemi,m.directionalShadowMap.value=r.state.directionalShadowMap,m.directionalShadowMatrix.value=r.state.directionalShadowMatrix,m.spotShadowMap.value=r.state.spotShadowMap,m.spotShadowMatrix.value=r.state.spotShadowMatrix,m.pointShadowMap.value=r.state.pointShadowMap,m.pointShadowMatrix.value=r.state.pointShadowMatrix);var f=n.program.getUniforms(),v=Bo.seqWithValue(f.seq,m);n.uniformsList=v}function Mt(t,e,i,n){x.resetTextureUnits();var r=y.get(i),o=p.state.lights;if(et&&(it||t!==U)){var a=t===U&&i.id===F;tt.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,a)}!1===i.needsUpdate&&(void 0===r.program||i.fog&&r.fog!==e||r.needsLights&&r.lightsStateVersion!==o.state.version?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===tt.numPlanes&&r.numIntersection===tt.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(wt(i,e,n),i.needsUpdate=!1);var s,q,l=!1,h=!1,u=!1,m=r.program,g=m.getUniforms(),w=r.shader.uniforms;if(v.useProgram(m.program)&&(l=!0,h=!0,u=!0),i.id!==F&&(F=i.id,h=!0),l||U!==t){if(m.numMultiviewViews>0?lt.updateCameraProjectionMatricesUniform(t,g):g.setValue(d,"projectionMatrix",t.projectionMatrix),f.logarithmicDepthBuffer&&g.setValue(d,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),U!==t&&(U=t,h=!0,u=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var b=g.map.cameraPosition;void 0!==b&&b.setValue(d,rt.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&g.setValue(d,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&(m.numMultiviewViews>0?lt.updateCameraViewMatricesUniform(t,g):g.setValue(d,"viewMatrix",t.matrixWorldInverse))}if(i.skinning){g.setOptional(d,n,"bindMatrix"),g.setOptional(d,n,"bindMatrixInverse");var _=n.skeleton;if(_){var M=_.bones;if(f.floatVertexTextures){if(void 0===_.boneTexture){var S=Math.sqrt(4*M.length);S=ze.ceilPowerOfTwo(S),S=Math.max(S,4);var E=new Float32Array(S*S*4);E.set(_.boneMatrices);var T=new gr(E,S,S,Pt,bt);_.boneMatrices=E,_.boneTexture=T,_.boneTextureSize=S}g.setValue(d,"boneTexture",_.boneTexture,x),g.setValue(d,"boneTextureSize",_.boneTextureSize)}else g.setOptional(d,_,"boneMatrices")}}return(h||r.receiveShadow!==n.receiveShadow)&&(r.receiveShadow=n.receiveShadow,g.setValue(d,"receiveShadow",n.receiveShadow)),h&&(g.setValue(d,"toneMappingExposure",R.toneMappingExposure),g.setValue(d,"toneMappingWhitePoint",R.toneMappingWhitePoint),r.needsLights&&(q=u,(s=w).ambientLightColor.needsUpdate=q,s.lightProbe.needsUpdate=q,s.directionalLights.needsUpdate=q,s.pointLights.needsUpdate=q,s.spotLights.needsUpdate=q,s.rectAreaLights.needsUpdate=q,s.hemisphereLights.needsUpdate=q),e&&i.fog&&function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(w,e),i.isMeshBasicMaterial?St(w,i):i.isMeshLambertMaterial?(St(w,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(w,i)):i.isMeshPhongMaterial?(St(w,i),i.isMeshToonMaterial?function(t,e){Et(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(w,i):Et(w,i)):i.isMeshStandardMaterial?(St(w,i),i.isMeshPhysicalMaterial?function(t,e){Tt(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===c&&t.clearcoatNormalScale.value.negate()),t.transparency.value=e.transparency}(w,i):Tt(w,i)):i.isMeshMatcapMaterial?(St(w,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===c&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===c&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,i)):i.isMeshDepthMaterial?(St(w,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,i)):i.isMeshDistanceMaterial?(St(w,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(w,i)):i.isMeshNormalMaterial?(St(w,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===c&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===c&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(w,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(w,i)):i.isPointsMaterial?function(t,e){var i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*Y,t.scale.value=.5*X,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(w,i):i.isSpriteMaterial?function(t,e){var i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(w,i):i.isShadowMaterial&&(w.color.value.copy(i.color),w.opacity.value=i.opacity),void 0!==w.ltc_1&&(w.ltc_1.value=_r.LTC_1),void 0!==w.ltc_2&&(w.ltc_2.value=_r.LTC_2),Bo.upload(d,r.uniformsList,w,x),i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Bo.upload(d,r.uniformsList,w,x),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&g.setValue(d,"center",n.center),m.numMultiviewViews>0?lt.updateObjectMatricesUniforms(n,t,g):(g.setValue(d,"modelViewMatrix",n.modelViewMatrix),g.setValue(d,"normalMatrix",n.normalMatrix)),g.setValue(d,"modelMatrix",n.matrixWorld),m}function St(t,e){var i;t.opacity.value=e.opacity,e.color&&t.diffuse.value.copy(e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.maxMipLevel.value=y.get(e.envMap).__maxMipLevel),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}function Et(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===c&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===c&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function Tt(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===c&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===c&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}vt.setAnimationLoop((function(t){qt.isPresenting()||mt&&mt(t)})),"undefined"!=typeof window&&vt.setContext(window),this.setAnimationLoop=function(t){mt=t,qt.setAnimationLoop(t),vt.start()},this.render=function(t,e){var i,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),i=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),e&&e.isCamera){if(!C){V.geometry=null,V.program=null,V.wireframe=!1,F=-1,U=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),qt.enabled&&(e=qt.getCamera(e)),(p=E.get(t,e)).init(),t.onBeforeRender(R,t,e,i||B),nt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),$.setFromMatrix(nt),it=this.localClippingEnabled,et=tt.init(this.clippingPlanes,it,e),(u=S.get(t,e)).init(),gt(t,e,0,R.sortObjects),!0===R.sortObjects&&u.sort(),et&&tt.beginShadows();var r=p.state.shadowsArray;ht.render(r,t,e),p.setupLights(e),et&&tt.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),qt.enabled&&lt.isAvailable()&&lt.attachCamera(e),T.render(u,t,e,n);var o=u.opaque,a=u.transparent;if(t.overrideMaterial){var s=t.overrideMaterial;o.length&&yt(o,t,e,s),a.length&&yt(a,t,e,s)}else o.length&&yt(o,t,e),a.length&&yt(a,t,e);t.onAfterRender(R,t,e),null!==B&&(x.updateRenderTargetMipmap(B),x.updateMultisampleRenderTarget(B)),v.buffers.depth.setTest(!0),v.buffers.depth.setMask(!0),v.buffers.color.setMask(!0),v.setPolygonOffset(!1),qt.enabled&&(lt.isAvailable()&&lt.detachCamera(e),qt.submitFrame()),u=null,p=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFramebuffer=function(t){O!==t&&null===B&&d.bindFramebuffer(36160,t),O=t},this.getActiveCubeFace=function(){return I},this.getActiveMipmapLevel=function(){return N},this.getRenderTarget=function(){return B},this.setRenderTarget=function(t,e,i){B=t,I=e,N=i,t&&void 0===y.get(t).__webglFramebuffer&&x.setupRenderTarget(t);var n=O,r=!1;if(t){var o=y.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(n=o[e||0],r=!0):n=t.isWebGLMultisampleRenderTarget?y.get(t).__webglMultisampledFramebuffer:o,G.copy(t.viewport),H.copy(t.scissor),W=t.scissorTest}else G.copy(J).multiplyScalar(Y).floor(),H.copy(Q).multiplyScalar(Y).floor(),W=K;if(D!==n&&(d.bindFramebuffer(36160,n),D=n),v.viewport(G),v.scissor(H),v.setScissorTest(W),r){var a=y.get(t.texture);d.framebufferTexture2D(36160,36064,34069+(e||0),a.__webglTexture,i||0)}},this.readRenderTargetPixels=function(t,e,i,n,r,o,a){if(t&&t.isWebGLRenderTarget){var s=y.get(t).__webglFramebuffer;if(t.isWebGLRenderTargetCube&&void 0!==a&&(s=s[a]),s){var q=!1;s!==D&&(d.bindFramebuffer(36160,s),q=!0);try{var l=t.texture,h=l.format,c=l.type;if(h!==Pt&&z.convert(h)!==d.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(c===ft||z.convert(c)===d.getParameter(35738)||c===bt&&(f.isWebGL2||m.get("OES_texture_float")||m.get("WEBGL_color_buffer_float"))||c===_t&&(f.isWebGL2?m.get("EXT_color_buffer_float"):m.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===d.checkFramebufferStatus(36160)?e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&d.readPixels(e,i,n,r,z.convert(h),z.convert(c),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{q&&d.bindFramebuffer(36160,D)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(t,e,i){void 0===i&&(i=0);var n=Math.pow(2,-i),r=Math.floor(e.image.width*n),o=Math.floor(e.image.height*n),a=z.convert(e.format);x.setTexture2D(e,0),d.copyTexImage2D(3553,i,a,t.x,t.y,r,o,0),v.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n){var r=e.image.width,o=e.image.height,a=z.convert(i.format),s=z.convert(i.type);x.setTexture2D(i,0),e.isDataTexture?d.texSubImage2D(3553,n||0,t.x,t.y,r,o,a,s,e.image.data):d.texSubImage2D(3553,n||0,t.x,t.y,a,s,e.image),v.unbindTexture()},this.initTexture=function(t){x.setTexture2D(t,0),v.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Ra(t,e){this.name="",this.color=new qn(t),this.density=void 0!==e?e:25e-5}function Ca(t,e,i){this.name="",this.color=new qn(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}function Oa(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Ee,this.updateRange={offset:0,count:-1},this.version=0}function Ia(t,e,i,n){this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}function Na(t){dn.call(this),this.type="SpriteMaterial",this.color=new qn(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}Object.assign(La.prototype,Ae.prototype),Object.assign(Pa.prototype,Ae.prototype),Object.assign(Ra.prototype,{isFogExp2:!0,clone:function(){return new Ra(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(Ca.prototype,{isFog:!0,clone:function(){return new Ca(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(Oa.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Oa.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),Object.defineProperties(Ia.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Ia.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}}),Na.prototype=Object.create(dn.prototype),Na.prototype.constructor=Na,Na.prototype.isSpriteMaterial=!0,Na.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var Ba=new Ne,Da=new Ne,Fa=new Ne,Va=new Re,Ua=new Re,ja=new $e,Ga=new Ne,Ha=new Ne,Wa=new Ne,ka=new Re,Xa=new Re,Ya=new Re;function Za(t){if(vi.call(this),this.type="Sprite",void 0===Sa){Sa=new In;var e=new Oa(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Sa.setIndex([0,1,2,0,2,3]),Sa.setAttribute("position",new Ia(e,3,0,!1)),Sa.setAttribute("uv",new Ia(e,2,3,!1))}this.geometry=Sa,this.material=void 0!==t?t:new Na,this.center=new Re(.5,.5)}function Ja(t,e,i,n,r,o){Va.subVectors(t,i).addScalar(.5).multiply(n),void 0!==r?(Ua.x=o*Va.x-r*Va.y,Ua.y=r*Va.x+o*Va.y):Ua.copy(Va),t.copy(e),t.x+=Ua.x,t.y+=Ua.y,t.applyMatrix4(ja)}Za.prototype=Object.assign(Object.create(vi.prototype),{constructor:Za,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Da.setFromMatrixScale(this.matrixWorld),ja.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Fa.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Da.multiplyScalar(-Fa.z);var i,n,r=this.material.rotation;0!==r&&(n=Math.cos(r),i=Math.sin(r));var o=this.center;Ja(Ga.set(-.5,-.5,0),Fa,o,Da,i,n),Ja(Ha.set(.5,-.5,0),Fa,o,Da,i,n),Ja(Wa.set(.5,.5,0),Fa,o,Da,i,n),ka.set(0,0),Xa.set(1,0),Ya.set(1,1);var a=t.ray.intersectTriangle(Ga,Ha,Wa,!1,Ba);if(null!==a||(Ja(Ha.set(-.5,.5,0),Fa,o,Da,i,n),Xa.set(0,1),null!==(a=t.ray.intersectTriangle(Ga,Wa,Ha,!1,Ba)))){var s=t.ray.origin.distanceTo(Ba);s<t.near||s>t.far||e.push({distance:s,point:Ba.clone(),uv:rn.getUV(Ba,Ga,Ha,Wa,ka,Xa,Ya,new Re),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return vi.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this}});var Qa=new Ne,Ka=new Ne;function $a(){vi.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function ts(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),$n.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $e,this.bindMatrixInverse=new $e}$a.prototype=Object.assign(Object.create(vi.prototype),{constructor:$a,isLOD:!0,copy:function(t){vi.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,n=e.length;i<n;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,n=0;n<i.length&&!(e<i[n].distance);n++);return i.splice(n,0,{distance:e,object:t}),this.add(t),this},getObjectForDistance:function(t){for(var e=this.levels,i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(t,e){Qa.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(Qa);this.getObjectForDistance(i).raycast(t,e)},update:function(t){var e=this.levels;if(e.length>1){Qa.setFromMatrixPosition(t.matrixWorld),Ka.setFromMatrixPosition(this.matrixWorld);var i=Qa.distanceTo(Ka);e[0].object.visible=!0;for(var n=1,r=e.length;n<r&&i>=e[n].distance;n++)e[n-1].object.visible=!1,e[n].object.visible=!0;for(;n<r;n++)e[n].object.visible=!1}},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,n=0,r=i.length;n<r;n++){var o=i[n];e.object.levels.push({object:o.object.uuid,distance:o.distance})}return e}}),ts.prototype=Object.assign(Object.create($n.prototype),{constructor:ts,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new Ge,e=this.geometry.attributes.skinWeight,i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);var r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){$n.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var es=new $e,is=new $e;function ns(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new $e)}}function rs(){vi.call(this),this.type="Bone"}function os(t,e,i){$n.call(this,t,e),this.instanceMatrix=new fn(new Float32Array(16*i),16),this.count=i}function as(t){dn.call(this),this.type="LineBasicMaterial",this.color=new qn(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}Object.assign(ns.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var i=new $e;this.bones[t]&&i.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(i)}},pose:function(){var t,e,i;for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){for(var t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture,r=0,o=t.length;r<o;r++){var a=t[r]?t[r].matrixWorld:is;es.multiplyMatrices(a,e[r]),es.toArray(i,16*r)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new ns(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,i=this.bones.length;e<i;e++){var n=this.bones[e];if(n.name===t)return n}}}),rs.prototype=Object.assign(Object.create(vi.prototype),{constructor:rs,isBone:!0}),os.prototype=Object.assign(Object.create($n.prototype),{constructor:os,isInstancedMesh:!0,raycast:function(){},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}}),as.prototype=Object.create(dn.prototype),as.prototype.constructor=as,as.prototype.isLineBasicMaterial=!0,as.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};var ss=new Ne,qs=new Ne,ls=new $e,hs=new ji,cs=new Oi;function us(t,e,i){1===i&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),vi.call(this),this.type="Line",this.geometry=void 0!==t?t:new In,this.material=void 0!==e?e:new as({color:16777215*Math.random()})}us.prototype=Object.assign(Object.create(vi.prototype),{constructor:us,isLine:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,i=[0],n=1,r=e.count;n<r;n++)ss.fromBufferAttribute(e,n-1),qs.fromBufferAttribute(e,n),i[n]=i[n-1],i[n]+=ss.distanceTo(qs);t.setAttribute("lineDistance",new Mn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var o=t.vertices;for((i=t.lineDistances)[0]=0,n=1,r=o.length;n<r;n++)i[n]=i[n-1],i[n]+=o[n-1].distanceTo(o[n])}return this},raycast:function(t,e){var i=t.linePrecision,n=this.geometry,r=this.matrixWorld;if(null===n.boundingSphere&&n.computeBoundingSphere(),cs.copy(n.boundingSphere),cs.applyMatrix4(r),cs.radius+=i,!1!==t.ray.intersectsSphere(cs)){ls.getInverse(r),hs.copy(t.ray).applyMatrix4(ls);var o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,s=new Ne,q=new Ne,l=new Ne,h=new Ne,c=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){var u=n.index,p=n.attributes.position.array;if(null!==u)for(var d=u.array,m=0,f=d.length-1;m<f;m+=c){var v=d[m],g=d[m+1];s.fromArray(p,3*v),q.fromArray(p,3*g),hs.distanceSqToSegment(s,q,h,l)>a||(h.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(h))<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}else for(m=0,f=p.length/3-1;m<f;m+=c)s.fromArray(p,3*m),q.fromArray(p,3*m+3),hs.distanceSqToSegment(s,q,h,l)>a||(h.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(h))<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}else if(n.isGeometry){var y=n.vertices,x=y.length;for(m=0;m<x-1;m+=c){var w;hs.distanceSqToSegment(y[m],y[m+1],h,l)>a||(h.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(h))<t.near||w>t.far||e.push({distance:w,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ps=new Ne,ds=new Ne;function ms(t,e){us.call(this,t,e),this.type="LineSegments"}function fs(t,e){us.call(this,t,e),this.type="LineLoop"}function vs(t){dn.call(this),this.type="PointsMaterial",this.color=new qn(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}ms.prototype=Object.assign(Object.create(us.prototype),{constructor:ms,isLineSegments:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,i=[],n=0,r=e.count;n<r;n+=2)ps.fromBufferAttribute(e,n),ds.fromBufferAttribute(e,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+ps.distanceTo(ds);t.setAttribute("lineDistance",new Mn(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var o=t.vertices;for(i=t.lineDistances,n=0,r=o.length;n<r;n+=2)ps.copy(o[n]),ds.copy(o[n+1]),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+ps.distanceTo(ds)}return this}}),fs.prototype=Object.assign(Object.create(us.prototype),{constructor:fs,isLineLoop:!0}),vs.prototype=Object.create(dn.prototype),vs.prototype.constructor=vs,vs.prototype.isPointsMaterial=!0,vs.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};var gs=new $e,ys=new ji,xs=new Oi,ws=new Ne;function bs(t,e){vi.call(this),this.type="Points",this.geometry=void 0!==t?t:new In,this.material=void 0!==e?e:new vs({color:16777215*Math.random()}),this.updateMorphTargets()}function _s(t,e,i,n,r,o,a){var s=ys.distanceSqToPoint(t);if(s<i){var q=new Ne;ys.closestPointToPoint(t,q),q.applyMatrix4(n);var l=r.ray.origin.distanceTo(q);if(l<r.near||l>r.far)return;o.push({distance:l,distanceToRay:Math.sqrt(s),point:q,index:e,face:null,object:a})}}function Ms(t,e,i,n,r,o,a,s,q){je.call(this,t,e,i,n,r,o,a,s,q),this.format=void 0!==a?a:Lt,this.minFilter=void 0!==o?o:pt,this.magFilter=void 0!==r?r:pt,this.generateMipmaps=!1}function Ss(t,e,i,n,r,o,a,s,q,l,h,c){je.call(this,null,o,a,s,q,l,n,r,h,c),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function Es(t,e,i,n,r,o,a,s,q){je.call(this,t,e,i,n,r,o,a,s,q),this.needsUpdate=!0}function Ts(t,e,i,n,r,o,a,s,q,l){if((l=void 0!==l?l:Ct)!==Ct&&l!==Ot)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&l===Ct&&(i=yt),void 0===i&&l===Ot&&(i=Tt),je.call(this,null,n,r,o,a,s,l,i,q),this.image={width:t,height:e},this.magFilter=void 0!==a?a:ht,this.minFilter=void 0!==s?s:ht,this.flipY=!1,this.generateMipmaps=!1}function As(t){In.call(this),this.type="WireframeGeometry";var e,i,n,r,o,a,s,q,l,h,c=[],u=[0,0],p={},d=["a","b","c"];if(t&&t.isGeometry){var m=t.faces;for(e=0,n=m.length;e<n;e++){var f=m[e];for(i=0;i<3;i++)s=f[d[i]],q=f[d[(i+1)%3]],u[0]=Math.min(s,q),u[1]=Math.max(s,q),void 0===p[l=u[0]+","+u[1]]&&(p[l]={index1:u[0],index2:u[1]})}for(l in p)a=p[l],h=t.vertices[a.index1],c.push(h.x,h.y,h.z),h=t.vertices[a.index2],c.push(h.x,h.y,h.z)}else if(t&&t.isBufferGeometry){var v,g,y,x,w,b,_;if(h=new Ne,null!==t.index){for(v=t.attributes.position,g=t.index,0===(y=t.groups).length&&(y=[{start:0,count:g.count,materialIndex:0}]),r=0,o=y.length;r<o;++r)for(e=w=(x=y[r]).start,n=w+x.count;e<n;e+=3)for(i=0;i<3;i++)s=g.getX(e+i),q=g.getX(e+(i+1)%3),u[0]=Math.min(s,q),u[1]=Math.max(s,q),void 0===p[l=u[0]+","+u[1]]&&(p[l]={index1:u[0],index2:u[1]});for(l in p)a=p[l],h.fromBufferAttribute(v,a.index1),c.push(h.x,h.y,h.z),h.fromBufferAttribute(v,a.index2),c.push(h.x,h.y,h.z)}else for(e=0,n=(v=t.attributes.position).count/3;e<n;e++)for(i=0;i<3;i++)b=3*e+i,h.fromBufferAttribute(v,b),c.push(h.x,h.y,h.z),_=3*e+(i+1)%3,h.fromBufferAttribute(v,_),c.push(h.x,h.y,h.z)}this.setAttribute("position",new Mn(c,3))}function Ls(t,e,i){ar.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new Ps(t,e,i)),this.mergeVertices()}function Ps(t,e,i){In.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};var n,r,o=[],a=[],s=[],q=[],l=1e-5,h=new Ne,c=new Ne,u=new Ne,p=new Ne,d=new Ne;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var m=e+1;for(n=0;n<=i;n++){var f=n/i;for(r=0;r<=e;r++){var v=r/e;t(v,f,c),a.push(c.x,c.y,c.z),v-l>=0?(t(v-l,f,u),p.subVectors(c,u)):(t(v+l,f,u),p.subVectors(u,c)),f-l>=0?(t(v,f-l,u),d.subVectors(c,u)):(t(v,f+l,u),d.subVectors(u,c)),h.crossVectors(p,d).normalize(),s.push(h.x,h.y,h.z),q.push(v,f)}}for(n=0;n<i;n++)for(r=0;r<e;r++){var g=n*m+r,y=n*m+r+1,x=(n+1)*m+r+1,w=(n+1)*m+r;o.push(g,y,w),o.push(y,x,w)}this.setIndex(o),this.setAttribute("position",new Mn(a,3)),this.setAttribute("normal",new Mn(s,3)),this.setAttribute("uv",new Mn(q,2))}function zs(t,e,i,n){ar.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},this.fromBufferGeometry(new Rs(t,e,i,n)),this.mergeVertices()}function Rs(t,e,i,n){In.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},i=i||1;var r=[],o=[];function a(t,e,i,n){var r,o,a=Math.pow(2,n),q=[];for(r=0;r<=a;r++){q[r]=[];var l=t.clone().lerp(i,r/a),h=e.clone().lerp(i,r/a),c=a-r;for(o=0;o<=c;o++)q[r][o]=0===o&&r===a?l:l.clone().lerp(h,o/c)}for(r=0;r<a;r++)for(o=0;o<2*(a-r)-1;o++){var u=Math.floor(o/2);o%2==0?(s(q[r][u+1]),s(q[r+1][u]),s(q[r][u])):(s(q[r][u+1]),s(q[r+1][u+1]),s(q[r+1][u]))}}function s(t){r.push(t.x,t.y,t.z)}function q(e,i){var n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function l(t,e,i,n){n<0&&1===t.x&&(o[e]=t.x-1),0===i.x&&0===i.z&&(o[e]=n/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){for(var i=new Ne,n=new Ne,r=new Ne,o=0;o<e.length;o+=3)q(e[o+0],i),q(e[o+1],n),q(e[o+2],r),a(i,n,r,t)}(n=n||0),function(t){for(var e=new Ne,i=0;i<r.length;i+=3)e.x=r[i+0],e.y=r[i+1],e.z=r[i+2],e.normalize().multiplyScalar(t),r[i+0]=e.x,r[i+1]=e.y,r[i+2]=e.z}(i),function(){for(var t=new Ne,e=0;e<r.length;e+=3){t.x=r[e+0],t.y=r[e+1],t.z=r[e+2];var i=h(t)/2/Math.PI+.5,n=(a=t,Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5);o.push(i,1-n)}var a;(function(){for(var t=new Ne,e=new Ne,i=new Ne,n=new Ne,a=new Re,s=new Re,q=new Re,c=0,u=0;c<r.length;c+=9,u+=6){t.set(r[c+0],r[c+1],r[c+2]),e.set(r[c+3],r[c+4],r[c+5]),i.set(r[c+6],r[c+7],r[c+8]),a.set(o[u+0],o[u+1]),s.set(o[u+2],o[u+3]),q.set(o[u+4],o[u+5]),n.copy(t).add(e).add(i).divideScalar(3);var p=h(n);l(a,u+0,t,p),l(s,u+2,e,p),l(q,u+4,i,p)}})(),function(){for(var t=0;t<o.length;t+=6){var e=o[t+0],i=o[t+2],n=o[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);r>.9&&a<.1&&(e<.2&&(o[t+0]+=1),i<.2&&(o[t+2]+=1),n<.2&&(o[t+4]+=1))}}()}(),this.setAttribute("position",new Mn(r,3)),this.setAttribute("normal",new Mn(r.slice(),3)),this.setAttribute("uv",new Mn(o,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function Cs(t,e){ar.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Os(t,e)),this.mergeVertices()}function Os(t,e){Rs.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Is(t,e){ar.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ns(t,e)),this.mergeVertices()}function Ns(t,e){Rs.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Bs(t,e){ar.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ds(t,e)),this.mergeVertices()}function Ds(t,e){var i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1];Rs.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Fs(t,e){ar.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Vs(t,e)),this.mergeVertices()}function Vs(t,e){var i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n];Rs.call(this,r,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Us(t,e,i,n,r,o){ar.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");var a=new js(t,e,i,n,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}function js(t,e,i,n,r){In.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},e=e||64,i=i||1,n=n||8,r=r||!1;var o=t.computeFrenetFrames(e,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;var a,s,q=new Ne,l=new Ne,h=new Re,c=new Ne,u=[],p=[],d=[],m=[];function f(r){c=t.getPointAt(r/e,c);var a=o.normals[r],h=o.binormals[r];for(s=0;s<=n;s++){var d=s/n*Math.PI*2,m=Math.sin(d),f=-Math.cos(d);l.x=f*a.x+m*h.x,l.y=f*a.y+m*h.y,l.z=f*a.z+m*h.z,l.normalize(),p.push(l.x,l.y,l.z),q.x=c.x+i*l.x,q.y=c.y+i*l.y,q.z=c.z+i*l.z,u.push(q.x,q.y,q.z)}}!function(){for(a=0;a<e;a++)f(a);f(!1===r?e:0),function(){for(a=0;a<=e;a++)for(s=0;s<=n;s++)h.x=a/e,h.y=s/n,d.push(h.x,h.y)}(),function(){for(s=1;s<=e;s++)for(a=1;a<=n;a++){var t=(n+1)*(s-1)+(a-1),i=(n+1)*s+(a-1),r=(n+1)*s+a,o=(n+1)*(s-1)+a;m.push(t,i,o),m.push(i,r,o)}}()}(),this.setIndex(m),this.setAttribute("position",new Mn(u,3)),this.setAttribute("normal",new Mn(p,3)),this.setAttribute("uv",new Mn(d,2))}function Gs(t,e,i,n,r,o,a){ar.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Hs(t,e,i,n,r,o)),this.mergeVertices()}function Hs(t,e,i,n,r,o){In.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:o},t=t||1,e=e||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,o=o||3;var a,s,q=[],l=[],h=[],c=[],u=new Ne,p=new Ne,d=new Ne,m=new Ne,f=new Ne,v=new Ne,g=new Ne;for(a=0;a<=i;++a){var y=a/i*r*Math.PI*2;for(T(y,r,o,t,d),T(y+.01,r,o,t,m),v.subVectors(m,d),g.addVectors(m,d),f.crossVectors(v,g),g.crossVectors(f,v),f.normalize(),g.normalize(),s=0;s<=n;++s){var x=s/n*Math.PI*2,w=-e*Math.cos(x),b=e*Math.sin(x);u.x=d.x+(w*g.x+b*f.x),u.y=d.y+(w*g.y+b*f.y),u.z=d.z+(w*g.z+b*f.z),l.push(u.x,u.y,u.z),p.subVectors(u,d).normalize(),h.push(p.x,p.y,p.z),c.push(a/i),c.push(s/n)}}for(s=1;s<=i;s++)for(a=1;a<=n;a++){var _=(n+1)*(s-1)+(a-1),M=(n+1)*s+(a-1),S=(n+1)*s+a,E=(n+1)*(s-1)+a;q.push(_,M,E),q.push(M,S,E)}function T(t,e,i,n,r){var o=Math.cos(t),a=Math.sin(t),s=i/e*t,q=Math.cos(s);r.x=n*(2+q)*.5*o,r.y=n*(2+q)*a*.5,r.z=n*Math.sin(s)*.5}this.setIndex(q),this.setAttribute("position",new Mn(l,3)),this.setAttribute("normal",new Mn(h,3)),this.setAttribute("uv",new Mn(c,2))}function Ws(t,e,i,n,r){ar.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new ks(t,e,i,n,r)),this.mergeVertices()}function ks(t,e,i,n,r){In.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},t=t||1,e=e||.4,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;var o,a,s=[],q=[],l=[],h=[],c=new Ne,u=new Ne,p=new Ne;for(o=0;o<=i;o++)for(a=0;a<=n;a++){var d=a/n*r,m=o/i*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(d),u.y=(t+e*Math.cos(m))*Math.sin(d),u.z=e*Math.sin(m),q.push(u.x,u.y,u.z),c.x=t*Math.cos(d),c.y=t*Math.sin(d),p.subVectors(u,c).normalize(),l.push(p.x,p.y,p.z),h.push(a/n),h.push(o/i)}for(o=1;o<=i;o++)for(a=1;a<=n;a++){var f=(n+1)*o+a-1,v=(n+1)*(o-1)+a-1,g=(n+1)*(o-1)+a,y=(n+1)*o+a;s.push(f,v,y),s.push(v,g,y)}this.setIndex(s),this.setAttribute("position",new Mn(q,3)),this.setAttribute("normal",new Mn(l,3)),this.setAttribute("uv",new Mn(h,2))}bs.prototype=Object.assign(Object.create(vi.prototype),{constructor:bs,isPoints:!0,raycast:function(t,e){var i=this.geometry,n=this.matrixWorld,r=t.params.Points.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),xs.copy(i.boundingSphere),xs.applyMatrix4(n),xs.radius+=r,!1!==t.ray.intersectsSphere(xs)){gs.getInverse(n),ys.copy(t.ray).applyMatrix4(gs);var o=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o;if(i.isBufferGeometry){var s=i.index,q=i.attributes.position.array;if(null!==s)for(var l=s.array,h=0,c=l.length;h<c;h++){var u=l[h];ws.fromArray(q,3*u),_s(ws,u,a,n,t,e,this)}else{h=0;for(var p=q.length/3;h<p;h++)ws.fromArray(q,3*h),_s(ws,h,a,n,t,e,this)}}else{var d=i.vertices;for(h=0,p=d.length;h<p;h++)_s(d[h],h,a,n,t,e,this)}}},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,o=Object.keys(r);if(o.length>0){var a=r[o[0]];if(void 0!==a)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=a.length;t<e;t++)i=a[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ms.prototype=Object.assign(Object.create(je.prototype),{constructor:Ms,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Ss.prototype=Object.create(je.prototype),Ss.prototype.constructor=Ss,Ss.prototype.isCompressedTexture=!0,Es.prototype=Object.create(je.prototype),Es.prototype.constructor=Es,Es.prototype.isCanvasTexture=!0,Ts.prototype=Object.create(je.prototype),Ts.prototype.constructor=Ts,Ts.prototype.isDepthTexture=!0,As.prototype=Object.create(In.prototype),As.prototype.constructor=As,Ls.prototype=Object.create(ar.prototype),Ls.prototype.constructor=Ls,Ps.prototype=Object.create(In.prototype),Ps.prototype.constructor=Ps,zs.prototype=Object.create(ar.prototype),zs.prototype.constructor=zs,Rs.prototype=Object.create(In.prototype),Rs.prototype.constructor=Rs,Cs.prototype=Object.create(ar.prototype),Cs.prototype.constructor=Cs,Os.prototype=Object.create(Rs.prototype),Os.prototype.constructor=Os,Is.prototype=Object.create(ar.prototype),Is.prototype.constructor=Is,Ns.prototype=Object.create(Rs.prototype),Ns.prototype.constructor=Ns,Bs.prototype=Object.create(ar.prototype),Bs.prototype.constructor=Bs,Ds.prototype=Object.create(Rs.prototype),Ds.prototype.constructor=Ds,Fs.prototype=Object.create(ar.prototype),Fs.prototype.constructor=Fs,Vs.prototype=Object.create(Rs.prototype),Vs.prototype.constructor=Vs,Us.prototype=Object.create(ar.prototype),Us.prototype.constructor=Us,js.prototype=Object.create(In.prototype),js.prototype.constructor=js,js.prototype.toJSON=function(){var t=In.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t},Gs.prototype=Object.create(ar.prototype),Gs.prototype.constructor=Gs,Hs.prototype=Object.create(In.prototype),Hs.prototype.constructor=Hs,Ws.prototype=Object.create(ar.prototype),Ws.prototype.constructor=Ws,ks.prototype=Object.create(In.prototype),ks.prototype.constructor=ks;function Xs(t,e,i,n,r){var o,a;if(r===function(t,e,i,n){for(var r=0,o=e,a=i-n;o<i;o+=n)r+=(t[a]-t[o])*(t[o+1]+t[a+1]),a=o;return r}(t,e,i,n)>0)for(o=e;o<i;o+=n)a=cq(o,t[o],t[o+1],a);else for(o=i-n;o>=e;o-=n)a=cq(o,t[o],t[o+1],a);return a&&sq(a,a.next)&&(uq(a),a=a.next),a}function Ys(t,e){if(!t)return t;e||(e=t);var i,n=t;do{if(i=!1,n.steiner||!sq(n,n.next)&&0!==aq(n.prev,n,n.next))n=n.next;else{if(uq(n),(n=e=n.prev)===n.next)break;i=!0}}while(i||n!==e);return e}function Zs(t,e,i,n,r,o,a){if(t){!a&&o&&function(t,e,i,n){var r=t;do{null===r.z&&(r.z=iq(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){var e,i,n,r,o,a,s,q,l=1;do{for(i=t,t=null,o=null,a=0;i;){for(a++,n=i,s=0,e=0;e<l&&(s++,n=n.nextZ);e++);for(q=l;s>0||q>0&&n;)0!==s&&(0===q||!n||i.z<=n.z)?(r=i,i=i.nextZ,s--):(r=n,n=n.nextZ,q--),o?o.nextZ=r:t=r,r.prevZ=o,o=r;i=n}o.nextZ=null,l*=2}while(a>1)}(r)}(t,n,r,o);for(var s,q,l=t;t.prev!==t.next;)if(s=t.prev,q=t.next,o?Qs(t,n,r,o):Js(t))e.push(s.i/i),e.push(t.i/i),e.push(q.i/i),uq(t),t=q.next,l=q.next;else if((t=q)===l){a?1===a?Zs(t=Ks(t,e,i),e,i,n,r,o,2):2===a&&$s(t,e,i,n,r,o):Zs(Ys(t),e,i,n,r,o,1);break}}}function Js(t){var e=t.prev,i=t,n=t.next;if(aq(e,i,n)>=0)return!1;for(var r=t.next.next;r!==t.prev;){if(rq(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&aq(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Qs(t,e,i,n){var r=t.prev,o=t,a=t.next;if(aq(r,o,a)>=0)return!1;for(var s=r.x<o.x?r.x<a.x?r.x:a.x:o.x<a.x?o.x:a.x,q=r.y<o.y?r.y<a.y?r.y:a.y:o.y<a.y?o.y:a.y,l=r.x>o.x?r.x>a.x?r.x:a.x:o.x>a.x?o.x:a.x,h=r.y>o.y?r.y>a.y?r.y:a.y:o.y>a.y?o.y:a.y,c=iq(s,q,e,i,n),u=iq(l,h,e,i,n),p=t.prevZ,d=t.nextZ;p&&p.z>=c&&d&&d.z<=u;){if(p!==t.prev&&p!==t.next&&rq(r.x,r.y,o.x,o.y,a.x,a.y,p.x,p.y)&&aq(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,d!==t.prev&&d!==t.next&&rq(r.x,r.y,o.x,o.y,a.x,a.y,d.x,d.y)&&aq(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(;p&&p.z>=c;){if(p!==t.prev&&p!==t.next&&rq(r.x,r.y,o.x,o.y,a.x,a.y,p.x,p.y)&&aq(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;d&&d.z<=u;){if(d!==t.prev&&d!==t.next&&rq(r.x,r.y,o.x,o.y,a.x,a.y,d.x,d.y)&&aq(d.prev,d,d.next)>=0)return!1;d=d.nextZ}return!0}function Ks(t,e,i){var n=t;do{var r=n.prev,o=n.next.next;!sq(r,o)&&qq(r,n,n.next,o)&&lq(r,o)&&lq(o,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(o.i/i),uq(n),uq(n.next),n=t=o),n=n.next}while(n!==t);return n}function $s(t,e,i,n,r,o){var a=t;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&oq(a,s)){var q=hq(a,s);return a=Ys(a,a.next),q=Ys(q,q.next),Zs(a,e,i,n,r,o),void Zs(q,e,i,n,r,o)}s=s.next}a=a.next}while(a!==t)}function tq(t,e){return t.x-e.x}function eq(t,e){if(e=function(t,e){var i,n=e,r=t.x,o=t.y,a=-1/0;do{if(o<=n.y&&o>=n.next.y&&n.next.y!==n.y){var s=n.x+(o-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=r&&s>a){if(a=s,s===r){if(o===n.y)return n;if(o===n.next.y)return n.next}i=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!i)return null;if(r===a)return i.prev;var q,l=i,h=i.x,c=i.y,u=1/0;for(n=i.next;n!==l;)r>=n.x&&n.x>=h&&r!==n.x&&rq(o<c?r:a,o,h,c,o<c?a:r,o,n.x,n.y)&&((q=Math.abs(o-n.y)/(r-n.x))<u||q===u&&n.x>i.x)&&lq(n,t)&&(i=n,u=q),n=n.next;return i}(t,e),e){var i=hq(e,t);Ys(i,i.next)}}function iq(t,e,i,n,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function nq(t){var e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function rq(t,e,i,n,r,o,a,s){return(r-a)*(e-s)-(t-a)*(o-s)>=0&&(t-a)*(n-s)-(i-a)*(e-s)>=0&&(i-a)*(o-s)-(r-a)*(n-s)>=0}function oq(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&qq(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&lq(t,e)&&lq(e,t)&&function(t,e){var i=t,n=!1,r=(t.x+e.x)/2,o=(t.y+e.y)/2;do{i.y>o!=i.next.y>o&&i.next.y!==i.y&&r<(i.next.x-i.x)*(o-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)}function aq(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function sq(t,e){return t.x===e.x&&t.y===e.y}function qq(t,e,i,n){return!!(sq(t,i)&&sq(e,n)||sq(t,n)&&sq(i,e))||aq(t,e,i)>0!=aq(t,e,n)>0&&aq(i,n,t)>0!=aq(i,n,e)>0}function lq(t,e){return aq(t.prev,t,t.next)<0?aq(t,e,t.next)>=0&&aq(t,t.prev,e)>=0:aq(t,e,t.prev)<0||aq(t,t.next,e)<0}function hq(t,e){var i=new pq(t.i,t.x,t.y),n=new pq(e.i,e.x,e.y),r=t.next,o=e.prev;return t.next=e,e.prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,o.next=n,n.prev=o,n}function cq(t,e,i,n){var r=new pq(t,e,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function uq(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function pq(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var dq={area:function(t){for(var e=t.length,i=0,n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i},isClockWise:function(t){return dq.area(t)<0},triangulateShape:function(t,e){var i=[],n=[],r=[];mq(t),fq(i,t);var o=t.length;e.forEach(mq);for(var a=0;a<e.length;a++)n.push(o),o+=e[a].length,fq(i,e[a]);var s=function(t,e,i){i=i||2;var n,r,o,a,s,q,l,h=e&&e.length,c=h?e[0]*i:t.length,u=Xs(t,0,c,i,!0),p=[];if(!u||u.next===u.prev)return p;if(h&&(u=function(t,e,i,n){var r,o,a,s=[];for(r=0,o=e.length;r<o;r++)(a=Xs(t,e[r]*n,r<o-1?e[r+1]*n:t.length,n,!1))===a.next&&(a.steiner=!0),s.push(nq(a));for(s.sort(tq),r=0;r<s.length;r++)eq(s[r],i),i=Ys(i,i.next);return i}(t,e,u,i)),t.length>80*i){n=o=t[0],r=a=t[1];for(var d=i;d<c;d+=i)(s=t[d])<n&&(n=s),(q=t[d+1])<r&&(r=q),s>o&&(o=s),q>a&&(a=q);l=0!==(l=Math.max(o-n,a-r))?1/l:0}return Zs(u,p,i,n,r,l),p}(i,n);for(a=0;a<s.length;a+=3)r.push(s.slice(a,a+3));return r}};function mq(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function fq(t,e){for(var i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}function vq(t,e){ar.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new gq(t,e)),this.mergeVertices()}function gq(t,e){In.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];for(var i=this,n=[],r=[],o=0,a=t.length;o<a;o++)s(t[o]);function s(t){var o=[],a=void 0!==e.curveSegments?e.curveSegments:12,s=void 0!==e.steps?e.steps:1,q=void 0!==e.depth?e.depth:100,l=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,c=void 0!==e.bevelSize?e.bevelSize:h-2,u=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3,d=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:yq;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),q=e.amount);var f,v,g,y,x,w,b,_,M=!1;d&&(f=d.getSpacedPoints(s),M=!0,l=!1,v=d.computeFrenetFrames(s,!1),g=new Ne,y=new Ne,x=new Ne),l||(p=0,h=0,c=0,u=0);var S=t.extractPoints(a),E=S.shape,T=S.holes;if(!dq.isClockWise(E))for(E=E.reverse(),b=0,_=T.length;b<_;b++)w=T[b],dq.isClockWise(w)&&(T[b]=w.reverse());var A=dq.triangulateShape(E,T),L=E;for(b=0,_=T.length;b<_;b++)w=T[b],E=E.concat(w);function P(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}var z,R,C,O,I,N,B=E.length,D=A.length;function F(t,e,i){var n,r,o,a=t.x-e.x,s=t.y-e.y,q=i.x-t.x,l=i.y-t.y,h=a*a+s*s,c=a*l-s*q;if(Math.abs(c)>Number.EPSILON){var u=Math.sqrt(h),p=Math.sqrt(q*q+l*l),d=e.x-s/u,m=e.y+a/u,f=((i.x-l/p-d)*l-(i.y+q/p-m)*q)/(a*l-s*q),v=(n=d+a*f-t.x)*n+(r=m+s*f-t.y)*r;if(v<=2)return new Re(n,r);o=Math.sqrt(v/2)}else{var g=!1;a>Number.EPSILON?q>Number.EPSILON&&(g=!0):a<-Number.EPSILON?q<-Number.EPSILON&&(g=!0):Math.sign(s)===Math.sign(l)&&(g=!0),g?(n=-s,r=a,o=Math.sqrt(h)):(n=a,r=s,o=Math.sqrt(h/2))}return new Re(n/o,r/o)}for(var V=[],U=0,j=L.length,G=j-1,H=U+1;U<j;U++,G++,H++)G===j&&(G=0),H===j&&(H=0),V[U]=F(L[U],L[G],L[H]);var W,k,X=[],Y=V.concat();for(b=0,_=T.length;b<_;b++){for(w=T[b],W=[],U=0,G=(j=w.length)-1,H=U+1;U<j;U++,G++,H++)G===j&&(G=0),H===j&&(H=0),W[U]=F(w[U],w[G],w[H]);X.push(W),Y=Y.concat(W)}for(z=0;z<p;z++){for(C=z/p,O=h*Math.cos(C*Math.PI/2),R=c*Math.sin(C*Math.PI/2)+u,U=0,j=L.length;U<j;U++)J((I=P(L[U],V[U],R)).x,I.y,-O);for(b=0,_=T.length;b<_;b++)for(w=T[b],W=X[b],U=0,j=w.length;U<j;U++)J((I=P(w[U],W[U],R)).x,I.y,-O)}for(R=c+u,U=0;U<B;U++)I=l?P(E[U],Y[U],R):E[U],M?(y.copy(v.normals[0]).multiplyScalar(I.x),g.copy(v.binormals[0]).multiplyScalar(I.y),x.copy(f[0]).add(y).add(g),J(x.x,x.y,x.z)):J(I.x,I.y,0);for(k=1;k<=s;k++)for(U=0;U<B;U++)I=l?P(E[U],Y[U],R):E[U],M?(y.copy(v.normals[k]).multiplyScalar(I.x),g.copy(v.binormals[k]).multiplyScalar(I.y),x.copy(f[k]).add(y).add(g),J(x.x,x.y,x.z)):J(I.x,I.y,q/s*k);for(z=p-1;z>=0;z--){for(C=z/p,O=h*Math.cos(C*Math.PI/2),R=c*Math.sin(C*Math.PI/2)+u,U=0,j=L.length;U<j;U++)J((I=P(L[U],V[U],R)).x,I.y,q+O);for(b=0,_=T.length;b<_;b++)for(w=T[b],W=X[b],U=0,j=w.length;U<j;U++)I=P(w[U],W[U],R),M?J(I.x,I.y+f[s-1].y,f[s-1].x+O):J(I.x,I.y,q+O)}function Z(t,e){var i,n;for(U=t.length;--U>=0;){i=U,(n=U-1)<0&&(n=t.length-1);var r=0,o=s+2*p;for(r=0;r<o;r++){var a=B*r,q=B*(r+1);K(e+i+a,e+n+a,e+n+q,e+i+q)}}}function J(t,e,i){o.push(t),o.push(e),o.push(i)}function Q(t,e,r){$(t),$(e),$(r);var o=n.length/3,a=m.generateTopUV(i,n,o-3,o-2,o-1);tt(a[0]),tt(a[1]),tt(a[2])}function K(t,e,r,o){$(t),$(e),$(o),$(e),$(r),$(o);var a=n.length/3,s=m.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);tt(s[0]),tt(s[1]),tt(s[3]),tt(s[1]),tt(s[2]),tt(s[3])}function $(t){n.push(o[3*t+0]),n.push(o[3*t+1]),n.push(o[3*t+2])}function tt(t){r.push(t.x),r.push(t.y)}!function(){var t=n.length/3;if(l){var e=0,r=B*e;for(U=0;U<D;U++)Q((N=A[U])[2]+r,N[1]+r,N[0]+r);for(r=B*(e=s+2*p),U=0;U<D;U++)Q((N=A[U])[0]+r,N[1]+r,N[2]+r)}else{for(U=0;U<D;U++)Q((N=A[U])[2],N[1],N[0]);for(U=0;U<D;U++)Q((N=A[U])[0]+B*s,N[1]+B*s,N[2]+B*s)}i.addGroup(t,n.length/3-t,0)}(),function(){var t=n.length/3,e=0;for(Z(L,e),e+=L.length,b=0,_=T.length;b<_;b++)Z(w=T[b],e),e+=w.length;i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new Mn(n,3)),this.setAttribute("uv",new Mn(r,2)),this.computeVertexNormals()}vq.prototype=Object.create(ar.prototype),vq.prototype.constructor=vq,vq.prototype.toJSON=function(){var t=ar.prototype.toJSON.call(this);return xq(this.parameters.shapes,this.parameters.options,t)},gq.prototype=Object.create(In.prototype),gq.prototype.constructor=gq,gq.prototype.toJSON=function(){var t=In.prototype.toJSON.call(this);return xq(this.parameters.shapes,this.parameters.options,t)};var yq={generateTopUV:function(t,e,i,n,r){var o=e[3*i],a=e[3*i+1],s=e[3*n],q=e[3*n+1],l=e[3*r],h=e[3*r+1];return[new Re(o,a),new Re(s,q),new Re(l,h)]},generateSideWallUV:function(t,e,i,n,r,o){var a=e[3*i],s=e[3*i+1],q=e[3*i+2],l=e[3*n],h=e[3*n+1],c=e[3*n+2],u=e[3*r],p=e[3*r+1],d=e[3*r+2],m=e[3*o],f=e[3*o+1],v=e[3*o+2];return Math.abs(s-h)<.01?[new Re(a,1-q),new Re(l,1-c),new Re(u,1-d),new Re(m,1-v)]:[new Re(s,1-q),new Re(h,1-c),new Re(p,1-d),new Re(f,1-v)]}};function xq(t,e,i){if(i.shapes=[],Array.isArray(t))for(var n=0,r=t.length;n<r;n++){var o=t[n];i.shapes.push(o.uuid)}else i.shapes.push(t.uuid);return void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}function wq(t,e){ar.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new bq(t,e)),this.mergeVertices()}function bq(t,e){var i=(e=e||{}).font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ar;var n=i.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),gq.call(this,n,e),this.type="TextBufferGeometry"}function _q(t,e,i,n,r,o,a){ar.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Mq(t,e,i,n,r,o,a)),this.mergeVertices()}function Mq(t,e,i,n,r,o,a){In.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},t=t||1,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,q,l=Math.min(o+a,Math.PI),h=0,c=[],u=new Ne,p=new Ne,d=[],m=[],f=[],v=[];for(q=0;q<=i;q++){var g=[],y=q/i,x=0;for(0==q&&0==o?x=.5/e:q==i&&l==Math.PI&&(x=-.5/e),s=0;s<=e;s++){var w=s/e;u.x=-t*Math.cos(n+w*r)*Math.sin(o+y*a),u.y=t*Math.cos(o+y*a),u.z=t*Math.sin(n+w*r)*Math.sin(o+y*a),m.push(u.x,u.y,u.z),p.copy(u).normalize(),f.push(p.x,p.y,p.z),v.push(w+x,1-y),g.push(h++)}c.push(g)}for(q=0;q<i;q++)for(s=0;s<e;s++){var b=c[q][s+1],_=c[q][s],M=c[q+1][s],S=c[q+1][s+1];(0!==q||o>0)&&d.push(b,_,S),(q!==i-1||l<Math.PI)&&d.push(_,M,S)}this.setIndex(d),this.setAttribute("position",new Mn(m,3)),this.setAttribute("normal",new Mn(f,3)),this.setAttribute("uv",new Mn(v,2))}function Sq(t,e,i,n,r,o){ar.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},this.fromBufferGeometry(new Eq(t,e,i,n,r,o)),this.mergeVertices()}function Eq(t,e,i,n,r,o){In.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},t=t||.5,e=e||1,r=void 0!==r?r:0,o=void 0!==o?o:2*Math.PI,i=void 0!==i?Math.max(3,i):8;var a,s,q,l=[],h=[],c=[],u=[],p=t,d=(e-t)/(n=void 0!==n?Math.max(1,n):1),m=new Ne,f=new Re;for(s=0;s<=n;s++){for(q=0;q<=i;q++)a=r+q/i*o,m.x=p*Math.cos(a),m.y=p*Math.sin(a),h.push(m.x,m.y,m.z),c.push(0,0,1),f.x=(m.x/e+1)/2,f.y=(m.y/e+1)/2,u.push(f.x,f.y);p+=d}for(s=0;s<n;s++){var v=s*(i+1);for(q=0;q<i;q++){var g=a=q+v,y=a+i+1,x=a+i+2,w=a+1;l.push(g,y,w),l.push(y,x,w)}}this.setIndex(l),this.setAttribute("position",new Mn(h,3)),this.setAttribute("normal",new Mn(c,3)),this.setAttribute("uv",new Mn(u,2))}function Tq(t,e,i,n){ar.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},this.fromBufferGeometry(new Aq(t,e,i,n)),this.mergeVertices()}function Aq(t,e,i,n){In.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e)||12,i=i||0,n=n||2*Math.PI,n=ze.clamp(n,0,2*Math.PI);var r,o,a,s=[],q=[],l=[],h=1/e,c=new Ne,u=new Re;for(o=0;o<=e;o++){var p=i+o*h*n,d=Math.sin(p),m=Math.cos(p);for(a=0;a<=t.length-1;a++)c.x=t[a].x*d,c.y=t[a].y,c.z=t[a].x*m,q.push(c.x,c.y,c.z),u.x=o/e,u.y=a/(t.length-1),l.push(u.x,u.y)}for(o=0;o<e;o++)for(a=0;a<t.length-1;a++){var f=r=a+o*t.length,v=r+t.length,g=r+t.length+1,y=r+1;s.push(f,v,y),s.push(v,g,y)}if(this.setIndex(s),this.setAttribute("position",new Mn(q,3)),this.setAttribute("uv",new Mn(l,2)),this.computeVertexNormals(),n===2*Math.PI){var x=this.attributes.normal.array,w=new Ne,b=new Ne,_=new Ne;for(r=e*t.length*3,o=0,a=0;o<t.length;o++,a+=3)w.x=x[a+0],w.y=x[a+1],w.z=x[a+2],b.x=x[r+a+0],b.y=x[r+a+1],b.z=x[r+a+2],_.addVectors(w,b).normalize(),x[a+0]=x[r+a+0]=_.x,x[a+1]=x[r+a+1]=_.y,x[a+2]=x[r+a+2]=_.z}}function Lq(t,e){ar.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Pq(t,e)),this.mergeVertices()}function Pq(t,e){In.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var i=[],n=[],r=[],o=[],a=0,s=0;if(!1===Array.isArray(t))l(t);else for(var q=0;q<t.length;q++)l(t[q]),this.addGroup(a,s,q),a+=s,s=0;function l(t){var a,q,l,h=n.length/3,c=t.extractPoints(e),u=c.shape,p=c.holes;for(!1===dq.isClockWise(u)&&(u=u.reverse()),a=0,q=p.length;a<q;a++)l=p[a],!0===dq.isClockWise(l)&&(p[a]=l.reverse());var d=dq.triangulateShape(u,p);for(a=0,q=p.length;a<q;a++)l=p[a],u=u.concat(l);for(a=0,q=u.length;a<q;a++){var m=u[a];n.push(m.x,m.y,0),r.push(0,0,1),o.push(m.x,m.y)}for(a=0,q=d.length;a<q;a++){var f=d[a],v=f[0]+h,g=f[1]+h,y=f[2]+h;i.push(v,g,y),s+=3}}this.setIndex(i),this.setAttribute("position",new Mn(n,3)),this.setAttribute("normal",new Mn(r,3)),this.setAttribute("uv",new Mn(o,2))}function zq(t,e){if(e.shapes=[],Array.isArray(t))for(var i=0,n=t.length;i<n;i++){var r=t[i];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}function Rq(t,e){In.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var i,n,r,o,a=[],s=Math.cos(ze.DEG2RAD*e),q=[0,0],l={},h=["a","b","c"];t.isBufferGeometry?(o=new ar).fromBufferGeometry(t):o=t.clone(),o.mergeVertices(),o.computeFaceNormals();for(var c=o.vertices,u=o.faces,p=0,d=u.length;p<d;p++)for(var m=u[p],f=0;f<3;f++)i=m[h[f]],n=m[h[(f+1)%3]],q[0]=Math.min(i,n),q[1]=Math.max(i,n),void 0===l[r=q[0]+","+q[1]]?l[r]={index1:q[0],index2:q[1],face1:p,face2:void 0}:l[r].face2=p;for(r in l){var v=l[r];if(void 0===v.face2||u[v.face1].normal.dot(u[v.face2].normal)<=s){var g=c[v.index1];a.push(g.x,g.y,g.z),g=c[v.index2],a.push(g.x,g.y,g.z)}}this.setAttribute("position",new Mn(a,3))}function Cq(t,e,i,n,r,o,a,s){ar.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new Oq(t,e,i,n,r,o,a,s)),this.mergeVertices()}function Oq(t,e,i,n,r,o,a,s){In.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:s};var q=this;t=void 0!==t?t:1,e=void 0!==e?e:1,i=i||1,n=Math.floor(n)||8,r=Math.floor(r)||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var l=[],h=[],c=[],u=[],p=0,d=[],m=i/2,f=0;function v(i){var r,o,d,v=new Re,g=new Ne,y=0,x=!0===i?t:e,w=!0===i?1:-1;for(o=p,r=1;r<=n;r++)h.push(0,m*w,0),c.push(0,w,0),u.push(.5,.5),p++;for(d=p,r=0;r<=n;r++){var b=r/n*s+a,_=Math.cos(b),M=Math.sin(b);g.x=x*M,g.y=m*w,g.z=x*_,h.push(g.x,g.y,g.z),c.push(0,w,0),v.x=.5*_+.5,v.y=.5*M*w+.5,u.push(v.x,v.y),p++}for(r=0;r<n;r++){var S=o+r,E=d+r;!0===i?l.push(E,E+1,S):l.push(E+1,E,S),y+=3}q.addGroup(f,y,!0===i?1:2),f+=y}!function(){var o,v,g=new Ne,y=new Ne,x=0,w=(e-t)/i;for(v=0;v<=r;v++){var b=[],_=v/r,M=_*(e-t)+t;for(o=0;o<=n;o++){var S=o/n,E=S*s+a,T=Math.sin(E),A=Math.cos(E);y.x=M*T,y.y=-_*i+m,y.z=M*A,h.push(y.x,y.y,y.z),g.set(T,w,A).normalize(),c.push(g.x,g.y,g.z),u.push(S,1-_),b.push(p++)}d.push(b)}for(o=0;o<n;o++)for(v=0;v<r;v++){var L=d[v][o],P=d[v+1][o],z=d[v+1][o+1],R=d[v][o+1];l.push(L,P,R),l.push(P,z,R),x+=6}q.addGroup(f,x,0),f+=x}(),!1===o&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(l),this.setAttribute("position",new Mn(h,3)),this.setAttribute("normal",new Mn(c,3)),this.setAttribute("uv",new Mn(u,2))}function Iq(t,e,i,n,r,o,a){Cq.call(this,0,t,e,i,n,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}function Nq(t,e,i,n,r,o,a){Oq.call(this,0,t,e,i,n,r,o,a),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}function Bq(t,e,i,n){ar.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new Dq(t,e,i,n)),this.mergeVertices()}function Dq(t,e,i,n){In.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},t=t||1,e=void 0!==e?Math.max(3,e):8,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;var r,o,a=[],s=[],q=[],l=[],h=new Ne,c=new Re;for(s.push(0,0,0),q.push(0,0,1),l.push(.5,.5),o=0,r=3;o<=e;o++,r+=3){var u=i+o/e*n;h.x=t*Math.cos(u),h.y=t*Math.sin(u),s.push(h.x,h.y,h.z),q.push(0,0,1),c.x=(s[r]/t+1)/2,c.y=(s[r+1]/t+1)/2,l.push(c.x,c.y)}for(r=1;r<=e;r++)a.push(r,r+1,0);this.setIndex(a),this.setAttribute("position",new Mn(s,3)),this.setAttribute("normal",new Mn(q,3)),this.setAttribute("uv",new Mn(l,2))}wq.prototype=Object.create(ar.prototype),wq.prototype.constructor=wq,bq.prototype=Object.create(gq.prototype),bq.prototype.constructor=bq,_q.prototype=Object.create(ar.prototype),_q.prototype.constructor=_q,Mq.prototype=Object.create(In.prototype),Mq.prototype.constructor=Mq,Sq.prototype=Object.create(ar.prototype),Sq.prototype.constructor=Sq,Eq.prototype=Object.create(In.prototype),Eq.prototype.constructor=Eq,Tq.prototype=Object.create(ar.prototype),Tq.prototype.constructor=Tq,Aq.prototype=Object.create(In.prototype),Aq.prototype.constructor=Aq,Lq.prototype=Object.create(ar.prototype),Lq.prototype.constructor=Lq,Lq.prototype.toJSON=function(){var t=ar.prototype.toJSON.call(this);return zq(this.parameters.shapes,t)},Pq.prototype=Object.create(In.prototype),Pq.prototype.constructor=Pq,Pq.prototype.toJSON=function(){var t=In.prototype.toJSON.call(this);return zq(this.parameters.shapes,t)},Rq.prototype=Object.create(In.prototype),Rq.prototype.constructor=Rq,Cq.prototype=Object.create(ar.prototype),Cq.prototype.constructor=Cq,Oq.prototype=Object.create(In.prototype),Oq.prototype.constructor=Oq,Iq.prototype=Object.create(Cq.prototype),Iq.prototype.constructor=Iq,Nq.prototype=Object.create(Oq.prototype),Nq.prototype.constructor=Nq,Bq.prototype=Object.create(ar.prototype),Bq.prototype.constructor=Bq,Dq.prototype=Object.create(In.prototype),Dq.prototype.constructor=Dq;var Fq=Object.freeze({__proto__:null,WireframeGeometry:As,ParametricGeometry:Ls,ParametricBufferGeometry:Ps,TetrahedronGeometry:Cs,TetrahedronBufferGeometry:Os,OctahedronGeometry:Is,OctahedronBufferGeometry:Ns,IcosahedronGeometry:Bs,IcosahedronBufferGeometry:Ds,DodecahedronGeometry:Fs,DodecahedronBufferGeometry:Vs,PolyhedronGeometry:zs,PolyhedronBufferGeometry:Rs,TubeGeometry:Us,TubeBufferGeometry:js,TorusKnotGeometry:Gs,TorusKnotBufferGeometry:Hs,TorusGeometry:Ws,TorusBufferGeometry:ks,TextGeometry:wq,TextBufferGeometry:bq,SphereGeometry:_q,SphereBufferGeometry:Mq,RingGeometry:Sq,RingBufferGeometry:Eq,PlaneGeometry:Tr,PlaneBufferGeometry:Ar,LatheGeometry:Tq,LatheBufferGeometry:Aq,ShapeGeometry:Lq,ShapeBufferGeometry:Pq,ExtrudeGeometry:vq,ExtrudeBufferGeometry:gq,EdgesGeometry:Rq,ConeGeometry:Iq,ConeBufferGeometry:Nq,CylinderGeometry:Cq,CylinderBufferGeometry:Oq,CircleGeometry:Bq,CircleBufferGeometry:Dq,BoxGeometry:class extends ar{constructor(t,e,i,n,r,o){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:o},this.fromBufferGeometry(new sr(t,e,i,n,r,o)),this.mergeVertices()}},BoxBufferGeometry:sr});function Vq(t){dn.call(this),this.type="ShadowMaterial",this.color=new qn(0),this.transparent=!0,this.setValues(t)}function Uq(t){ur.call(this,t),this.type="RawShaderMaterial"}function jq(t){dn.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new qn(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Gq(t){jq.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new Re(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(t)}function Hq(t){dn.call(this),this.type="MeshPhongMaterial",this.color=new qn(16777215),this.specular=new qn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=W,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Wq(t){Hq.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function kq(t){dn.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Xq(t){dn.call(this),this.type="MeshLambertMaterial",this.color=new qn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=W,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Yq(t){dn.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new qn(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Zq(t){as.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Vq.prototype=Object.create(dn.prototype),Vq.prototype.constructor=Vq,Vq.prototype.isShadowMaterial=!0,Vq.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this},Uq.prototype=Object.create(ur.prototype),Uq.prototype.constructor=Uq,Uq.prototype.isRawShaderMaterial=!0,jq.prototype=Object.create(dn.prototype),jq.prototype.constructor=jq,jq.prototype.isMeshStandardMaterial=!0,jq.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Gq.prototype=Object.create(jq.prototype),Gq.prototype.constructor=Gq,Gq.prototype.isMeshPhysicalMaterial=!0,Gq.prototype.copy=function(t){return jq.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearcoat=t.clearcoat,this.clearcoatRoughness=t.clearcoatRoughness,t.sheen?this.sheen=(this.sheen||new qn).copy(t.sheen):this.sheen=null,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.transparency=t.transparency,this},Hq.prototype=Object.create(dn.prototype),Hq.prototype.constructor=Hq,Hq.prototype.isMeshPhongMaterial=!0,Hq.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Wq.prototype=Object.create(Hq.prototype),Wq.prototype.constructor=Wq,Wq.prototype.isMeshToonMaterial=!0,Wq.prototype.copy=function(t){return Hq.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},kq.prototype=Object.create(dn.prototype),kq.prototype.constructor=kq,kq.prototype.isMeshNormalMaterial=!0,kq.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Xq.prototype=Object.create(dn.prototype),Xq.prototype.constructor=Xq,Xq.prototype.isMeshLambertMaterial=!0,Xq.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Yq.prototype=Object.create(dn.prototype),Yq.prototype.constructor=Yq,Yq.prototype.isMeshMatcapMaterial=!0,Yq.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Zq.prototype=Object.create(as.prototype),Zq.prototype.constructor=Zq,Zq.prototype.isLineDashedMaterial=!0,Zq.prototype.copy=function(t){return as.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Jq=Object.freeze({__proto__:null,ShadowMaterial:Vq,SpriteMaterial:Na,RawShaderMaterial:Uq,ShaderMaterial:ur,PointsMaterial:vs,MeshPhysicalMaterial:Gq,MeshStandardMaterial:jq,MeshPhongMaterial:Hq,MeshToonMaterial:Wq,MeshNormalMaterial:kq,MeshLambertMaterial:Xq,MeshDepthMaterial:pa,MeshDistanceMaterial:da,MeshBasicMaterial:mn,MeshMatcapMaterial:Yq,LineDashedMaterial:Zq,LineBasicMaterial:as,Material:dn}),Qq={arraySlice:function(t,e,i){return Qq.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,i=new Array(e),n=0;n!==e;++n)i[n]=n;return i.sort((function(e,i){return t[e]-t[i]})),i},sortedArray:function(t,e,i){for(var n=t.length,r=new t.constructor(n),o=0,a=0;a!==n;++o)for(var s=i[o]*e,q=0;q!==e;++q)r[a++]=t[s+q];return r},flattenJSON:function(t,e,i,n){for(var r=1,o=t[0];void 0!==o&&void 0===o[n];)o=t[r++];if(void 0!==o){var a=o[n];if(void 0!==a)if(Array.isArray(a))do{void 0!==(a=o[n])&&(e.push(o.time),i.push.apply(i,a)),o=t[r++]}while(void 0!==o);else if(void 0!==a.toArray)do{void 0!==(a=o[n])&&(e.push(o.time),a.toArray(i,i.length)),o=t[r++]}while(void 0!==o);else do{void 0!==(a=o[n])&&(e.push(o.time),i.push(a)),o=t[r++]}while(void 0!==o)}},subclip:function(t,e,i,n,r){r=r||30;var o=t.clone();o.name=e;for(var a=[],s=0;s<o.tracks.length;++s){for(var q=o.tracks[s],l=q.getValueSize(),h=[],c=[],u=0;u<q.times.length;++u){var p=q.times[u]*r;if(!(p<i||p>=n)){h.push(q.times[u]);for(var d=0;d<l;++d)c.push(q.values[u*l+d])}}0!==h.length&&(q.times=Qq.convertArray(h,q.times.constructor),q.values=Qq.convertArray(c,q.values.constructor),a.push(q))}o.tracks=a;var m=1/0;for(s=0;s<o.tracks.length;++s)m>o.tracks[s].times[0]&&(m=o.tracks[s].times[0]);for(s=0;s<o.tracks.length;++s)o.tracks[s].shift(-1*m);return o.resetDuration(),o}};function Kq(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}function $q(t,e,i,n){Kq.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function tl(t,e,i,n){Kq.call(this,t,e,i,n)}function el(t,e,i,n){Kq.call(this,t,e,i,n)}function il(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Qq.convertArray(e,this.TimeBufferType),this.values=Qq.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function nl(t,e,i){il.call(this,t,e,i)}function rl(t,e,i,n){il.call(this,t,e,i,n)}function ol(t,e,i,n){il.call(this,t,e,i,n)}function al(t,e,i,n){Kq.call(this,t,e,i,n)}function sl(t,e,i,n){il.call(this,t,e,i,n)}function ql(t,e,i,n){il.call(this,t,e,i,n)}function ll(t,e,i,n){il.call(this,t,e,i,n)}function hl(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=ze.generateUUID(),this.duration<0&&this.resetDuration()}function cl(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ol;case"vector":case"vector2":case"vector3":case"vector4":return ll;case"color":return rl;case"quaternion":return sl;case"bool":case"boolean":return nl;case"string":return ql}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){var i=[],n=[];Qq.flattenJSON(t.keys,i,n,"value"),t.times=i,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Kq.prototype,{evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{var o;i:{n:if(!(t<n)){for(var a=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===a)break;if(r=n,t<(n=e[++i]))break e}o=e.length;break i}if(t>=r)break t;var s=e[1];for(t<s&&(i=2,r=s),a=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===a)break;if(n=r,t>=(r=e[--i-1]))break e}o=i,i=0}for(;i<o;){var q=i+o>>>1;t<e[q]?o=q:i=q+1}if(n=e[i],void 0===(r=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n,o=0;o!==n;++o)e[o]=i[r+o];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Kq.prototype,{beforeStart_:Kq.prototype.copySampleValue_,afterEnd_:Kq.prototype.copySampleValue_}),$q.prototype=Object.assign(Object.create(Kq.prototype),{constructor:$q,DefaultSettings_:{endingStart:qe,endingEnd:qe},intervalChanged_:function(t,e,i){var n=this.parameterPositions,r=t-2,o=t+1,a=n[r],s=n[o];if(void 0===a)switch(this.getSettings_().endingStart){case le:r=t,a=2*e-i;break;case he:a=e+n[r=n.length-2]-n[r+1];break;default:r=t,a=i}if(void 0===s)switch(this.getSettings_().endingEnd){case le:o=t,s=2*i-e;break;case he:o=1,s=i+n[1]-n[0];break;default:o=t-1,s=e}var q=.5*(i-e),l=this.valueSize;this._weightPrev=q/(e-a),this._weightNext=q/(s-i),this._offsetPrev=r*l,this._offsetNext=o*l},interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,q=s-a,l=this._offsetPrev,h=this._offsetNext,c=this._weightPrev,u=this._weightNext,p=(i-e)/(n-e),d=p*p,m=d*p,f=-c*m+2*c*d-c*p,v=(1+c)*m+(-1.5-2*c)*d+(-.5+c)*p+1,g=(-1-u)*m+(1.5+u)*d+.5*p,y=u*m-u*d,x=0;x!==a;++x)r[x]=f*o[l+x]+v*o[q+x]+g*o[s+x]+y*o[h+x];return r}}),tl.prototype=Object.assign(Object.create(Kq.prototype),{constructor:tl,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,q=s-a,l=(i-e)/(n-e),h=1-l,c=0;c!==a;++c)r[c]=o[q+c]*h+o[s+c]*l;return r}}),el.prototype=Object.assign(Object.create(Kq.prototype),{constructor:el,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(il,{toJSON:function(t){var e,i=t.constructor;if(void 0!==i.toJSON)e=i.toJSON(t);else{e={name:t.name,times:Qq.convertArray(t.times,Array),values:Qq.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}return e.type=t.ValueTypeName,e}}),Object.assign(il.prototype,{constructor:il,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:ae,InterpolantFactoryMethodDiscrete:function(t){return new el(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new tl(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new $q(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case oe:e=this.InterpolantFactoryMethodDiscrete;break;case ae:e=this.InterpolantFactoryMethodLinear;break;case se:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return oe;case this.InterpolantFactoryMethodLinear:return ae;case this.InterpolantFactoryMethodSmooth:return se}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]*=t;return this},trim:function(t,e){for(var i=this.times,n=i.length,r=0,o=n-1;r!==n&&i[r]<t;)++r;for(;-1!==o&&i[o]>e;)--o;if(++o,0!==r||o!==n){r>=o&&(r=(o=Math.max(o,1))-1);var a=this.getValueSize();this.times=Qq.arraySlice(i,r,o),this.values=Qq.arraySlice(this.values,r*a,o*a)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var o=null,a=0;a!==r;a++){var s=i[a];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,s),t=!1;break}if(null!==o&&o>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,s,o),t=!1;break}o=s}if(void 0!==n&&Qq.isTypedArray(n)){a=0;for(var q=n.length;a!==q;++a){var l=n[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),n=this.getInterpolation()===se,r=1,o=t.length-1,a=1;a<o;++a){var s=!1,q=t[a];if(q!==t[a+1]&&(1!==a||q!==q[0]))if(n)s=!0;else for(var l=a*i,h=l-i,c=l+i,u=0;u!==i;++u){var p=e[l+u];if(p!==e[h+u]||p!==e[c+u]){s=!0;break}}if(s){if(a!==r){t[r]=t[a];var d=a*i,m=r*i;for(u=0;u!==i;++u)e[m+u]=e[d+u]}++r}}if(o>0){for(t[r]=t[o],d=o*i,m=r*i,u=0;u!==i;++u)e[m+u]=e[d+u];++r}return r!==t.length&&(this.times=Qq.arraySlice(t,0,r),this.values=Qq.arraySlice(e,0,r*i)),this},clone:function(){var t=Qq.arraySlice(this.times,0),e=Qq.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}),nl.prototype=Object.assign(Object.create(il.prototype),{constructor:nl,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:oe,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),rl.prototype=Object.assign(Object.create(il.prototype),{constructor:rl,ValueTypeName:"color"}),ol.prototype=Object.assign(Object.create(il.prototype),{constructor:ol,ValueTypeName:"number"}),al.prototype=Object.assign(Object.create(Kq.prototype),{constructor:al,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,q=(i-e)/(n-e),l=s+a;s!==l;s+=4)Ce.slerpFlat(r,0,o,s-a,o,s,q);return r}}),sl.prototype=Object.assign(Object.create(il.prototype),{constructor:sl,ValueTypeName:"quaternion",DefaultInterpolation:ae,InterpolantFactoryMethodLinear:function(t){return new al(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),ql.prototype=Object.assign(Object.create(il.prototype),{constructor:ql,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:oe,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ll.prototype=Object.assign(Object.create(il.prototype),{constructor:ll,ValueTypeName:"vector"}),Object.assign(hl,{parse:function(t){for(var e=[],i=t.tracks,n=1/(t.fps||1),r=0,o=i.length;r!==o;++r)e.push(cl(i[r]).scale(n));return new hl(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},r=0,o=i.length;r!==o;++r)e.push(il.toJSON(i[r]));return n},CreateFromMorphTargetSequence:function(t,e,i,n){for(var r=e.length,o=[],a=0;a<r;a++){var s=[],q=[];s.push((a+r-1)%r,a,(a+1)%r),q.push(0,1,0);var l=Qq.getKeyframeOrder(s);s=Qq.sortedArray(s,1,l),q=Qq.sortedArray(q,1,l),n||0!==s[0]||(s.push(r),q.push(q[0])),o.push(new ol(".morphTargetInfluences["+e[a].name+"]",s,q).scale(1/i))}return new hl(t,-1,o)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var n=t;i=n.geometry&&n.geometry.animations||n.animations}for(var r=0;r<i.length;r++)if(i[r].name===e)return i[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){for(var n={},r=/^([\w-]*?)([\d]+)$/,o=0,a=t.length;o<a;o++){var s=t[o],q=s.name.match(r);if(q&&q.length>1){var l=n[c=q[1]];l||(n[c]=l=[]),l.push(s)}}var h=[];for(var c in n)h.push(hl.CreateFromMorphTargetSequence(c,n[c],e,i));return h},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var i=function(t,e,i,n,r){if(0!==i.length){var o=[],a=[];Qq.flattenJSON(i,o,a,n),0!==o.length&&r.push(new t(e,o,a))}},n=[],r=t.name||"default",o=t.length||-1,a=t.fps||30,s=t.hierarchy||[],q=0;q<s.length;q++){var l=s[q].keys;if(l&&0!==l.length)if(l[0].morphTargets){for(var h={},c=0;c<l.length;c++)if(l[c].morphTargets)for(var u=0;u<l[c].morphTargets.length;u++)h[l[c].morphTargets[u]]=-1;for(var p in h){var d=[],m=[];for(u=0;u!==l[c].morphTargets.length;++u){var f=l[c];d.push(f.time),m.push(f.morphTarget===p?1:0)}n.push(new ol(".morphTargetInfluence["+p+"]",d,m))}o=h.length*(a||1)}else{var v=".bones["+e[q].name+"]";i(ll,v+".position",l,"pos",n),i(sl,v+".quaternion",l,"rot",n),i(ll,v+".scale",l,"scl",n)}}return 0===n.length?null:new hl(r,o,n)}}),Object.assign(hl.prototype,{resetDuration:function(){for(var t=0,e=0,i=this.tracks.length;e!==i;++e){var n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){for(var t=[],e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new hl(this.name,this.duration,t)}});var ul={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function pl(t,e,i){var n=this,r=!1,o=0,a=0,s=void 0,q=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){a++,!1===r&&void 0!==n.onStart&&n.onStart(t,o,a),r=!0},this.itemEnd=function(t){o++,void 0!==n.onProgress&&n.onProgress(t,o,a),o===a&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this},this.addHandler=function(t,e){return q.push(t,e),this},this.removeHandler=function(t){var e=q.indexOf(t);return-1!==e&&q.splice(e,2),this},this.getHandler=function(t){for(var e=0,i=q.length;e<i;e+=2){var n=q[e],r=q[e+1];if(n.test(t))return r}return null}}var dl=new pl;function ml(t){this.manager=void 0!==t?t:dl,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(ml.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this}});var fl={};function vl(t){ml.call(this,t)}function gl(t){ml.call(this,t)}function yl(t){ml.call(this,t)}function xl(t){ml.call(this,t)}function wl(t){ml.call(this,t)}function bl(t){ml.call(this,t)}function _l(t){ml.call(this,t)}function Ml(){this.type="Curve",this.arcLengthDivisions=200}function Sl(t,e,i,n,r,o,a,s){Ml.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=a||!1,this.aRotation=s||0}function El(t,e,i,n,r,o){Sl.call(this,t,e,i,i,n,r,o),this.type="ArcCurve"}function Tl(){var t=0,e=0,i=0,n=0;function r(r,o,a,s){t=r,e=a,i=-3*r+3*o-2*a-s,n=2*r-2*o+a+s}return{initCatmullRom:function(t,e,i,n,o){r(e,i,o*(i-t),o*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,o,a,s){var q=(e-t)/o-(i-t)/(o+a)+(i-e)/a,l=(i-e)/a-(n-e)/(a+s)+(n-i)/s;r(e,i,q*=a,l*=a)},calc:function(r){var o=r*r;return t+e*r+i*o+n*(o*r)}}}vl.prototype=Object.assign(Object.create(ml.prototype),{constructor:vl,load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,o=ul.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;if(void 0===fl[t]){var a=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(a){var s=a[1],q=!!a[2],l=a[3];l=decodeURIComponent(l),q&&(l=atob(l));try{var h,c=(this.responseType||"").toLowerCase();switch(c){case"arraybuffer":case"blob":for(var u=new Uint8Array(l.length),p=0;p<l.length;p++)u[p]=l.charCodeAt(p);h="blob"===c?new Blob([u.buffer],{type:s}):u.buffer;break;case"document":var d=new DOMParser;h=d.parseFromString(l,s);break;case"json":h=JSON.parse(l);break;default:h=l}setTimeout((function(){e&&e(h),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{fl[t]=[],fl[t].push({onLoad:e,onProgress:i,onError:n});var m=new XMLHttpRequest;for(var f in m.open("GET",t,!0),m.addEventListener("load",(function(e){var i=this.response,n=fl[t];if(delete fl[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),ul.add(t,i);for(var o=0,a=n.length;o<a;o++)(s=n[o]).onLoad&&s.onLoad(i);r.manager.itemEnd(t)}else{for(o=0,a=n.length;o<a;o++){var s;(s=n[o]).onError&&s.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),m.addEventListener("progress",(function(e){for(var i=fl[t],n=0,r=i.length;n<r;n++){var o=i[n];o.onProgress&&o.onProgress(e)}}),!1),m.addEventListener("error",(function(e){var i=fl[t];delete fl[t];for(var n=0,o=i.length;n<o;n++){var a=i[n];a.onError&&a.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),m.addEventListener("abort",(function(e){var i=fl[t];delete fl[t];for(var n=0,o=i.length;n<o;n++){var a=i[n];a.onError&&a.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)m.setRequestHeader(f,this.requestHeader[f]);m.send(null)}return r.manager.itemStart(t),m}fl[t].push({onLoad:e,onProgress:i,onError:n})},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),gl.prototype=Object.assign(Object.create(ml.prototype),{constructor:gl,load:function(t,e,i,n){var r=this,o=new vl(r.manager);o.setPath(r.path),o.load(t,(function(t){e(r.parse(JSON.parse(t)))}),i,n)},parse:function(t){for(var e=[],i=0;i<t.length;i++){var n=hl.parse(t[i]);e.push(n)}return e}}),yl.prototype=Object.assign(Object.create(ml.prototype),{constructor:yl,load:function(t,e,i,n){var r=this,o=[],a=new Ss;a.image=o;var s=new vl(this.manager);function q(q){s.load(t[q],(function(t){var i=r.parse(t,!0);o[q]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(a.minFilter=pt),a.format=i.format,a.needsUpdate=!0,e&&e(a))}),i,n)}if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(t))for(var l=0,h=0,c=t.length;h<c;++h)q(h);else s.load(t,(function(t){var i=r.parse(t,!0);if(i.isCubemap)for(var n=i.mipmaps.length/i.mipmapCount,s=0;s<n;s++){o[s]={mipmaps:[]};for(var q=0;q<i.mipmapCount;q++)o[s].mipmaps.push(i.mipmaps[s*i.mipmapCount+q]),o[s].format=i.format,o[s].width=i.width,o[s].height=i.height}else a.image.width=i.width,a.image.height=i.height,a.mipmaps=i.mipmaps;1===i.mipmapCount&&(a.minFilter=pt),a.format=i.format,a.needsUpdate=!0,e&&e(a)}),i,n);return a}}),xl.prototype=Object.assign(Object.create(ml.prototype),{constructor:xl,load:function(t,e,i,n){var r=this,o=new gr,a=new vl(this.manager);return a.setResponseType("arraybuffer"),a.setPath(this.path),a.load(t,(function(t){var i=r.parse(t);i&&(void 0!==i.image?o.image=i.image:void 0!==i.data&&(o.image.width=i.width,o.image.height=i.height,o.image.data=i.data),o.wrapS=void 0!==i.wrapS?i.wrapS:qt,o.wrapT=void 0!==i.wrapT?i.wrapT:qt,o.magFilter=void 0!==i.magFilter?i.magFilter:pt,o.minFilter=void 0!==i.minFilter?i.minFilter:pt,o.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(o.format=i.format),void 0!==i.type&&(o.type=i.type),void 0!==i.mipmaps&&(o.mipmaps=i.mipmaps,o.minFilter=mt),1===i.mipmapCount&&(o.minFilter=pt),o.needsUpdate=!0,e&&e(o,i))}),i,n),o}}),wl.prototype=Object.assign(Object.create(ml.prototype),{constructor:wl,load:function(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,o=ul.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;var a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){a.removeEventListener("load",s,!1),a.removeEventListener("error",q,!1),ul.add(t,this),e&&e(this),r.manager.itemEnd(t)}function q(e){a.removeEventListener("load",s,!1),a.removeEventListener("error",q,!1),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}return a.addEventListener("load",s,!1),a.addEventListener("error",q,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}),bl.prototype=Object.assign(Object.create(ml.prototype),{constructor:bl,load:function(t,e,i,n){var r=new Vr,o=new wl(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);var a=0;function s(i){o.load(t[i],(function(t){r.images[i]=t,6==++a&&(r.needsUpdate=!0,e&&e(r))}),void 0,n)}for(var q=0;q<t.length;++q)s(q);return r}}),_l.prototype=Object.assign(Object.create(ml.prototype),{constructor:_l,load:function(t,e,i,n){var r=new je,o=new wl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,(function(i){r.image=i;var n=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=n?Lt:Pt,r.needsUpdate=!0,void 0!==e&&e(r)}),i,n),r}}),Object.assign(Ml.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var i=this.getUtoTmapping(t);return this.getPoint(i,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,n=[],r=this.getPoint(0),o=0;for(n.push(0),i=1;i<=t;i++)o+=(e=this.getPoint(i/t)).distanceTo(r),n.push(o),r=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var i,n=this.getLengths(),r=0,o=n.length;i=e||t*n[o-1];for(var a,s=0,q=o-1;s<=q;)if((a=n[r=Math.floor(s+(q-s)/2)]-i)<0)s=r+1;else{if(!(a>0)){q=r;break}q=r-1}if(n[r=q]===i)return r/(o-1);var l=n[r];return(r+(i-l)/(n[r+1]-l))/(o-1)},getTangent:function(t){var e=1e-4,i=t-e,n=t+e;i<0&&(i=0),n>1&&(n=1);var r=this.getPoint(i);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var i,n,r,o=new Ne,a=[],s=[],q=[],l=new Ne,h=new $e;for(i=0;i<=t;i++)n=i/t,a[i]=this.getTangentAt(n),a[i].normalize();s[0]=new Ne,q[0]=new Ne;var c=Number.MAX_VALUE,u=Math.abs(a[0].x),p=Math.abs(a[0].y),d=Math.abs(a[0].z);for(u<=c&&(c=u,o.set(1,0,0)),p<=c&&(c=p,o.set(0,1,0)),d<=c&&o.set(0,0,1),l.crossVectors(a[0],o).normalize(),s[0].crossVectors(a[0],l),q[0].crossVectors(a[0],s[0]),i=1;i<=t;i++)s[i]=s[i-1].clone(),q[i]=q[i-1].clone(),l.crossVectors(a[i-1],a[i]),l.length()>Number.EPSILON&&(l.normalize(),r=Math.acos(ze.clamp(a[i-1].dot(a[i]),-1,1)),s[i].applyMatrix4(h.makeRotationAxis(l,r))),q[i].crossVectors(a[i],s[i]);if(!0===e)for(r=Math.acos(ze.clamp(s[0].dot(s[t]),-1,1)),r/=t,a[0].dot(l.crossVectors(s[0],s[t]))>0&&(r=-r),i=1;i<=t;i++)s[i].applyMatrix4(h.makeRotationAxis(a[i],r*i)),q[i].crossVectors(a[i],s[i]);return{tangents:a,normals:s,binormals:q}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Sl.prototype=Object.create(Ml.prototype),Sl.prototype.constructor=Sl,Sl.prototype.isEllipseCurve=!0,Sl.prototype.getPoint=function(t,e){for(var i=e||new Re,n=2*Math.PI,r=this.aEndAngle-this.aStartAngle,o=Math.abs(r)<Number.EPSILON;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=o?0:n),!0!==this.aClockwise||o||(r===n?r=-n:r-=n);var a=this.aStartAngle+t*r,s=this.aX+this.xRadius*Math.cos(a),q=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){var l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),c=s-this.aX,u=q-this.aY;s=c*l-u*h+this.aX,q=c*h+u*l+this.aY}return i.set(s,q)},Sl.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Sl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Sl.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},El.prototype=Object.create(Sl.prototype),El.prototype.constructor=El,El.prototype.isArcCurve=!0;var Al=new Ne,Ll=new Tl,Pl=new Tl,zl=new Tl;function Rl(t,e,i,n){Ml.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=i||"centripetal",this.tension=n||.5}function Cl(t,e,i,n,r){var o=.5*(n-e),a=.5*(r-i),s=t*t;return(2*i-2*n+o+a)*(t*s)+(-3*i+3*n-2*o-a)*s+o*t+i}function Ol(t,e,i,n){return function(t,e){var i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function Il(t,e,i,n,r){return function(t,e){var i=1-t;return i*i*i*e}(t,e)+function(t,e){var i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}function Nl(t,e,i,n){Ml.call(this),this.type="CubicBezierCurve",this.v0=t||new Re,this.v1=e||new Re,this.v2=i||new Re,this.v3=n||new Re}function Bl(t,e,i,n){Ml.call(this),this.type="CubicBezierCurve3",this.v0=t||new Ne,this.v1=e||new Ne,this.v2=i||new Ne,this.v3=n||new Ne}function Dl(t,e){Ml.call(this),this.type="LineCurve",this.v1=t||new Re,this.v2=e||new Re}function Fl(t,e){Ml.call(this),this.type="LineCurve3",this.v1=t||new Ne,this.v2=e||new Ne}function Vl(t,e,i){Ml.call(this),this.type="QuadraticBezierCurve",this.v0=t||new Re,this.v1=e||new Re,this.v2=i||new Re}function Ul(t,e,i){Ml.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new Ne,this.v1=e||new Ne,this.v2=i||new Ne}function jl(t){Ml.call(this),this.type="SplineCurve",this.points=t||[]}Rl.prototype=Object.create(Ml.prototype),Rl.prototype.constructor=Rl,Rl.prototype.isCatmullRomCurve3=!0,Rl.prototype.getPoint=function(t,e){var i,n,r,o,a=e||new Ne,s=this.points,q=s.length,l=(q-(this.closed?0:1))*t,h=Math.floor(l),c=l-h;if(this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/q)+1)*q:0===c&&h===q-1&&(h=q-2,c=1),this.closed||h>0?i=s[(h-1)%q]:(Al.subVectors(s[0],s[1]).add(s[0]),i=Al),n=s[h%q],r=s[(h+1)%q],this.closed||h+2<q?o=s[(h+2)%q]:(Al.subVectors(s[q-1],s[q-2]).add(s[q-1]),o=Al),"centripetal"===this.curveType||"chordal"===this.curveType){var u="chordal"===this.curveType?.5:.25,p=Math.pow(i.distanceToSquared(n),u),d=Math.pow(n.distanceToSquared(r),u),m=Math.pow(r.distanceToSquared(o),u);d<1e-4&&(d=1),p<1e-4&&(p=d),m<1e-4&&(m=d),Ll.initNonuniformCatmullRom(i.x,n.x,r.x,o.x,p,d,m),Pl.initNonuniformCatmullRom(i.y,n.y,r.y,o.y,p,d,m),zl.initNonuniformCatmullRom(i.z,n.z,r.z,o.z,p,d,m)}else"catmullrom"===this.curveType&&(Ll.initCatmullRom(i.x,n.x,r.x,o.x,this.tension),Pl.initCatmullRom(i.y,n.y,r.y,o.y,this.tension),zl.initCatmullRom(i.z,n.z,r.z,o.z,this.tension));return a.set(Ll.calc(c),Pl.calc(c),zl.calc(c)),a},Rl.prototype.copy=function(t){Ml.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Rl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);t.points=[];for(var e=0,i=this.points.length;e<i;e++){var n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},Rl.prototype.fromJSON=function(t){Ml.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push((new Ne).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Nl.prototype=Object.create(Ml.prototype),Nl.prototype.constructor=Nl,Nl.prototype.isCubicBezierCurve=!0,Nl.prototype.getPoint=function(t,e){var i=e||new Re,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Il(t,n.x,r.x,o.x,a.x),Il(t,n.y,r.y,o.y,a.y)),i},Nl.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Nl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Nl.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Bl.prototype=Object.create(Ml.prototype),Bl.prototype.constructor=Bl,Bl.prototype.isCubicBezierCurve3=!0,Bl.prototype.getPoint=function(t,e){var i=e||new Ne,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Il(t,n.x,r.x,o.x,a.x),Il(t,n.y,r.y,o.y,a.y),Il(t,n.z,r.z,o.z,a.z)),i},Bl.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Bl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Bl.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Dl.prototype=Object.create(Ml.prototype),Dl.prototype.constructor=Dl,Dl.prototype.isLineCurve=!0,Dl.prototype.getPoint=function(t,e){var i=e||new Re;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},Dl.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Dl.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Dl.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Dl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Dl.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Fl.prototype=Object.create(Ml.prototype),Fl.prototype.constructor=Fl,Fl.prototype.isLineCurve3=!0,Fl.prototype.getPoint=function(t,e){var i=e||new Ne;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},Fl.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Fl.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Fl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Fl.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Vl.prototype=Object.create(Ml.prototype),Vl.prototype.constructor=Vl,Vl.prototype.isQuadraticBezierCurve=!0,Vl.prototype.getPoint=function(t,e){var i=e||new Re,n=this.v0,r=this.v1,o=this.v2;return i.set(Ol(t,n.x,r.x,o.x),Ol(t,n.y,r.y,o.y)),i},Vl.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Vl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Vl.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Ul.prototype=Object.create(Ml.prototype),Ul.prototype.constructor=Ul,Ul.prototype.isQuadraticBezierCurve3=!0,Ul.prototype.getPoint=function(t,e){var i=e||new Ne,n=this.v0,r=this.v1,o=this.v2;return i.set(Ol(t,n.x,r.x,o.x),Ol(t,n.y,r.y,o.y),Ol(t,n.z,r.z,o.z)),i},Ul.prototype.copy=function(t){return Ml.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ul.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ul.prototype.fromJSON=function(t){return Ml.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},jl.prototype=Object.create(Ml.prototype),jl.prototype.constructor=jl,jl.prototype.isSplineCurve=!0,jl.prototype.getPoint=function(t,e){var i=e||new Re,n=this.points,r=(n.length-1)*t,o=Math.floor(r),a=r-o,s=n[0===o?o:o-1],q=n[o],l=n[o>n.length-2?n.length-1:o+1],h=n[o>n.length-3?n.length-1:o+2];return i.set(Cl(a,s.x,q.x,l.x,h.x),Cl(a,s.y,q.y,l.y,h.y)),i},jl.prototype.copy=function(t){Ml.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this},jl.prototype.toJSON=function(){var t=Ml.prototype.toJSON.call(this);t.points=[];for(var e=0,i=this.points.length;e<i;e++){var n=this.points[e];t.points.push(n.toArray())}return t},jl.prototype.fromJSON=function(t){Ml.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push((new Re).fromArray(n))}return this};var Gl=Object.freeze({__proto__:null,ArcCurve:El,CatmullRomCurve3:Rl,CubicBezierCurve:Nl,CubicBezierCurve3:Bl,EllipseCurve:Sl,LineCurve:Dl,LineCurve3:Fl,QuadraticBezierCurve:Vl,QuadraticBezierCurve3:Ul,SplineCurve:jl});function Hl(){Ml.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Wl(t){Hl.call(this),this.type="Path",this.currentPoint=new Re,t&&this.setFromPoints(t)}function kl(t){Wl.call(this,t),this.uuid=ze.generateUUID(),this.type="Shape",this.holes=[]}function Xl(t,e){vi.call(this),this.type="Light",this.color=new qn(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Yl(t,e,i){Xl.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(vi.DefaultUp),this.updateMatrix(),this.groundColor=new qn(e)}function Zl(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new Re(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this._frustum=new wr,this._frameExtents=new Re(1,1),this._viewportCount=1,this._viewports=[new Ge(0,0,1,1)]}function Jl(){Zl.call(this,new dr(50,1,.5,500))}function Ql(t,e,i,n,r,o){Xl.call(this,t,e),this.type="SpotLight",this.position.copy(vi.DefaultUp),this.updateMatrix(),this.target=new vi,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==o?o:1,this.shadow=new Jl}function Kl(){Zl.call(this,new dr(90,1,.5,500)),this._frameExtents=new Re(4,2),this._viewportCount=6,this._viewports=[new Ge(2,1,1,1),new Ge(0,1,1,1),new Ge(3,1,1,1),new Ge(1,1,1,1),new Ge(3,0,1,1),new Ge(1,0,1,1)],this._cubeDirections=[new Ne(1,0,0),new Ne(-1,0,0),new Ne(0,0,1),new Ne(0,0,-1),new Ne(0,1,0),new Ne(0,-1,0)],this._cubeUps=[new Ne(0,1,0),new Ne(0,1,0),new Ne(0,1,0),new Ne(0,1,0),new Ne(0,0,1),new Ne(0,0,-1)]}function $l(t,e,i,n){Xl.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new Kl}function th(t,e,i,n,r,o){pr.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==i?i:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==r?r:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function eh(){Zl.call(this,new th(-5,5,5,-5,.5,500))}function ih(t,e){Xl.call(this,t,e),this.type="DirectionalLight",this.position.copy(vi.DefaultUp),this.updateMatrix(),this.target=new vi,this.shadow=new eh}function nh(t,e){Xl.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function rh(t,e,i,n){Xl.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}function oh(t){ml.call(this,t),this.textures={}}Hl.prototype=Object.assign(Object.create(Ml.prototype),{constructor:Hl,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Dl(e,t))},getPoint:function(t){for(var e=t*this.getLength(),i=this.getCurveLengths(),n=0;n<i.length;){if(i[n]>=e){var r=i[n]-e,o=this.curves[n],a=o.getLength(),s=0===a?0:1-r/a;return o.getPointAt(s)}n++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],n=0,r=this.curves;n<r.length;n++)for(var o=r[n],a=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,s=o.getPoints(a),q=0;q<s.length;q++){var l=s[q];e&&e.equals(l)||(i.push(l),e=l)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},copy:function(t){Ml.prototype.copy.call(this,t),this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=Ml.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,i=this.curves.length;e<i;e++){var n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){Ml.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push((new Gl[n.type]).fromJSON(n))}return this}}),Wl.prototype=Object.assign(Object.create(Hl.prototype),{constructor:Wl,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){var i=new Dl(this.currentPoint.clone(),new Re(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,i,n){var r=new Vl(this.currentPoint.clone(),new Re(t,e),new Re(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this},bezierCurveTo:function(t,e,i,n,r,o){var a=new Nl(this.currentPoint.clone(),new Re(t,e),new Re(i,n),new Re(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this},splineThru:function(t){var e=new jl([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,i,n,r,o){var a=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(t+a,e+s,i,n,r,o),this},absarc:function(t,e,i,n,r,o){return this.absellipse(t,e,i,i,n,r,o),this},ellipse:function(t,e,i,n,r,o,a,s){var q=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+q,e+l,i,n,r,o,a,s),this},absellipse:function(t,e,i,n,r,o,a,s){var q=new Sl(t,e,i,n,r,o,a,s);if(this.curves.length>0){var l=q.getPoint(0);l.equals(this.currentPoint)||this.lineTo(l.x,l.y)}this.curves.push(q);var h=q.getPoint(1);return this.currentPoint.copy(h),this},copy:function(t){return Hl.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=Hl.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Hl.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),kl.prototype=Object.assign(Object.create(Wl.prototype),{constructor:kl,getPointsHoles:function(t){for(var e=[],i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Wl.prototype.copy.call(this,t),this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){var t=Wl.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,i=this.holes.length;e<i;e++){var n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){Wl.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push((new Wl).fromJSON(n))}return this}}),Xl.prototype=Object.assign(Object.create(vi.prototype),{constructor:Xl,isLight:!0,copy:function(t){return vi.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Yl.prototype=Object.assign(Object.create(Xl.prototype),{constructor:Yl,isHemisphereLight:!0,copy:function(t){return Xl.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Zl.prototype,{_projScreenMatrix:new $e,_lightPositionWorld:new Ne,_lookTarget:new Ne,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){var e=this.camera,i=this.matrix,n=this._projScreenMatrix,r=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(t.matrixWorld),e.position.copy(o),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),n.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromMatrix(n),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Jl.prototype=Object.assign(Object.create(Zl.prototype),{constructor:Jl,isSpotLightShadow:!0,updateMatrices:function(t){var e=this.camera,i=2*ze.RAD2DEG*t.angle,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix()),Zl.prototype.updateMatrices.call(this,t)}}),Ql.prototype=Object.assign(Object.create(Xl.prototype),{constructor:Ql,isSpotLight:!0,copy:function(t){return Xl.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Kl.prototype=Object.assign(Object.create(Zl.prototype),{constructor:Kl,isPointLightShadow:!0,updateMatrices:function(t,e){void 0===e&&(e=0);var i=this.camera,n=this.matrix,r=this._lightPositionWorld,o=this._lookTarget,a=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),i.position.copy(r),o.copy(i.position),o.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(o),i.updateMatrixWorld(),n.makeTranslation(-r.x,-r.y,-r.z),a.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromMatrix(a)}}),$l.prototype=Object.assign(Object.create(Xl.prototype),{constructor:$l,isPointLight:!0,copy:function(t){return Xl.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),th.prototype=Object.assign(Object.create(pr.prototype),{constructor:th,isOrthographicCamera:!0,copy:function(t,e){return pr.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-t,o=i+t,a=n+e,s=n-e;if(null!==this.view&&this.view.enabled){var q=this.zoom/(this.view.width/this.view.fullWidth),l=this.zoom/(this.view.height/this.view.fullHeight),h=(this.right-this.left)/this.view.width,c=(this.top-this.bottom)/this.view.height;o=(r+=h*(this.view.offsetX/q))+h*(this.view.width/q),s=(a-=c*(this.view.offsetY/l))-c*(this.view.height/l)}this.projectionMatrix.makeOrthographic(r,o,a,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),eh.prototype=Object.assign(Object.create(Zl.prototype),{constructor:eh,isDirectionalLightShadow:!0,updateMatrices:function(t){Zl.prototype.updateMatrices.call(this,t)}}),ih.prototype=Object.assign(Object.create(Xl.prototype),{constructor:ih,isDirectionalLight:!0,copy:function(t){return Xl.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),nh.prototype=Object.assign(Object.create(Xl.prototype),{constructor:nh,isAmbientLight:!0}),rh.prototype=Object.assign(Object.create(Xl.prototype),{constructor:rh,isRectAreaLight:!0,copy:function(t){return Xl.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=Xl.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),oh.prototype=Object.assign(Object.create(ml.prototype),{constructor:oh,load:function(t,e,i,n){var r=this,o=new vl(r.manager);o.setPath(r.path),o.load(t,(function(t){e(r.parse(JSON.parse(t)))}),i,n)},parse:function(t){var e=this.textures;function i(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}var n=new Jq[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=(new qn).setHex(t.sheen)),void 0!==t.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.vertexColors&&(n.vertexColors=t.vertexColors),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(n.skinning=t.skinning),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(n.morphNormals=t.morphNormals),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.uniforms)for(var r in t.uniforms){var o=t.uniforms[r];switch(n.uniforms[r]={},o.type){case"t":n.uniforms[r].value=i(o.value);break;case"c":n.uniforms[r].value=(new qn).setHex(o.value);break;case"v2":n.uniforms[r].value=(new Re).fromArray(o.value);break;case"v3":n.uniforms[r].value=(new Ne).fromArray(o.value);break;case"v4":n.uniforms[r].value=(new Ge).fromArray(o.value);break;case"m3":n.uniforms[r].value=(new Fe).fromArray(o.value);case"m4":n.uniforms[r].value=(new $e).fromArray(o.value);break;default:n.uniforms[r].value=o.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(var a in t.extensions)n.extensions[a]=t.extensions[a];if(void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=i(t.map)),void 0!==t.matcap&&(n.matcap=i(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=i(t.alphaMap),n.transparent=!0),void 0!==t.bumpMap&&(n.bumpMap=i(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=i(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){var s=t.normalScale;!1===Array.isArray(s)&&(s=[s,s]),n.normalScale=(new Re).fromArray(s)}return void 0!==t.displacementMap&&(n.displacementMap=i(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=i(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=i(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=i(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=i(t.specularMap)),void 0!==t.envMap&&(n.envMap=i(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=i(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=i(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=i(t.gradientMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=i(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Re).fromArray(t.clearcoatNormalScale)),n},setTextures:function(t){return this.textures=t,this}});var ah=function(t){var e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)};function sh(){In.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function qh(t,e,i,n){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),fn.call(this,t,e,i),this.meshPerAttribute=n||1}function lh(t){ml.call(this,t)}sh.prototype=Object.assign(Object.create(In.prototype),{constructor:sh,isInstancedBufferGeometry:!0,copy:function(t){return In.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t=In.prototype.toJSON.call(this);return t.maxInstancedCount=this.maxInstancedCount,t.isInstancedBufferGeometry=!0,t}}),qh.prototype=Object.assign(Object.create(fn.prototype),{constructor:qh,isInstancedBufferAttribute:!0,copy:function(t){return fn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){var t=fn.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),lh.prototype=Object.assign(Object.create(ml.prototype),{constructor:lh,load:function(t,e,i,n){var r=this,o=new vl(r.manager);o.setPath(r.path),o.load(t,(function(t){e(r.parse(JSON.parse(t)))}),i,n)},parse:function(t){var e=t.isInstancedBufferGeometry?new sh:new In,i=t.data.index;if(void 0!==i){var n=new hh[i.type](i.array);e.setIndex(new fn(n,1))}var r=t.data.attributes;for(var o in r){var a=r[o],s=(n=new hh[a.type](a.array),new(a.isInstancedBufferAttribute?qh:fn)(n,a.itemSize,a.normalized));void 0!==a.name&&(s.name=a.name),e.setAttribute(o,s)}var q=t.data.morphAttributes;if(q)for(var o in q){for(var l=q[o],h=[],c=0,u=l.length;c<u;c++)a=l[c],s=new fn(n=new hh[a.type](a.array),a.itemSize,a.normalized),void 0!==a.name&&(s.name=a.name),h.push(s);e.morphAttributes[o]=h}var p=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==p){c=0;for(var d=p.length;c!==d;++c){var m=p[c];e.addGroup(m.start,m.count,m.materialIndex)}}var f=t.data.boundingSphere;if(void 0!==f){var v=new Ne;void 0!==f.center&&v.fromArray(f.center),e.boundingSphere=new Oi(v,f.radius)}return t.name&&(e.name=t.name),t.userData&&(e.userData=t.userData),e}});var hh={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ch(t){ml.call(this,t)}ch.prototype=Object.assign(Object.create(ml.prototype),{constructor:ch,load:function(t,e,i,n){var r=this,o=""===this.path?ah(t):this.path;this.resourcePath=this.resourcePath||o;var a=new vl(r.manager);a.setPath(this.path),a.load(t,(function(i){var o=null;try{o=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}var a=o.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?r.parse(o,e):console.error("THREE.ObjectLoader: Can't load "+t)}),i,n)},parse:function(t,e){var i=this.parseShape(t.shapes),n=this.parseGeometries(t.geometries,i),r=this.parseImages(t.images,(function(){void 0!==e&&e(s)})),o=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,o),s=this.parseObject(t.object,n,a);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var i=0,n=t.length;i<n;i++){var r=(new kl).fromJSON(t[i]);e[r.uuid]=r}return e},parseGeometries:function(t,e){var i={};if(void 0!==t)for(var n=new lh,r=0,o=t.length;r<o;r++){var a,s=t[r];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new Fq[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new Fq[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new Fq[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new Fq[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new Fq[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new Fq[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new Fq[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new Fq[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new Fq[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new Fq[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new Fq[s.type]((new Gl[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new Fq[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new Fq[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var q=[],l=0,h=s.shapes.length;l<h;l++){var c=e[s.shapes[l]];q.push(c)}a=new Fq[s.type](q,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(q=[],l=0,h=s.shapes.length;l<h;l++)c=e[s.shapes[l]],q.push(c);var u=s.options.extrudePath;void 0!==u&&(s.options.extrudePath=(new Gl[u.type]).fromJSON(u)),a=new Fq[s.type](q,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(s);break;case"Geometry":"THREE"in window&&"LegacyJSONLoader"in THREE?a=(new THREE.LegacyJSONLoader).parse(s,this.resourcePath).geometry:console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),!0===a.isBufferGeometry&&void 0!==s.userData&&(a.userData=s.userData),i[s.uuid]=a}return i},parseMaterials:function(t,e){var i={},n={};if(void 0!==t){var r=new oh;r.setTextures(e);for(var o=0,a=t.length;o<a;o++){var s=t[o];if("MultiMaterial"===s.type){for(var q=[],l=0;l<s.materials.length;l++){var h=s.materials[l];void 0===i[h.uuid]&&(i[h.uuid]=r.parse(h)),q.push(i[h.uuid])}n[s.uuid]=q}else void 0===i[s.uuid]&&(i[s.uuid]=r.parse(s)),n[s.uuid]=i[s.uuid]}}return n},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var n=t[i],r=hl.parse(n);void 0!==n.uuid&&(r.uuid=n.uuid),e.push(r)}return e},parseImages:function(t,e){var i=this,n={};function r(t){return i.manager.itemStart(t),o.load(t,(function(){i.manager.itemEnd(t)}),void 0,(function(){i.manager.itemError(t),i.manager.itemEnd(t)}))}if(void 0!==t&&t.length>0){var o=new wl(new pl(e));o.setCrossOrigin(this.crossOrigin);for(var a=0,s=t.length;a<s;a++){var q=t[a],l=q.url;if(Array.isArray(l)){n[q.uuid]=[];for(var h=0,c=l.length;h<c;h++){var u=l[h],p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(u)?u:i.resourcePath+u;n[q.uuid].push(r(p))}}else p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(q.url)?q.url:i.resourcePath+q.url,n[q.uuid]=r(p)}}return n},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var n={};if(void 0!==t)for(var r=0,o=t.length;r<o;r++){var a,s=t[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),(a=Array.isArray(e[s.image])?new Vr(e[s.image]):new je(e[s.image])).needsUpdate=!0,a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),void 0!==s.mapping&&(a.mapping=i(s.mapping,ph)),void 0!==s.offset&&a.offset.fromArray(s.offset),void 0!==s.repeat&&a.repeat.fromArray(s.repeat),void 0!==s.center&&a.center.fromArray(s.center),void 0!==s.rotation&&(a.rotation=s.rotation),void 0!==s.wrap&&(a.wrapS=i(s.wrap[0],dh),a.wrapT=i(s.wrap[1],dh)),void 0!==s.format&&(a.format=s.format),void 0!==s.type&&(a.type=s.type),void 0!==s.encoding&&(a.encoding=s.encoding),void 0!==s.minFilter&&(a.minFilter=i(s.minFilter,mh)),void 0!==s.magFilter&&(a.magFilter=i(s.magFilter,mh)),void 0!==s.anisotropy&&(a.anisotropy=s.anisotropy),void 0!==s.flipY&&(a.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(a.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(a.unpackAlignment=s.unpackAlignment),n[s.uuid]=a}return n},parseObject:function(t,e,i){var n;function r(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function o(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],n=0,r=t.length;n<r;n++){var o=t[n];void 0===i[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),e.push(i[o])}return e}return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}}switch(t.type){case"Scene":n=new gi,void 0!==t.background&&Number.isInteger(t.background)&&(n.background=new qn(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?n.fog=new Ca(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(n.fog=new Ra(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":n=new dr(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(n.focus=t.focus),void 0!==t.zoom&&(n.zoom=t.zoom),void 0!==t.filmGauge&&(n.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(n.filmOffset=t.filmOffset),void 0!==t.view&&(n.view=Object.assign({},t.view));break;case"OrthographicCamera":n=new th(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(n.zoom=t.zoom),void 0!==t.view&&(n.view=Object.assign({},t.view));break;case"AmbientLight":n=new nh(t.color,t.intensity);break;case"DirectionalLight":n=new ih(t.color,t.intensity);break;case"PointLight":n=new $l(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":n=new rh(t.color,t.intensity,t.width,t.height);break;case"SpotLight":n=new Ql(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":n=new Yl(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var a=r(t.geometry),s=o(t.material);n=a.bones&&a.bones.length>0?new ts(a,s):new $n(a,s);break;case"InstancedMesh":a=r(t.geometry),s=o(t.material);var q=t.count,l=t.instanceMatrix;(n=new os(a,s,q)).instanceMatrix=new fn(new Float32Array(l.array),16);break;case"LOD":n=new $a;break;case"Line":n=new us(r(t.geometry),o(t.material),t.mode);break;case"LineLoop":n=new fs(r(t.geometry),o(t.material));break;case"LineSegments":n=new ms(r(t.geometry),o(t.material));break;case"PointCloud":case"Points":n=new bs(r(t.geometry),o(t.material));break;case"Sprite":n=new Za(o(t.material));break;case"Group":n=new _a;break;default:n=new vi}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(n.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(n.matrixAutoUpdate=t.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.quaternion&&n.quaternion.fromArray(t.quaternion),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.castShadow&&(n.castShadow=t.castShadow),void 0!==t.receiveShadow&&(n.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(n.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(n.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&n.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(n.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.frustumCulled&&(n.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(n.renderOrder=t.renderOrder),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.layers&&(n.layers.mask=t.layers),void 0!==t.drawMode&&n.setDrawMode(t.drawMode),void 0!==t.children)for(var h=t.children,c=0;c<h.length;c++)n.add(this.parseObject(h[c],e,i));if("LOD"===t.type)for(var u=t.levels,p=0;p<u.length;p++){var d=u[p],m=n.getObjectByProperty("uuid",d.object);void 0!==m&&n.addLevel(m,d.distance)}return n}});var uh,ph={UVMapping:300,CubeReflectionMapping:tt,CubeRefractionMapping:et,EquirectangularReflectionMapping:it,EquirectangularRefractionMapping:nt,SphericalReflectionMapping:rt,CubeUVReflectionMapping:ot,CubeUVRefractionMapping:at},dh={RepeatWrapping:st,ClampToEdgeWrapping:qt,MirroredRepeatWrapping:lt},mh={NearestFilter:ht,NearestMipmapNearestFilter:ct,NearestMipmapLinearFilter:ut,LinearFilter:pt,LinearMipmapNearestFilter:dt,LinearMipmapLinearFilter:mt};function fh(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),ml.call(this,t),this.options=void 0}function vh(){this.type="ShapePath",this.color=new qn,this.subPaths=[],this.currentPath=null}function gh(t){this.type="Font",this.data=t}function yh(t,e,i,n,r){var o=r.glyphs[t]||r.glyphs["?"];if(o){var a,s,q,l,h,c,u,p,d=new vh;if(o.o)for(var m=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),f=0,v=m.length;f<v;)switch(m[f++]){case"m":a=m[f++]*e+i,s=m[f++]*e+n,d.moveTo(a,s);break;case"l":a=m[f++]*e+i,s=m[f++]*e+n,d.lineTo(a,s);break;case"q":q=m[f++]*e+i,l=m[f++]*e+n,h=m[f++]*e+i,c=m[f++]*e+n,d.quadraticCurveTo(h,c,q,l);break;case"b":q=m[f++]*e+i,l=m[f++]*e+n,h=m[f++]*e+i,c=m[f++]*e+n,u=m[f++]*e+i,p=m[f++]*e+n,d.bezierCurveTo(h,c,u,p,q,l)}return{offsetX:o.ha*e,path:d}}console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".")}function xh(t){ml.call(this,t)}fh.prototype=Object.assign(Object.create(ml.prototype),{constructor:fh,setOptions:function(t){return this.options=t,this},load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,o=ul.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;fetch(t).then((function(t){return t.blob()})).then((function(t){return void 0===r.options?createImageBitmap(t):createImageBitmap(t,r.options)})).then((function(i){ul.add(t,i),e&&e(i),r.manager.itemEnd(t)})).catch((function(e){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}),Object.assign(vh.prototype,{moveTo:function(t,e){return this.currentPath=new Wl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this},bezierCurveTo:function(t,e,i,n,r,o){return this.currentPath.bezierCurveTo(t,e,i,n,r,o),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function i(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i],o=new kl;o.curves=r.curves,e.push(o)}return e}function n(t,e){for(var i=e.length,n=!1,r=i-1,o=0;o<i;r=o++){var a=e[r],s=e[o],q=s.x-a.x,l=s.y-a.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(a=e[o],q=-q,s=e[r],l=-l),t.y<a.y||t.y>s.y)continue;if(t.y===a.y){if(t.x===a.x)return!0}else{var h=l*(t.x-a.x)-q*(t.y-a.y);if(0===h)return!0;if(h<0)continue;n=!n}}else{if(t.y!==a.y)continue;if(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x)return!0}}return n}var r=dq.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return i(o);var a,s,q,l=[];if(1===o.length)return s=o[0],(q=new kl).curves=s.curves,l.push(q),l;var h=!r(o[0].getPoints());h=t?!h:h;var c,u,p=[],d=[],m=[],f=0;d[f]=void 0,m[f]=[];for(var v=0,g=o.length;v<g;v++)a=r(c=(s=o[v]).getPoints()),(a=t?!a:a)?(!h&&d[f]&&f++,d[f]={s:new kl,p:c},d[f].s.curves=s.curves,h&&f++,m[f]=[]):m[f].push({h:s,p:c[0]});if(!d[0])return i(o);if(d.length>1){for(var y=!1,x=[],w=0,b=d.length;w<b;w++)p[w]=[];for(w=0,b=d.length;w<b;w++)for(var _=m[w],M=0;M<_.length;M++){for(var S=_[M],E=!0,T=0;T<d.length;T++)n(S.p,d[T].p)&&(w!==T&&x.push({froms:w,tos:T,hole:M}),E?(E=!1,p[T].push(S)):y=!0);E&&p[w].push(S)}x.length>0&&(y||(m=p))}v=0;for(var A=d.length;v<A;v++){q=d[v].s,l.push(q);for(var L=0,P=(u=m[v]).length;L<P;L++)q.holes.push(u[L].h)}return l}}),Object.assign(gh.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);for(var i=[],n=function(t,e,i){for(var n=Array.from?Array.from(t):String(t).split(""),r=e/i.resolution,o=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*r,a=[],s=0,q=0,l=0;l<n.length;l++){var h=n[l];if("\n"===h)s=0,q-=o;else{var c=yh(h,r,s,q,i);s+=c.offsetX,a.push(c.path)}}return a}(t,e,this.data),r=0,o=n.length;r<o;r++)Array.prototype.push.apply(i,n[r].toShapes());return i}}),xh.prototype=Object.assign(Object.create(ml.prototype),{constructor:xh,load:function(t,e,i,n){var r=this,o=new vl(this.manager);o.setPath(this.path),o.load(t,(function(t){var i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}var n=r.parse(i);e&&e(n)}),i,n)},parse:function(t){return new gh(t)}});var wh=function(){return void 0===uh&&(uh=new(window.AudioContext||window.webkitAudioContext)),uh};function bh(t){ml.call(this,t)}function _h(){this.coefficients=[];for(var t=0;t<9;t++)this.coefficients.push(new Ne)}function Mh(t,e){Xl.call(this,void 0,e),this.sh=void 0!==t?t:new _h}function Sh(t,e,i){Mh.call(this,void 0,i);var n=(new qn).set(t),r=(new qn).set(e),o=new Ne(n.r,n.g,n.b),a=new Ne(r.r,r.g,r.b),s=Math.sqrt(Math.PI),q=s*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(s),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(q)}function Eh(t,e){Mh.call(this,void 0,e);var i=(new qn).set(t);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}bh.prototype=Object.assign(Object.create(ml.prototype),{constructor:bh,load:function(t,e,i,n){var r=new vl(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.load(t,(function(t){var i=t.slice(0);wh().decodeAudioData(i,(function(t){e(t)}))}),i,n)}}),Object.assign(_h.prototype,{isSphericalHarmonics3:!0,set:function(t){for(var e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this},zero:function(){for(var t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this},getAt:function(t,e){var i=t.x,n=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScale(o[1],.488603*n),e.addScale(o[2],.488603*r),e.addScale(o[3],.488603*i),e.addScale(o[4],i*n*1.092548),e.addScale(o[5],n*r*1.092548),e.addScale(o[6],.315392*(3*r*r-1)),e.addScale(o[7],i*r*1.092548),e.addScale(o[8],.546274*(i*i-n*n)),e},getIrradianceAt:function(t,e){var i=t.x,n=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScale(o[1],1.023328*n),e.addScale(o[2],1.023328*r),e.addScale(o[3],1.023328*i),e.addScale(o[4],.858086*i*n),e.addScale(o[5],.858086*n*r),e.addScale(o[6],.743125*r*r-.247708),e.addScale(o[7],.858086*i*r),e.addScale(o[8],.429043*(i*i-n*n)),e},add:function(t){for(var e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this},scale:function(t){for(var e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this},lerp:function(t,e){for(var i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this},equals:function(t){for(var e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0},copy:function(t){return this.set(t.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(t,e){void 0===e&&(e=0);for(var i=this.coefficients,n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);for(var i=this.coefficients,n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}}),Object.assign(_h,{getBasisAt:function(t,e){var i=t.x,n=t.y,r=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*r,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*i*r,e[8]=.546274*(i*i-n*n)}}),Mh.prototype=Object.assign(Object.create(Xl.prototype),{constructor:Mh,isLightProbe:!0,copy:function(t){return Xl.prototype.copy.call(this,t),this.sh.copy(t.sh),this.intensity=t.intensity,this},toJSON:function(t){return Xl.prototype.toJSON.call(this,t)}}),Sh.prototype=Object.assign(Object.create(Mh.prototype),{constructor:Sh,isHemisphereLightProbe:!0,copy:function(t){return Mh.prototype.copy.call(this,t),this},toJSON:function(t){return Mh.prototype.toJSON.call(this,t)}}),Eh.prototype=Object.assign(Object.create(Mh.prototype),{constructor:Eh,isAmbientLightProbe:!0,copy:function(t){return Mh.prototype.copy.call(this,t),this},toJSON:function(t){return Mh.prototype.toJSON.call(this,t)}});var Th=new $e,Ah=new $e;function Lh(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new dr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new dr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){var e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;var i,n,r=t.projectionMatrix.clone(),o=e.eyeSep/2,a=o*e.near/e.focus,s=e.near*Math.tan(ze.DEG2RAD*e.fov*.5)/e.zoom;Ah.elements[12]=-o,Th.elements[12]=o,i=-s*e.aspect+a,n=s*e.aspect+a,r.elements[0]=2*e.near/(n-i),r.elements[8]=(n+i)/(n-i),this.cameraL.projectionMatrix.copy(r),i=-s*e.aspect-a,n=s*e.aspect-a,r.elements[0]=2*e.near/(n-i),r.elements[8]=(n+i)/(n-i),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Ah),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Th)}}),Object.assign(Lh.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});var Ph=new Ne,zh=new Ce,Rh=new Ne,Ch=new Ne;function Oh(){vi.call(this),this.type="AudioListener",this.context=wh(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Lh}function Ih(t){vi.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}Oh.prototype=Object.assign(Object.create(vi.prototype),{constructor:Oh,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){vi.prototype.updateMatrixWorld.call(this,t);var e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ph,zh,Rh),Ch.set(0,0,-1).applyQuaternion(zh),e.positionX){var n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Ph.x,n),e.positionY.linearRampToValueAtTime(Ph.y,n),e.positionZ.linearRampToValueAtTime(Ph.z,n),e.forwardX.linearRampToValueAtTime(Ch.x,n),e.forwardY.linearRampToValueAtTime(Ch.y,n),e.forwardZ.linearRampToValueAtTime(Ch.z,n),e.upX.linearRampToValueAtTime(i.x,n),e.upY.linearRampToValueAtTime(i.y,n),e.upZ.linearRampToValueAtTime(i.z,n)}else e.setPosition(Ph.x,Ph.y,Ph.z),e.setOrientation(Ch.x,Ch.y,Ch.z,i.x,i.y,i.z)}}),Ih.prototype=Object.assign(Object.create(vi.prototype),{constructor:Ih,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setMediaStreamSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(t){if(void 0===t&&(t=0),!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+t;var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._pausedAt=(this.context.currentTime-this._startedAt)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(t){return this.loopStart=t,this},setLoopEnd:function(t){return this.loopEnd=t,this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});var Nh=new Ne,Bh=new Ce,Dh=new Ne,Fh=new Ne;function Vh(t){Ih.call(this,t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Uh(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function jh(t,e,i){this.binding=t,this.valueSize=i;var n,r=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":r=Array,n=this._select;break;default:n=this._lerp}this.buffer=new r(4*i),this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Vh.prototype=Object.assign(Object.create(Ih.prototype),{constructor:Vh,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=i,this},updateMatrixWorld:function(t){if(vi.prototype.updateMatrixWorld.call(this,t),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(Nh,Bh,Dh),Fh.set(0,0,1).applyQuaternion(Bh);var e=this.panner;if(e.positionX){var i=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Nh.x,i),e.positionY.linearRampToValueAtTime(Nh.y,i),e.positionZ.linearRampToValueAtTime(Nh.z,i),e.orientationX.linearRampToValueAtTime(Fh.x,i),e.orientationY.linearRampToValueAtTime(Fh.y,i),e.orientationZ.linearRampToValueAtTime(Fh.z,i)}else e.setPosition(Nh.x,Nh.y,Nh.z),e.setOrientation(Fh.x,Fh.y,Fh.z)}}}),Object.assign(Uh.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Object.assign(jh.prototype,{accumulate:function(t,e){var i=this.buffer,n=this.valueSize,r=t*n+n,o=this.cumulativeWeight;if(0===o){for(var a=0;a!==n;++a)i[r+a]=i[a];o=e}else{var s=e/(o+=e);this._mixBufferRegion(i,r,0,s,n)}this.cumulativeWeight=o},apply:function(t){var e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,r<1){var a=3*e;this._mixBufferRegion(i,n,a,1-r,e)}for(var s=e,q=e+e;s!==q;++s)if(i[s]!==i[s+e]){o.setValue(i,n);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,n=3*i;t.getValue(e,n);for(var r=i,o=n;r!==o;++r)e[r]=e[n+r%i];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,i,n,r){if(n>=.5)for(var o=0;o!==r;++o)t[e+o]=t[i+o]},_slerp:function(t,e,i,n){Ce.slerpFlat(t,e,t,e,t,i,n)},_lerp:function(t,e,i,n,r){for(var o=1-n,a=0;a!==r;++a){var s=e+a;t[s]=t[s]*o+t[i+a]*n}}});var Gh="\\[\\]\\.:\\/",Hh=new RegExp("["+Gh+"]","g"),Wh="[^"+Gh+"]",kh="[^"+Gh.replace("\\.","")+"]",Xh=/((?:WC+[\/:])*)/.source.replace("WC",Wh),Yh=/(WCOD+)?/.source.replace("WCOD",kh),Zh=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Wh),Jh=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Wh),Qh=new RegExp("^"+Xh+Yh+Zh+Jh+"$"),Kh=["material","materials","bones"];function $h(t,e,i){var n=i||tc.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}function tc(t,e,i){this.path=e,this.parsedPath=i||tc.parseTrackName(e),this.node=tc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function ec(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var n=e.tracks,r=n.length,o=new Array(r),a={endingStart:qe,endingEnd:qe},s=0;s!==r;++s){var q=n[s].createInterpolant(null);o[s]=q,q.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function ic(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function nc(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function rc(t,e,i){Oa.call(this,t,e),this.meshPerAttribute=i||1}function oc(t,e,i,n){this.ray=new ji(t,e),this.near=i||0,this.far=n||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ac(t,e){return t.distance-e.distance}function sc(t,e,i,n){if(!1!==t.visible&&(t.raycast(e,i),!0===n))for(var r=t.children,o=0,a=r.length;o<a;o++)sc(r[o],e,i,!0)}Object.assign($h.prototype,{getValue:function(t,e){this.bind();var i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}),Object.assign(tc,{Composite:$h,create:function(t,e,i){return t&&t.isAnimationObjectGroup?new tc.Composite(t,e,i):new tc(t,e,i)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Hh,"")},parseTrackName:function(t){var e=Qh.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);var i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){var r=i.nodeName.substring(n+1);-1!==Kh.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i},findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){var n=function(t){for(var i=0;i<t.length;i++){var r=t[i];if(r.name===e||r.uuid===e)return r;var o=n(r.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(tc.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)t[e++]=i[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,n=e.propertyName,r=e.propertyIndex;if(t||(t=tc.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var o=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var a=0;a<t.length;a++)if(t[a].name===o){o=a;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==o){if(void 0===t[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[o]}}var s=t[n];if(void 0!==s){var q=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?q=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(q=this.Versioning.MatrixWorldNeedsUpdate);var l=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(a=0;a<this.node.geometry.morphAttributes.position.length;a++)if(t.geometry.morphAttributes.position[a].name===r){r=a;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(a=0;a<this.node.geometry.morphTargets.length;a++)if(t.geometry.morphTargets[a].name===r){r=a;break}}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][q]}else{var h=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+n+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(tc.prototype,{_getValue_unbound:tc.prototype.getValue,_setValue_unbound:tc.prototype.setValue}),Object.assign(function(){this.uuid=ze.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._paths,o=this._parsedPaths,a=this._bindings,s=a.length,q=void 0,l=0,h=arguments.length;l!==h;++l){var c=arguments[l],u=c.uuid,p=n[u];if(void 0===p){p=e++,n[u]=p,t.push(c);for(var d=0,m=s;d!==m;++d)a[d].push(new tc(c,r[d],o[d]))}else if(p<i){q=t[p];var f=--i,v=t[f];for(n[v.uuid]=p,t[p]=v,n[u]=f,t[f]=c,d=0,m=s;d!==m;++d){var g=a[d],y=g[f],x=g[p];g[p]=y,void 0===x&&(x=new tc(c,r[d],o[d])),g[f]=x}}else t[p]!==q&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,i=this._indicesByUUID,n=this._bindings,r=n.length,o=0,a=arguments.length;o!==a;++o){var s=arguments[o],q=s.uuid,l=i[q];if(void 0!==l&&l>=e){var h=e++,c=t[h];i[c.uuid]=l,t[l]=c,i[q]=h,t[h]=s;for(var u=0,p=r;u!==p;++u){var d=n[u],m=d[h],f=d[l];d[l]=m,d[h]=f}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,o=r.length,a=0,s=arguments.length;a!==s;++a){var q=arguments[a].uuid,l=n[q];if(void 0!==l)if(delete n[q],l<i){var h=--i,c=t[h],u=t[v=--e];n[c.uuid]=l,t[l]=c,n[u.uuid]=h,t[h]=u,t.pop();for(var p=0,d=o;p!==d;++p){var m=(g=r[p])[h],f=g[v];g[l]=m,g[h]=f,g.pop()}}else{var v;for(n[(u=t[v=--e]).uuid]=l,t[l]=u,t.pop(),p=0,d=o;p!==d;++p){var g;(g=r[p])[l]=g[v],g.pop()}}}this.nCachedObjects_=i},subscribe_:function(t,e){var i=this._bindingsIndicesByPath,n=i[t],r=this._bindings;if(void 0!==n)return r[n];var o=this._paths,a=this._parsedPaths,s=this._objects,q=s.length,l=this.nCachedObjects_,h=new Array(q);n=r.length,i[t]=n,o.push(t),a.push(e),r.push(h);for(var c=l,u=s.length;c!==u;++c){var p=s[c];h[c]=new tc(p,t,e)}return h},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var n=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];e[t[a]]=i,o[i]=s,o.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}}),Object.assign(ec.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var n=this._clip.duration,r=t._clip.duration,o=r/n,a=n/r;t.warp(1,o,e),this.warp(a,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var n=this._mixer,r=n.time,o=this._timeScaleInterpolant,a=this.timeScale;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);var s=o.parameterPositions,q=o.sampleValues;return s[0]=r,s[1]=r+i,q[0]=t/a,q[1]=e/a,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,i,n){if(this.enabled){var r=this._startTime;if(null!==r){var o=(t-r)*i;if(o<0||0===i)return;this._startTime=null,e=i*o}e*=this._updateTimeScale(t);var a=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var q=this._interpolants,l=this._propertyBindings,h=0,c=q.length;h!==c;++h)q[h].evaluate(a),l[h].accumulate(n,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;null!==i&&(e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,i=this._clip.duration,n=this.loop,r=this._loopCount,o=2202===n;if(0===t)return-1===r?e:o&&1==(1&r)?i-e:e;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0)){this.time=e;break t}e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),e>=i||e<0){var a=Math.floor(e/i);e-=i*a,r+=Math.abs(a);var s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){var q=t<0;this._setEndings(q,!q,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=e;if(o&&1==(1&r))return i-e}return e},_setEndings:function(t,e,i){var n=this._interpolantSettings;i?(n.endingStart=le,n.endingEnd=le):(n.endingStart=t?this.zeroSlopeAtStart?le:qe:he,n.endingEnd=e?this.zeroSlopeAtEnd?le:qe:he)},_scheduleFading:function(t,e,i){var n=this._mixer,r=n.time,o=this._weightInterpolant;null===o&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);var a=o.parameterPositions,s=o.sampleValues;return a[0]=r,s[0]=e,a[1]=r+t,s[1]=i,this}}),ic.prototype=Object.assign(Object.create(Ae.prototype),{constructor:ic,_bindAction:function(t,e){var i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,o=t._propertyBindings,a=t._interpolants,s=i.uuid,q=this._bindingsByRootAndName,l=q[s];void 0===l&&(l={},q[s]=l);for(var h=0;h!==r;++h){var c=n[h],u=c.name,p=l[u];if(void 0!==p)o[h]=p;else{if(void 0!==(p=o[h])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,u));continue}var d=e&&e._propertyBindings[h].binding.parsedPath;++(p=new jh(tc.create(i,u,d),c.ValueTypeName,c.getValueSize())).referenceCount,this._addInactiveBinding(p,s,u),o[h]=p}a[h].resultBuffer=p.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}for(var r=t._propertyBindings,o=0,a=r.length;o!==a;++o){var s=r[o];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var n=this._actions,r=this._actionsByClip,o=r[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=o;else{var a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=n.length,n.push(t),o.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,o=this._actionsByClip,a=o[r],s=a.knownActions,q=s[s.length-1],l=t._byClipCacheIndex;q._byClipCacheIndex=l,s[l]=q,s.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete o[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){var e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_addInactiveBinding:function(t,e,i){var n=this._bindingsByRootAndName,r=n[e],o=this._bindings;void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=o.length,o.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,o=this._bindingsByRootAndName,a=o[n],s=e[e.length-1],q=t._cacheIndex;s._cacheIndex=q,e[q]=s,e.pop(),delete a[r],0===Object.keys(a).length&&delete o[n]},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&((i=new tl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?hl.findByName(i,t):t,o=null!==r?r.uuid:t,a=this._actionsByClip[o],s=null;if(void 0!==a){var q=a.actionByRoot[n];if(void 0!==q)return q;s=a.knownActions[0],null===r&&(r=s._clip)}if(null===r)return null;var l=new ec(this,r,e);return this._bindAction(l,s),this._addInactiveAction(l,o,n),l},existingAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?hl.findByName(i,t):t,o=r?r.uuid:t,a=this._actionsByClip[o];return void 0!==a&&a.actionByRoot[n]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(r=0;r!==n;++r)i[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1,a=0;a!==i;++a)e[a]._update(n,t,r,o);var s=this._bindings,q=this._nActiveBindings;for(a=0;a!==q;++a)s[a].apply(o);return this},setTime:function(t){this.time=0;for(var e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){for(var o=r.knownActions,a=0,s=o.length;a!==s;++a){var q=o[a];this._deactivateAction(q);var l=q._cacheIndex,h=e[e.length-1];q._cacheIndex=null,q._byClipCacheIndex=null,h._cacheIndex=l,e[l]=h,e.pop(),this._removeInactiveBindingsForAction(q)}delete n[i]}},uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var n in i){var r=i[n].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var o=this._bindingsByRootAndName[e];if(void 0!==o)for(var a in o){var s=o[a];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),nc.prototype.clone=function(){return new nc(void 0===this.value.clone?this.value:this.value.clone())},rc.prototype=Object.assign(Object.create(Oa.prototype),{constructor:rc,isInstancedInterleavedBuffer:!0,copy:function(t){return Oa.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(oc.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,i){var n=i||[];return sc(t,this,n,e),n.sort(ac),n},intersectObjects:function(t,e,i){var n=i||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var r=0,o=t.length;r<o;r++)sc(t[r],this,n,e);return n.sort(ac),n}}),Object.assign(function(t,e,i){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}.prototype,{set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){var t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(ze.clamp(e/this.radius,-1,1))),this}}),Object.assign(function(t,e,i){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}.prototype,{set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=e,this}});var qc=new Re;function lc(t,e){this.min=void 0!==t?t:new Re(1/0,1/0),this.max=void 0!==e?e:new Re(-1/0,-1/0)}Object.assign(lc.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var i=qc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Re),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Re),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Re),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Re),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return qc.copy(t).clamp(this.min,this.max).sub(t).length()},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var hc=new Ne,cc=new Ne;function uc(t,e){this.start=void 0!==t?t:new Ne,this.end=void 0!==e?e:new Ne}function pc(t){vi.call(this),this.material=t,this.render=function(){}}Object.assign(uc.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new Ne),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new Ne),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new Ne),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(t,e){hc.subVectors(t,this.start),cc.subVectors(this.end,this.start);var i=cc.dot(cc),n=cc.dot(hc)/i;return e&&(n=ze.clamp(n,0,1)),n},closestPointToPoint:function(t,e,i){var n=this.closestPointToPointParameter(t,e);return void 0===i&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new Ne),this.delta(i).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),pc.prototype=Object.create(vi.prototype),pc.prototype.constructor=pc,pc.prototype.isImmediateRenderObject=!0;var dc=new Ne,mc=new Ne,fc=new Fe,vc=["a","b","c"];function gc(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16711680,o=void 0!==n?n:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=3*s.faces.length:s&&s.isBufferGeometry&&(a=s.attributes.normal.count);var q=new In,l=new Mn(2*a*3,3);q.setAttribute("position",l),ms.call(this,q,new as({color:r,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}gc.prototype=Object.create(ms.prototype),gc.prototype.constructor=gc,gc.prototype.update=function(){this.object.updateMatrixWorld(!0),fc.getNormalMatrix(this.object.matrixWorld);var t=this.object.matrixWorld,e=this.geometry.attributes.position,i=this.object.geometry;if(i&&i.isGeometry)for(var n=i.vertices,r=i.faces,o=0,a=0,s=r.length;a<s;a++)for(var q=r[a],l=0,h=q.vertexNormals.length;l<h;l++){var c=n[q[vc[l]]],u=q.vertexNormals[l];dc.copy(c).applyMatrix4(t),mc.copy(u).applyMatrix3(fc).normalize().multiplyScalar(this.size).add(dc),e.setXYZ(o,dc.x,dc.y,dc.z),o+=1,e.setXYZ(o,mc.x,mc.y,mc.z),o+=1}else if(i&&i.isBufferGeometry){var p=i.attributes.position,d=i.attributes.normal;for(o=0,l=0,h=p.count;l<h;l++)dc.set(p.getX(l),p.getY(l),p.getZ(l)).applyMatrix4(t),mc.set(d.getX(l),d.getY(l),d.getZ(l)),mc.applyMatrix3(fc).normalize().multiplyScalar(this.size).add(dc),e.setXYZ(o,dc.x,dc.y,dc.z),o+=1,e.setXYZ(o,mc.x,mc.y,mc.z),o+=1}e.needsUpdate=!0};var yc=new Ne;function xc(t,e){vi.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var i=new In,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,o=1;r<32;r++,o++){var a=r/32*Math.PI*2,s=o/32*Math.PI*2;n.push(Math.cos(a),Math.sin(a),1,Math.cos(s),Math.sin(s),1)}i.setAttribute("position",new Mn(n,3));var q=new as({fog:!1});this.cone=new ms(i,q),this.add(this.cone),this.update()}xc.prototype=Object.create(vi.prototype),xc.prototype.constructor=xc,xc.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},xc.prototype.update=function(){this.light.updateMatrixWorld();var t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),yc.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(yc),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var wc=new Ne,bc=new $e,_c=new $e;function Mc(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,Mc(t.children[i]));return e}function Sc(t){for(var e=Mc(t),i=new In,n=[],r=[],o=new qn(0,0,1),a=new qn(0,1,0),s=0;s<e.length;s++){var q=e[s];q.parent&&q.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new Mn(n,3)),i.setAttribute("color",new Mn(r,3));var l=new as({vertexColors:d,depthTest:!1,depthWrite:!1,transparent:!0});ms.call(this,i,l),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function Ec(t,e,i){this.light=t,this.light.updateMatrixWorld(),this.color=i;var n=new Mq(e,4,2),r=new mn({wireframe:!0,fog:!1});$n.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function Tc(t,e){this.type="RectAreaLightHelper",this.light=t,this.color=e;var i=new In;i.setAttribute("position",new Mn([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere();var n=new as({fog:!1});us.call(this,i,n);var r=new In;r.setAttribute("position",new Mn([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new $n(r,new mn({side:c,fog:!1}))),this.update()}Sc.prototype=Object.create(ms.prototype),Sc.prototype.constructor=Sc,Sc.prototype.updateMatrixWorld=function(t){var e=this.bones,i=this.geometry,n=i.getAttribute("position");_c.getInverse(this.root.matrixWorld);for(var r=0,o=0;r<e.length;r++){var a=e[r];a.parent&&a.parent.isBone&&(bc.multiplyMatrices(_c,a.matrixWorld),wc.setFromMatrixPosition(bc),n.setXYZ(o,wc.x,wc.y,wc.z),bc.multiplyMatrices(_c,a.parent.matrixWorld),wc.setFromMatrixPosition(bc),n.setXYZ(o+1,wc.x,wc.y,wc.z),o+=2)}i.getAttribute("position").needsUpdate=!0,vi.prototype.updateMatrixWorld.call(this,t)},Ec.prototype=Object.create($n.prototype),Ec.prototype.constructor=Ec,Ec.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Ec.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},Tc.prototype=Object.create(us.prototype),Tc.prototype.constructor=Tc,Tc.prototype.update=function(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var t=this.material.color,e=Math.max(t.r,t.g,t.b);e>1&&t.multiplyScalar(1/e),this.children[0].material.color.copy(this.material.color)}},Tc.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()};var Ac=new Ne,Lc=new qn,Pc=new qn;function zc(t,e,i){vi.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;var n=new Ns(e);n.rotateY(.5*Math.PI),this.material=new mn({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=d);var r=n.getAttribute("position"),o=new Float32Array(3*r.count);n.setAttribute("color",new fn(o,3)),this.add(new $n(n,this.material)),this.update()}function Rc(t,e){this.lightProbe=t,this.size=e;var i=new ur({defines:{GAMMA_OUTPUT:""},uniforms:{sh:{value:this.lightProbe.sh.coefficients},intensity:{value:this.lightProbe.intensity}},vertexShader:["varying vec3 vNormal;","void main() {","\tvNormal = normalize( normalMatrix * normal );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define RECIPROCAL_PI 0.318309886","vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {","\t// matrix is assumed to be orthogonal","\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );","}","vec3 linearToOutput( in vec3 a ) {","\t#ifdef GAMMA_OUTPUT","\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );","\t#else","\t\treturn a;","\t#endif","}","// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf","vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {","\t// normal is assumed to have unit length","\tfloat x = normal.x, y = normal.y, z = normal.z;","\t// band 0","\tvec3 result = shCoefficients[ 0 ] * 0.886227;","\t// band 1","\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;","\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;","\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;","\t// band 2","\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;","\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;","\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );","\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;","\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );","\treturn result;","}","uniform vec3 sh[ 9 ]; // sh coefficients","uniform float intensity; // light probe intensity","varying vec3 vNormal;","void main() {","\tvec3 normal = normalize( vNormal );","\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );","\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );","\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;","\toutgoingLight = linearToOutput( outgoingLight );","\tgl_FragColor = vec4( outgoingLight, 1.0 );","}"].join("\n")}),n=new Mq(1,32,16);$n.call(this,n,i),this.onBeforeRender()}function Cc(t,e,i,n){t=t||10,e=e||10,i=new qn(void 0!==i?i:4473924),n=new qn(void 0!==n?n:8947848);for(var r=e/2,o=t/e,a=t/2,s=[],q=[],l=0,h=0,c=-a;l<=e;l++,c+=o){s.push(-a,0,c,a,0,c),s.push(c,0,-a,c,0,a);var u=l===r?i:n;u.toArray(q,h),h+=3,u.toArray(q,h),h+=3,u.toArray(q,h),h+=3,u.toArray(q,h),h+=3}var p=new In;p.setAttribute("position",new Mn(s,3)),p.setAttribute("color",new Mn(q,3));var m=new as({vertexColors:d});ms.call(this,p,m)}function Oc(t,e,i,n,r,o){t=t||10,e=e||16,i=i||8,n=n||64,r=new qn(void 0!==r?r:4473924),o=new qn(void 0!==o?o:8947848);var a,s,q,l,h,c,u,p=[],m=[];for(l=0;l<=e;l++)q=l/e*(2*Math.PI),a=Math.sin(q)*t,s=Math.cos(q)*t,p.push(0,0,0),p.push(a,0,s),u=1&l?r:o,m.push(u.r,u.g,u.b),m.push(u.r,u.g,u.b);for(l=0;l<=i;l++)for(u=1&l?r:o,c=t-t/i*l,h=0;h<n;h++)q=h/n*(2*Math.PI),a=Math.sin(q)*c,s=Math.cos(q)*c,p.push(a,0,s),m.push(u.r,u.g,u.b),q=(h+1)/n*(2*Math.PI),a=Math.sin(q)*c,s=Math.cos(q)*c,p.push(a,0,s),m.push(u.r,u.g,u.b);var f=new In;f.setAttribute("position",new Mn(p,3)),f.setAttribute("color",new Mn(m,3));var v=new as({vertexColors:d});ms.call(this,f,v)}function Ic(t,e,i,n){this.audio=t,this.range=e||1,this.divisionsInnerAngle=i||16,this.divisionsOuterAngle=n||2;var r=new In,o=this.divisionsInnerAngle+2*this.divisionsOuterAngle,a=new Float32Array(3*(3*o+3));r.setAttribute("position",new fn(a,3));var s=new as({color:65280}),q=new as({color:16776960});us.call(this,r,[q,s]),this.update()}zc.prototype=Object.create(vi.prototype),zc.prototype.constructor=zc,zc.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},zc.prototype.update=function(){var t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var e=t.geometry.getAttribute("color");Lc.copy(this.light.color),Pc.copy(this.light.groundColor);for(var i=0,n=e.count;i<n;i++){var r=i<n/2?Lc:Pc;e.setXYZ(i,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(Ac.setFromMatrixPosition(this.light.matrixWorld).negate())},Rc.prototype=Object.create($n.prototype),Rc.prototype.constructor=Rc,Rc.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Rc.prototype.onBeforeRender=function(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity},Cc.prototype=Object.assign(Object.create(ms.prototype),{constructor:Cc,copy:function(t){return ms.prototype.copy.call(this,t),this.geometry.copy(t.geometry),this.material.copy(t.material),this},clone:function(){return(new this.constructor).copy(this)}}),Oc.prototype=Object.create(ms.prototype),Oc.prototype.constructor=Oc,Ic.prototype=Object.create(us.prototype),Ic.prototype.constructor=Ic,Ic.prototype.update=function(){var t,e,i=this.audio,n=this.range,r=this.divisionsInnerAngle,o=this.divisionsOuterAngle,a=ze.degToRad(i.panner.coneInnerAngle),s=ze.degToRad(i.panner.coneOuterAngle),q=a/2,l=s/2,h=0,c=0,u=this.geometry,p=u.attributes.position;function d(i,r,o,a){var s=(r-i)/o;for(p.setXYZ(h,0,0,0),c++,t=i;t<r;t+=s)e=h+c,p.setXYZ(e,Math.sin(t)*n,0,Math.cos(t)*n),p.setXYZ(e+1,Math.sin(Math.min(t+s,r))*n,0,Math.cos(Math.min(t+s,r))*n),p.setXYZ(e+2,0,0,0),c+=3;u.addGroup(h,c,a),h+=c,c=0}u.clearGroups(),d(-l,-q,o,0),d(-q,q,r,1),d(q,l,o,0),p.needsUpdate=!0,a===s&&(this.material[0].visible=!1)},Ic.prototype.dispose=function(){this.geometry.dispose(),this.material[0].dispose(),this.material[1].dispose()};var Nc=new Ne,Bc=new Ne,Dc=new Fe;function Fc(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16776960,o=void 0!==n?n:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var q=new In,l=new Mn(2*a*3,3);q.setAttribute("position",l),ms.call(this,q,new as({color:r,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}Fc.prototype=Object.create(ms.prototype),Fc.prototype.constructor=Fc,Fc.prototype.update=function(){this.object.updateMatrixWorld(!0),Dc.getNormalMatrix(this.object.matrixWorld);for(var t=this.object.matrixWorld,e=this.geometry.attributes.position,i=this.object.geometry,n=i.vertices,r=i.faces,o=0,a=0,s=r.length;a<s;a++){var q=r[a],l=q.normal;Nc.copy(n[q.a]).add(n[q.b]).add(n[q.c]).divideScalar(3).applyMatrix4(t),Bc.copy(l).applyMatrix3(Dc).normalize().multiplyScalar(this.size).add(Nc),e.setXYZ(o,Nc.x,Nc.y,Nc.z),o+=1,e.setXYZ(o,Bc.x,Bc.y,Bc.z),o+=1}e.needsUpdate=!0};var Vc=new Ne,Uc=new Ne,jc=new Ne;function Gc(t,e,i){vi.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);var n=new In;n.setAttribute("position",new Mn([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new as({fog:!1});this.lightPlane=new us(n,r),this.add(this.lightPlane),(n=new In).setAttribute("position",new Mn([0,0,0,0,0,1],3)),this.targetLine=new us(n,r),this.add(this.targetLine),this.update()}Gc.prototype=Object.create(vi.prototype),Gc.prototype.constructor=Gc,Gc.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Gc.prototype.update=function(){Vc.setFromMatrixPosition(this.light.matrixWorld),Uc.setFromMatrixPosition(this.light.target.matrixWorld),jc.subVectors(Uc,Vc),this.lightPlane.lookAt(Uc),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Uc),this.targetLine.scale.z=jc.length()};var Hc=new Ne,Wc=new pr;function kc(t){var e=new In,i=new as({color:16777215,vertexColors:1}),n=[],r=[],o={},a=new qn(16755200),s=new qn(16711680),q=new qn(43775),l=new qn(16777215),h=new qn(3355443);function c(t,e,i){u(t,i),u(e,i)}function u(t,e){n.push(0,0,0),r.push(e.r,e.g,e.b),void 0===o[t]&&(o[t]=[]),o[t].push(n.length/3-1)}c("n1","n2",a),c("n2","n4",a),c("n4","n3",a),c("n3","n1",a),c("f1","f2",a),c("f2","f4",a),c("f4","f3",a),c("f3","f1",a),c("n1","f1",a),c("n2","f2",a),c("n3","f3",a),c("n4","f4",a),c("p","n1",s),c("p","n2",s),c("p","n3",s),c("p","n4",s),c("u1","u2",q),c("u2","u3",q),c("u3","u1",q),c("c","t",l),c("p","c",h),c("cn1","cn2",h),c("cn3","cn4",h),c("cf1","cf2",h),c("cf3","cf4",h),e.setAttribute("position",new Mn(n,3)),e.setAttribute("color",new Mn(r,3)),ms.call(this,e,i),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}function Xc(t,e,i,n,r,o,a){Hc.set(r,o,a).unproject(n);var s=e[t];if(void 0!==s)for(var q=i.getAttribute("position"),l=0,h=s.length;l<h;l++)q.setXYZ(s[l],Hc.x,Hc.y,Hc.z)}kc.prototype=Object.create(ms.prototype),kc.prototype.constructor=kc,kc.prototype.update=function(){var t=this.geometry,e=this.pointMap;Wc.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Xc("c",e,t,Wc,0,0,-1),Xc("t",e,t,Wc,0,0,1),Xc("n1",e,t,Wc,-1,-1,-1),Xc("n2",e,t,Wc,1,-1,-1),Xc("n3",e,t,Wc,-1,1,-1),Xc("n4",e,t,Wc,1,1,-1),Xc("f1",e,t,Wc,-1,-1,1),Xc("f2",e,t,Wc,1,-1,1),Xc("f3",e,t,Wc,-1,1,1),Xc("f4",e,t,Wc,1,1,1),Xc("u1",e,t,Wc,.7,1.1,-1),Xc("u2",e,t,Wc,-.7,1.1,-1),Xc("u3",e,t,Wc,0,2,-1),Xc("cf1",e,t,Wc,-1,0,1),Xc("cf2",e,t,Wc,1,0,1),Xc("cf3",e,t,Wc,0,-1,1),Xc("cf4",e,t,Wc,0,1,1),Xc("cn1",e,t,Wc,-1,0,-1),Xc("cn2",e,t,Wc,1,0,-1),Xc("cn3",e,t,Wc,0,-1,-1),Xc("cn4",e,t,Wc,0,1,-1),t.getAttribute("position").needsUpdate=!0};var Yc=new zi;function Zc(t,e){this.object=t,void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new In;r.setIndex(new fn(i,1)),r.setAttribute("position",new fn(n,3)),ms.call(this,r,new as({color:e})),this.matrixAutoUpdate=!1,this.update()}function Jc(t,e){this.type="Box3Helper",this.box=t,e=e||16776960;var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new In;n.setIndex(new fn(i,1)),n.setAttribute("position",new Mn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),ms.call(this,n,new as({color:e})),this.geometry.computeBoundingSphere()}function Qc(t,e,i){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var n=void 0!==i?i:16776960,r=new In;r.setAttribute("position",new Mn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),us.call(this,r,new as({color:n}));var o=new In;o.setAttribute("position",new Mn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new $n(o,new mn({color:n,opacity:.2,transparent:!0,depthWrite:!1})))}Zc.prototype=Object.create(ms.prototype),Zc.prototype.constructor=Zc,Zc.prototype.update=function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Yc.setFromObject(this.object),!Yc.isEmpty()){var e=Yc.min,i=Yc.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=e.x,r[4]=i.y,r[5]=i.z,r[6]=e.x,r[7]=e.y,r[8]=i.z,r[9]=i.x,r[10]=e.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=e.z,r[15]=e.x,r[16]=i.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=i.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}},Zc.prototype.setFromObject=function(t){return this.object=t,this.update(),this},Zc.prototype.copy=function(t){return ms.prototype.copy.call(this,t),this.object=t.object,this},Zc.prototype.clone=function(){return(new this.constructor).copy(this)},Jc.prototype=Object.create(ms.prototype),Jc.prototype.constructor=Jc,Jc.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),vi.prototype.updateMatrixWorld.call(this,t))},Qc.prototype=Object.create(us.prototype),Qc.prototype.constructor=Qc,Qc.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?c:h,this.lookAt(this.plane.normal),vi.prototype.updateMatrixWorld.call(this,t)};var Kc,$c,tu=new Ne;function eu(t,e,i,n,r,o){vi.call(this),void 0===t&&(t=new Ne(0,0,1)),void 0===e&&(e=new Ne(0,0,0)),void 0===i&&(i=1),void 0===n&&(n=16776960),void 0===r&&(r=.2*i),void 0===o&&(o=.2*r),void 0===Kc&&((Kc=new In).setAttribute("position",new Mn([0,0,0,0,1,0],3)),($c=new Oq(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new us(Kc,new as({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new $n($c,new mn({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,o)}function iu(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new In;i.setAttribute("position",new Mn(e,3)),i.setAttribute("color",new Mn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new as({vertexColors:d});ms.call(this,i,n)}function nu(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Rl.call(this,t),this.type="catmullrom"}eu.prototype=Object.create(vi.prototype),eu.prototype.constructor=eu,eu.prototype.setDirection=function(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{tu.set(t.z,0,-t.x).normalize();var e=Math.acos(t.y);this.quaternion.setFromAxisAngle(tu,e)}},eu.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},eu.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},eu.prototype.copy=function(t){return vi.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this},eu.prototype.clone=function(){return(new this.constructor).copy(this)},iu.prototype=Object.create(ms.prototype),iu.prototype.constructor=iu,Ml.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ml.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Hl.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new ar,i=0,n=t.length;i<n;i++){var r=t[i];e.vertices.push(new Ne(r.x,r.y,r.z||0))}return e}}),Object.assign(Wl.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Object.create(Rl.prototype),Object.create(Rl.prototype),nu.prototype=Object.create(Rl.prototype),Object.assign(nu.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Cc.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Sc.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(ml.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ah(t)}}),ml.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(ch.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}),Object.assign(lc.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(zi.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),uc.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(ze,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),ze.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),ze.ceilPowerOfTwo(t)}}),Object.assign(Fe.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign($e.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Ne).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,i,n,r,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,r,o)}}),ki.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},Ce.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(ji.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(rn.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(rn,{barycoordFromPoint:function(t,e,i,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),rn.getBarycoord(t,e,i,n,r)},normal:function(t,e,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),rn.getNormal(t,e,i,n)}}),Object.assign(kl.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new vq(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Lq(this,t)}}),Object.assign(Re.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Ne.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Ge.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ar.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}}),Object.assign(vi.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}}),Object.defineProperties(vi.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties($a.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(ns.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),ts.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Ml.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),dr.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Xl.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(fn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Te},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Te)}}}),Object.assign(fn.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Te:Ee),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(In.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new fn(arguments[1],arguments[2])))},addDrawCall:function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)}}),Object.defineProperties(In.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Oa.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Te},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(Oa.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Te:Ee),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(gq.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(nc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(dn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new qn}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Hq.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(ur.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(za.prototype,{clearTarget:function(t,e,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,i,n)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(za.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}}}),Object.defineProperties(va.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(vr.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")}},activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")}}}),Object.defineProperties(He.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(La.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}}),Object.defineProperties(Ih.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new bh).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Uh.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},fr.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Ve.crossOrigin=void 0,Ve.loadTexture=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new _l;r.setCrossOrigin(this.crossOrigin);var o=r.load(t,i,void 0,n);return e&&(o.mapping=e),o},Ve.loadTextureCube=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new bl;r.setCrossOrigin(this.crossOrigin);var o=r.load(t,i,void 0,n);return e&&(o.mapping=e),o},Ve.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Ve.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"110"}}));var ru=i(125),ou=i.n(ru),au=JSON.parse('{"glyphs":{"0":{"ha":929,"x_min":68,"x_max":861,"o":"m 451 10 q 249 66 335 10 q 115 226 163 122 q 68 471 68 329 q 117 732 68 619 q 256 907 167 844 q 465 969 344 969 q 674 910 585 969 q 812 746 763 851 q 861 500 861 640 q 810 239 861 349 q 668 69 760 129 q 451 10 576 10 m 469 182 q 607 260 556 182 q 658 499 658 339 q 607 721 658 649 q 469 793 556 793 q 333 721 385 793 q 281 499 281 649 q 333 260 281 339 q 469 182 385 182 z "},"1":{"ha":513,"x_min":31,"x_max":421,"o":"m 304 961 q 347 946 331 961 q 378 894 364 931 q 410 742 399 839 q 421 506 421 644 q 413 332 421 419 q 393 172 406 244 q 364 58 381 100 q 332 2 349 19 q 289 -15 315 -15 q 247 6 263 -15 q 221 74 231 28 q 206 190 211 122 q 201 332 201 257 q 210 481 201 403 q 233 633 218 558 q 268 771 249 708 l 276 769 q 181 692 233 719 q 81 664 128 664 q 44 676 57 664 q 31 711 31 689 q 55 798 31 754 q 119 878 79 842 q 208 938 160 915 q 304 961 257 961 z "},"2":{"ha":733,"x_min":35,"x_max":699,"o":"m 346 954 q 611 878 524 954 q 699 681 699 803 q 647 501 699 585 q 483 335 594 417 q 192 165 371 254 l 213 196 q 559 172 456 203 q 663 76 663 142 q 627 7 663 32 q 518 -18 592 -18 q 403 -13 467 -18 q 274 1 339 -8 q 151 22 208 10 q 63 59 90 36 q 35 125 35 82 q 57 188 35 156 q 131 265 79 219 q 271 379 182 310 q 399 488 354 444 q 463 565 444 531 q 481 633 481 599 q 444 715 481 686 q 331 744 407 744 q 259 735 294 744 q 188 715 224 725 q 117 706 153 706 q 60 722 79 706 q 40 769 40 739 q 78 858 40 815 q 185 927 117 900 q 346 954 254 954 z "},"3":{"ha":739,"x_min":47,"x_max":683,"o":"m 374 968 q 531 942 463 968 q 638 863 599 915 q 678 729 678 810 q 612 566 678 638 q 407 463 546 494 l 400 479 q 614 404 544 467 q 683 242 683 342 q 644 111 683 169 q 526 19 604 53 q 328 -15 447 -15 q 159 1 221 -15 q 72 47 97 18 q 47 110 47 75 q 67 167 47 144 q 126 190 88 190 q 218 178 171 190 q 319 165 265 165 q 426 191 389 165 q 464 256 464 217 q 450 303 464 283 q 399 340 436 324 q 289 371 361 356 q 192 401 225 383 q 160 454 160 418 q 196 518 160 494 q 297 564 232 542 q 427 625 388 596 q 467 696 467 654 q 433 758 467 738 q 335 779 399 779 q 235 767 283 779 q 131 754 186 754 q 74 771 93 754 q 54 818 54 788 q 94 892 54 858 q 207 947 135 926 q 374 968 279 968 z "},"4":{"ha":804,"x_min":31,"x_max":774,"o":"m 454 -25 q 381 7 406 -25 q 357 99 357 39 q 366 188 357 140 q 392 281 375 235 l 400 261 q 288 236 354 246 q 154 226 221 226 q 60 248 90 226 q 31 308 31 269 q 54 447 31 368 q 115 610 78 526 q 190 761 151 693 q 324 928 251 868 q 489 989 396 989 q 617 944 579 989 q 656 815 656 900 q 640 626 656 733 q 596 407 625 518 l 578 422 q 619 433 597 429 q 660 436 642 436 q 774 344 774 436 q 738 272 774 297 q 646 247 703 247 q 598 251 621 247 q 558 260 575 254 l 569 267 q 575 201 572 240 q 578 125 578 161 q 545 13 578 51 q 454 -25 513 -25 m 281 413 q 360 431 325 413 q 419 485 394 450 q 456 570 443 521 q 469 681 469 619 q 452 755 469 731 q 407 779 435 779 q 335 753 369 779 q 272 687 300 728 q 226 597 243 646 q 210 500 210 547 q 229 433 210 453 q 281 413 249 413 z "},"5":{"ha":733,"x_min":47,"x_max":678,"o":"m 678 842 q 645 772 678 799 q 551 744 613 744 q 458 748 511 744 q 349 758 404 751 q 249 771 294 764 l 286 792 q 274 649 285 722 q 249 525 264 575 l 203 533 q 324 542 264 542 q 589 472 501 542 q 676 283 676 403 q 638 131 676 199 q 522 24 599 64 q 328 -15 444 -15 q 159 2 221 -15 q 72 49 97 19 q 47 117 47 79 q 67 174 47 151 q 126 197 88 197 q 230 185 174 197 q 333 172 286 172 q 451 197 410 172 q 492 268 492 222 q 449 347 492 322 q 328 372 406 372 q 254 371 293 372 q 192 369 215 369 q 115 391 139 369 q 90 468 90 413 q 94 587 90 518 q 106 723 99 656 q 119 833 113 790 q 161 926 131 894 q 256 958 192 958 q 360 956 301 958 q 478 949 419 954 q 582 938 538 944 q 678 842 678 924 z "},"6":{"ha":803,"x_min":42,"x_max":761,"o":"m 696 900 q 600 751 696 836 q 301 569 504 665 l 292 568 q 358 583 324 579 q 422 588 392 588 q 610 549 535 588 q 723 446 685 511 q 761 297 761 381 q 715 128 761 199 q 592 22 669 58 q 415 -14 514 -14 q 202 24 285 -14 q 81 128 119 61 q 42 282 42 194 q 65 439 42 364 q 135 590 88 514 q 257 749 183 665 q 388 877 325 826 q 507 953 451 928 q 608 978 563 978 q 672 957 649 978 q 696 900 696 936 m 403 438 q 274 399 319 438 q 228 301 228 361 q 272 213 228 246 q 390 179 315 179 q 519 218 472 179 q 565 317 565 257 q 520 406 565 374 q 403 438 475 438 z "},"7":{"ha":672,"x_min":31,"x_max":642,"o":"m 193 960 q 338 956 258 960 q 490 946 417 953 q 602 910 563 939 q 642 819 642 881 q 619 710 642 788 q 546 524 596 633 q 427 275 479 378 q 331 108 375 172 q 244 15 286 44 q 156 -15 201 -15 q 104 2 121 -15 q 88 54 88 19 q 109 153 88 93 q 168 286 131 214 q 259 445 206 358 q 376 624 313 532 q 506 799 439 715 l 521 782 q 340 767 436 772 q 169 763 243 761 q 31 846 31 764 q 74 933 31 906 q 193 960 118 960 z "},"8":{"ha":849,"x_min":56,"x_max":793,"o":"m 435 979 q 693 910 606 979 q 781 710 781 840 q 725 546 781 613 q 579 446 669 479 l 574 493 q 735 413 678 474 q 793 249 793 353 q 699 53 793 122 q 397 -15 604 -15 q 196 15 271 -15 q 88 99 121 44 q 56 222 56 153 q 125 399 56 329 q 322 494 194 469 l 326 436 q 148 507 217 442 q 79 693 79 572 q 126 853 79 789 q 254 948 174 917 q 435 979 335 979 m 582 683 q 536 758 582 736 q 428 781 490 781 q 297 750 343 781 q 250 668 250 719 q 285 594 250 621 q 401 568 321 568 q 536 596 490 568 q 582 683 582 624 m 429 396 q 293 360 339 396 q 247 278 247 325 q 290 201 247 224 q 415 178 332 178 q 554 210 511 178 q 597 293 597 242 q 563 367 597 339 q 429 396 528 396 z "},"9":{"ha":789,"x_min":42,"x_max":747,"o":"m 65 108 q 94 173 65 149 q 175 197 124 197 q 240 195 203 197 q 300 193 278 193 q 438 221 388 193 q 510 296 489 249 q 532 401 532 343 q 528 446 532 425 l 550 415 q 453 374 506 386 q 353 363 400 363 q 181 401 250 363 q 76 505 111 439 q 42 653 42 571 q 82 830 42 757 q 194 940 122 903 q 360 978 267 978 q 644 857 540 978 q 747 515 747 736 q 714 297 747 394 q 628 131 681 199 q 481 20 567 54 q 299 -14 394 -14 q 123 19 181 -14 q 65 108 65 53 m 385 785 q 264 749 311 785 q 217 651 217 714 q 259 562 217 597 q 378 526 301 526 q 496 563 451 526 q 540 661 540 600 q 500 749 540 714 q 385 785 460 785 z "},"A":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 z "},"Á":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 360 1076 q 389 1126 360 1099 q 465 1189 418 1154 q 555 1247 513 1222 q 629 1271 597 1271 q 678 1255 657 1271 q 711 1217 699 1239 q 724 1175 724 1194 q 698 1131 724 1149 q 621 1094 672 1113 q 536 1069 581 1081 q 453 1052 492 1058 q 390 1046 415 1046 q 368 1055 376 1046 q 360 1076 360 1064 z "},"Ă":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 478 1047 q 328 1099 382 1047 q 275 1219 275 1151 q 329 1276 275 1276 q 393 1224 382 1276 q 419 1170 401 1188 q 476 1153 438 1153 q 530 1168 513 1153 q 556 1215 547 1183 q 581 1271 565 1251 q 626 1290 596 1290 q 667 1274 654 1290 q 681 1226 681 1257 q 657 1138 681 1179 q 588 1072 633 1097 q 478 1047 543 1047 z "},"Ǎ":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 483 1064 q 418 1082 454 1064 q 342 1126 382 1100 q 274 1186 299 1157 q 249 1247 249 1215 q 264 1283 249 1269 q 301 1296 279 1296 q 386 1257 339 1296 q 482 1132 433 1218 l 461 1136 q 542 1248 496 1207 q 633 1289 589 1289 q 687 1272 665 1289 q 708 1224 708 1254 q 685 1164 708 1189 q 618 1113 661 1139 q 544 1077 582 1090 q 483 1064 506 1064 z "},"Â":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 483 1282 q 544 1269 506 1282 q 618 1233 582 1256 q 685 1182 661 1207 q 708 1122 708 1157 q 687 1074 708 1092 q 633 1057 665 1057 q 542 1098 589 1057 q 461 1210 496 1139 l 482 1214 q 386 1089 433 1128 q 301 1050 339 1050 q 264 1063 279 1050 q 249 1099 249 1076 q 274 1160 249 1131 q 342 1219 299 1189 q 418 1265 382 1247 q 483 1282 454 1282 z "},"Ä":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 314 1061 q 232 1089 258 1061 q 206 1154 206 1117 q 240 1233 206 1206 q 338 1260 275 1260 q 418 1230 392 1260 q 444 1158 444 1200 q 408 1086 444 1111 q 314 1061 371 1061 m 638 1274 q 722 1243 696 1274 q 749 1172 749 1213 q 717 1094 749 1121 q 624 1068 685 1068 q 539 1097 567 1068 q 511 1168 511 1126 q 546 1247 511 1219 q 638 1274 581 1274 z "},"À":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 596 1076 q 588 1055 596 1064 q 565 1046 581 1046 q 502 1052 540 1046 q 420 1069 464 1058 q 335 1094 376 1081 q 258 1131 283 1113 q 232 1175 232 1149 q 244 1217 232 1194 q 278 1255 257 1239 q 326 1271 300 1271 q 401 1247 358 1271 q 490 1189 443 1222 q 567 1126 539 1154 q 596 1076 596 1099 z "},"Ā":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 319 1061 q 240 1081 265 1061 q 214 1133 214 1101 q 237 1183 214 1165 q 314 1214 260 1200 q 412 1229 358 1224 q 519 1238 465 1235 q 618 1240 574 1240 q 713 1221 685 1240 q 742 1169 742 1201 q 718 1114 742 1135 q 649 1085 694 1093 q 544 1072 606 1078 q 424 1064 483 1067 q 319 1061 364 1061 z "},"Ą":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 688 -293 q 569 -261 615 -293 q 522 -167 522 -229 q 560 -63 522 -117 q 686 39 599 -10 l 794 42 q 673 -58 718 -6 q 628 -137 628 -110 q 644 -162 628 -156 q 689 -169 661 -169 q 722 -168 704 -169 q 760 -167 739 -167 q 801 -181 788 -167 q 814 -221 814 -196 q 781 -275 814 -257 q 688 -293 749 -293 z "},"Å":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 475 1043 q 343 1073 396 1043 q 290 1165 290 1103 q 342 1270 290 1229 q 492 1311 394 1311 q 622 1273 581 1311 q 664 1182 664 1235 q 613 1082 664 1121 q 475 1043 563 1043 m 467 1118 q 544 1133 513 1118 q 575 1176 575 1147 q 551 1223 575 1206 q 478 1240 528 1240 q 403 1219 426 1240 q 379 1175 379 1199 q 403 1134 379 1150 q 467 1118 428 1118 z "},"Ã":{"ha":867,"x_min":42,"x_max":825,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 55 269 42 189 q 92 440 68 349 q 147 622 115 531 q 217 792 179 713 q 297 933 258 882 q 376 1005 336 983 q 461 1026 417 1026 q 584 974 528 1026 q 692 799 640 921 q 760 594 729 706 q 808 369 790 483 q 825 154 825 256 q 797 30 825 69 q 718 -10 768 -10 q 643 33 669 -10 q 606 176 617 76 q 600 303 600 238 q 606 429 600 369 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 453 464 q 570 488 533 464 q 607 560 607 513 q 595 642 607 593 q 563 739 583 692 q 515 818 542 786 q 456 850 488 850 q 398 817 425 850 q 350 736 371 785 q 317 637 329 688 q 304 550 304 586 q 341 486 304 508 q 453 464 378 464 m 400 1256 q 485 1232 447 1256 q 558 1175 522 1208 q 574 1167 568 1167 q 583 1178 581 1168 q 617 1253 599 1229 q 669 1276 635 1276 q 721 1217 721 1276 q 706 1147 721 1186 q 658 1077 690 1107 q 574 1047 625 1047 q 488 1076 525 1047 q 411 1151 450 1104 q 394 1163 401 1164 q 382 1140 388 1161 q 350 1062 369 1086 q 293 1038 331 1038 q 251 1057 267 1038 q 235 1103 235 1076 q 256 1176 235 1142 q 315 1233 278 1211 q 400 1256 353 1256 z "},"Æ":{"ha":1272,"x_min":42,"x_max":1236,"o":"m 126 -10 q 64 21 86 -10 q 42 132 42 51 q 57 268 42 189 q 99 438 72 347 q 164 619 126 528 q 244 792 201 710 q 330 931 292 879 q 406 1004 368 982 q 489 1026 444 1026 q 610 974 556 1026 q 706 799 665 921 l 629 322 q 508 301 581 306 q 356 303 435 296 q 210 332 278 311 l 283 426 q 276 297 285 360 q 257 181 268 233 q 231 76 246 119 q 191 12 215 33 q 126 -10 167 -10 m 439 464 q 546 488 513 464 q 579 560 579 513 q 571 661 579 610 q 548 755 563 713 q 513 824 533 797 q 469 850 493 850 q 409 817 439 850 q 356 736 379 785 q 318 637 332 688 q 304 550 304 586 q 338 486 304 508 q 439 464 371 464 m 1025 1022 q 1190 996 1144 1022 q 1236 919 1236 969 q 1183 840 1236 867 q 1014 813 1129 813 q 885 815 957 813 q 738 822 814 817 l 760 839 q 767 701 772 775 q 736 561 761 628 l 729 571 q 822 585 768 579 q 932 596 875 592 q 1036 600 989 600 q 1164 576 1126 600 q 1201 519 1201 553 q 1158 456 1201 482 q 1013 429 1115 429 q 860 435 936 429 q 715 450 785 440 l 732 467 q 755 363 747 422 q 763 245 763 304 q 751 142 763 186 l 736 150 q 842 179 782 167 q 963 199 901 192 q 1079 206 1025 206 q 1195 189 1157 206 q 1233 132 1233 172 q 1212 78 1233 101 q 1139 36 1190 56 q 1059 15 1106 25 q 960 -2 1013 4 q 857 -8 908 -8 q 709 15 768 -8 q 624 86 650 39 q 585 211 600 135 q 569 421 569 288 l 604 468 l 653 764 l 646 897 q 739 972 681 944 q 871 1010 797 999 q 1025 1022 944 1022 z "},"B":{"ha":875,"x_min":92,"x_max":806,"o":"m 356 -7 q 213 26 269 -7 q 129 126 157 58 q 101 241 110 174 q 92 396 92 308 q 101 644 92 546 q 130 802 111 742 q 172 900 149 863 q 292 992 210 957 q 524 1026 374 1026 q 684 997 624 1026 q 772 918 744 967 q 799 810 799 869 q 743 654 799 715 q 597 557 688 593 l 597 551 q 751 488 696 540 q 806 340 806 436 q 767 201 806 264 q 665 91 729 138 q 519 19 600 44 q 356 -7 439 -7 m 399 160 q 517 182 465 160 q 599 242 569 204 q 629 329 629 281 q 578 417 629 382 q 421 453 528 453 q 306 419 349 453 q 264 303 264 385 q 297 192 264 225 q 399 160 331 160 m 404 600 q 562 642 499 600 q 625 753 625 685 q 585 833 625 803 q 467 864 544 864 q 328 831 382 864 q 274 717 274 797 q 309 626 274 651 q 404 600 344 600 z "},"C":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 z "},"Ć":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 400 1076 q 429 1126 400 1099 q 506 1189 458 1154 q 595 1247 553 1222 q 669 1271 638 1271 q 718 1255 697 1271 q 751 1217 739 1239 q 764 1175 764 1194 q 738 1131 764 1149 q 661 1094 713 1113 q 576 1069 621 1081 q 494 1052 532 1058 q 431 1046 456 1046 q 408 1055 417 1046 q 400 1076 400 1064 z "},"Č":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 524 1064 q 458 1082 494 1064 q 382 1126 422 1100 q 314 1186 339 1157 q 289 1247 289 1215 q 304 1283 289 1269 q 342 1296 319 1296 q 426 1257 379 1296 q 522 1132 474 1218 l 501 1136 q 583 1248 536 1207 q 674 1289 629 1289 q 727 1272 706 1289 q 749 1224 749 1254 q 725 1164 749 1189 q 658 1113 701 1139 q 584 1077 622 1090 q 524 1064 546 1064 z "},"Ç":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 403 -289 q 313 -232 313 -289 q 335 -188 313 -201 q 386 -169 357 -175 q 440 -162 411 -165 q 479 -156 468 -158 q 511 -144 499 -151 q 524 -122 524 -136 q 507 -99 524 -107 q 444 -85 490 -90 q 372 -64 399 -76 q 346 -25 346 -51 q 367 7 346 -1 q 418 15 388 15 q 518 -2 468 15 q 601 -53 568 -19 q 633 -135 633 -86 q 603 -211 633 -176 q 522 -267 574 -246 q 403 -289 469 -289 z "},"Ċ":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 528 1274 q 608 1243 583 1274 q 632 1172 632 1213 q 602 1095 632 1122 q 518 1068 572 1068 q 439 1098 465 1068 q 413 1168 413 1128 q 444 1247 413 1221 q 528 1274 476 1274 z "},"D":{"ha":972,"x_min":36,"x_max":904,"o":"m 279 -32 q 144 -21 192 -32 q 78 10 96 -10 q 58 56 60 31 q 105 121 58 94 q 276 154 151 147 l 254 128 q 232 293 239 199 q 226 489 225 388 q 236 683 228 590 q 260 840 244 775 l 381 849 q 304 827 350 836 q 210 818 258 818 q 78 838 121 818 q 36 892 36 857 q 110 987 36 953 q 339 1021 185 1021 q 648 960 522 1021 q 839 792 774 900 q 904 542 904 685 q 860 312 904 417 q 733 130 815 207 q 535 10 650 53 q 279 -32 421 -32 m 476 182 q 577 220 524 182 q 668 333 631 258 q 706 517 706 407 q 683 658 706 597 q 624 758 660 718 q 547 819 588 799 q 471 839 507 839 q 426 803 442 839 q 403 695 410 767 q 396 518 396 624 q 413 268 396 354 q 476 182 429 182 z "},"Ð":{"ha":972,"x_min":36,"x_max":904,"o":"m 279 -32 q 144 -21 192 -32 q 78 10 96 -10 q 58 56 60 31 q 105 121 58 94 q 276 154 151 147 l 254 128 q 232 293 239 199 q 226 489 225 388 q 236 683 228 590 q 260 840 244 775 l 381 849 q 304 827 350 836 q 210 818 258 818 q 78 838 121 818 q 36 892 36 857 q 110 987 36 953 q 339 1021 185 1021 q 648 960 522 1021 q 839 792 774 900 q 904 542 904 685 q 860 312 904 417 q 733 130 815 207 q 535 10 650 53 q 279 -32 421 -32 m 147 421 q 87 436 106 421 q 68 478 68 451 q 86 523 68 506 q 150 550 104 540 q 251 565 193 558 q 369 574 308 571 q 481 578 431 578 q 552 561 531 578 q 574 515 574 544 q 492 443 574 460 q 383 432 449 438 q 253 424 318 426 q 147 421 189 421 m 476 182 q 577 220 524 182 q 668 333 631 258 q 706 517 706 407 q 683 658 706 597 q 624 758 660 718 q 547 819 588 799 q 471 839 507 839 q 426 803 442 839 q 403 695 410 767 q 396 518 396 624 q 413 268 396 354 q 476 182 429 182 z "},"Ď":{"ha":972,"x_min":36,"x_max":904,"o":"m 279 -32 q 144 -21 192 -32 q 78 10 96 -10 q 58 56 60 31 q 105 121 58 94 q 276 154 151 147 l 254 128 q 232 293 239 199 q 226 489 225 388 q 236 683 228 590 q 260 840 244 775 l 381 849 q 304 827 350 836 q 210 818 258 818 q 78 838 121 818 q 36 892 36 857 q 110 987 36 953 q 339 1021 185 1021 q 648 960 522 1021 q 839 792 774 900 q 904 542 904 685 q 860 312 904 417 q 733 130 815 207 q 535 10 650 53 q 279 -32 421 -32 m 476 182 q 577 220 524 182 q 668 333 631 258 q 706 517 706 407 q 683 658 706 597 q 624 758 660 718 q 547 819 588 799 q 471 839 507 839 q 426 803 442 839 q 403 695 410 767 q 396 518 396 624 q 413 268 396 354 q 476 182 429 182 m 485 1064 q 419 1082 456 1064 q 343 1126 383 1100 q 275 1186 300 1157 q 250 1247 250 1215 q 265 1283 250 1269 q 303 1296 281 1296 q 388 1257 340 1296 q 483 1132 435 1218 l 463 1136 q 544 1248 497 1207 q 635 1289 590 1289 q 688 1272 667 1289 q 710 1224 710 1254 q 686 1164 710 1189 q 619 1113 663 1139 q 545 1077 583 1090 q 485 1064 507 1064 z "},"Đ":{"ha":972,"x_min":36,"x_max":904,"o":"m 279 -32 q 144 -21 192 -32 q 78 10 96 -10 q 58 56 60 31 q 105 121 58 94 q 276 154 151 147 l 254 128 q 232 293 239 199 q 226 489 225 388 q 236 683 228 590 q 260 840 244 775 l 381 849 q 304 827 350 836 q 210 818 258 818 q 78 838 121 818 q 36 892 36 857 q 110 987 36 953 q 339 1021 185 1021 q 648 960 522 1021 q 839 792 774 900 q 904 542 904 685 q 860 312 904 417 q 733 130 815 207 q 535 10 650 53 q 279 -32 421 -32 m 147 421 q 87 436 106 421 q 68 478 68 451 q 86 523 68 506 q 150 550 104 540 q 251 565 193 558 q 369 574 308 571 q 481 578 431 578 q 552 561 531 578 q 574 515 574 544 q 492 443 574 460 q 383 432 449 438 q 253 424 318 426 q 147 421 189 421 m 476 182 q 577 220 524 182 q 668 333 631 258 q 706 517 706 407 q 683 658 706 597 q 624 758 660 718 q 547 819 588 799 q 471 839 507 839 q 426 803 442 839 q 403 695 410 767 q 396 518 396 624 q 413 268 396 354 q 476 182 429 182 z "},"E":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 z "},"É":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 358 1076 q 388 1126 358 1099 q 464 1189 417 1154 q 553 1247 511 1222 q 628 1271 596 1271 q 676 1255 656 1271 q 710 1217 697 1239 q 722 1175 722 1194 q 697 1131 722 1149 q 619 1094 671 1113 q 535 1069 579 1081 q 452 1052 490 1058 q 389 1046 414 1046 q 367 1055 375 1046 q 358 1076 358 1064 z "},"Ě":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 482 1064 q 417 1082 453 1064 q 340 1126 381 1100 q 272 1186 297 1157 q 247 1247 247 1215 q 263 1283 247 1269 q 300 1296 278 1296 q 385 1257 338 1296 q 481 1132 432 1218 l 460 1136 q 541 1248 494 1207 q 632 1289 588 1289 q 685 1272 664 1289 q 707 1224 707 1254 q 683 1164 707 1189 q 617 1113 660 1139 q 542 1077 581 1090 q 482 1064 504 1064 z "},"Ê":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 482 1282 q 542 1269 504 1282 q 617 1233 581 1256 q 683 1182 660 1207 q 707 1122 707 1157 q 685 1074 707 1092 q 632 1057 664 1057 q 541 1098 588 1057 q 460 1210 494 1139 l 481 1214 q 385 1089 432 1128 q 300 1050 338 1050 q 263 1063 278 1050 q 247 1099 247 1076 q 272 1160 247 1131 q 340 1219 297 1189 q 417 1265 381 1247 q 482 1282 453 1282 z "},"Ë":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 313 1061 q 231 1089 257 1061 q 204 1154 204 1117 q 239 1233 204 1206 q 336 1260 274 1260 q 417 1230 390 1260 q 443 1158 443 1200 q 406 1086 443 1111 q 313 1061 369 1061 m 636 1274 q 721 1243 694 1274 q 747 1172 747 1213 q 715 1094 747 1121 q 622 1068 683 1068 q 538 1097 565 1068 q 510 1168 510 1126 q 544 1247 510 1219 q 636 1274 579 1274 z "},"Ė":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 486 1274 q 566 1243 542 1274 q 590 1172 590 1213 q 560 1095 590 1122 q 476 1068 531 1068 q 397 1098 424 1068 q 371 1168 371 1128 q 403 1247 371 1221 q 486 1274 435 1274 z "},"È":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 594 1076 q 587 1055 594 1064 q 564 1046 579 1046 q 501 1052 539 1046 q 419 1069 463 1058 q 333 1094 375 1081 q 256 1131 282 1113 q 231 1175 231 1149 q 243 1217 231 1194 q 277 1255 256 1239 q 325 1271 299 1271 q 399 1247 357 1271 q 489 1189 442 1222 q 566 1126 538 1154 q 594 1076 594 1099 z "},"Ē":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 318 1061 q 238 1081 264 1061 q 213 1133 213 1101 q 235 1183 213 1165 q 313 1214 258 1200 q 410 1229 357 1224 q 518 1238 464 1235 q 617 1240 572 1240 q 712 1221 683 1240 q 740 1169 740 1201 q 717 1114 740 1135 q 647 1085 693 1093 q 543 1072 604 1078 q 422 1064 482 1067 q 318 1061 363 1061 z "},"Ę":{"ha":794,"x_min":92,"x_max":758,"o":"m 547 1022 q 713 996 667 1022 q 758 919 758 969 q 705 840 758 867 q 536 813 651 813 q 408 815 479 813 q 260 822 336 817 l 282 839 q 289 701 294 775 q 258 561 283 628 l 251 571 q 344 585 290 579 q 454 596 397 592 q 558 600 511 600 q 686 576 649 600 q 724 519 724 553 q 681 456 724 482 q 535 429 638 429 q 383 435 458 429 q 238 450 307 440 l 254 467 q 277 363 269 422 q 285 245 285 304 q 274 142 285 186 l 258 150 q 364 179 304 167 q 485 199 424 192 q 601 206 547 206 q 717 189 679 206 q 756 132 756 172 q 734 78 756 101 q 661 36 713 56 q 581 15 628 25 q 483 -2 535 4 q 379 -8 431 -8 q 231 15 290 -8 q 146 86 172 39 q 106 221 119 138 q 92 449 92 304 q 101 669 92 582 q 128 810 111 756 q 168 897 146 865 q 261 972 203 944 q 393 1010 319 999 q 547 1022 467 1022 m 568 -293 q 449 -261 496 -293 q 403 -167 403 -229 q 441 -63 403 -117 q 567 39 479 -10 l 675 42 q 553 -58 599 -6 q 508 -137 508 -110 q 525 -162 508 -156 q 569 -169 542 -169 q 602 -168 585 -169 q 640 -167 619 -167 q 681 -181 668 -167 q 694 -221 694 -196 q 662 -275 694 -257 q 568 -293 629 -293 z "},"F":{"ha":733,"x_min":92,"x_max":703,"o":"m 531 994 q 663 966 624 994 q 703 889 703 938 q 649 806 703 832 q 485 779 596 779 q 381 781 439 779 q 261 788 322 783 l 275 814 q 283 695 285 765 q 269 561 282 625 l 256 582 q 510 544 417 571 q 642 482 603 518 q 682 401 682 446 q 658 344 682 367 q 586 321 635 321 q 426 355 517 321 q 238 453 335 389 l 268 456 q 292 359 281 419 q 312 231 304 299 q 319 107 319 164 q 292 -1 319 33 q 218 -36 265 -36 q 163 -19 185 -36 q 128 33 140 -1 q 102 176 113 81 q 92 407 92 272 q 114 723 92 606 q 171 889 136 840 q 257 951 200 928 q 386 984 314 974 q 531 994 458 994 z "},"G":{"ha":978,"x_min":68,"x_max":954,"o":"m 738 386 q 660 379 696 381 q 593 378 625 378 q 468 392 500 378 q 436 443 436 407 q 452 486 436 467 q 499 519 468 506 q 605 548 535 535 q 750 561 675 561 q 901 545 847 561 q 954 485 954 529 q 926 426 954 450 q 835 394 899 401 l 738 386 m 840 414 q 892 321 876 368 q 907 236 907 274 q 870 116 907 174 q 756 22 833 58 q 551 -15 678 -15 q 281 45 389 -15 q 121 216 174 106 q 68 474 68 326 q 135 754 68 632 q 324 945 201 876 q 610 1014 446 1014 q 819 966 746 1014 q 892 854 892 918 q 866 794 892 815 q 792 772 840 772 q 731 782 763 772 q 662 801 700 792 q 575 810 624 810 q 411 777 486 810 q 291 670 336 744 q 246 471 246 596 q 287 297 246 364 q 401 198 328 229 q 569 167 475 167 q 670 181 633 167 q 723 222 707 194 q 739 293 739 250 q 733 351 739 317 q 714 421 726 386 l 840 414 z "},"Ğ":{"ha":978,"x_min":68,"x_max":954,"o":"m 738 386 q 660 379 696 381 q 593 378 625 378 q 468 392 500 378 q 436 443 436 407 q 452 486 436 467 q 499 519 468 506 q 605 548 535 535 q 750 561 675 561 q 901 545 847 561 q 954 485 954 529 q 926 426 954 450 q 835 394 899 401 l 738 386 m 840 414 q 892 321 876 368 q 907 236 907 274 q 870 116 907 174 q 756 22 833 58 q 551 -15 678 -15 q 281 45 389 -15 q 121 216 174 106 q 68 474 68 326 q 135 754 68 632 q 324 945 201 876 q 610 1014 446 1014 q 819 966 746 1014 q 892 854 892 918 q 866 794 892 815 q 792 772 840 772 q 731 782 763 772 q 662 801 700 792 q 575 810 624 810 q 411 777 486 810 q 291 670 336 744 q 246 471 246 596 q 287 297 246 364 q 401 198 328 229 q 569 167 475 167 q 670 181 633 167 q 723 222 707 194 q 739 293 739 250 q 733 351 739 317 q 714 421 726 386 l 840 414 m 539 1047 q 390 1099 443 1047 q 336 1219 336 1151 q 390 1276 336 1276 q 454 1224 443 1276 q 481 1170 463 1188 q 538 1153 499 1153 q 591 1168 574 1153 q 617 1215 608 1183 q 642 1271 626 1251 q 688 1290 657 1290 q 728 1274 715 1290 q 742 1226 742 1257 q 718 1138 742 1179 q 649 1072 694 1097 q 539 1047 604 1047 z "},"Ģ":{"ha":978,"x_min":68,"x_max":954,"o":"m 738 386 q 660 379 696 381 q 593 378 625 378 q 468 392 500 378 q 436 443 436 407 q 452 486 436 467 q 499 519 468 506 q 605 548 535 535 q 750 561 675 561 q 901 545 847 561 q 954 485 954 529 q 926 426 954 450 q 835 394 899 401 l 738 386 m 840 414 q 892 321 876 368 q 907 236 907 274 q 870 116 907 174 q 756 22 833 58 q 551 -15 678 -15 q 281 45 389 -15 q 121 216 174 106 q 68 474 68 326 q 135 754 68 632 q 324 945 201 876 q 610 1014 446 1014 q 819 966 746 1014 q 892 854 892 918 q 866 794 892 815 q 792 772 840 772 q 731 782 763 772 q 662 801 700 792 q 575 810 624 810 q 411 777 486 810 q 291 670 336 744 q 246 471 246 596 q 287 297 246 364 q 401 198 328 229 q 569 167 475 167 q 670 181 633 167 q 723 222 707 194 q 739 293 739 250 q 733 351 739 317 q 714 421 726 386 l 840 414 m 528 -244 q 436 -221 463 -244 q 410 -153 410 -197 q 420 -104 410 -128 q 456 -65 431 -81 q 526 -50 482 -50 q 609 -77 578 -50 q 640 -164 640 -104 q 623 -235 640 -196 q 578 -306 606 -274 q 533 -346 556 -332 q 490 -360 511 -360 q 467 -353 476 -360 q 457 -335 457 -347 q 469 -297 457 -321 q 519 -231 481 -272 l 528 -244 z "},"Ġ":{"ha":978,"x_min":68,"x_max":954,"o":"m 738 386 q 660 379 696 381 q 593 378 625 378 q 468 392 500 378 q 436 443 436 407 q 452 486 436 467 q 499 519 468 506 q 605 548 535 535 q 750 561 675 561 q 901 545 847 561 q 954 485 954 529 q 926 426 954 450 q 835 394 899 401 l 738 386 m 840 414 q 892 321 876 368 q 907 236 907 274 q 870 116 907 174 q 756 22 833 58 q 551 -15 678 -15 q 281 45 389 -15 q 121 216 174 106 q 68 474 68 326 q 135 754 68 632 q 324 945 201 876 q 610 1014 446 1014 q 819 966 746 1014 q 892 854 892 918 q 866 794 892 815 q 792 772 840 772 q 731 782 763 772 q 662 801 700 792 q 575 810 624 810 q 411 777 486 810 q 291 670 336 744 q 246 471 246 596 q 287 297 246 364 q 401 198 328 229 q 569 167 475 167 q 670 181 633 167 q 723 222 707 194 q 739 293 739 250 q 733 351 739 317 q 714 421 726 386 l 840 414 m 549 1274 q 628 1243 604 1274 q 653 1172 653 1213 q 623 1095 653 1122 q 539 1068 593 1068 q 460 1098 486 1068 q 433 1168 433 1128 q 465 1247 433 1221 q 549 1274 497 1274 z "},"H":{"ha":933,"x_min":92,"x_max":842,"o":"m 242 1021 q 303 994 282 1021 q 324 906 324 967 q 306 733 324 829 q 254 551 288 638 l 232 579 q 463 601 343 603 q 679 574 582 600 l 654 561 q 627 746 636 654 q 618 908 618 838 q 638 1001 618 974 q 700 1029 657 1029 q 769 998 744 1029 q 808 900 794 967 q 833 733 824 831 q 842 532 842 635 q 836 325 842 431 q 815 129 831 219 q 775 25 803 57 q 699 -7 747 -7 q 627 25 649 -7 q 606 144 606 57 q 619 321 606 229 q 656 501 632 413 l 685 458 q 465 437 579 436 q 242 458 350 438 l 244 506 q 297 319 272 415 q 321 128 321 224 q 294 20 321 51 q 219 -11 268 -11 q 153 13 178 -11 q 117 100 128 36 q 99 256 106 163 q 92 454 92 350 q 103 694 92 578 q 132 894 114 811 q 172 990 146 960 q 242 1021 199 1021 z "},"Ħ":{"ha":933,"x_min":-71,"x_max":1015,"o":"m 219 -11 q 153 13 178 -11 q 117 100 128 36 q 99 256 106 163 q 92 454 92 350 q 103 694 92 578 q 132 894 114 811 q 172 990 146 960 q 242 1021 199 1021 q 303 994 282 1021 q 324 906 324 967 q 306 733 324 829 q 254 551 288 638 l 232 579 q 463 601 343 603 q 679 574 582 600 l 654 561 q 627 746 636 654 q 618 908 618 838 q 638 1001 618 974 q 700 1029 657 1029 q 769 998 744 1029 q 808 900 794 967 q 833 733 824 831 q 842 532 842 635 q 836 325 842 431 q 815 129 831 219 q 775 25 803 57 q 699 -7 747 -7 q 627 25 649 -7 q 606 144 606 57 q 619 321 606 229 q 656 501 632 413 l 685 458 q 465 437 579 436 q 242 458 350 438 l 244 506 q 297 319 272 415 q 321 128 321 224 q 294 20 321 51 q 219 -11 268 -11 m 35 700 q -47 715 -24 700 q -71 754 -71 729 q -49 797 -71 778 q 39 824 -28 815 q 219 841 113 832 q 447 857 326 850 q 687 869 568 864 q 903 874 806 874 q 990 858 965 874 q 1015 814 1015 842 q 994 772 1015 789 q 915 747 972 754 q 760 734 850 740 q 569 722 669 728 q 368 710 468 715 q 181 703 268 706 q 35 700 94 700 z "},"I":{"ha":414,"x_min":92,"x_max":322,"o":"m 213 1035 q 269 1007 249 1035 q 300 921 290 979 q 317 764 311 861 q 322 551 322 667 q 316 360 322 451 q 299 189 310 268 q 264 76 288 108 q 200 44 240 44 q 140 69 161 44 q 110 154 118 94 q 97 296 101 208 q 92 482 92 383 q 100 729 92 618 q 122 914 108 840 q 155 1006 135 976 q 213 1035 175 1035 z "},"Ĳ":{"ha":1285,"x_min":92,"x_max":1254,"o":"m 213 1035 q 269 1007 249 1035 q 300 921 290 979 q 317 764 311 861 q 322 551 322 667 q 316 360 322 451 q 299 189 310 268 q 264 76 288 108 q 200 44 240 44 q 140 69 161 44 q 110 154 118 94 q 97 296 101 208 q 92 482 92 383 q 100 729 92 618 q 122 914 108 840 q 155 1006 135 976 q 213 1035 175 1035 m 894 825 q 774 795 829 806 q 669 785 718 785 q 600 803 625 785 q 575 857 575 821 q 596 915 575 888 q 660 965 617 943 q 790 1007 711 990 q 975 1024 869 1024 q 1099 1015 1046 1024 q 1182 993 1151 1006 q 1238 955 1222 976 q 1254 906 1254 933 q 1229 849 1254 871 q 1149 826 1204 826 q 1080 831 1115 826 q 1006 842 1044 835 l 894 825 m 990 900 q 1101 694 1061 811 q 1140 449 1140 576 q 1103 210 1140 315 q 986 45 1067 106 q 772 -15 906 -15 q 526 76 608 -15 q 444 328 444 168 q 465 460 444 406 q 518 542 485 514 q 590 571 551 571 q 645 549 626 571 q 664 489 664 528 q 653 419 664 457 q 643 344 643 381 q 676 209 643 251 q 781 167 708 167 q 916 245 876 167 q 956 460 956 324 q 935 653 956 558 q 868 846 914 747 l 990 900 z "},"Í":{"ha":418,"x_min":90,"x_max":454,"o":"m 219 58 q 163 88 183 58 q 131 186 143 118 q 110 333 119 249 q 97 501 101 417 q 92 650 92 586 q 102 865 92 788 q 135 975 113 943 q 194 1007 158 1007 q 248 974 228 1007 q 282 875 268 942 q 300 765 292 828 q 314 633 308 701 q 323 503 319 565 q 326 396 326 440 q 317 202 326 276 q 285 93 308 128 q 219 58 263 58 m 90 1057 q 119 1107 90 1079 q 196 1169 149 1135 q 285 1227 243 1203 q 360 1251 328 1251 q 408 1235 388 1251 q 442 1197 429 1219 q 454 1156 454 1175 q 428 1111 454 1129 q 351 1075 403 1093 q 267 1050 311 1061 q 184 1033 222 1039 q 121 1026 146 1026 q 99 1035 107 1026 q 90 1057 90 1044 z "},"Î":{"ha":418,"x_min":17,"x_max":401,"o":"m 219 58 q 163 88 183 58 q 131 186 143 118 q 110 333 119 249 q 97 501 101 417 q 92 650 92 586 q 102 865 92 788 q 135 975 113 943 q 194 1007 158 1007 q 248 974 228 1007 q 282 875 268 942 q 300 765 292 828 q 314 633 308 701 q 323 503 319 565 q 326 396 326 440 q 317 202 326 276 q 285 93 308 128 q 219 58 263 58 m 214 1263 q 267 1249 233 1263 q 333 1213 301 1236 q 384 1163 367 1188 q 401 1103 401 1138 q 381 1055 401 1072 q 332 1038 360 1038 q 256 1078 293 1038 q 192 1190 219 1119 l 213 1194 q 138 1069 175 1108 q 69 1031 101 1031 q 32 1044 47 1031 q 17 1079 17 1057 q 35 1140 17 1111 q 89 1199 54 1169 q 156 1246 125 1229 q 214 1263 188 1263 z "},"Ï":{"ha":418,"x_min":15,"x_max":401,"o":"m 219 58 q 163 88 183 58 q 131 186 143 118 q 110 333 119 249 q 97 501 101 417 q 92 650 92 586 q 102 865 92 788 q 135 975 113 943 q 194 1007 158 1007 q 248 974 228 1007 q 282 875 268 942 q 300 765 292 828 q 314 633 308 701 q 323 503 319 565 q 326 396 326 440 q 317 202 326 276 q 285 93 308 128 q 219 58 263 58 m 89 1042 q 33 1069 50 1042 q 15 1135 15 1097 q 41 1213 15 1186 q 113 1240 67 1240 q 167 1210 149 1240 q 185 1139 185 1181 q 161 1067 185 1092 q 89 1042 138 1042 m 325 1254 q 383 1224 365 1254 q 401 1153 401 1193 q 378 1075 401 1101 q 310 1049 354 1049 q 251 1078 271 1049 q 232 1149 232 1107 q 258 1227 232 1200 q 325 1254 283 1254 z "},"İ":{"ha":414,"x_min":92,"x_max":322,"o":"m 213 1035 q 269 1007 249 1035 q 300 921 290 979 q 317 764 311 861 q 322 551 322 667 q 316 360 322 451 q 299 189 310 268 q 264 76 288 108 q 200 44 240 44 q 140 69 161 44 q 110 154 118 94 q 97 296 101 208 q 92 482 92 383 q 100 729 92 618 q 122 914 108 840 q 155 1006 135 976 q 213 1035 175 1035 m 217 1282 q 297 1251 272 1282 q 321 1181 321 1221 q 291 1103 321 1131 q 207 1076 261 1076 q 128 1106 154 1076 q 101 1176 101 1136 q 133 1256 101 1229 q 217 1282 165 1282 z "},"Ì":{"ha":418,"x_min":-37,"x_max":326,"o":"m 219 58 q 163 88 183 58 q 131 186 143 118 q 110 333 119 249 q 97 501 101 417 q 92 650 92 586 q 102 865 92 788 q 135 975 113 943 q 194 1007 158 1007 q 248 974 228 1007 q 282 875 268 942 q 300 765 292 828 q 314 633 308 701 q 323 503 319 565 q 326 396 326 440 q 317 202 326 276 q 285 93 308 128 q 219 58 263 58 m 326 1057 q 319 1035 326 1044 q 296 1026 311 1026 q 233 1033 271 1026 q 151 1050 194 1039 q 65 1075 107 1061 q -12 1111 14 1093 q -37 1156 -37 1129 q -25 1197 -37 1175 q 9 1235 -12 1219 q 57 1251 31 1251 q 131 1227 89 1251 q 221 1169 174 1203 q 298 1107 269 1135 q 326 1057 326 1079 z "},"Ī":{"ha":414,"x_min":-57,"x_max":471,"o":"m 213 1035 q 269 1007 249 1035 q 300 921 290 979 q 317 764 311 861 q 322 551 322 667 q 316 360 322 451 q 299 189 310 268 q 264 76 288 108 q 200 44 240 44 q 140 69 161 44 q 110 154 118 94 q 97 296 101 208 q 92 482 92 383 q 100 729 92 618 q 122 914 108 840 q 155 1006 135 976 q 213 1035 175 1035 m 49 1069 q -31 1090 -6 1069 q -57 1142 -57 1110 q -34 1191 -57 1174 q 43 1222 -11 1208 q 141 1238 88 1232 q 249 1246 194 1243 q 347 1249 303 1249 q 442 1229 414 1249 q 471 1178 471 1210 q 447 1122 471 1143 q 378 1093 424 1101 q 274 1081 335 1086 q 153 1072 213 1075 q 49 1069 93 1069 z "},"Į":{"ha":414,"x_min":-17,"x_max":322,"o":"m 213 1035 q 269 1007 249 1035 q 300 921 290 979 q 317 764 311 861 q 322 551 322 667 q 316 360 322 451 q 299 189 310 268 q 264 76 288 108 q 200 44 240 44 q 140 69 161 44 q 110 154 118 94 q 97 296 101 208 q 92 482 92 383 q 100 729 92 618 q 122 914 108 840 q 155 1006 135 976 q 213 1035 175 1035 m 149 -265 q 30 -233 76 -265 q -17 -139 -17 -201 q 22 -35 -17 -89 q 147 67 60 18 l 256 69 q 134 -30 179 22 q 89 -110 89 -82 q 106 -135 89 -128 q 150 -142 122 -142 q 183 -140 165 -142 q 221 -139 200 -139 q 262 -153 249 -139 q 275 -193 275 -168 q 242 -247 275 -229 q 149 -265 210 -265 z "},"J":{"ha":871,"x_min":31,"x_max":840,"o":"m 481 825 q 360 795 415 806 q 256 785 304 785 q 186 803 211 785 q 161 857 161 821 q 182 915 161 888 q 246 965 203 943 q 376 1007 297 990 q 561 1024 456 1024 q 685 1015 632 1024 q 768 993 738 1006 q 824 955 808 976 q 840 906 840 933 q 815 849 840 871 q 735 826 790 826 q 666 831 701 826 q 592 842 631 835 l 481 825 m 576 900 q 687 694 647 811 q 726 449 726 576 q 690 210 726 315 q 572 45 653 106 q 358 -15 492 -15 q 113 76 194 -15 q 31 328 31 168 q 51 460 31 406 q 104 542 71 514 q 176 571 138 571 q 231 549 213 571 q 250 489 250 528 q 240 419 250 457 q 229 344 229 381 q 262 209 229 251 q 367 167 294 167 q 502 245 463 167 q 542 460 542 324 q 521 653 542 558 q 454 846 500 747 l 576 900 z "},"K":{"ha":865,"x_min":92,"x_max":832,"o":"m 183 -14 q 143 3 158 -14 q 118 60 128 21 q 100 199 108 104 q 92 413 92 294 q 99 662 92 540 q 122 876 107 783 q 155 967 133 938 q 215 997 176 997 q 260 981 240 997 q 290 921 279 964 q 300 799 300 878 q 297 710 300 760 q 289 601 294 661 l 294 601 q 490 845 406 754 q 640 976 575 936 q 753 1017 704 1017 q 812 992 792 1017 q 832 931 832 967 q 717 747 832 854 q 349 490 603 640 l 360 517 q 692 272 579 378 q 804 83 804 165 q 781 24 804 47 q 714 1 758 1 q 596 40 658 1 q 458 169 533 78 q 286 417 382 260 l 281 417 q 285 351 283 385 q 286 283 286 317 q 264 55 286 124 q 183 -14 242 -14 z "},"Ķ":{"ha":865,"x_min":92,"x_max":832,"o":"m 183 -14 q 143 3 158 -14 q 118 60 128 21 q 100 199 108 104 q 92 413 92 294 q 99 662 92 540 q 122 876 107 783 q 155 967 133 938 q 215 997 176 997 q 260 981 240 997 q 290 921 279 964 q 300 799 300 878 q 297 710 300 760 q 289 601 294 661 l 294 601 q 490 845 406 754 q 640 976 575 936 q 753 1017 704 1017 q 812 992 792 1017 q 832 931 832 967 q 717 747 832 854 q 349 490 603 640 l 360 517 q 692 272 579 378 q 804 83 804 165 q 781 24 804 47 q 714 1 758 1 q 596 40 658 1 q 458 169 533 78 q 286 417 382 260 l 281 417 q 285 351 283 385 q 286 283 286 317 q 264 55 286 124 q 183 -14 242 -14 m 413 -244 q 321 -221 347 -244 q 294 -153 294 -197 q 305 -104 294 -128 q 341 -65 315 -81 q 411 -50 367 -50 q 494 -77 463 -50 q 525 -164 525 -104 q 508 -235 525 -196 q 463 -306 490 -274 q 418 -346 440 -332 q 375 -360 396 -360 q 351 -353 361 -360 q 342 -335 342 -347 q 353 -297 342 -321 q 404 -231 365 -272 l 413 -244 z "},"L":{"ha":767,"x_min":92,"x_max":736,"o":"m 333 -8 q 207 14 249 -8 q 138 94 165 36 q 105 240 118 139 q 92 501 92 340 q 97 717 92 614 q 111 875 101 819 q 148 976 122 946 q 213 1007 174 1007 q 267 976 247 1007 q 296 894 288 946 q 304 779 304 842 q 292 436 304 610 q 260 117 281 263 l 242 142 q 376 215 304 185 q 516 263 447 246 q 636 279 585 279 q 712 258 688 279 q 736 199 736 238 q 702 120 736 160 q 606 51 668 81 q 524 22 571 35 q 427 0 476 8 q 333 -8 378 -8 z "},"Ĺ":{"ha":767,"x_min":92,"x_max":736,"o":"m 333 -8 q 207 14 249 -8 q 138 94 165 36 q 105 240 118 139 q 92 501 92 340 q 97 717 92 614 q 111 875 101 819 q 148 976 122 946 q 213 1007 174 1007 q 267 976 247 1007 q 296 894 288 946 q 304 779 304 842 q 292 436 304 610 q 260 117 281 263 l 242 142 q 376 215 304 185 q 516 263 447 246 q 636 279 585 279 q 712 258 688 279 q 736 199 736 238 q 702 120 736 160 q 606 51 668 81 q 524 22 571 35 q 427 0 476 8 q 333 -8 378 -8 m 239 1076 q 268 1126 239 1099 q 344 1189 297 1154 q 434 1247 392 1222 q 508 1271 476 1271 q 557 1255 536 1271 q 590 1217 578 1239 q 603 1175 603 1194 q 577 1131 603 1149 q 500 1094 551 1113 q 415 1069 460 1081 q 333 1052 371 1058 q 269 1046 294 1046 q 247 1055 256 1046 q 239 1076 239 1064 z "},"Ľ":{"ha":767,"x_min":92,"x_max":736,"o":"m 333 -8 q 207 14 249 -8 q 138 94 165 36 q 105 240 118 139 q 92 501 92 340 q 97 717 92 614 q 111 875 101 819 q 148 976 122 946 q 213 1007 174 1007 q 267 976 247 1007 q 296 894 288 946 q 304 779 304 842 q 292 436 304 610 q 260 117 281 263 l 242 142 q 376 215 304 185 q 516 263 447 246 q 636 279 585 279 q 712 258 688 279 q 736 199 736 238 q 702 120 736 160 q 606 51 668 81 q 524 22 571 35 q 427 0 476 8 q 333 -8 378 -8 m 478 742 q 460 796 461 756 q 468 892 458 836 q 486 978 478 938 q 517 1040 494 1018 q 563 1065 535 1063 q 621 1058 592 1067 q 667 1036 650 1050 q 688 991 689 1018 q 664 919 686 964 q 626 855 647 888 q 585 794 604 822 q 550 749 565 767 q 515 731 538 733 q 478 742 493 729 z "},"Ļ":{"ha":767,"x_min":92,"x_max":736,"o":"m 333 -8 q 207 14 249 -8 q 138 94 165 36 q 105 240 118 139 q 92 501 92 340 q 97 717 92 614 q 111 875 101 819 q 148 976 122 946 q 213 1007 174 1007 q 267 976 247 1007 q 296 894 288 946 q 304 779 304 842 q 292 436 304 610 q 260 117 281 263 l 242 142 q 376 215 304 185 q 516 263 447 246 q 636 279 585 279 q 712 258 688 279 q 736 199 736 238 q 702 120 736 160 q 606 51 668 81 q 524 22 571 35 q 427 0 476 8 q 333 -8 378 -8 m 360 -244 q 268 -221 294 -244 q 242 -153 242 -197 q 252 -104 242 -128 q 288 -65 263 -81 q 358 -50 314 -50 q 441 -77 410 -50 q 472 -164 472 -104 q 455 -235 472 -196 q 410 -306 438 -274 q 365 -346 388 -332 q 322 -360 343 -360 q 299 -353 308 -360 q 289 -335 289 -347 q 301 -297 289 -321 q 351 -231 313 -272 l 360 -244 z "},"Ł":{"ha":767,"x_min":-50,"x_max":736,"o":"m 81 185 q 8 144 36 147 q -35 158 -19 140 q -45 206 -50 178 q 4 282 -40 233 q 98 383 56 336 q 184 474 140 429 q 283 570 228 519 q 413 683 338 621 q 490 727 461 724 q 536 710 518 731 q 547 663 553 690 q 501 594 542 636 q 393 483 444 536 q 291 379 342 429 q 189 281 240 329 q 81 185 138 233 m 333 -8 q 207 14 249 -8 q 138 94 165 36 q 105 240 118 139 q 92 501 92 340 q 97 717 92 614 q 111 875 101 819 q 148 976 122 946 q 213 1007 174 1007 q 267 976 247 1007 q 296 894 288 946 q 304 779 304 842 q 292 436 304 610 q 260 117 281 263 l 242 142 q 376 215 304 185 q 516 263 447 246 q 636 279 585 279 q 712 258 688 279 q 736 199 736 238 q 702 120 736 160 q 606 51 668 81 q 524 22 571 35 q 427 0 476 8 q 333 -8 378 -8 z "},"M":{"ha":1022,"x_min":92,"x_max":931,"o":"m 804 -11 q 752 4 775 -11 q 717 58 729 19 q 704 164 704 96 q 708 376 704 263 q 720 605 713 489 q 735 829 728 721 l 729 829 q 625 524 681 628 q 501 421 569 421 q 424 459 460 421 q 356 588 389 497 q 285 836 324 679 l 279 836 q 288 679 283 763 q 295 511 292 596 q 301 350 299 426 q 303 214 303 274 q 294 119 303 163 q 262 51 285 76 q 199 26 239 26 q 118 70 144 26 q 92 215 92 114 q 95 355 92 275 q 104 520 99 435 q 118 685 110 606 q 136 825 126 765 q 182 959 153 919 q 260 999 211 999 q 339 963 300 999 q 419 844 378 928 q 507 613 461 760 l 513 613 q 597 853 557 763 q 675 985 638 944 q 746 1025 713 1025 q 826 984 799 1025 q 872 868 854 943 q 906 667 893 782 q 924 431 918 551 q 931 207 931 311 q 896 38 931 88 q 804 -11 861 -11 z "},"N":{"ha":953,"x_min":92,"x_max":861,"o":"m 247 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 847 746 833 882 q 861 435 861 610 q 850 206 861 300 q 808 63 839 111 q 719 14 778 14 q 640 45 681 14 q 559 138 600 76 q 474 293 518 200 q 383 510 431 386 q 282 789 335 635 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 z "},"Ń":{"ha":953,"x_min":92,"x_max":861,"o":"m 247 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 847 746 833 882 q 861 435 861 610 q 850 206 861 300 q 808 63 839 111 q 719 14 778 14 q 640 45 681 14 q 559 138 600 76 q 474 293 518 200 q 383 510 431 386 q 282 789 335 635 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 m 360 1076 q 389 1126 360 1099 q 465 1189 418 1154 q 555 1247 513 1222 q 629 1271 597 1271 q 678 1255 657 1271 q 711 1217 699 1239 q 724 1175 724 1194 q 698 1131 724 1149 q 621 1094 672 1113 q 536 1069 581 1081 q 453 1052 492 1058 q 390 1046 415 1046 q 368 1055 376 1046 q 360 1076 360 1064 z "},"Ň":{"ha":953,"x_min":92,"x_max":861,"o":"m 247 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 847 746 833 882 q 861 435 861 610 q 850 206 861 300 q 808 63 839 111 q 719 14 778 14 q 640 45 681 14 q 559 138 600 76 q 474 293 518 200 q 383 510 431 386 q 282 789 335 635 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 m 483 1064 q 418 1082 454 1064 q 342 1126 382 1100 q 274 1186 299 1157 q 249 1247 249 1215 q 264 1283 249 1269 q 301 1296 279 1296 q 386 1257 339 1296 q 482 1132 433 1218 l 461 1136 q 542 1248 496 1207 q 633 1289 589 1289 q 687 1272 665 1289 q 708 1224 708 1254 q 685 1164 708 1189 q 618 1113 661 1139 q 544 1077 582 1090 q 483 1064 506 1064 z "},"Ņ":{"ha":953,"x_min":92,"x_max":861,"o":"m 247 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 847 746 833 882 q 861 435 861 610 q 850 206 861 300 q 808 63 839 111 q 719 14 778 14 q 640 45 681 14 q 559 138 600 76 q 474 293 518 200 q 383 510 431 386 q 282 789 335 635 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 m 481 -244 q 389 -221 415 -244 q 363 -153 363 -197 q 373 -104 363 -128 q 409 -65 383 -81 q 479 -50 435 -50 q 562 -77 531 -50 q 593 -164 593 -104 q 576 -235 593 -196 q 531 -306 558 -274 q 486 -346 508 -332 q 443 -360 464 -360 q 419 -353 429 -360 q 410 -335 410 -347 q 422 -297 410 -321 q 472 -231 433 -272 l 481 -244 z "},"Ñ":{"ha":953,"x_min":92,"x_max":861,"o":"m 247 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 847 746 833 882 q 861 435 861 610 q 850 206 861 300 q 808 63 839 111 q 719 14 778 14 q 640 45 681 14 q 559 138 600 76 q 474 293 518 200 q 383 510 431 386 q 282 789 335 635 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 m 400 1256 q 485 1232 447 1256 q 558 1175 522 1208 q 574 1167 568 1167 q 583 1178 581 1168 q 617 1253 599 1229 q 669 1276 635 1276 q 721 1217 721 1276 q 706 1147 721 1186 q 658 1077 690 1107 q 574 1047 625 1047 q 488 1076 525 1047 q 411 1151 450 1104 q 394 1163 401 1164 q 382 1140 388 1161 q 350 1062 369 1086 q 293 1038 331 1038 q 251 1057 267 1038 q 235 1103 235 1076 q 256 1176 235 1142 q 315 1233 278 1211 q 400 1256 353 1256 z "},"Ŋ":{"ha":947,"x_min":92,"x_max":863,"o":"m 675 -289 q 575 -265 619 -289 q 504 -206 531 -242 q 478 -132 478 -169 q 494 -82 478 -100 q 538 -64 511 -64 q 622 -90 578 -64 q 710 -162 667 -115 q 694 -71 700 -117 q 685 19 688 -25 q 593 91 639 35 q 499 244 547 147 q 397 476 450 340 q 282 789 343 613 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 834 832 822 908 q 852 669 846 756 q 861 496 858 582 q 862 438 861 482 q 862 333 863 394 q 860 200 861 271 q 856 61 860 129 q 848 -63 853 -7 q 835 -153 843 -119 q 776 -257 817 -225 q 675 -289 736 -289 z "},"O":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 z "},"Ó":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 403 1019 q 432 1069 403 1042 q 508 1132 461 1097 q 598 1190 556 1165 q 672 1214 640 1214 q 721 1198 700 1214 q 754 1160 742 1182 q 767 1118 767 1138 q 741 1074 767 1092 q 664 1038 715 1056 q 579 1013 624 1024 q 497 995 535 1001 q 433 989 458 989 q 411 998 419 989 q 403 1019 403 1007 z "},"Ô":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 526 1225 q 587 1212 549 1225 q 661 1176 625 1199 q 728 1125 704 1150 q 751 1065 751 1100 q 730 1017 751 1035 q 676 1000 708 1000 q 585 1041 632 1000 q 504 1153 539 1082 l 525 1157 q 429 1032 476 1071 q 344 993 382 993 q 307 1006 322 993 q 292 1042 292 1019 q 317 1103 292 1074 q 385 1163 342 1132 q 461 1208 425 1190 q 526 1225 497 1225 z "},"Ö":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 357 1004 q 275 1032 301 1004 q 249 1097 249 1060 q 283 1176 249 1149 q 381 1203 318 1203 q 461 1173 435 1203 q 488 1101 488 1143 q 451 1029 488 1054 q 357 1004 414 1004 m 681 1217 q 765 1186 739 1217 q 792 1115 792 1156 q 760 1038 792 1064 q 667 1011 728 1011 q 582 1040 610 1011 q 554 1111 554 1069 q 589 1190 554 1163 q 681 1217 624 1217 z "},"Ò":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 639 1019 q 631 998 639 1007 q 608 989 624 989 q 545 995 583 989 q 463 1013 507 1001 q 378 1038 419 1024 q 301 1074 326 1056 q 275 1118 275 1092 q 288 1160 275 1138 q 322 1198 300 1182 q 369 1214 343 1214 q 444 1190 401 1214 q 533 1132 486 1165 q 610 1069 582 1097 q 639 1019 639 1042 z "},"Ő":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 621 992 q 595 1001 607 992 q 583 1026 583 1011 q 596 1072 583 1044 q 629 1135 608 1100 q 661 1183 643 1156 q 701 1232 679 1211 q 751 1253 724 1253 q 795 1242 772 1253 q 833 1213 818 1231 q 849 1179 849 1196 q 797 1107 849 1153 q 747 1065 775 1086 q 691 1027 718 1044 q 646 999 664 1010 q 634 994 640 996 q 621 992 628 992 m 354 992 q 328 1001 340 992 q 317 1025 317 1010 q 329 1072 317 1044 q 364 1133 342 1099 q 401 1191 383 1164 q 440 1235 419 1218 q 486 1251 460 1251 q 529 1240 507 1251 q 567 1213 551 1229 q 582 1179 582 1196 q 533 1106 582 1150 q 478 1063 508 1085 q 419 1024 447 1042 q 374 999 392 1007 q 363 994 368 996 q 354 992 357 992 z "},"Ō":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 363 1004 q 283 1024 308 1004 q 257 1076 257 1044 q 280 1126 257 1108 q 357 1157 303 1143 q 455 1172 401 1167 q 563 1181 508 1178 q 661 1183 617 1183 q 756 1164 728 1183 q 785 1113 785 1144 q 761 1057 785 1078 q 692 1028 738 1036 q 588 1015 649 1021 q 467 1007 526 1010 q 363 1004 407 1004 z "},"Ø":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 661 250 601 214 q 754 352 721 286 q 788 506 788 418 q 754 659 788 593 q 661 761 721 725 q 522 797 601 797 q 385 761 444 797 q 291 659 325 725 q 257 506 257 593 q 291 352 257 418 q 385 250 325 286 q 522 214 444 214 m 213 71 q 290 221 243 132 q 392 412 336 310 q 505 617 447 514 q 615 810 563 719 q 707 964 668 900 q 764 1028 739 1015 q 811 1029 789 1040 q 836 989 833 1019 q 811 901 839 958 q 721 724 771 819 q 616 528 671 628 q 507 335 561 429 q 404 160 453 242 q 319 22 356 79 q 256 -49 282 -37 q 210 -51 231 -61 q 187 -12 188 -40 q 213 71 186 15 z "},"Õ":{"ha":1040,"x_min":68,"x_max":972,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 753 907 649 969 q 915 733 857 844 q 972 472 972 621 q 914 226 972 329 q 751 66 856 122 q 504 10 646 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 443 1199 q 528 1175 490 1199 q 601 1118 565 1151 q 617 1110 611 1110 q 626 1121 624 1111 q 660 1196 642 1172 q 713 1219 678 1219 q 764 1160 764 1219 q 749 1090 764 1129 q 701 1020 733 1050 q 617 990 668 990 q 531 1019 568 990 q 454 1094 493 1047 q 438 1106 444 1107 q 425 1083 431 1104 q 393 1005 413 1029 q 336 981 374 981 q 294 1000 310 981 q 278 1046 278 1019 q 299 1119 278 1085 q 358 1176 321 1154 q 443 1199 396 1199 z "},"Œ":{"ha":1476,"x_min":68,"x_max":1440,"o":"m 504 10 q 275 64 374 10 q 122 219 176 118 q 68 457 68 319 q 123 725 68 610 q 277 905 178 840 q 508 969 376 969 q 731 907 640 969 q 869 733 822 844 q 917 472 917 621 q 810 134 917 258 q 504 10 703 10 m 522 214 q 654 250 597 214 q 742 352 711 286 q 774 506 774 418 q 742 659 774 593 q 654 761 711 725 q 522 797 597 797 q 392 761 449 797 q 303 659 335 725 q 271 506 271 593 q 303 352 271 418 q 392 250 335 286 q 522 214 449 214 m 1229 1022 q 1394 996 1349 1022 q 1440 919 1440 969 q 1387 840 1440 867 q 1218 813 1333 813 q 1090 815 1161 813 q 942 822 1018 817 l 964 839 q 971 701 976 775 q 940 561 965 628 l 933 571 q 1026 585 972 579 q 1136 596 1079 592 q 1240 600 1193 600 q 1368 576 1331 600 q 1406 519 1406 553 q 1363 456 1406 482 q 1217 429 1319 429 q 1065 435 1140 429 q 919 450 989 440 l 936 467 q 959 363 951 422 q 967 245 967 304 q 956 142 967 186 l 940 150 q 1046 179 986 167 q 1167 199 1106 192 q 1283 206 1229 206 q 1399 189 1361 206 q 1438 132 1438 172 q 1416 78 1438 101 q 1343 36 1394 56 q 1263 15 1310 25 q 1165 -2 1217 4 q 1061 -8 1113 -8 q 913 15 972 -8 q 828 86 854 39 q 788 221 801 138 q 774 449 774 304 q 783 669 774 582 q 810 810 793 756 q 850 897 828 865 q 943 972 885 944 q 1075 1010 1001 999 q 1229 1022 1149 1022 z "},"P":{"ha":833,"x_min":92,"x_max":799,"o":"m 476 999 q 720 914 642 999 q 799 692 799 829 q 755 528 799 597 q 636 420 711 458 q 467 382 561 382 q 373 392 422 382 q 271 429 324 401 l 278 447 q 297 362 289 413 q 309 258 304 311 q 314 160 314 204 q 287 34 314 78 q 207 -10 260 -10 q 137 18 163 -10 q 101 110 111 46 q 92 281 92 174 q 110 631 92 486 q 175 860 129 776 q 287 961 211 924 q 476 999 363 999 m 450 546 q 585 590 533 546 q 638 719 638 635 q 601 812 638 775 q 486 849 564 849 q 388 823 429 849 q 324 752 346 797 q 303 649 303 707 q 338 570 303 594 q 450 546 374 546 z "},"Þ":{"ha":833,"x_min":92,"x_max":799,"o":"m 207 -10 q 115 56 139 -10 q 92 281 92 121 q 92 375 92 313 q 92 515 92 438 q 92 668 92 593 q 92 800 92 743 q 92 878 92 857 q 119 1003 92 960 q 199 1047 146 1047 q 241 1033 224 1047 q 269 993 258 1019 q 282 929 279 967 q 283 890 283 911 q 280 844 282 868 q 272 796 278 821 q 387 847 338 833 q 488 860 436 860 q 722 775 644 860 q 799 553 799 690 q 755 389 799 458 q 636 281 711 319 q 467 243 561 243 q 379 251 425 243 q 285 283 333 260 q 307 218 300 249 q 314 160 314 188 q 287 34 314 78 q 207 -10 260 -10 m 450 407 q 585 451 533 407 q 638 581 638 496 q 601 673 638 636 q 486 710 564 710 q 388 684 429 710 q 324 613 346 658 q 303 510 303 568 q 338 431 303 456 q 450 407 374 407 z "},"Q":{"ha":1083,"x_min":68,"x_max":1094,"o":"m 513 10 q 275 65 375 10 q 122 224 175 121 q 68 468 68 326 q 127 751 68 629 q 294 940 186 872 q 547 1008 401 1008 q 738 970 653 1008 q 884 866 824 932 q 977 713 944 800 q 1010 528 1010 626 q 985 348 1010 431 q 914 213 960 265 l 840 140 q 704 44 789 78 q 513 10 619 10 m 1018 -25 q 919 19 971 -25 q 813 147 868 64 l 897 228 q 1042 142 990 189 q 1094 47 1094 94 q 1074 -3 1094 19 q 1018 -25 1054 -25 m 744 238 q 617 325 664 275 q 571 414 571 375 q 590 465 571 447 q 639 482 610 482 q 729 437 688 482 q 808 308 771 392 l 744 238 m 550 207 q 656 224 607 207 q 747 275 706 240 l 789 310 q 814 392 804 346 q 824 492 824 438 q 747 738 824 651 q 543 825 669 825 q 403 785 464 825 q 310 675 343 746 q 276 508 276 604 q 310 349 276 417 q 406 244 344 281 q 550 207 468 207 z "},"R":{"ha":899,"x_min":92,"x_max":853,"o":"m 208 -10 q 138 19 163 -10 q 102 112 113 47 q 92 285 92 176 q 115 645 92 494 q 196 879 139 796 q 337 993 251 960 q 522 1026 422 1026 q 772 947 692 1026 q 853 740 853 868 q 793 554 853 626 q 633 453 733 482 q 408 439 532 425 l 408 433 q 744 245 642 333 q 846 93 846 157 q 820 31 846 54 q 749 7 794 7 q 624 44 693 7 q 470 169 554 82 q 285 406 386 257 l 279 406 q 291 330 286 375 q 299 238 296 285 q 303 149 303 190 q 281 31 303 72 q 208 -10 260 -10 m 450 565 q 558 585 510 565 q 636 642 607 606 q 665 729 665 679 q 621 833 665 794 q 488 872 576 872 q 386 847 428 872 q 323 779 344 821 q 301 689 301 738 q 338 600 301 635 q 450 565 374 565 z "},"Ŕ":{"ha":899,"x_min":92,"x_max":853,"o":"m 208 -10 q 138 19 163 -10 q 102 112 113 47 q 92 285 92 176 q 115 645 92 494 q 196 879 139 796 q 337 993 251 960 q 522 1026 422 1026 q 772 947 692 1026 q 853 740 853 868 q 793 554 853 626 q 633 453 733 482 q 408 439 532 425 l 408 433 q 744 245 642 333 q 846 93 846 157 q 820 31 846 54 q 749 7 794 7 q 624 44 693 7 q 470 169 554 82 q 285 406 386 257 l 279 406 q 291 330 286 375 q 299 238 296 285 q 303 149 303 190 q 281 31 303 72 q 208 -10 260 -10 m 450 565 q 558 585 510 565 q 636 642 607 606 q 665 729 665 679 q 621 833 665 794 q 488 872 576 872 q 386 847 428 872 q 323 779 344 821 q 301 689 301 738 q 338 600 301 635 q 450 565 374 565 m 325 1076 q 354 1126 325 1099 q 431 1189 383 1154 q 520 1247 478 1222 q 594 1271 563 1271 q 643 1255 622 1271 q 676 1217 664 1239 q 689 1175 689 1194 q 663 1131 689 1149 q 586 1094 638 1113 q 501 1069 546 1081 q 419 1052 457 1058 q 356 1046 381 1046 q 333 1055 342 1046 q 325 1076 325 1064 z "},"Ř":{"ha":899,"x_min":92,"x_max":853,"o":"m 208 -10 q 138 19 163 -10 q 102 112 113 47 q 92 285 92 176 q 115 645 92 494 q 196 879 139 796 q 337 993 251 960 q 522 1026 422 1026 q 772 947 692 1026 q 853 740 853 868 q 793 554 853 626 q 633 453 733 482 q 408 439 532 425 l 408 433 q 744 245 642 333 q 846 93 846 157 q 820 31 846 54 q 749 7 794 7 q 624 44 693 7 q 470 169 554 82 q 285 406 386 257 l 279 406 q 291 330 286 375 q 299 238 296 285 q 303 149 303 190 q 281 31 303 72 q 208 -10 260 -10 m 450 565 q 558 585 510 565 q 636 642 607 606 q 665 729 665 679 q 621 833 665 794 q 488 872 576 872 q 386 847 428 872 q 323 779 344 821 q 301 689 301 738 q 338 600 301 635 q 450 565 374 565 m 449 1064 q 383 1082 419 1064 q 307 1126 347 1100 q 239 1186 264 1157 q 214 1247 214 1215 q 229 1283 214 1269 q 267 1296 244 1296 q 351 1257 304 1296 q 447 1132 399 1218 l 426 1136 q 508 1248 461 1207 q 599 1289 554 1289 q 652 1272 631 1289 q 674 1224 674 1254 q 650 1164 674 1189 q 583 1113 626 1139 q 509 1077 547 1090 q 449 1064 471 1064 z "},"Ŗ":{"ha":899,"x_min":92,"x_max":853,"o":"m 208 -10 q 138 19 163 -10 q 102 112 113 47 q 92 285 92 176 q 115 645 92 494 q 196 879 139 796 q 337 993 251 960 q 522 1026 422 1026 q 772 947 692 1026 q 853 740 853 868 q 793 554 853 626 q 633 453 733 482 q 408 439 532 425 l 408 433 q 744 245 642 333 q 846 93 846 157 q 820 31 846 54 q 749 7 794 7 q 624 44 693 7 q 470 169 554 82 q 285 406 386 257 l 279 406 q 291 330 286 375 q 299 238 296 285 q 303 149 303 190 q 281 31 303 72 q 208 -10 260 -10 m 450 565 q 558 585 510 565 q 636 642 607 606 q 665 729 665 679 q 621 833 665 794 q 488 872 576 872 q 386 847 428 872 q 323 779 344 821 q 301 689 301 738 q 338 600 301 635 q 450 565 374 565 m 446 -244 q 354 -221 381 -244 q 328 -153 328 -197 q 338 -104 328 -128 q 374 -65 349 -81 q 444 -50 400 -50 q 527 -77 496 -50 q 558 -164 558 -104 q 541 -235 558 -196 q 496 -306 524 -274 q 451 -346 474 -332 q 408 -360 429 -360 q 385 -353 394 -360 q 375 -335 375 -347 q 387 -297 375 -321 q 438 -231 399 -272 l 446 -244 z "},"S":{"ha":799,"x_min":35,"x_max":764,"o":"m 365 -4 q 263 1 319 -4 q 155 23 207 7 q 69 67 103 39 q 35 142 35 96 q 65 213 35 189 q 163 236 94 236 q 269 224 210 236 q 382 211 328 211 q 501 236 463 211 q 539 304 539 261 q 524 351 539 331 q 467 393 510 372 q 338 439 424 414 q 178 498 239 465 q 89 576 117 531 q 61 685 61 622 q 88 817 61 761 q 161 913 115 874 q 264 976 207 953 q 380 1011 321 1000 q 493 1022 439 1022 q 688 985 613 1022 q 764 885 764 947 q 735 813 764 840 q 649 785 707 785 q 589 792 624 785 q 513 806 554 799 q 421 813 471 813 q 290 786 336 813 q 244 701 244 760 q 258 656 244 676 q 314 613 271 635 q 446 561 357 590 q 618 488 556 528 q 707 399 681 449 q 733 286 733 349 q 687 134 733 200 q 558 32 640 68 q 365 -4 475 -4 z "},"Ś":{"ha":799,"x_min":35,"x_max":764,"o":"m 365 -4 q 263 1 319 -4 q 155 23 207 7 q 69 67 103 39 q 35 142 35 96 q 65 213 35 189 q 163 236 94 236 q 269 224 210 236 q 382 211 328 211 q 501 236 463 211 q 539 304 539 261 q 524 351 539 331 q 467 393 510 372 q 338 439 424 414 q 178 498 239 465 q 89 576 117 531 q 61 685 61 622 q 88 817 61 761 q 161 913 115 874 q 264 976 207 953 q 380 1011 321 1000 q 493 1022 439 1022 q 688 985 613 1022 q 764 885 764 947 q 735 813 764 840 q 649 785 707 785 q 589 792 624 785 q 513 806 554 799 q 421 813 471 813 q 290 786 336 813 q 244 701 244 760 q 258 656 244 676 q 314 613 271 635 q 446 561 357 590 q 618 488 556 528 q 707 399 681 449 q 733 286 733 349 q 687 134 733 200 q 558 32 640 68 q 365 -4 475 -4 m 282 1076 q 311 1126 282 1099 q 388 1189 340 1154 q 477 1247 435 1222 q 551 1271 519 1271 q 600 1255 579 1271 q 633 1217 621 1239 q 646 1175 646 1194 q 620 1131 646 1149 q 543 1094 594 1113 q 458 1069 503 1081 q 376 1052 414 1058 q 313 1046 338 1046 q 290 1055 299 1046 q 282 1076 282 1064 z "},"Š":{"ha":799,"x_min":35,"x_max":764,"o":"m 365 -4 q 263 1 319 -4 q 155 23 207 7 q 69 67 103 39 q 35 142 35 96 q 65 213 35 189 q 163 236 94 236 q 269 224 210 236 q 382 211 328 211 q 501 236 463 211 q 539 304 539 261 q 524 351 539 331 q 467 393 510 372 q 338 439 424 414 q 178 498 239 465 q 89 576 117 531 q 61 685 61 622 q 88 817 61 761 q 161 913 115 874 q 264 976 207 953 q 380 1011 321 1000 q 493 1022 439 1022 q 688 985 613 1022 q 764 885 764 947 q 735 813 764 840 q 649 785 707 785 q 589 792 624 785 q 513 806 554 799 q 421 813 471 813 q 290 786 336 813 q 244 701 244 760 q 258 656 244 676 q 314 613 271 635 q 446 561 357 590 q 618 488 556 528 q 707 399 681 449 q 733 286 733 349 q 687 134 733 200 q 558 32 640 68 q 365 -4 475 -4 m 406 1064 q 340 1082 376 1064 q 264 1126 304 1100 q 196 1186 221 1157 q 171 1247 171 1215 q 186 1283 171 1269 q 224 1296 201 1296 q 308 1257 261 1296 q 404 1132 356 1218 l 383 1136 q 465 1248 418 1207 q 556 1289 511 1289 q 609 1272 588 1289 q 631 1224 631 1254 q 607 1164 631 1189 q 540 1113 583 1139 q 466 1077 504 1090 q 406 1064 428 1064 z "},"Ş":{"ha":799,"x_min":35,"x_max":764,"o":"m 365 -4 q 263 1 319 -4 q 155 23 207 7 q 69 67 103 39 q 35 142 35 96 q 65 213 35 189 q 163 236 94 236 q 269 224 210 236 q 382 211 328 211 q 501 236 463 211 q 539 304 539 261 q 524 351 539 331 q 467 393 510 372 q 338 439 424 414 q 178 498 239 465 q 89 576 117 531 q 61 685 61 622 q 88 817 61 761 q 161 913 115 874 q 264 976 207 953 q 380 1011 321 1000 q 493 1022 439 1022 q 688 985 613 1022 q 764 885 764 947 q 735 813 764 840 q 649 785 707 785 q 589 792 624 785 q 513 806 554 799 q 421 813 471 813 q 290 786 336 813 q 244 701 244 760 q 258 656 244 676 q 314 613 271 635 q 446 561 357 590 q 618 488 556 528 q 707 399 681 449 q 733 286 733 349 q 687 134 733 200 q 558 32 640 68 q 365 -4 475 -4 m 353 -289 q 263 -232 263 -289 q 285 -188 263 -201 q 336 -169 307 -175 q 390 -162 361 -165 q 429 -156 418 -158 q 461 -144 449 -151 q 474 -122 474 -136 q 457 -99 474 -107 q 394 -85 440 -90 q 322 -64 349 -76 q 296 -25 296 -51 q 317 7 296 -1 q 368 15 338 15 q 468 -2 418 15 q 551 -53 518 -19 q 583 -135 583 -86 q 553 -211 583 -176 q 472 -267 524 -246 q 353 -289 419 -289 z "},"Ș":{"ha":799,"x_min":35,"x_max":764,"o":"m 365 -4 q 263 1 319 -4 q 155 23 207 7 q 69 67 103 39 q 35 142 35 96 q 65 213 35 189 q 163 236 94 236 q 269 224 210 236 q 382 211 328 211 q 501 236 463 211 q 539 304 539 261 q 524 351 539 331 q 467 393 510 372 q 338 439 424 414 q 178 498 239 465 q 89 576 117 531 q 61 685 61 622 q 88 817 61 761 q 161 913 115 874 q 264 976 207 953 q 380 1011 321 1000 q 493 1022 439 1022 q 688 985 613 1022 q 764 885 764 947 q 735 813 764 840 q 649 785 707 785 q 589 792 624 785 q 513 806 554 799 q 421 813 471 813 q 290 786 336 813 q 244 701 244 760 q 258 656 244 676 q 314 613 271 635 q 446 561 357 590 q 618 488 556 528 q 707 399 681 449 q 733 286 733 349 q 687 134 733 200 q 558 32 640 68 q 365 -4 475 -4 m 403 -244 q 311 -221 338 -244 q 285 -153 285 -197 q 295 -104 285 -128 q 331 -65 306 -81 q 401 -50 357 -50 q 484 -77 453 -50 q 515 -164 515 -104 q 498 -235 515 -196 q 453 -306 481 -274 q 408 -346 431 -332 q 365 -360 386 -360 q 342 -353 351 -360 q 332 -335 332 -347 q 344 -297 332 -321 q 394 -231 356 -272 l 403 -244 z "},"ẞ":{"ha":886,"x_min":85,"x_max":831,"o":"m 199 -14 q 116 24 147 -14 q 85 132 85 61 q 101 359 85 242 q 136 614 117 476 q 157 754 147 685 q 175 888 167 824 q 197 947 181 925 q 244 981 214 969 q 315 994 274 992 q 366 998 340 997 q 426 999 392 999 q 511 1000 461 1000 q 666 971 599 1000 q 772 885 733 942 q 810 744 810 828 q 759 612 810 672 q 615 507 708 551 q 776 411 722 469 q 831 263 831 353 q 792 123 831 183 q 683 28 753 63 q 519 -6 613 -6 q 419 19 451 -6 q 388 78 388 43 q 422 139 388 121 q 517 168 457 157 q 617 208 588 181 q 647 279 647 236 q 621 340 647 315 q 533 389 594 364 q 469 425 489 407 q 450 481 450 443 q 469 531 450 508 q 518 576 489 554 q 576 622 547 597 q 625 675 606 646 q 644 742 644 704 q 603 824 644 793 q 492 854 563 854 q 397 840 440 854 q 329 796 353 825 q 318 652 322 731 q 311 492 314 574 q 307 336 308 411 q 305 203 306 261 q 304 114 304 146 q 278 24 304 61 q 199 -14 251 -14 z "},"T":{"ha":829,"x_min":31,"x_max":799,"o":"m 432 1021 q 605 1010 535 1021 q 718 985 675 1000 q 781 943 764 967 q 799 889 799 919 q 765 817 799 844 q 661 789 731 789 q 560 799 614 789 q 449 828 506 808 l 467 847 q 489 688 479 775 q 506 510 499 600 q 517 342 514 421 q 521 207 521 263 q 494 44 521 99 q 401 -10 467 -10 q 315 40 342 -10 q 289 190 289 89 q 295 343 289 257 q 313 521 301 429 q 337 697 324 613 q 364 843 350 781 l 389 828 q 317 806 358 817 q 233 790 275 796 q 160 783 192 783 q 60 806 89 783 q 31 868 31 829 q 53 930 31 904 q 121 975 75 956 q 251 1009 174 997 q 432 1021 328 1021 z "},"Ť":{"ha":829,"x_min":31,"x_max":799,"o":"m 432 1021 q 605 1010 535 1021 q 718 985 675 1000 q 781 943 764 967 q 799 889 799 919 q 765 817 799 844 q 661 789 731 789 q 560 799 614 789 q 449 828 506 808 l 467 847 q 489 688 479 775 q 506 510 499 600 q 517 342 514 421 q 521 207 521 263 q 494 44 521 99 q 401 -10 467 -10 q 315 40 342 -10 q 289 190 289 89 q 295 343 289 257 q 313 521 301 429 q 337 697 324 613 q 364 843 350 781 l 389 828 q 317 806 358 817 q 233 790 275 796 q 160 783 192 783 q 60 806 89 783 q 31 868 31 829 q 53 930 31 904 q 121 975 75 956 q 251 1009 174 997 q 432 1021 328 1021 m 421 1064 q 356 1082 392 1064 q 279 1126 319 1100 q 211 1186 236 1157 q 186 1247 186 1215 q 201 1283 186 1269 q 239 1296 217 1296 q 324 1257 276 1296 q 419 1132 371 1218 l 399 1136 q 480 1248 433 1207 q 571 1289 526 1289 q 624 1272 603 1289 q 646 1224 646 1254 q 622 1164 646 1189 q 556 1113 599 1139 q 481 1077 519 1090 q 421 1064 443 1064 z "},"Ț":{"ha":829,"x_min":31,"x_max":799,"o":"m 432 1021 q 605 1010 535 1021 q 718 985 675 1000 q 781 943 764 967 q 799 889 799 919 q 765 817 799 844 q 661 789 731 789 q 560 799 614 789 q 449 828 506 808 l 467 847 q 489 688 479 775 q 506 510 499 600 q 517 342 514 421 q 521 207 521 263 q 494 44 521 99 q 401 -10 467 -10 q 315 40 342 -10 q 289 190 289 89 q 295 343 289 257 q 313 521 301 429 q 337 697 324 613 q 364 843 350 781 l 389 828 q 317 806 358 817 q 233 790 275 796 q 160 783 192 783 q 60 806 89 783 q 31 868 31 829 q 53 930 31 904 q 121 975 75 956 q 251 1009 174 997 q 432 1021 328 1021 m 418 -244 q 326 -221 353 -244 q 300 -153 300 -197 q 310 -104 300 -128 q 347 -65 321 -81 q 417 -50 372 -50 q 499 -77 468 -50 q 531 -164 531 -104 q 513 -235 531 -196 q 468 -306 496 -274 q 424 -346 446 -332 q 381 -360 401 -360 q 357 -353 367 -360 q 347 -335 347 -347 q 359 -297 347 -321 q 410 -231 371 -272 l 418 -244 z "},"U":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 z "},"Ú":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 326 1063 q 356 1113 326 1085 q 432 1175 385 1140 q 522 1233 479 1208 q 596 1257 564 1257 q 644 1241 624 1257 q 678 1203 665 1225 q 690 1161 690 1181 q 665 1117 690 1135 q 588 1081 639 1099 q 503 1056 547 1067 q 420 1038 458 1044 q 357 1032 382 1032 q 335 1041 343 1032 q 326 1063 326 1050 z "},"Ŭ":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 444 1033 q 295 1085 349 1033 q 242 1206 242 1138 q 296 1263 242 1263 q 360 1210 349 1263 q 386 1156 368 1174 q 443 1139 404 1139 q 497 1154 479 1139 q 522 1201 514 1169 q 547 1257 532 1238 q 593 1276 563 1276 q 634 1260 621 1276 q 647 1213 647 1243 q 624 1124 647 1165 q 555 1058 600 1083 q 444 1033 510 1033 z "},"Û":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 450 1268 q 510 1255 472 1268 q 585 1219 549 1242 q 651 1168 628 1193 q 675 1108 675 1143 q 653 1060 675 1078 q 600 1043 632 1043 q 509 1084 556 1043 q 428 1196 463 1125 l 449 1200 q 353 1075 400 1114 q 268 1036 306 1036 q 231 1049 246 1036 q 215 1085 215 1063 q 240 1146 215 1117 q 308 1206 265 1175 q 385 1251 349 1233 q 450 1268 421 1268 z "},"Ü":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 281 1047 q 199 1075 225 1047 q 172 1140 172 1103 q 207 1219 172 1192 q 304 1246 242 1246 q 385 1216 358 1246 q 411 1144 411 1186 q 374 1072 411 1097 q 281 1047 338 1047 m 604 1260 q 689 1229 663 1260 q 715 1158 715 1199 q 683 1081 715 1107 q 590 1054 651 1054 q 506 1083 533 1054 q 478 1154 478 1113 q 513 1233 478 1206 q 604 1260 547 1260 z "},"Ù":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 563 1063 q 555 1041 563 1050 q 532 1032 547 1032 q 469 1038 507 1032 q 387 1056 431 1044 q 301 1081 343 1067 q 224 1117 250 1099 q 199 1161 199 1135 q 211 1203 199 1181 q 245 1241 224 1225 q 293 1257 267 1257 q 367 1233 325 1257 q 457 1175 410 1208 q 534 1113 506 1140 q 563 1063 563 1085 z "},"Ű":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 544 1035 q 519 1044 531 1035 q 507 1069 507 1054 q 519 1115 507 1088 q 553 1178 532 1143 q 585 1226 567 1199 q 625 1275 603 1254 q 675 1296 647 1296 q 719 1285 696 1296 q 757 1256 742 1274 q 772 1222 772 1239 q 721 1150 772 1196 q 670 1108 699 1129 q 615 1070 642 1088 q 569 1042 588 1053 q 558 1037 564 1039 q 544 1035 551 1035 m 278 1035 q 252 1044 264 1035 q 240 1068 240 1053 q 253 1115 240 1088 q 288 1176 265 1142 q 325 1234 307 1207 q 363 1278 343 1261 q 410 1294 383 1294 q 453 1283 431 1294 q 490 1256 475 1272 q 506 1222 506 1239 q 457 1149 506 1193 q 401 1106 432 1128 q 343 1067 371 1085 q 297 1042 315 1050 q 286 1037 292 1039 q 278 1035 281 1035 z "},"Ū":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 286 1047 q 206 1067 232 1047 q 181 1119 181 1088 q 203 1169 181 1151 q 281 1200 226 1186 q 378 1215 325 1210 q 486 1224 432 1221 q 585 1226 540 1226 q 680 1207 651 1226 q 708 1156 708 1188 q 685 1100 708 1121 q 615 1071 661 1079 q 511 1058 572 1064 q 390 1050 450 1053 q 286 1047 331 1047 z "},"Ų":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 539 -293 q 420 -261 467 -293 q 374 -167 374 -229 q 412 -63 374 -117 q 538 39 450 -10 l 646 42 q 524 -58 569 -6 q 479 -137 479 -110 q 496 -162 479 -156 q 540 -169 513 -169 q 573 -168 556 -169 q 611 -167 590 -167 q 652 -181 639 -167 q 665 -221 665 -196 q 633 -275 665 -257 q 539 -293 600 -293 z "},"Ů":{"ha":890,"x_min":92,"x_max":799,"o":"m 426 -11 q 170 89 249 -11 q 92 419 92 189 q 97 578 92 497 q 110 735 101 660 q 132 867 119 811 q 172 959 144 925 q 253 993 199 993 q 317 968 294 993 q 340 892 340 943 q 331 807 340 860 q 309 692 321 754 q 288 566 297 629 q 278 449 278 503 q 322 255 278 310 q 449 200 365 200 q 569 260 529 200 q 608 449 608 319 q 603 551 608 489 q 590 682 597 614 q 578 808 583 750 q 572 894 572 865 q 657 1015 572 1015 q 732 985 706 1015 q 768 896 758 956 q 785 769 778 843 q 795 614 792 694 q 799 463 799 533 q 760 190 799 294 q 640 38 722 86 q 426 -11 558 -11 m 442 1029 q 310 1059 363 1029 q 257 1151 257 1089 q 309 1256 257 1215 q 458 1297 361 1297 q 589 1259 547 1297 q 631 1168 631 1221 q 580 1068 631 1107 q 442 1029 529 1029 m 433 1104 q 510 1119 479 1104 q 542 1163 542 1133 q 518 1209 542 1192 q 444 1226 494 1226 q 369 1206 393 1226 q 346 1161 346 1185 q 370 1120 346 1136 q 433 1104 394 1104 z "},"V":{"ha":879,"x_min":42,"x_max":838,"o":"m 744 1026 q 815 983 793 1026 q 838 854 838 940 q 824 708 838 794 q 783 524 810 621 q 717 332 756 426 q 631 160 679 238 q 527 37 583 83 q 407 -10 471 -10 q 294 33 344 -10 q 202 148 243 76 q 131 308 161 219 q 81 488 101 396 q 51 662 61 579 q 42 803 42 744 q 67 952 42 906 q 146 999 92 999 q 222 951 199 999 q 258 790 246 903 q 292 585 271 689 q 346 377 314 481 q 419 171 378 274 l 425 171 q 491 329 460 246 q 549 499 522 413 q 596 670 576 586 q 628 828 615 754 q 669 978 646 929 q 744 1026 692 1026 z "},"W":{"ha":1115,"x_min":92,"x_max":1024,"o":"m 92 757 q 122 934 92 881 q 214 988 151 988 q 276 964 254 988 q 308 901 299 940 q 317 811 317 861 q 314 636 317 738 q 306 428 311 535 q 294 232 301 322 l 300 232 q 381 533 340 410 q 464 720 422 656 q 549 785 506 785 q 639 718 596 785 q 724 526 682 651 q 811 228 767 401 l 817 228 q 809 432 813 326 q 803 641 806 538 q 801 833 801 744 q 814 951 801 910 q 849 1008 826 992 q 900 1025 871 1025 q 992 959 960 1025 q 1024 765 1024 893 q 1016 551 1024 661 q 993 338 1008 442 q 956 146 978 235 q 908 31 938 72 q 829 -11 878 -11 q 755 31 792 -11 q 683 149 718 72 q 617 331 649 226 q 558 563 586 436 l 553 563 q 494 335 525 436 q 428 162 463 233 q 355 53 394 90 q 271 15 315 15 q 193 56 221 15 q 147 189 165 96 q 126 320 136 246 q 109 474 117 394 q 97 628 101 554 q 92 757 92 701 z "},"Ẃ":{"ha":1115,"x_min":92,"x_max":1024,"o":"m 92 757 q 122 934 92 881 q 214 988 151 988 q 276 964 254 988 q 308 901 299 940 q 317 811 317 861 q 314 636 317 738 q 306 428 311 535 q 294 232 301 322 l 300 232 q 381 533 340 410 q 464 720 422 656 q 549 785 506 785 q 639 718 596 785 q 724 526 682 651 q 811 228 767 401 l 817 228 q 809 432 813 326 q 803 641 806 538 q 801 833 801 744 q 814 951 801 910 q 849 1008 826 992 q 900 1025 871 1025 q 992 959 960 1025 q 1024 765 1024 893 q 1016 551 1024 661 q 993 338 1008 442 q 956 146 978 235 q 908 31 938 72 q 829 -11 878 -11 q 755 31 792 -11 q 683 149 718 72 q 617 331 649 226 q 558 563 586 436 l 553 563 q 494 335 525 436 q 428 162 463 233 q 355 53 394 90 q 271 15 315 15 q 193 56 221 15 q 147 189 165 96 q 126 320 136 246 q 109 474 117 394 q 97 628 101 554 q 92 757 92 701 m 440 1076 q 469 1126 440 1099 q 546 1189 499 1154 q 635 1247 593 1222 q 710 1271 678 1271 q 758 1255 738 1271 q 792 1217 779 1239 q 804 1175 804 1194 q 778 1131 804 1149 q 701 1094 753 1113 q 617 1069 661 1081 q 534 1052 572 1058 q 471 1046 496 1046 q 449 1055 457 1046 q 440 1076 440 1064 z "},"Ŵ":{"ha":1115,"x_min":92,"x_max":1024,"o":"m 92 757 q 122 934 92 881 q 214 988 151 988 q 276 964 254 988 q 308 901 299 940 q 317 811 317 861 q 314 636 317 738 q 306 428 311 535 q 294 232 301 322 l 300 232 q 381 533 340 410 q 464 720 422 656 q 549 785 506 785 q 639 718 596 785 q 724 526 682 651 q 811 228 767 401 l 817 228 q 809 432 813 326 q 803 641 806 538 q 801 833 801 744 q 814 951 801 910 q 849 1008 826 992 q 900 1025 871 1025 q 992 959 960 1025 q 1024 765 1024 893 q 1016 551 1024 661 q 993 338 1008 442 q 956 146 978 235 q 908 31 938 72 q 829 -11 878 -11 q 755 31 792 -11 q 683 149 718 72 q 617 331 649 226 q 558 563 586 436 l 553 563 q 494 335 525 436 q 428 162 463 233 q 355 53 394 90 q 271 15 315 15 q 193 56 221 15 q 147 189 165 96 q 126 320 136 246 q 109 474 117 394 q 97 628 101 554 q 92 757 92 701 m 564 1282 q 624 1269 586 1282 q 699 1233 663 1256 q 765 1182 742 1207 q 789 1122 789 1157 q 767 1074 789 1092 q 714 1057 746 1057 q 623 1098 669 1057 q 542 1210 576 1139 l 563 1214 q 467 1089 514 1128 q 382 1050 419 1050 q 344 1063 360 1050 q 329 1099 329 1076 q 354 1160 329 1131 q 422 1219 379 1189 q 499 1265 463 1247 q 564 1282 535 1282 z "},"Ẅ":{"ha":1115,"x_min":92,"x_max":1024,"o":"m 92 757 q 122 934 92 881 q 214 988 151 988 q 276 964 254 988 q 308 901 299 940 q 317 811 317 861 q 314 636 317 738 q 306 428 311 535 q 294 232 301 322 l 300 232 q 381 533 340 410 q 464 720 422 656 q 549 785 506 785 q 639 718 596 785 q 724 526 682 651 q 811 228 767 401 l 817 228 q 809 432 813 326 q 803 641 806 538 q 801 833 801 744 q 814 951 801 910 q 849 1008 826 992 q 900 1025 871 1025 q 992 959 960 1025 q 1024 765 1024 893 q 1016 551 1024 661 q 993 338 1008 442 q 956 146 978 235 q 908 31 938 72 q 829 -11 878 -11 q 755 31 792 -11 q 683 149 718 72 q 617 331 649 226 q 558 563 586 436 l 553 563 q 494 335 525 436 q 428 162 463 233 q 355 53 394 90 q 271 15 315 15 q 193 56 221 15 q 147 189 165 96 q 126 320 136 246 q 109 474 117 394 q 97 628 101 554 q 92 757 92 701 m 394 1061 q 313 1089 339 1061 q 286 1154 286 1117 q 321 1233 286 1206 q 418 1260 356 1260 q 499 1230 472 1260 q 525 1158 525 1200 q 488 1086 525 1111 q 394 1061 451 1061 m 718 1274 q 803 1243 776 1274 q 829 1172 829 1213 q 797 1094 829 1121 q 704 1068 765 1068 q 619 1097 647 1068 q 592 1168 592 1126 q 626 1247 592 1219 q 718 1274 661 1274 z "},"Ẁ":{"ha":1115,"x_min":92,"x_max":1024,"o":"m 92 757 q 122 934 92 881 q 214 988 151 988 q 276 964 254 988 q 308 901 299 940 q 317 811 317 861 q 314 636 317 738 q 306 428 311 535 q 294 232 301 322 l 300 232 q 381 533 340 410 q 464 720 422 656 q 549 785 506 785 q 639 718 596 785 q 724 526 682 651 q 811 228 767 401 l 817 228 q 809 432 813 326 q 803 641 806 538 q 801 833 801 744 q 814 951 801 910 q 849 1008 826 992 q 900 1025 871 1025 q 992 959 960 1025 q 1024 765 1024 893 q 1016 551 1024 661 q 993 338 1008 442 q 956 146 978 235 q 908 31 938 72 q 829 -11 878 -11 q 755 31 792 -11 q 683 149 718 72 q 617 331 649 226 q 558 563 586 436 l 553 563 q 494 335 525 436 q 428 162 463 233 q 355 53 394 90 q 271 15 315 15 q 193 56 221 15 q 147 189 165 96 q 126 320 136 246 q 109 474 117 394 q 97 628 101 554 q 92 757 92 701 m 676 1076 q 669 1055 676 1064 q 646 1046 661 1046 q 583 1052 621 1046 q 501 1069 544 1058 q 415 1094 457 1081 q 338 1131 364 1113 q 313 1175 313 1149 q 325 1217 313 1194 q 359 1255 338 1239 q 407 1271 381 1271 q 481 1247 439 1271 q 571 1189 524 1222 q 648 1126 619 1154 q 676 1076 676 1099 z "},"X":{"ha":990,"x_min":36,"x_max":954,"o":"m 121 -10 q 59 16 82 -10 q 36 79 36 42 q 78 199 36 131 q 203 347 121 268 q 406 506 286 425 l 406 511 q 169 712 246 618 q 92 878 92 806 q 104 928 92 907 q 137 962 117 950 q 178 974 157 974 q 341 875 256 974 q 499 589 426 776 l 504 589 q 637 840 574 744 q 758 981 700 936 q 871 1025 817 1025 q 913 1011 894 1025 q 943 974 932 997 q 954 919 954 950 q 858 736 954 839 q 586 524 761 633 l 586 518 q 854 293 768 396 q 940 113 940 190 q 925 56 940 79 q 887 19 910 32 q 840 6 864 6 q 662 117 750 6 q 492 438 574 228 l 486 438 q 351 181 415 279 q 229 36 286 82 q 121 -10 172 -10 z "},"Y":{"ha":892,"x_min":31,"x_max":861,"o":"m 400 -12 q 319 24 350 -12 q 288 157 288 61 q 297 297 288 225 q 322 435 307 369 q 356 544 338 500 l 364 506 q 161 674 233 600 q 60 803 89 747 q 31 901 31 860 q 45 960 31 936 q 83 997 60 983 q 136 1010 107 1010 q 272 908 203 1010 q 415 607 340 807 l 421 607 q 548 842 483 750 q 672 980 613 935 q 776 1025 732 1025 q 839 998 817 1025 q 861 928 861 971 q 813 791 861 865 q 674 642 764 717 q 457 504 583 567 l 469 531 q 502 410 488 475 q 525 283 517 346 q 533 169 533 219 q 497 34 533 81 q 400 -12 460 -12 z "},"Ý":{"ha":892,"x_min":31,"x_max":861,"o":"m 400 -12 q 319 24 350 -12 q 288 157 288 61 q 297 297 288 225 q 322 435 307 369 q 356 544 338 500 l 364 506 q 161 674 233 600 q 60 803 89 747 q 31 901 31 860 q 45 960 31 936 q 83 997 60 983 q 136 1010 107 1010 q 272 908 203 1010 q 415 607 340 807 l 421 607 q 548 842 483 750 q 672 980 613 935 q 776 1025 732 1025 q 839 998 817 1025 q 861 928 861 971 q 813 791 861 865 q 674 642 764 717 q 457 504 583 567 l 469 531 q 502 410 488 475 q 525 283 517 346 q 533 169 533 219 q 497 34 533 81 q 400 -12 460 -12 m 329 1068 q 358 1118 329 1090 q 435 1181 388 1146 q 524 1238 482 1214 q 599 1263 567 1263 q 647 1247 626 1263 q 681 1208 668 1231 q 693 1167 693 1186 q 667 1122 693 1140 q 590 1086 642 1104 q 506 1061 550 1072 q 423 1044 461 1050 q 360 1038 385 1038 q 338 1047 346 1038 q 329 1068 329 1056 z "},"Ŷ":{"ha":892,"x_min":31,"x_max":861,"o":"m 400 -12 q 319 24 350 -12 q 288 157 288 61 q 297 297 288 225 q 322 435 307 369 q 356 544 338 500 l 364 506 q 161 674 233 600 q 60 803 89 747 q 31 901 31 860 q 45 960 31 936 q 83 997 60 983 q 136 1010 107 1010 q 272 908 203 1010 q 415 607 340 807 l 421 607 q 548 842 483 750 q 672 980 613 935 q 776 1025 732 1025 q 839 998 817 1025 q 861 928 861 971 q 813 791 861 865 q 674 642 764 717 q 457 504 583 567 l 469 531 q 502 410 488 475 q 525 283 517 346 q 533 169 533 219 q 497 34 533 81 q 400 -12 460 -12 m 453 1274 q 513 1260 475 1274 q 588 1225 551 1247 q 654 1174 631 1199 q 678 1114 678 1149 q 656 1066 678 1083 q 603 1049 635 1049 q 512 1090 558 1049 q 431 1201 465 1131 l 451 1206 q 356 1081 403 1119 q 271 1042 308 1042 q 233 1055 249 1042 q 218 1090 218 1068 q 243 1151 218 1122 q 311 1211 268 1181 q 388 1256 351 1239 q 453 1274 424 1274 z "},"Ÿ":{"ha":892,"x_min":31,"x_max":861,"o":"m 400 -12 q 319 24 350 -12 q 288 157 288 61 q 297 297 288 225 q 322 435 307 369 q 356 544 338 500 l 364 506 q 161 674 233 600 q 60 803 89 747 q 31 901 31 860 q 45 960 31 936 q 83 997 60 983 q 136 1010 107 1010 q 272 908 203 1010 q 415 607 340 807 l 421 607 q 548 842 483 750 q 672 980 613 935 q 776 1025 732 1025 q 839 998 817 1025 q 861 928 861 971 q 813 791 861 865 q 674 642 764 717 q 457 504 583 567 l 469 531 q 502 410 488 475 q 525 283 517 346 q 533 169 533 219 q 497 34 533 81 q 400 -12 460 -12 m 283 1053 q 201 1081 228 1053 q 175 1146 175 1108 q 210 1224 175 1197 q 307 1251 244 1251 q 388 1222 361 1251 q 414 1150 414 1192 q 377 1078 414 1103 q 283 1053 340 1053 m 607 1265 q 692 1235 665 1265 q 718 1164 718 1204 q 686 1086 718 1113 q 593 1060 654 1060 q 508 1089 536 1060 q 481 1160 481 1118 q 515 1238 481 1211 q 607 1265 550 1265 z "},"Ỳ":{"ha":892,"x_min":31,"x_max":861,"o":"m 400 -12 q 319 24 350 -12 q 288 157 288 61 q 297 297 288 225 q 322 435 307 369 q 356 544 338 500 l 364 506 q 161 674 233 600 q 60 803 89 747 q 31 901 31 860 q 45 960 31 936 q 83 997 60 983 q 136 1010 107 1010 q 272 908 203 1010 q 415 607 340 807 l 421 607 q 548 842 483 750 q 672 980 613 935 q 776 1025 732 1025 q 839 998 817 1025 q 861 928 861 971 q 813 791 861 865 q 674 642 764 717 q 457 504 583 567 l 469 531 q 502 410 488 475 q 525 283 517 346 q 533 169 533 219 q 497 34 533 81 q 400 -12 460 -12 m 565 1068 q 558 1047 565 1056 q 535 1038 550 1038 q 472 1044 510 1038 q 390 1061 433 1050 q 304 1086 346 1072 q 227 1122 253 1104 q 201 1167 201 1140 q 214 1208 201 1186 q 248 1247 226 1231 q 296 1263 269 1263 q 370 1238 328 1263 q 460 1181 413 1214 q 537 1118 508 1146 q 565 1068 565 1090 z "},"Z":{"ha":824,"x_min":36,"x_max":788,"o":"m 36 131 q 93 277 36 185 q 278 508 150 369 q 618 835 406 646 l 618 839 q 463 807 547 822 q 299 783 378 792 q 169 774 221 774 q 69 796 101 774 q 38 861 38 818 q 54 920 38 894 q 110 964 71 946 q 281 1008 171 992 q 514 1024 392 1024 q 669 1010 608 1024 q 758 963 729 996 q 788 874 788 931 q 748 762 788 832 q 631 599 708 692 q 443 394 554 506 q 190 156 332 282 l 190 151 q 337 201 254 179 q 503 235 419 222 q 654 249 588 249 q 748 228 719 249 q 776 158 776 207 q 735 74 776 106 q 618 26 694 42 q 487 6 554 14 q 356 -6 419 -3 q 242 -10 293 -10 q 89 23 142 -10 q 36 131 36 56 z "},"Ź":{"ha":824,"x_min":36,"x_max":788,"o":"m 36 131 q 93 277 36 185 q 278 508 150 369 q 618 835 406 646 l 618 839 q 463 807 547 822 q 299 783 378 792 q 169 774 221 774 q 69 796 101 774 q 38 861 38 818 q 54 920 38 894 q 110 964 71 946 q 281 1008 171 992 q 514 1024 392 1024 q 669 1010 608 1024 q 758 963 729 996 q 788 874 788 931 q 748 762 788 832 q 631 599 708 692 q 443 394 554 506 q 190 156 332 282 l 190 151 q 337 201 254 179 q 503 235 419 222 q 654 249 588 249 q 748 228 719 249 q 776 158 776 207 q 735 74 776 106 q 618 26 694 42 q 487 6 554 14 q 356 -6 419 -3 q 242 -10 293 -10 q 89 23 142 -10 q 36 131 36 56 m 297 1076 q 326 1126 297 1099 q 403 1189 356 1154 q 492 1247 450 1222 q 567 1271 535 1271 q 615 1255 594 1271 q 649 1217 636 1239 q 661 1175 661 1194 q 635 1131 661 1149 q 558 1094 610 1113 q 474 1069 518 1081 q 391 1052 429 1058 q 328 1046 353 1046 q 306 1055 314 1046 q 297 1076 297 1064 z "},"Ž":{"ha":824,"x_min":36,"x_max":788,"o":"m 36 131 q 93 277 36 185 q 278 508 150 369 q 618 835 406 646 l 618 839 q 463 807 547 822 q 299 783 378 792 q 169 774 221 774 q 69 796 101 774 q 38 861 38 818 q 54 920 38 894 q 110 964 71 946 q 281 1008 171 992 q 514 1024 392 1024 q 669 1010 608 1024 q 758 963 729 996 q 788 874 788 931 q 748 762 788 832 q 631 599 708 692 q 443 394 554 506 q 190 156 332 282 l 190 151 q 337 201 254 179 q 503 235 419 222 q 654 249 588 249 q 748 228 719 249 q 776 158 776 207 q 735 74 776 106 q 618 26 694 42 q 487 6 554 14 q 356 -6 419 -3 q 242 -10 293 -10 q 89 23 142 -10 q 36 131 36 56 m 421 1064 q 356 1082 392 1064 q 279 1126 319 1100 q 211 1186 236 1157 q 186 1247 186 1215 q 201 1283 186 1269 q 239 1296 217 1296 q 324 1257 276 1296 q 419 1132 371 1218 l 399 1136 q 480 1248 433 1207 q 571 1289 526 1289 q 624 1272 603 1289 q 646 1224 646 1254 q 622 1164 646 1189 q 556 1113 599 1139 q 481 1077 519 1090 q 421 1064 443 1064 z "},"Ż":{"ha":824,"x_min":36,"x_max":788,"o":"m 36 131 q 93 277 36 185 q 278 508 150 369 q 618 835 406 646 l 618 839 q 463 807 547 822 q 299 783 378 792 q 169 774 221 774 q 69 796 101 774 q 38 861 38 818 q 54 920 38 894 q 110 964 71 946 q 281 1008 171 992 q 514 1024 392 1024 q 669 1010 608 1024 q 758 963 729 996 q 788 874 788 931 q 748 762 788 832 q 631 599 708 692 q 443 394 554 506 q 190 156 332 282 l 190 151 q 337 201 254 179 q 503 235 419 222 q 654 249 588 249 q 748 228 719 249 q 776 158 776 207 q 735 74 776 106 q 618 26 694 42 q 487 6 554 14 q 356 -6 419 -3 q 242 -10 293 -10 q 89 23 142 -10 q 36 131 36 56 m 425 1274 q 505 1243 481 1274 q 529 1172 529 1213 q 499 1095 529 1122 q 415 1068 469 1068 q 336 1098 363 1068 q 310 1168 310 1128 q 342 1247 310 1221 q 425 1274 374 1274 z "},"a":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 z "},"á":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 265 932 q 294 982 265 954 q 371 1044 324 1010 q 460 1102 418 1078 q 535 1126 503 1126 q 583 1110 563 1126 q 617 1072 604 1094 q 629 1031 629 1050 q 603 986 629 1004 q 526 950 578 968 q 442 925 486 936 q 359 908 397 914 q 296 901 321 901 q 274 910 282 901 q 265 932 265 919 z "},"ă":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 383 903 q 234 955 288 903 q 181 1075 181 1007 q 235 1132 181 1132 q 299 1079 288 1132 q 325 1026 307 1043 q 382 1008 343 1008 q 435 1024 418 1008 q 461 1071 453 1039 q 486 1126 471 1107 q 532 1146 501 1146 q 573 1129 560 1146 q 586 1082 586 1113 q 563 994 586 1035 q 494 928 539 953 q 383 903 449 903 z "},"ǎ":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 389 919 q 324 938 360 919 q 247 982 288 956 q 179 1042 204 1013 q 154 1103 154 1071 q 169 1138 154 1125 q 207 1151 185 1151 q 292 1113 244 1151 q 388 988 339 1074 l 367 992 q 448 1103 401 1063 q 539 1144 494 1144 q 592 1127 571 1144 q 614 1079 614 1110 q 590 1019 614 1044 q 524 968 567 994 q 449 933 488 946 q 389 919 411 919 z "},"â":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 389 1138 q 449 1124 411 1138 q 524 1089 488 1111 q 590 1038 567 1063 q 614 978 614 1013 q 592 930 614 947 q 539 913 571 913 q 448 953 494 913 q 367 1065 401 994 l 388 1069 q 292 944 339 983 q 207 906 244 906 q 169 919 185 906 q 154 954 154 932 q 179 1015 154 986 q 247 1075 204 1044 q 324 1120 288 1103 q 389 1138 360 1138 z "},"ä":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 219 917 q 138 944 164 917 q 111 1010 111 972 q 146 1088 111 1061 q 243 1115 181 1115 q 324 1085 297 1115 q 350 1014 350 1056 q 313 942 350 967 q 219 917 276 917 m 543 1129 q 628 1099 601 1129 q 654 1028 654 1068 q 622 950 654 976 q 529 924 590 924 q 444 953 472 924 q 417 1024 417 982 q 451 1102 417 1075 q 543 1129 486 1129 z "},"à":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 501 932 q 494 910 501 919 q 471 901 486 901 q 408 908 446 901 q 326 925 369 914 q 240 950 282 936 q 163 986 189 968 q 138 1031 138 1004 q 150 1072 138 1050 q 184 1110 163 1094 q 232 1126 206 1126 q 306 1102 264 1126 q 396 1044 349 1078 q 473 982 444 1010 q 501 932 501 954 z "},"ā":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 225 917 q 145 937 171 917 q 119 989 119 957 q 142 1038 119 1021 q 219 1069 165 1056 q 317 1085 264 1079 q 425 1093 371 1090 q 524 1096 479 1096 q 619 1076 590 1096 q 647 1025 647 1057 q 624 969 647 990 q 554 940 600 949 q 450 928 511 933 q 329 919 389 922 q 225 917 269 917 z "},"ą":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 656 -293 q 537 -261 583 -293 q 490 -167 490 -229 q 528 -63 490 -117 q 654 39 567 -10 l 763 42 q 641 -58 686 -6 q 596 -137 596 -110 q 613 -162 596 -156 q 657 -169 629 -169 q 690 -168 672 -169 q 728 -167 707 -167 q 769 -181 756 -167 q 782 -221 782 -196 q 749 -275 782 -257 q 656 -293 717 -293 z "},"å":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 381 899 q 249 928 301 899 q 196 1021 196 958 q 248 1126 196 1085 q 397 1167 300 1167 q 528 1128 486 1167 q 569 1038 569 1090 q 519 938 569 976 q 381 899 468 899 m 372 974 q 449 988 418 974 q 481 1032 481 1003 q 457 1078 481 1061 q 383 1096 433 1096 q 308 1075 332 1096 q 285 1031 285 1054 q 309 990 285 1006 q 372 974 333 974 z "},"ã":{"ha":869,"x_min":35,"x_max":785,"o":"m 692 -14 q 627 23 644 -14 q 607 140 610 60 l 621 133 q 326 -18 543 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 103 769 56 725 q 231 842 151 814 q 403 869 310 869 q 596 815 515 869 q 718 657 676 761 q 769 458 754 568 q 785 224 785 349 q 775 78 785 129 q 745 6 765 26 q 692 -14 725 -14 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 306 1111 q 390 1088 353 1111 q 464 1031 428 1064 q 480 1023 474 1022 q 489 1033 486 1024 q 522 1108 504 1085 q 575 1132 540 1132 q 626 1072 626 1132 q 611 1002 626 1042 q 563 933 596 963 q 479 903 531 903 q 393 931 431 903 q 317 1007 356 960 q 300 1018 307 1019 q 288 996 293 1017 q 256 917 275 942 q 199 893 236 893 q 156 913 172 893 q 140 958 140 932 q 162 1032 140 997 q 221 1089 183 1067 q 306 1111 258 1111 z "},"æ":{"ha":1375,"x_min":35,"x_max":1338,"o":"m 1001 -11 q 756 35 849 -11 q 624 167 664 81 q 583 372 583 253 q 636 630 583 524 q 782 793 689 736 q 993 850 875 850 q 1211 781 1142 850 q 1281 601 1281 713 q 1238 448 1281 513 q 1119 349 1194 383 q 944 314 1043 314 q 829 329 885 314 q 729 371 774 344 l 763 432 q 758 365 758 399 q 819 226 758 268 q 993 183 881 183 q 1120 199 1072 183 q 1201 228 1168 214 q 1265 243 1235 243 q 1301 233 1285 243 q 1327 203 1317 222 q 1338 156 1338 183 q 1299 76 1338 114 q 1185 13 1260 38 q 1001 -11 1111 -11 m 385 142 q 478 155 431 142 q 557 194 525 168 q 589 260 589 221 q 562 315 589 293 q 491 347 535 336 q 397 358 447 358 q 269 329 313 358 q 225 251 225 300 q 266 170 225 199 q 385 142 307 142 m 326 -18 q 163 17 228 -18 q 66 112 97 53 q 35 240 35 171 q 118 430 35 360 q 339 500 201 500 q 496 474 429 500 q 610 400 563 447 l 586 403 q 526 603 576 543 q 382 664 475 664 q 282 647 328 664 q 198 613 236 631 q 126 596 160 596 q 74 618 93 596 q 56 675 56 640 q 101 769 56 725 q 224 842 147 814 q 389 869 300 869 q 582 815 501 869 q 704 657 663 761 l 663 196 q 326 -18 575 -18 m 921 443 q 1059 485 1007 443 q 1111 588 1111 526 q 1078 667 1111 636 q 976 699 1046 699 q 874 674 919 699 q 802 611 828 650 q 776 526 776 572 q 815 465 776 486 q 921 443 853 443 z "},"b":{"ha":864,"x_min":85,"x_max":808,"o":"m 190 -14 q 141 7 160 -14 q 111 67 122 28 q 92 216 100 124 q 85 414 85 308 q 88 549 85 474 q 95 701 90 624 q 106 844 100 778 q 119 953 113 911 q 152 1049 131 1014 q 221 1085 174 1085 q 292 1048 269 1085 q 314 957 314 1011 q 305 813 314 896 q 278 643 296 729 l 250 610 q 300 717 265 668 q 388 794 335 765 q 510 822 440 822 q 727 726 646 822 q 808 425 808 629 q 766 186 808 282 q 651 42 724 90 q 485 -6 578 -6 q 334 46 397 -6 q 253 194 271 97 l 272 179 q 245 33 267 79 q 190 -14 224 -14 m 444 156 q 567 218 514 156 q 619 414 619 281 q 578 594 619 525 q 442 664 538 664 q 317 602 364 664 q 269 415 269 540 q 317 228 269 301 q 444 156 364 156 z "},"c":{"ha":769,"x_min":56,"x_max":763,"o":"m 426 -15 q 145 85 235 -15 q 56 363 56 185 q 109 606 56 500 q 263 773 163 713 q 504 833 364 833 q 697 792 631 833 q 763 688 763 751 q 738 626 763 649 q 667 603 714 603 q 613 611 640 603 q 554 628 586 619 q 478 636 522 636 q 305 575 363 636 q 247 399 247 514 q 303 240 247 289 q 454 190 358 190 q 537 201 501 190 q 603 222 572 211 q 667 232 635 232 q 719 212 699 232 q 740 154 740 192 q 706 72 740 111 q 601 9 671 33 q 426 -15 532 -15 z "},"ć":{"ha":769,"x_min":56,"x_max":763,"o":"m 426 -15 q 145 85 235 -15 q 56 363 56 185 q 109 606 56 500 q 263 773 163 713 q 504 833 364 833 q 697 792 631 833 q 763 688 763 751 q 738 626 763 649 q 667 603 714 603 q 613 611 640 603 q 554 628 586 619 q 478 636 522 636 q 305 575 363 636 q 247 399 247 514 q 303 240 247 289 q 454 190 358 190 q 537 201 501 190 q 603 222 572 211 q 667 232 635 232 q 719 212 699 232 q 740 154 740 192 q 706 72 740 111 q 601 9 671 33 q 426 -15 532 -15 m 328 924 q 357 974 328 946 q 433 1036 386 1001 q 523 1094 481 1069 q 597 1118 565 1118 q 646 1102 625 1118 q 679 1064 667 1086 q 692 1022 692 1042 q 666 978 692 996 q 589 942 640 960 q 504 917 549 928 q 422 899 460 906 q 358 893 383 893 q 336 902 344 893 q 328 924 328 911 z "},"č":{"ha":769,"x_min":56,"x_max":763,"o":"m 426 -15 q 145 85 235 -15 q 56 363 56 185 q 109 606 56 500 q 263 773 163 713 q 504 833 364 833 q 697 792 631 833 q 763 688 763 751 q 738 626 763 649 q 667 603 714 603 q 613 611 640 603 q 554 628 586 619 q 478 636 522 636 q 305 575 363 636 q 247 399 247 514 q 303 240 247 289 q 454 190 358 190 q 537 201 501 190 q 603 222 572 211 q 667 232 635 232 q 719 212 699 232 q 740 154 740 192 q 706 72 740 111 q 601 9 671 33 q 426 -15 532 -15 m 451 911 q 386 929 422 911 q 310 974 350 947 q 242 1033 267 1004 q 217 1094 217 1063 q 232 1130 217 1117 q 269 1143 247 1143 q 354 1104 307 1143 q 450 979 401 1065 l 429 983 q 510 1095 464 1054 q 601 1136 557 1136 q 655 1119 633 1136 q 676 1071 676 1101 q 653 1011 676 1036 q 586 960 629 986 q 512 924 550 938 q 451 911 474 911 z "},"ç":{"ha":769,"x_min":56,"x_max":763,"o":"m 426 -15 q 145 85 235 -15 q 56 363 56 185 q 109 606 56 500 q 263 773 163 713 q 504 833 364 833 q 697 792 631 833 q 763 688 763 751 q 738 626 763 649 q 667 603 714 603 q 613 611 640 603 q 554 628 586 619 q 478 636 522 636 q 305 575 363 636 q 247 399 247 514 q 303 240 247 289 q 454 190 358 190 q 537 201 501 190 q 603 222 572 211 q 667 232 635 232 q 719 212 699 232 q 740 154 740 192 q 706 72 740 111 q 601 9 671 33 q 426 -15 532 -15 m 329 -289 q 239 -232 239 -289 q 261 -188 239 -201 q 313 -169 283 -175 q 366 -162 338 -165 q 406 -156 394 -158 q 438 -144 425 -151 q 450 -122 450 -136 q 433 -99 450 -107 q 371 -85 417 -90 q 299 -64 325 -76 q 272 -25 272 -51 q 293 7 272 -1 q 344 15 314 15 q 444 -2 394 15 q 527 -53 494 -19 q 560 -135 560 -86 q 530 -211 560 -176 q 448 -267 500 -246 q 329 -289 396 -289 z "},"ċ":{"ha":769,"x_min":56,"x_max":763,"o":"m 426 -15 q 145 85 235 -15 q 56 363 56 185 q 109 606 56 500 q 263 773 163 713 q 504 833 364 833 q 697 792 631 833 q 763 688 763 751 q 738 626 763 649 q 667 603 714 603 q 613 611 640 603 q 554 628 586 619 q 478 636 522 636 q 305 575 363 636 q 247 399 247 514 q 303 240 247 289 q 454 190 358 190 q 537 201 501 190 q 603 222 572 211 q 667 232 635 232 q 719 212 699 232 q 740 154 740 192 q 706 72 740 111 q 601 9 671 33 q 426 -15 532 -15 m 456 1121 q 535 1090 511 1121 q 560 1019 560 1060 q 530 942 560 969 q 446 915 500 915 q 367 945 393 915 q 340 1015 340 975 q 372 1094 340 1068 q 456 1121 404 1121 z "},"d":{"ha":871,"x_min":56,"x_max":786,"o":"m 344 -19 q 132 83 208 -19 q 56 394 56 185 q 131 699 56 603 q 349 796 207 796 q 490 763 429 796 q 597 668 550 729 l 586 663 q 561 783 574 719 q 541 905 549 847 q 533 996 533 963 q 549 1069 533 1043 q 597 1094 564 1094 q 674 1055 644 1094 q 722 933 703 1015 q 754 759 740 860 q 777 549 768 658 q 786 340 786 440 q 772 124 786 201 q 731 17 757 47 q 671 -14 706 -14 q 613 29 628 -14 q 600 169 597 72 l 621 169 q 512 32 583 83 q 344 -19 440 -19 m 418 153 q 510 178 468 153 q 578 258 553 204 q 604 396 604 313 q 556 570 604 503 q 415 638 507 638 q 298 578 343 638 q 253 397 253 518 q 298 222 253 290 q 418 153 343 153 z "},"ð":{"ha":842,"x_min":56,"x_max":786,"o":"m 424 -19 q 151 69 247 -19 q 56 339 56 157 q 100 535 56 458 q 221 648 144 611 q 390 685 297 685 q 531 655 471 685 q 639 571 592 625 l 618 571 q 519 735 578 651 q 396 890 461 819 q 323 976 349 943 q 297 1049 297 1010 q 315 1101 297 1081 q 372 1121 333 1121 q 456 1094 413 1121 q 553 1001 500 1067 q 672 823 619 922 q 756 615 725 724 q 786 396 786 506 q 737 163 786 256 q 606 26 688 71 q 424 -19 524 -19 m 418 153 q 510 173 468 153 q 578 235 553 193 q 604 340 604 276 q 556 474 604 422 q 415 526 507 526 q 298 481 343 526 q 253 342 253 435 q 298 206 253 258 q 418 153 343 153 m 178 864 q 265 914 213 885 q 376 974 317 943 q 490 1033 435 1006 q 583 1078 544 1060 q 689 1064 661 1110 q 694 1017 704 1042 q 639 965 683 992 q 509 892 582 931 q 365 818 436 853 q 243 763 294 783 q 173 749 197 744 q 135 775 149 754 q 131 819 122 797 q 178 864 140 842 z "},"ď":{"ha":871,"x_min":56,"x_max":1061,"o":"m 344 -19 q 132 83 208 -19 q 56 394 56 185 q 131 699 56 603 q 349 796 207 796 q 490 763 429 796 q 597 668 550 729 l 586 663 q 561 783 574 719 q 541 905 549 847 q 533 996 533 963 q 549 1069 533 1043 q 597 1094 564 1094 q 674 1055 644 1094 q 722 933 703 1015 q 754 759 740 860 q 777 549 768 658 q 786 340 786 440 q 772 124 786 201 q 731 17 757 47 q 671 -14 706 -14 q 613 29 628 -14 q 600 169 597 72 l 621 169 q 512 32 583 83 q 344 -19 440 -19 m 418 153 q 510 178 468 153 q 578 258 553 204 q 604 396 604 313 q 556 570 604 503 q 415 638 507 638 q 298 578 343 638 q 253 397 253 518 q 298 222 253 290 q 418 153 343 153 m 850 839 q 832 893 833 853 q 840 989 831 933 q 858 1075 850 1035 q 889 1138 867 1115 q 935 1162 907 1160 q 993 1156 964 1164 q 1039 1133 1022 1147 q 1060 1088 1061 1115 q 1036 1017 1058 1061 q 998 952 1019 985 q 957 892 976 919 q 922 846 938 864 q 888 828 910 831 q 850 839 865 826 z "},"đ":{"ha":890,"x_min":56,"x_max":904,"o":"m 344 -19 q 132 83 208 -19 q 56 394 56 185 q 131 699 56 603 q 349 796 207 796 q 490 763 429 796 q 597 668 550 729 l 586 663 q 561 783 574 719 q 541 905 549 847 q 533 996 533 963 q 549 1069 533 1043 q 597 1094 564 1094 q 674 1055 644 1094 q 722 933 703 1015 q 754 759 740 860 q 777 549 768 658 q 786 340 786 440 q 772 124 786 201 q 731 17 757 47 q 671 -14 706 -14 q 613 29 628 -14 q 600 169 597 72 l 621 169 q 512 32 583 83 q 344 -19 440 -19 m 418 153 q 510 178 468 153 q 578 258 553 204 q 604 396 604 313 q 556 570 604 503 q 415 638 507 638 q 298 578 343 638 q 253 397 253 518 q 298 222 253 290 q 418 153 343 153 m 239 850 q 169 865 190 850 q 149 906 149 879 q 168 948 149 931 q 242 975 188 965 q 361 988 292 982 q 509 1000 431 994 q 664 1009 588 1006 q 804 1013 740 1013 q 882 997 860 1013 q 904 953 904 981 q 884 908 904 926 q 815 883 864 890 q 684 872 761 878 q 524 860 607 865 q 365 853 440 856 q 239 850 289 850 z "},"e":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 z "},"é":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 353 913 q 382 963 353 935 q 458 1025 411 990 q 548 1083 506 1058 q 622 1107 590 1107 q 671 1091 650 1107 q 704 1053 692 1075 q 717 1011 717 1031 q 691 967 717 985 q 614 931 665 949 q 529 906 574 917 q 447 888 485 894 q 383 882 408 882 q 361 891 369 882 q 353 913 353 900 z "},"ě":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 476 900 q 411 918 447 900 q 335 963 375 936 q 267 1022 292 993 q 242 1083 242 1051 q 257 1119 242 1106 q 294 1132 272 1132 q 379 1093 332 1132 q 475 968 426 1054 l 454 972 q 535 1084 489 1043 q 626 1125 582 1125 q 680 1108 658 1125 q 701 1060 701 1090 q 678 1000 701 1025 q 611 949 654 975 q 537 913 575 926 q 476 900 499 900 z "},"ê":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 476 1118 q 537 1105 499 1118 q 611 1069 575 1092 q 678 1018 654 1043 q 701 958 701 993 q 680 910 701 928 q 626 893 658 893 q 535 934 582 893 q 454 1046 489 975 l 475 1050 q 379 925 426 964 q 294 886 332 886 q 257 899 272 886 q 242 935 242 913 q 267 996 242 967 q 335 1056 292 1025 q 411 1101 375 1083 q 476 1118 447 1118 z "},"ë":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 307 897 q 225 925 251 897 q 199 990 199 953 q 233 1069 199 1042 q 331 1096 268 1096 q 411 1066 385 1096 q 438 994 438 1036 q 401 922 438 947 q 307 897 364 897 m 631 1110 q 715 1079 689 1110 q 742 1008 742 1049 q 710 931 742 957 q 617 904 678 904 q 532 933 560 904 q 504 1004 504 963 q 539 1083 504 1056 q 631 1110 574 1110 z "},"ė":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 481 1110 q 560 1079 536 1110 q 585 1008 585 1049 q 555 931 585 958 q 471 904 525 904 q 392 934 418 904 q 365 1004 365 964 q 397 1083 365 1057 q 481 1110 429 1110 z "},"è":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 589 913 q 581 891 589 900 q 558 882 574 882 q 495 888 533 882 q 413 906 457 894 q 328 931 369 917 q 251 967 276 949 q 225 1011 225 985 q 238 1053 225 1031 q 272 1091 250 1075 q 319 1107 293 1107 q 394 1083 351 1107 q 483 1025 436 1058 q 560 963 532 990 q 589 913 589 935 z "},"ē":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 313 897 q 233 917 258 897 q 207 969 207 938 q 230 1019 207 1001 q 307 1050 253 1036 q 405 1065 351 1060 q 513 1074 458 1071 q 611 1076 567 1076 q 706 1057 678 1076 q 735 1006 735 1038 q 711 950 735 971 q 642 921 688 929 q 538 908 599 914 q 417 900 476 903 q 313 897 357 897 z "},"ę":{"ha":875,"x_min":56,"x_max":838,"o":"m 474 -11 q 228 35 319 -11 q 96 167 136 81 q 56 372 56 253 q 112 630 56 524 q 267 793 168 736 q 493 850 367 850 q 711 781 642 850 q 781 601 781 713 q 734 448 781 513 q 606 349 688 383 q 417 314 524 314 q 301 329 357 314 q 201 371 246 344 l 235 432 q 231 365 231 399 q 292 226 231 268 q 465 183 353 183 q 606 199 553 183 q 694 228 658 214 q 765 243 731 243 q 801 233 785 243 q 827 203 817 222 q 838 156 838 183 q 796 76 838 114 q 673 13 754 38 q 474 -11 592 -11 m 393 443 q 551 485 492 443 q 611 588 611 526 q 578 667 611 636 q 476 699 546 699 q 359 674 411 699 q 278 611 307 650 q 249 526 249 572 q 287 465 249 486 q 393 443 325 443 m 632 -293 q 513 -261 560 -293 q 467 -167 467 -229 q 505 -63 467 -117 q 631 39 543 -10 l 739 42 q 617 -58 663 -6 q 572 -137 572 -110 q 589 -162 572 -156 q 633 -169 606 -169 q 666 -168 649 -169 q 704 -167 683 -167 q 745 -181 732 -167 q 758 -221 758 -196 q 726 -275 758 -257 q 632 -293 693 -293 z "},"f":{"ha":740,"x_min":28,"x_max":713,"o":"m 325 781 l 310 781 q 297 899 297 842 q 351 1058 297 1000 q 532 1117 404 1117 q 644 1092 610 1117 q 678 1019 678 1068 q 576 922 678 931 q 497 903 525 917 q 455 859 468 889 q 438 775 442 829 l 413 778 q 492 797 447 790 q 579 804 536 804 q 676 782 639 804 q 713 707 713 760 q 674 629 713 656 q 578 603 635 603 q 505 608 543 603 q 429 624 467 614 l 436 644 q 460 490 450 574 q 475 322 469 406 q 481 164 481 238 q 468 76 481 117 q 430 10 456 35 q 365 -14 404 -14 q 282 33 307 -14 q 257 149 257 79 q 263 299 257 215 q 283 473 269 383 q 314 646 296 563 l 331 633 q 150 603 260 603 q 60 625 92 603 q 28 693 28 647 q 67 770 28 743 q 171 797 106 797 q 255 792 215 797 q 325 781 294 788 z "},"g":{"ha":872,"x_min":56,"x_max":788,"o":"m 350 22 q 138 123 219 22 q 56 429 56 224 q 135 750 56 649 q 343 851 214 851 q 478 813 419 851 q 578 703 536 774 l 567 683 q 560 725 563 703 q 557 758 557 747 q 576 847 557 815 q 635 878 594 878 q 705 842 679 878 q 744 739 731 806 q 775 566 763 671 q 788 354 788 461 q 778 131 788 221 q 746 -19 768 40 q 688 -124 724 -79 q 534 -234 628 -196 q 318 -272 440 -272 q 178 -256 231 -272 q 102 -213 125 -240 q 79 -153 79 -186 q 99 -95 79 -118 q 157 -72 118 -72 q 238 -83 192 -72 q 349 -94 285 -94 q 540 -31 483 -94 q 596 150 596 32 q 592 225 596 182 l 611 218 q 508 76 576 129 q 350 22 440 22 m 403 193 q 492 217 447 193 q 565 294 536 240 q 594 440 594 349 q 543 619 594 550 q 399 689 492 689 q 281 628 318 689 q 243 443 243 567 q 281 259 243 325 q 403 193 318 193 z "},"ğ":{"ha":872,"x_min":56,"x_max":788,"o":"m 350 22 q 138 123 219 22 q 56 429 56 224 q 135 750 56 649 q 343 851 214 851 q 478 813 419 851 q 578 703 536 774 l 567 683 q 560 725 563 703 q 557 758 557 747 q 576 847 557 815 q 635 878 594 878 q 705 842 679 878 q 744 739 731 806 q 775 566 763 671 q 788 354 788 461 q 778 131 788 221 q 746 -19 768 40 q 688 -124 724 -79 q 534 -234 628 -196 q 318 -272 440 -272 q 178 -256 231 -272 q 102 -213 125 -240 q 79 -153 79 -186 q 99 -95 79 -118 q 157 -72 118 -72 q 238 -83 192 -72 q 349 -94 285 -94 q 540 -31 483 -94 q 596 150 596 32 q 592 225 596 182 l 611 218 q 508 76 576 129 q 350 22 440 22 m 403 193 q 492 217 447 193 q 565 294 536 240 q 594 440 594 349 q 543 619 594 550 q 399 689 492 689 q 281 628 318 689 q 243 443 243 567 q 281 259 243 325 q 403 193 318 193 m 453 894 q 303 947 357 894 q 250 1067 250 999 q 304 1124 250 1124 q 368 1071 357 1124 q 394 1017 376 1035 q 451 1000 413 1000 q 505 1015 488 1000 q 531 1063 522 1031 q 556 1118 540 1099 q 601 1138 571 1138 q 642 1121 629 1138 q 656 1074 656 1104 q 632 985 656 1026 q 563 919 608 944 q 453 894 518 894 z "},"ģ":{"ha":872,"x_min":56,"x_max":788,"o":"m 350 22 q 138 123 219 22 q 56 429 56 224 q 135 750 56 649 q 343 851 214 851 q 478 813 419 851 q 578 703 536 774 l 567 683 q 560 725 563 703 q 557 758 557 747 q 576 847 557 815 q 635 878 594 878 q 705 842 679 878 q 744 739 731 806 q 775 566 763 671 q 788 354 788 461 q 778 131 788 221 q 746 -19 768 40 q 688 -124 724 -79 q 534 -234 628 -196 q 318 -272 440 -272 q 178 -256 231 -272 q 102 -213 125 -240 q 79 -153 79 -186 q 99 -95 79 -118 q 157 -72 118 -72 q 238 -83 192 -72 q 349 -94 285 -94 q 540 -31 483 -94 q 596 150 596 32 q 592 225 596 182 l 611 218 q 508 76 576 129 q 350 22 440 22 m 403 193 q 492 217 447 193 q 565 294 536 240 q 594 440 594 349 q 543 619 594 550 q 399 689 492 689 q 281 628 318 689 q 243 443 243 567 q 281 259 243 325 q 403 193 318 193 m 451 911 q 369 938 400 911 q 338 1025 338 965 q 356 1096 338 1057 q 400 1167 374 1135 q 445 1208 424 1194 q 488 1221 467 1221 q 512 1215 503 1221 q 521 1196 521 1208 q 509 1158 521 1182 q 458 1092 497 1133 l 450 1106 q 542 1082 515 1106 q 568 1014 568 1058 q 558 966 568 990 q 522 926 547 942 q 451 911 496 911 z "},"ġ":{"ha":872,"x_min":56,"x_max":788,"o":"m 350 22 q 138 123 219 22 q 56 429 56 224 q 135 750 56 649 q 343 851 214 851 q 478 813 419 851 q 578 703 536 774 l 567 683 q 560 725 563 703 q 557 758 557 747 q 576 847 557 815 q 635 878 594 878 q 705 842 679 878 q 744 739 731 806 q 775 566 763 671 q 788 354 788 461 q 778 131 788 221 q 746 -19 768 40 q 688 -124 724 -79 q 534 -234 628 -196 q 318 -272 440 -272 q 178 -256 231 -272 q 102 -213 125 -240 q 79 -153 79 -186 q 99 -95 79 -118 q 157 -72 118 -72 q 238 -83 192 -72 q 349 -94 285 -94 q 540 -31 483 -94 q 596 150 596 32 q 592 225 596 182 l 611 218 q 508 76 576 129 q 350 22 440 22 m 403 193 q 492 217 447 193 q 565 294 536 240 q 594 440 594 349 q 543 619 594 550 q 399 689 492 689 q 281 628 318 689 q 243 443 243 567 q 281 259 243 325 q 403 193 318 193 m 463 1121 q 542 1090 518 1121 q 567 1019 567 1060 q 537 942 567 969 q 453 915 507 915 q 374 945 400 915 q 347 1015 347 975 q 379 1094 347 1068 q 463 1121 411 1121 z "},"h":{"ha":908,"x_min":85,"x_max":824,"o":"m 228 1100 q 290 1065 272 1100 q 307 961 307 1031 q 300 811 307 901 q 282 638 293 721 l 274 638 q 392 776 319 724 q 544 829 464 829 q 671 795 615 829 q 761 689 726 761 q 808 534 793 624 q 824 364 824 444 q 806 158 824 235 q 758 48 789 82 q 686 14 728 14 q 599 157 599 14 q 606 300 599 226 q 614 435 614 374 q 581 591 614 539 q 488 643 549 643 q 364 575 411 643 q 317 388 317 507 q 328 251 317 325 q 339 115 339 176 q 313 17 339 47 q 247 -12 288 -12 q 194 -1 217 -12 q 155 47 171 11 q 128 153 139 82 q 111 279 119 207 q 97 431 103 351 q 88 585 92 510 q 85 724 85 661 q 122 1010 85 921 q 228 1100 160 1100 z "},"ħ":{"ha":908,"x_min":-65,"x_max":824,"o":"m 247 -12 q 194 -1 217 -12 q 155 47 171 11 q 128 153 139 82 q 111 279 119 207 q 97 431 103 351 q 88 585 92 510 q 85 724 85 661 q 122 1010 85 921 q 228 1100 160 1100 q 290 1065 272 1100 q 307 961 307 1031 q 300 811 307 901 q 282 638 293 721 l 274 638 q 392 776 319 724 q 544 829 464 829 q 671 795 615 829 q 761 689 726 761 q 808 534 793 624 q 824 364 824 444 q 806 158 824 235 q 758 48 789 82 q 686 14 728 14 q 599 157 599 14 q 606 300 599 226 q 614 435 614 374 q 581 591 614 539 q 488 643 549 643 q 364 575 411 643 q 317 388 317 507 q 328 251 317 325 q 339 115 339 176 q 313 17 339 47 q 247 -12 288 -12 m 25 850 q -44 865 -24 850 q -65 906 -65 879 q -46 948 -65 931 q 28 975 -26 965 q 147 988 78 982 q 295 1000 217 994 q 450 1009 374 1006 q 590 1013 526 1013 q 668 997 646 1013 q 690 953 690 981 q 670 908 690 926 q 601 883 650 890 q 470 872 547 878 q 310 860 393 865 q 151 853 226 856 q 25 850 75 850 z "},"i":{"ha":396,"x_min":85,"x_max":311,"o":"m 207 1065 q 287 1035 263 1065 q 311 964 311 1004 q 281 887 311 914 q 197 860 251 860 q 118 890 144 860 q 92 960 92 919 q 124 1039 92 1013 q 207 1065 156 1065 m 215 756 q 285 672 260 756 q 311 407 311 589 q 279 85 311 183 q 182 -14 247 -14 q 108 59 132 -14 q 85 314 85 132 q 122 647 85 538 q 215 756 158 756 z "},"ı":{"ha":392,"x_min":85,"x_max":307,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 z "},"í":{"ha":392,"x_min":79,"x_max":443,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 m 79 818 q 108 868 79 840 q 185 931 138 896 q 274 988 232 964 q 349 1013 317 1013 q 397 997 376 1013 q 431 958 418 981 q 443 917 443 936 q 417 872 443 890 q 340 836 392 854 q 256 811 300 822 q 173 794 211 800 q 110 788 135 788 q 88 797 96 788 q 79 818 79 806 z "},"î":{"ha":392,"x_min":6,"x_max":390,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 m 203 1024 q 256 1010 222 1024 q 322 974 290 997 q 373 924 356 949 q 390 864 390 899 q 369 816 390 833 q 321 799 349 799 q 245 840 282 799 q 181 951 208 881 l 201 956 q 127 831 164 869 q 58 792 90 792 q 21 805 36 792 q 6 840 6 818 q 24 901 6 872 q 78 960 43 931 q 145 1007 114 990 q 203 1024 176 1024 z "},"ï":{"ha":392,"x_min":4,"x_max":390,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 m 78 803 q 22 831 39 803 q 4 896 4 858 q 30 974 4 947 q 101 1001 56 1001 q 156 972 138 1001 q 174 900 174 942 q 150 828 174 853 q 78 803 126 803 m 314 1015 q 372 985 354 1015 q 390 914 390 954 q 367 836 390 863 q 299 810 343 810 q 240 839 260 810 q 221 910 221 868 q 247 988 221 961 q 314 1015 272 1015 z "},"ì":{"ha":392,"x_min":-49,"x_max":315,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 m 315 818 q 308 797 315 806 q 285 788 300 788 q 222 794 260 788 q 140 811 183 800 q 54 836 96 822 q -23 872 3 854 q -49 917 -49 890 q -36 958 -49 936 q -2 997 -24 981 q 46 1013 19 1013 q 120 988 78 1013 q 210 931 163 964 q 287 868 258 896 q 315 818 315 840 z "},"ĳ":{"ha":782,"x_min":85,"x_max":697,"o":"m 207 1065 q 287 1035 263 1065 q 311 964 311 1004 q 281 887 311 914 q 197 860 251 860 q 118 890 144 860 q 92 960 92 919 q 124 1039 92 1013 q 207 1065 156 1065 m 215 756 q 285 672 260 756 q 311 407 311 589 q 279 85 311 183 q 182 -14 247 -14 q 108 59 132 -14 q 85 314 85 132 q 122 647 85 538 q 215 756 158 756 m 488 -289 q 388 -265 432 -289 q 317 -206 343 -242 q 290 -132 290 -169 q 307 -82 290 -100 q 350 -64 324 -64 q 449 -99 396 -64 q 549 -194 501 -133 l 528 -192 q 492 181 504 3 q 481 501 481 360 q 502 695 481 631 q 574 760 524 760 q 664 671 631 760 q 697 371 697 582 q 692 180 697 278 q 676 -6 686 82 q 647 -153 665 -93 q 587 -257 625 -225 q 488 -289 549 -289 m 551 875 q 480 895 507 875 q 453 957 453 915 q 485 1037 453 1004 q 578 1069 518 1069 q 654 1045 628 1069 q 681 981 681 1021 q 644 903 681 931 q 551 875 608 875 z "},"ī":{"ha":392,"x_min":-67,"x_max":461,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 m 39 803 q -41 823 -15 803 q -67 875 -67 843 q -44 924 -67 907 q 33 956 -21 942 q 131 971 78 965 q 239 979 185 976 q 338 982 293 982 q 433 963 404 982 q 461 911 461 943 q 438 856 461 876 q 368 826 414 835 q 264 814 325 819 q 143 806 203 808 q 39 803 83 803 z "},"į":{"ha":392,"x_min":-19,"x_max":311,"o":"m 214 756 q 283 672 258 756 q 307 407 307 589 q 276 85 307 183 q 181 -14 244 -14 q 108 59 132 -14 q 85 314 85 132 q 121 647 85 538 q 214 756 157 756 m 207 1015 q 287 985 263 1015 q 311 914 311 954 q 281 837 311 864 q 197 810 251 810 q 118 840 144 810 q 92 910 92 869 q 124 989 92 963 q 207 1015 156 1015 m 146 -293 q 27 -261 74 -293 q -19 -167 -19 -229 q 19 -63 -19 -117 q 144 39 57 -10 l 253 42 q 131 -58 176 -6 q 86 -137 86 -110 q 103 -162 86 -156 q 147 -169 119 -169 q 180 -168 163 -169 q 218 -167 197 -167 q 259 -181 246 -167 q 272 -221 272 -196 q 240 -275 272 -257 q 146 -293 207 -293 z "},"j":{"ha":386,"x_min":-106,"x_max":301,"o":"m 92 -289 q -8 -265 36 -289 q -79 -206 -53 -242 q -106 -132 -106 -169 q -89 -82 -106 -100 q -46 -64 -72 -64 q 53 -99 0 -64 q 153 -194 106 -133 l 132 -192 q 97 181 108 3 q 85 501 85 360 q 106 695 85 631 q 178 760 128 760 q 268 671 235 760 q 301 371 301 582 q 296 180 301 278 q 280 -6 290 82 q 251 -153 269 -93 q 191 -257 229 -225 q 92 -289 153 -289 m 156 875 q 84 895 111 875 q 57 957 57 915 q 90 1037 57 1004 q 182 1069 122 1069 q 258 1045 232 1069 q 285 981 285 1021 q 249 903 285 931 q 156 875 213 875 z "},"ȷ":{"ha":386,"x_min":-106,"x_max":301,"o":"m 92 -289 q -8 -265 36 -289 q -79 -206 -53 -242 q -106 -132 -106 -169 q -89 -82 -106 -100 q -46 -64 -72 -64 q 53 -99 0 -64 q 153 -194 106 -133 l 132 -192 q 97 181 108 3 q 85 501 85 360 q 106 695 85 631 q 178 760 128 760 q 268 671 235 760 q 301 371 301 582 q 296 180 301 278 q 280 -6 290 82 q 251 -153 269 -93 q 191 -257 229 -225 q 92 -289 153 -289 z "},"k":{"ha":833,"x_min":85,"x_max":806,"o":"m 179 -14 q 136 2 153 -14 q 113 49 119 18 q 93 197 101 100 q 85 413 85 294 q 95 693 85 558 q 122 914 106 828 q 167 1051 140 1007 q 236 1094 193 1094 q 296 1059 275 1094 q 317 938 317 1024 q 310 753 317 851 q 290 542 304 654 l 296 542 q 465 738 386 664 q 609 844 543 811 q 726 878 675 878 q 786 853 767 878 q 806 792 806 828 q 692 633 806 721 q 367 454 579 546 l 368 476 q 595 334 500 408 q 741 194 690 260 q 792 83 792 128 q 769 24 792 47 q 703 1 746 1 q 583 42 649 1 q 446 165 517 83 q 304 371 375 247 l 299 371 q 288 201 297 283 q 265 65 279 118 q 235 8 256 29 q 179 -14 215 -14 z "},"ķ":{"ha":833,"x_min":85,"x_max":806,"o":"m 179 -14 q 136 2 153 -14 q 113 49 119 18 q 93 197 101 100 q 85 413 85 294 q 95 693 85 558 q 122 914 106 828 q 167 1051 140 1007 q 236 1094 193 1094 q 296 1059 275 1094 q 317 938 317 1024 q 310 753 317 851 q 290 542 304 654 l 296 542 q 465 738 386 664 q 609 844 543 811 q 726 878 675 878 q 786 853 767 878 q 806 792 806 828 q 692 633 806 721 q 367 454 579 546 l 368 476 q 595 334 500 408 q 741 194 690 260 q 792 83 792 128 q 769 24 792 47 q 703 1 746 1 q 583 42 649 1 q 446 165 517 83 q 304 371 375 247 l 299 371 q 288 201 297 283 q 265 65 279 118 q 235 8 256 29 q 179 -14 215 -14 m 393 -244 q 301 -221 328 -244 q 275 -153 275 -197 q 285 -104 275 -128 q 322 -65 296 -81 q 392 -50 347 -50 q 474 -77 443 -50 q 506 -164 506 -104 q 488 -235 506 -196 q 443 -306 471 -274 q 399 -346 421 -332 q 356 -360 376 -360 q 332 -353 342 -360 q 322 -335 322 -347 q 334 -297 322 -321 q 385 -231 346 -272 l 393 -244 z "},"l":{"ha":475,"x_min":85,"x_max":433,"o":"m 235 -3 q 167 17 192 -3 q 126 85 142 38 q 95 260 106 154 q 85 522 85 367 q 92 715 85 618 q 113 891 100 811 q 139 1015 125 971 q 175 1081 154 1063 q 222 1099 196 1099 q 267 1080 250 1099 q 293 1014 283 1061 q 306 901 301 968 q 311 758 311 835 q 301 539 311 654 q 276 313 292 424 q 238 108 260 201 l 199 128 q 281 197 235 172 q 367 222 328 222 q 416 205 399 222 q 433 151 433 188 q 402 79 433 115 q 325 20 371 43 q 235 -3 279 -3 z "},"ĺ":{"ha":475,"x_min":85,"x_max":486,"o":"m 235 -3 q 167 17 192 -3 q 126 85 142 38 q 95 260 106 154 q 85 522 85 367 q 92 715 85 618 q 113 891 100 811 q 139 1015 125 971 q 175 1081 154 1063 q 222 1099 196 1099 q 267 1080 250 1099 q 293 1014 283 1061 q 306 901 301 968 q 311 758 311 835 q 301 539 311 654 q 276 313 292 424 q 238 108 260 201 l 199 128 q 281 197 235 172 q 367 222 328 222 q 416 205 399 222 q 433 151 433 188 q 402 79 433 115 q 325 20 371 43 q 235 -3 279 -3 m 122 1174 q 151 1224 122 1196 q 228 1286 181 1251 q 317 1344 275 1319 q 392 1368 360 1368 q 440 1352 419 1368 q 474 1314 461 1336 q 486 1272 486 1292 q 460 1228 486 1246 q 383 1192 435 1210 q 299 1167 343 1178 q 216 1149 254 1156 q 153 1143 178 1143 q 131 1152 139 1143 q 122 1174 122 1161 z "},"ľ":{"ha":475,"x_min":85,"x_max":607,"o":"m 235 -3 q 167 17 192 -3 q 126 85 142 38 q 95 260 106 154 q 85 522 85 367 q 92 715 85 618 q 113 891 100 811 q 139 1015 125 971 q 175 1081 154 1063 q 222 1099 196 1099 q 267 1080 250 1099 q 293 1014 283 1061 q 306 901 301 968 q 311 758 311 835 q 301 539 311 654 q 276 313 292 424 q 238 108 260 201 l 199 128 q 281 197 235 172 q 367 222 328 222 q 416 205 399 222 q 433 151 433 188 q 402 79 433 115 q 325 20 371 43 q 235 -3 279 -3 m 396 839 q 378 893 379 853 q 386 989 376 933 q 404 1075 396 1035 q 435 1138 413 1115 q 481 1162 453 1160 q 539 1156 510 1164 q 585 1133 568 1147 q 606 1088 607 1115 q 582 1017 604 1061 q 544 952 565 985 q 503 892 522 919 q 468 846 483 864 q 433 828 456 831 q 396 839 411 826 z "},"ļ":{"ha":475,"x_min":85,"x_max":433,"o":"m 235 -3 q 167 17 192 -3 q 126 85 142 38 q 95 260 106 154 q 85 522 85 367 q 92 715 85 618 q 113 891 100 811 q 139 1015 125 971 q 175 1081 154 1063 q 222 1099 196 1099 q 267 1080 250 1099 q 293 1014 283 1061 q 306 901 301 968 q 311 758 311 835 q 301 539 311 654 q 276 313 292 424 q 238 108 260 201 l 199 128 q 281 197 235 172 q 367 222 328 222 q 416 205 399 222 q 433 151 433 188 q 402 79 433 115 q 325 20 371 43 q 235 -3 279 -3 m 243 -244 q 151 -221 178 -244 q 125 -153 125 -197 q 135 -104 125 -128 q 172 -65 146 -81 q 242 -50 197 -50 q 324 -77 293 -50 q 356 -164 356 -104 q 338 -235 356 -196 q 293 -306 321 -274 q 249 -346 271 -332 q 206 -360 226 -360 q 182 -353 192 -360 q 172 -335 172 -347 q 184 -297 172 -321 q 235 -231 196 -272 l 243 -244 z "},"ł":{"ha":465,"x_min":-43,"x_max":539,"o":"m 76 318 q 14 285 39 288 q -28 303 -11 283 q -40 348 -43 322 q 0 415 -36 374 q 83 503 33 453 q 188 607 132 553 q 301 713 244 661 q 406 806 357 765 q 476 844 449 842 q 521 825 503 846 q 534 778 539 804 q 497 715 529 751 q 426 642 468 683 q 336 555 383 600 q 241 465 289 510 q 150 382 193 419 q 76 318 107 344 m 271 -3 q 203 17 228 -3 q 163 85 178 38 q 131 260 142 154 q 121 522 121 367 q 128 715 121 618 q 149 891 136 811 q 175 1015 161 971 q 211 1081 190 1063 q 258 1099 232 1099 q 303 1080 286 1099 q 329 1014 319 1061 q 342 901 338 968 q 347 758 347 835 q 338 539 347 654 q 312 313 328 424 q 274 108 296 201 l 235 128 q 317 197 271 172 q 403 222 364 222 q 452 205 435 222 q 469 151 469 188 q 438 79 469 115 q 361 20 407 43 q 271 -3 315 -3 z "},"m":{"ha":1264,"x_min":85,"x_max":1179,"o":"m 683 636 q 733 739 697 693 q 819 812 768 785 q 931 839 869 839 q 1058 804 1003 839 q 1147 690 1114 769 q 1179 479 1179 611 q 1174 342 1179 411 q 1160 213 1168 272 q 1142 113 1151 153 q 1099 28 1128 57 q 1028 -1 1071 -1 q 971 31 992 -1 q 950 122 950 63 q 957 194 950 150 q 972 290 964 238 q 988 396 981 342 q 994 499 994 450 q 965 610 994 571 q 883 650 936 650 q 787 590 825 650 q 742 414 749 529 q 732 231 736 311 q 711 100 728 151 q 680 46 700 64 q 626 28 660 28 q 567 56 589 28 q 543 143 546 83 q 542 261 540 193 q 544 397 543 329 q 542 508 544 464 q 510 639 536 597 q 433 681 485 681 q 338 625 374 681 q 294 471 303 569 q 292 372 292 431 q 294 254 293 313 q 293 157 296 196 q 267 38 292 74 q 200 1 243 1 q 126 35 149 1 q 96 142 103 68 q 88 272 90 207 q 85 400 85 336 q 88 542 85 465 q 99 686 92 618 q 128 803 107 756 q 197 850 149 850 q 254 810 238 850 q 271 689 271 771 q 267 638 271 661 l 263 665 q 351 806 290 756 q 488 857 413 857 q 642 794 586 857 q 703 619 697 731 l 683 636 z "},"n":{"ha":885,"x_min":85,"x_max":800,"o":"m 226 864 q 287 828 271 864 q 303 721 303 792 q 301 685 303 704 q 294 651 299 667 l 292 679 q 394 820 325 769 q 542 871 464 871 q 685 822 628 871 q 772 686 743 774 q 800 479 800 599 q 794 334 800 406 q 777 203 788 263 q 754 107 767 144 q 711 37 738 60 q 649 14 685 14 q 593 40 613 14 q 574 111 574 67 q 581 226 574 158 q 594 363 588 293 q 600 490 600 433 q 472 685 600 685 q 358 624 404 685 q 297 453 313 564 q 293 360 293 415 q 294 249 293 304 q 290 157 294 194 q 259 38 285 74 q 189 1 233 1 q 111 49 138 1 q 85 211 85 97 q 88 342 85 269 q 95 487 90 414 q 107 619 100 560 q 147 798 121 732 q 226 864 174 864 z "},"ń":{"ha":885,"x_min":85,"x_max":800,"o":"m 226 864 q 287 828 271 864 q 303 721 303 792 q 301 685 303 704 q 294 651 299 667 l 292 679 q 394 820 325 769 q 542 871 464 871 q 685 822 628 871 q 772 686 743 774 q 800 479 800 599 q 794 334 800 406 q 777 203 788 263 q 754 107 767 144 q 711 37 738 60 q 649 14 685 14 q 593 40 613 14 q 574 111 574 67 q 581 226 574 158 q 594 363 588 293 q 600 490 600 433 q 472 685 600 685 q 358 624 404 685 q 297 453 313 564 q 293 360 293 415 q 294 249 293 304 q 290 157 294 194 q 259 38 285 74 q 189 1 233 1 q 111 49 138 1 q 85 211 85 97 q 88 342 85 269 q 95 487 90 414 q 107 619 100 560 q 147 798 121 732 q 226 864 174 864 m 322 931 q 351 981 322 953 q 428 1043 381 1008 q 517 1101 475 1076 q 592 1125 560 1125 q 640 1109 619 1125 q 674 1071 661 1093 q 686 1029 686 1049 q 660 985 686 1003 q 583 949 635 967 q 499 924 543 935 q 416 906 454 913 q 353 900 378 900 q 331 909 339 900 q 322 931 322 918 z "},"ň":{"ha":885,"x_min":85,"x_max":800,"o":"m 226 864 q 287 828 271 864 q 303 721 303 792 q 301 685 303 704 q 294 651 299 667 l 292 679 q 394 820 325 769 q 542 871 464 871 q 685 822 628 871 q 772 686 743 774 q 800 479 800 599 q 794 334 800 406 q 777 203 788 263 q 754 107 767 144 q 711 37 738 60 q 649 14 685 14 q 593 40 613 14 q 574 111 574 67 q 581 226 574 158 q 594 363 588 293 q 600 490 600 433 q 472 685 600 685 q 358 624 404 685 q 297 453 313 564 q 293 360 293 415 q 294 249 293 304 q 290 157 294 194 q 259 38 285 74 q 189 1 233 1 q 111 49 138 1 q 85 211 85 97 q 88 342 85 269 q 95 487 90 414 q 107 619 100 560 q 147 798 121 732 q 226 864 174 864 m 446 918 q 381 936 417 918 q 304 981 344 954 q 236 1040 261 1011 q 211 1101 211 1069 q 226 1137 211 1124 q 264 1150 242 1150 q 349 1111 301 1150 q 444 986 396 1072 l 424 990 q 505 1102 458 1061 q 596 1143 551 1143 q 649 1126 628 1143 q 671 1078 671 1108 q 647 1018 671 1043 q 581 967 624 993 q 506 931 544 944 q 446 918 468 918 z "},"ņ":{"ha":885,"x_min":85,"x_max":800,"o":"m 226 864 q 287 828 271 864 q 303 721 303 792 q 301 685 303 704 q 294 651 299 667 l 292 679 q 394 820 325 769 q 542 871 464 871 q 685 822 628 871 q 772 686 743 774 q 800 479 800 599 q 794 334 800 406 q 777 203 788 263 q 754 107 767 144 q 711 37 738 60 q 649 14 685 14 q 593 40 613 14 q 574 111 574 67 q 581 226 574 158 q 594 363 588 293 q 600 490 600 433 q 472 685 600 685 q 358 624 404 685 q 297 453 313 564 q 293 360 293 415 q 294 249 293 304 q 290 157 294 194 q 259 38 285 74 q 189 1 233 1 q 111 49 138 1 q 85 211 85 97 q 88 342 85 269 q 95 487 90 414 q 107 619 100 560 q 147 798 121 732 q 226 864 174 864 m 443 -244 q 351 -221 378 -244 q 325 -153 325 -197 q 335 -104 325 -128 q 372 -65 346 -81 q 442 -50 397 -50 q 524 -77 493 -50 q 556 -164 556 -104 q 538 -235 556 -196 q 493 -306 521 -274 q 449 -346 471 -332 q 406 -360 426 -360 q 382 -353 392 -360 q 372 -335 372 -347 q 384 -297 372 -321 q 435 -231 396 -272 l 443 -244 z "},"ñ":{"ha":885,"x_min":85,"x_max":800,"o":"m 226 864 q 287 828 271 864 q 303 721 303 792 q 301 685 303 704 q 294 651 299 667 l 292 679 q 394 820 325 769 q 542 871 464 871 q 685 822 628 871 q 772 686 743 774 q 800 479 800 599 q 794 334 800 406 q 777 203 788 263 q 754 107 767 144 q 711 37 738 60 q 649 14 685 14 q 593 40 613 14 q 574 111 574 67 q 581 226 574 158 q 594 363 588 293 q 600 490 600 433 q 472 685 600 685 q 358 624 404 685 q 297 453 313 564 q 293 360 293 415 q 294 249 293 304 q 290 157 294 194 q 259 38 285 74 q 189 1 233 1 q 111 49 138 1 q 85 211 85 97 q 88 342 85 269 q 95 487 90 414 q 107 619 100 560 q 147 798 121 732 q 226 864 174 864 m 363 1110 q 447 1086 410 1110 q 521 1029 485 1063 q 537 1022 531 1021 q 546 1032 543 1022 q 579 1107 561 1083 q 632 1131 597 1131 q 683 1071 683 1131 q 668 1001 683 1040 q 620 931 653 961 q 536 901 588 901 q 450 930 488 901 q 374 1006 413 958 q 357 1017 364 1018 q 344 994 350 1015 q 313 916 332 940 q 256 892 293 892 q 213 911 229 892 q 197 957 197 931 q 219 1031 197 996 q 278 1088 240 1065 q 363 1110 315 1110 z "},"ŋ":{"ha":885,"x_min":85,"x_max":800,"o":"m 564 -289 q 457 -265 501 -289 q 390 -206 413 -242 q 367 -132 367 -169 q 383 -82 367 -100 q 426 -64 400 -64 q 511 -90 467 -64 q 599 -162 556 -115 q 581 -77 588 -121 q 574 14 575 -33 q 574 111 572 61 q 583 226 576 158 q 594 363 589 293 q 600 490 600 433 q 472 685 600 685 q 358 624 404 685 q 297 453 313 564 q 293 360 293 415 q 294 249 293 304 q 290 157 294 194 q 259 38 285 74 q 189 1 233 1 q 111 49 138 1 q 85 211 85 97 q 88 342 85 269 q 95 487 90 414 q 107 619 100 560 q 147 798 121 732 q 226 864 174 864 q 288 828 271 864 q 303 721 306 792 l 303 706 q 404 827 339 783 q 542 871 469 871 q 685 822 628 871 q 772 686 743 774 q 800 479 800 599 q 797 365 800 438 q 786 206 794 293 q 762 33 778 119 q 719 -127 746 -54 q 655 -244 693 -200 q 564 -289 617 -289 z "},"o":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 z "},"ó":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 318 907 q 347 957 318 929 q 424 1019 376 985 q 513 1077 471 1053 q 588 1101 556 1101 q 636 1085 615 1101 q 669 1047 657 1069 q 682 1006 682 1025 q 656 961 682 979 q 579 925 631 943 q 494 900 539 911 q 412 883 450 889 q 349 876 374 876 q 326 885 335 876 q 318 907 318 894 z "},"ô":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 442 1113 q 502 1099 464 1113 q 576 1064 540 1086 q 643 1013 619 1038 q 667 953 667 988 q 645 905 667 922 q 592 888 624 888 q 501 928 547 888 q 419 1040 454 969 l 440 1044 q 344 919 392 958 q 260 881 297 881 q 222 894 238 881 q 207 929 207 907 q 232 990 207 961 q 300 1050 257 1019 q 376 1095 340 1078 q 442 1113 413 1113 z "},"ö":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 272 892 q 190 919 217 892 q 164 985 164 947 q 199 1063 164 1036 q 296 1090 233 1090 q 376 1060 350 1090 q 403 989 403 1031 q 366 917 403 942 q 272 892 329 892 m 596 1104 q 681 1074 654 1104 q 707 1003 707 1043 q 675 925 707 951 q 582 899 643 899 q 497 928 525 899 q 469 999 469 957 q 504 1077 469 1050 q 596 1104 539 1104 z "},"ò":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 554 907 q 547 885 554 894 q 524 876 539 876 q 460 883 499 876 q 378 900 422 889 q 293 925 335 911 q 216 961 242 943 q 190 1006 190 979 q 203 1047 190 1025 q 237 1085 215 1069 q 285 1101 258 1101 q 359 1077 317 1101 q 449 1019 401 1053 q 526 957 497 985 q 554 907 554 929 z "},"ő":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 536 879 q 510 889 522 879 q 499 914 499 899 q 511 960 499 932 q 544 1022 524 988 q 576 1071 558 1043 q 617 1119 594 1099 q 667 1140 639 1140 q 710 1129 688 1140 q 749 1101 733 1118 q 764 1067 764 1083 q 713 994 764 1040 q 662 953 690 974 q 606 915 633 932 q 561 886 579 897 q 549 881 556 883 q 536 879 543 879 m 269 879 q 244 888 256 879 q 232 913 232 897 q 244 959 232 932 q 279 1021 257 986 q 317 1078 299 1051 q 355 1122 335 1106 q 401 1139 375 1139 q 444 1128 422 1139 q 482 1100 467 1117 q 497 1067 497 1083 q 449 993 497 1038 q 393 951 424 972 q 335 912 363 929 q 289 886 307 894 q 278 881 283 883 q 269 879 272 879 z "},"ō":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 278 892 q 198 912 224 892 q 172 964 172 932 q 195 1013 172 996 q 272 1044 218 1031 q 370 1060 317 1054 q 478 1068 424 1065 q 576 1071 532 1071 q 672 1051 643 1071 q 700 1000 700 1032 q 676 944 700 965 q 607 915 653 924 q 503 903 564 908 q 382 894 442 897 q 278 892 322 892 z "},"ø":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 165 65 q 232 195 192 118 q 321 360 272 272 q 419 537 369 449 q 515 703 469 625 q 594 838 560 782 q 649 897 625 885 q 696 897 674 908 q 723 858 719 888 q 699 775 726 829 q 599 581 656 686 q 483 370 543 476 q 369 172 424 264 q 274 17 314 79 q 213 -49 239 -37 q 167 -50 188 -60 q 142 -12 144 -39 q 165 65 140 14 z "},"õ":{"ha":874,"x_min":56,"x_max":818,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 633 791 546 844 q 769 642 721 738 q 818 418 818 546 q 769 193 818 288 q 632 47 721 99 q 422 -4 543 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 358 1086 q 443 1063 406 1086 q 517 1006 481 1039 q 533 998 526 997 q 542 1008 539 999 q 575 1083 557 1060 q 628 1107 593 1107 q 679 1047 679 1107 q 664 977 679 1017 q 616 908 649 938 q 532 878 583 878 q 446 906 483 878 q 369 982 408 935 q 353 993 360 994 q 340 971 346 992 q 308 892 328 917 q 251 868 289 868 q 209 888 225 868 q 193 933 193 907 q 215 1007 193 972 q 274 1064 236 1042 q 358 1086 311 1086 z "},"œ":{"ha":1429,"x_min":56,"x_max":1392,"o":"m 422 -4 q 228 45 311 -4 q 101 186 146 94 q 56 404 56 278 q 101 635 56 536 q 231 789 147 733 q 426 844 315 844 q 626 791 542 844 q 758 642 711 738 q 804 418 804 546 q 757 193 804 288 q 624 47 710 99 q 422 -4 539 -4 m 442 183 q 578 252 528 183 q 629 435 629 321 q 578 618 629 550 q 442 686 528 686 q 301 618 353 686 q 250 435 250 550 q 301 252 250 321 q 442 183 353 183 m 1056 -11 q 810 35 903 -11 q 678 167 718 81 q 638 372 638 253 q 690 630 638 524 q 836 793 743 736 q 1047 850 929 850 q 1265 781 1196 850 q 1335 601 1335 713 q 1292 448 1335 513 q 1173 349 1249 383 q 999 314 1097 314 q 883 329 939 314 q 783 371 828 344 l 817 432 q 813 365 813 399 q 874 226 813 268 q 1047 183 935 183 q 1174 199 1126 183 q 1256 228 1222 214 q 1319 243 1289 243 q 1355 233 1339 243 q 1381 203 1371 222 q 1392 156 1392 183 q 1353 76 1392 114 q 1240 13 1314 38 q 1056 -11 1165 -11 m 975 443 q 1113 485 1061 443 q 1165 588 1165 526 q 1133 667 1165 636 q 1031 699 1100 699 q 928 674 974 699 q 856 611 882 650 q 831 526 831 572 q 869 465 831 486 q 975 443 907 443 z "},"p":{"ha":853,"x_min":85,"x_max":797,"o":"m 179 861 q 242 817 217 861 q 276 679 267 774 l 247 653 q 340 801 272 750 q 501 853 408 853 q 654 808 588 853 q 759 674 721 764 q 797 450 797 585 q 719 128 797 232 q 506 25 640 25 q 353 67 408 25 q 275 168 297 108 l 292 176 q 310 12 303 93 q 318 -131 318 -69 q 296 -236 318 -193 q 225 -279 274 -279 q 154 -243 178 -279 q 119 -147 131 -207 q 103 10 111 -86 q 90 217 94 106 q 85 433 85 328 q 92 637 85 542 q 111 792 100 732 q 137 844 121 826 q 179 861 153 861 m 444 693 q 324 619 369 693 q 279 429 279 544 q 324 253 279 311 q 442 194 369 194 q 562 260 525 194 q 599 432 599 326 q 553 630 599 567 q 444 693 507 693 z "},"þ":{"ha":853,"x_min":85,"x_max":797,"o":"m 225 -279 q 154 -243 178 -279 q 119 -147 131 -207 q 103 10 111 -86 q 90 217 94 106 q 85 433 85 328 q 92 669 85 557 q 113 870 100 781 q 136 1014 125 960 q 169 1090 147 1069 q 221 1111 190 1111 q 274 1083 253 1111 q 296 985 296 1056 q 292 887 296 942 q 281 775 288 832 q 264 668 274 718 l 247 653 q 340 801 272 750 q 501 853 408 853 q 654 808 588 853 q 759 674 721 764 q 797 450 797 585 q 719 128 797 232 q 506 25 640 25 q 353 67 408 25 q 275 168 297 108 l 292 176 q 310 12 303 93 q 318 -131 318 -69 q 296 -236 318 -193 q 225 -279 274 -279 m 442 194 q 562 260 525 194 q 599 432 599 326 q 553 630 599 567 q 444 693 507 693 q 324 619 369 693 q 279 429 279 544 q 324 253 279 311 q 442 194 369 194 z "},"q":{"ha":886,"x_min":56,"x_max":801,"o":"m 668 -272 q 608 -242 628 -272 q 589 -162 589 -211 q 592 -57 589 -115 q 602 63 596 1 q 617 176 608 124 l 626 175 q 524 38 596 88 q 346 -12 453 -12 q 197 28 263 -12 q 94 156 132 69 q 56 378 56 242 q 95 649 56 546 q 202 799 135 751 q 353 846 269 846 q 490 806 431 846 q 588 681 549 767 l 576 675 q 595 818 576 769 q 658 867 614 867 q 727 834 703 867 q 765 740 751 801 q 785 613 778 693 q 797 435 793 533 q 801 235 801 338 q 797 28 801 125 q 781 -137 792 -69 q 742 -237 769 -201 q 668 -272 715 -272 m 417 144 q 506 176 464 144 q 574 267 547 207 q 600 413 600 328 q 548 607 600 535 q 414 679 496 679 q 292 613 333 679 q 251 393 251 547 q 296 204 251 264 q 417 144 340 144 z "},"r":{"ha":661,"x_min":85,"x_max":622,"o":"m 85 626 q 110 819 85 760 q 181 878 135 878 q 238 848 217 878 q 268 774 258 818 q 278 686 278 731 l 271 689 q 344 818 294 764 q 463 872 393 872 q 583 805 544 872 q 622 638 622 738 q 592 451 622 504 q 510 399 561 399 q 455 429 472 399 q 443 538 438 460 q 433 651 449 619 q 385 683 418 683 q 319 633 344 683 q 293 508 293 582 q 300 435 293 479 q 315 338 307 390 q 331 235 324 286 q 338 140 338 183 q 314 31 338 64 q 247 -3 290 -3 q 172 28 199 -3 q 132 131 146 60 q 110 282 121 194 q 92 461 99 369 q 85 626 85 553 z "},"ŕ":{"ha":661,"x_min":85,"x_max":622,"o":"m 85 626 q 110 819 85 760 q 181 878 135 878 q 238 848 217 878 q 268 774 258 818 q 278 686 278 731 l 271 689 q 344 818 294 764 q 463 872 393 872 q 583 805 544 872 q 622 638 622 738 q 592 451 622 504 q 510 399 561 399 q 455 429 472 399 q 443 538 438 460 q 433 651 449 619 q 385 683 418 683 q 319 633 344 683 q 293 508 293 582 q 300 435 293 479 q 315 338 307 390 q 331 235 324 286 q 338 140 338 183 q 314 31 338 64 q 247 -3 290 -3 q 172 28 199 -3 q 132 131 146 60 q 110 282 121 194 q 92 461 99 369 q 85 626 85 553 m 215 924 q 244 974 215 946 q 321 1036 274 1001 q 410 1094 368 1069 q 485 1118 453 1118 q 533 1102 513 1118 q 567 1064 554 1086 q 579 1022 579 1042 q 553 978 579 996 q 476 942 528 960 q 392 917 436 928 q 309 899 347 906 q 246 893 271 893 q 224 902 232 893 q 215 924 215 911 z "},"ř":{"ha":661,"x_min":85,"x_max":622,"o":"m 85 626 q 110 819 85 760 q 181 878 135 878 q 238 848 217 878 q 268 774 258 818 q 278 686 278 731 l 271 689 q 344 818 294 764 q 463 872 393 872 q 583 805 544 872 q 622 638 622 738 q 592 451 622 504 q 510 399 561 399 q 455 429 472 399 q 443 538 438 460 q 433 651 449 619 q 385 683 418 683 q 319 633 344 683 q 293 508 293 582 q 300 435 293 479 q 315 338 307 390 q 331 235 324 286 q 338 140 338 183 q 314 31 338 64 q 247 -3 290 -3 q 172 28 199 -3 q 132 131 146 60 q 110 282 121 194 q 92 461 99 369 q 85 626 85 553 m 339 911 q 274 929 310 911 q 197 974 238 947 q 129 1033 154 1004 q 104 1094 104 1063 q 119 1130 104 1117 q 157 1143 135 1143 q 242 1104 194 1143 q 338 979 289 1065 l 317 983 q 398 1095 351 1054 q 489 1136 444 1136 q 542 1119 521 1136 q 564 1071 564 1101 q 540 1011 564 1036 q 474 960 517 986 q 399 924 438 938 q 339 911 361 911 z "},"ŗ":{"ha":661,"x_min":85,"x_max":622,"o":"m 85 626 q 110 819 85 760 q 181 878 135 878 q 238 848 217 878 q 268 774 258 818 q 278 686 278 731 l 271 689 q 344 818 294 764 q 463 872 393 872 q 583 805 544 872 q 622 638 622 738 q 592 451 622 504 q 510 399 561 399 q 455 429 472 399 q 443 538 438 460 q 433 651 449 619 q 385 683 418 683 q 319 633 344 683 q 293 508 293 582 q 300 435 293 479 q 315 338 307 390 q 331 235 324 286 q 338 140 338 183 q 314 31 338 64 q 247 -3 290 -3 q 172 28 199 -3 q 132 131 146 60 q 110 282 121 194 q 92 461 99 369 q 85 626 85 553 m 336 -244 q 244 -221 271 -244 q 218 -153 218 -197 q 228 -104 218 -128 q 265 -65 239 -81 q 335 -50 290 -50 q 417 -77 386 -50 q 449 -164 449 -104 q 431 -235 449 -196 q 386 -306 414 -274 q 342 -346 364 -332 q 299 -360 319 -360 q 275 -353 285 -360 q 265 -335 265 -347 q 277 -297 265 -321 q 328 -231 289 -272 l 336 -244 z "},"s":{"ha":742,"x_min":56,"x_max":686,"o":"m 436 869 q 614 833 560 869 q 668 740 668 797 q 645 685 668 707 q 581 664 622 664 q 491 676 538 664 q 383 689 444 689 q 278 661 313 689 q 243 590 243 633 q 274 527 243 550 q 394 493 306 504 q 558 458 493 482 q 654 385 622 433 q 686 254 686 338 q 593 58 686 122 q 336 -6 500 -6 q 171 11 232 -6 q 83 58 110 28 q 56 131 56 89 q 80 187 56 167 q 138 207 104 207 q 206 199 169 207 q 282 183 242 192 q 365 175 322 175 q 504 261 504 175 q 490 308 504 290 q 440 338 476 326 q 335 357 404 350 q 190 385 251 365 q 96 452 129 406 q 63 581 63 499 q 160 790 63 710 q 436 869 257 869 z "},"ś":{"ha":742,"x_min":56,"x_max":686,"o":"m 436 869 q 614 833 560 869 q 668 740 668 797 q 645 685 668 707 q 581 664 622 664 q 491 676 538 664 q 383 689 444 689 q 278 661 313 689 q 243 590 243 633 q 274 527 243 550 q 394 493 306 504 q 558 458 493 482 q 654 385 622 433 q 686 254 686 338 q 593 58 686 122 q 336 -6 500 -6 q 171 11 232 -6 q 83 58 110 28 q 56 131 56 89 q 80 187 56 167 q 138 207 104 207 q 206 199 169 207 q 282 183 242 192 q 365 175 322 175 q 504 261 504 175 q 490 308 504 290 q 440 338 476 326 q 335 357 404 350 q 190 385 251 365 q 96 452 129 406 q 63 581 63 499 q 160 790 63 710 q 436 869 257 869 m 253 924 q 282 974 253 946 q 358 1036 311 1001 q 448 1094 406 1069 q 522 1118 490 1118 q 571 1102 550 1118 q 604 1064 592 1086 q 617 1022 617 1042 q 591 978 617 996 q 514 942 565 960 q 429 917 474 928 q 347 899 385 906 q 283 893 308 893 q 261 902 269 893 q 253 924 253 911 z "},"š":{"ha":742,"x_min":56,"x_max":686,"o":"m 436 869 q 614 833 560 869 q 668 740 668 797 q 645 685 668 707 q 581 664 622 664 q 491 676 538 664 q 383 689 444 689 q 278 661 313 689 q 243 590 243 633 q 274 527 243 550 q 394 493 306 504 q 558 458 493 482 q 654 385 622 433 q 686 254 686 338 q 593 58 686 122 q 336 -6 500 -6 q 171 11 232 -6 q 83 58 110 28 q 56 131 56 89 q 80 187 56 167 q 138 207 104 207 q 206 199 169 207 q 282 183 242 192 q 365 175 322 175 q 504 261 504 175 q 490 308 504 290 q 440 338 476 326 q 335 357 404 350 q 190 385 251 365 q 96 452 129 406 q 63 581 63 499 q 160 790 63 710 q 436 869 257 869 m 376 911 q 311 929 347 911 q 235 974 275 947 q 167 1033 192 1004 q 142 1094 142 1063 q 157 1130 142 1117 q 194 1143 172 1143 q 279 1104 232 1143 q 375 979 326 1065 l 354 983 q 435 1095 389 1054 q 526 1136 482 1136 q 580 1119 558 1136 q 601 1071 601 1101 q 578 1011 601 1036 q 511 960 554 986 q 437 924 475 938 q 376 911 399 911 z "},"ş":{"ha":742,"x_min":56,"x_max":686,"o":"m 436 869 q 614 833 560 869 q 668 740 668 797 q 645 685 668 707 q 581 664 622 664 q 491 676 538 664 q 383 689 444 689 q 278 661 313 689 q 243 590 243 633 q 274 527 243 550 q 394 493 306 504 q 558 458 493 482 q 654 385 622 433 q 686 254 686 338 q 593 58 686 122 q 336 -6 500 -6 q 171 11 232 -6 q 83 58 110 28 q 56 131 56 89 q 80 187 56 167 q 138 207 104 207 q 206 199 169 207 q 282 183 242 192 q 365 175 322 175 q 504 261 504 175 q 490 308 504 290 q 440 338 476 326 q 335 357 404 350 q 190 385 251 365 q 96 452 129 406 q 63 581 63 499 q 160 790 63 710 q 436 869 257 869 m 324 -289 q 233 -232 233 -289 q 256 -188 233 -201 q 307 -169 278 -175 q 360 -162 332 -165 q 400 -156 389 -158 q 432 -144 419 -151 q 444 -122 444 -136 q 428 -99 444 -107 q 365 -85 411 -90 q 293 -64 319 -76 q 267 -25 267 -51 q 288 7 267 -1 q 339 15 308 15 q 439 -2 389 15 q 522 -53 489 -19 q 554 -135 554 -86 q 524 -211 554 -176 q 442 -267 494 -246 q 324 -289 390 -289 z "},"ș":{"ha":742,"x_min":56,"x_max":686,"o":"m 436 869 q 614 833 560 869 q 668 740 668 797 q 645 685 668 707 q 581 664 622 664 q 491 676 538 664 q 383 689 444 689 q 278 661 313 689 q 243 590 243 633 q 274 527 243 550 q 394 493 306 504 q 558 458 493 482 q 654 385 622 433 q 686 254 686 338 q 593 58 686 122 q 336 -6 500 -6 q 171 11 232 -6 q 83 58 110 28 q 56 131 56 89 q 80 187 56 167 q 138 207 104 207 q 206 199 169 207 q 282 183 242 192 q 365 175 322 175 q 504 261 504 175 q 490 308 504 290 q 440 338 476 326 q 335 357 404 350 q 190 385 251 365 q 96 452 129 406 q 63 581 63 499 q 160 790 63 710 q 436 869 257 869 m 374 -244 q 282 -221 308 -244 q 256 -153 256 -197 q 266 -104 256 -128 q 302 -65 276 -81 q 372 -50 328 -50 q 455 -77 424 -50 q 486 -164 486 -104 q 469 -235 486 -196 q 424 -306 451 -274 q 379 -346 401 -332 q 336 -360 357 -360 q 313 -353 322 -360 q 303 -335 303 -347 q 315 -297 303 -321 q 365 -231 326 -272 l 374 -244 z "},"ß":{"ha":872,"x_min":85,"x_max":817,"o":"m 631 742 q 590 824 631 793 q 478 854 549 854 q 331 800 378 854 q 285 635 285 746 q 287 509 285 582 q 292 356 289 436 q 297 202 294 276 q 302 71 300 128 q 304 -12 304 14 q 278 -103 304 -65 q 199 -140 251 -140 q 116 -103 147 -140 q 85 6 85 -65 q 87 135 85 60 q 92 296 89 211 q 100 463 94 381 q 111 614 106 546 q 228 906 126 811 q 497 1000 329 1000 q 652 971 585 1000 q 758 885 719 942 q 796 744 796 828 q 745 612 796 672 q 601 507 694 551 q 763 411 708 469 q 817 263 817 353 q 778 123 817 183 q 669 28 739 63 q 506 -6 599 -6 q 406 19 438 -6 q 374 78 374 43 q 408 139 374 121 q 503 168 443 157 q 603 208 574 181 q 633 279 633 236 q 607 340 633 315 q 519 389 581 364 q 456 425 475 407 q 436 481 436 443 q 456 531 436 508 q 504 576 475 554 q 563 622 533 597 q 611 675 592 646 q 631 742 631 704 z "},"t":{"ha":735,"x_min":28,"x_max":707,"o":"m 319 836 l 292 836 q 294 952 288 897 q 324 1041 301 1007 q 390 1075 347 1075 q 447 1050 429 1075 q 465 981 465 1025 q 432 831 465 893 l 407 833 q 576 860 482 860 q 672 837 636 860 q 707 760 707 814 q 665 682 707 708 q 561 656 624 656 q 481 659 524 656 q 399 671 439 663 l 422 700 q 447 580 435 647 q 468 440 458 513 q 483 300 478 368 q 489 178 489 232 q 461 38 489 89 q 379 -14 433 -14 q 312 13 336 -14 q 277 80 288 39 q 265 165 267 121 q 263 246 263 210 q 268 384 263 307 q 284 543 274 461 q 308 701 294 625 l 336 678 q 161 642 265 642 q 63 665 97 642 q 28 739 28 689 q 67 823 28 793 q 171 853 106 853 q 252 848 214 853 q 319 836 290 843 z "},"ť":{"ha":735,"x_min":28,"x_max":806,"o":"m 319 836 l 292 836 q 294 952 288 897 q 324 1041 301 1007 q 390 1075 347 1075 q 447 1050 429 1075 q 465 981 465 1025 q 432 831 465 893 l 407 833 q 576 860 482 860 q 672 837 636 860 q 707 760 707 814 q 665 682 707 708 q 561 656 624 656 q 481 659 524 656 q 399 671 439 663 l 422 700 q 447 580 435 647 q 468 440 458 513 q 483 300 478 368 q 489 178 489 232 q 461 38 489 89 q 379 -14 433 -14 q 312 13 336 -14 q 277 80 288 39 q 265 165 267 121 q 263 246 263 210 q 268 384 263 307 q 284 543 274 461 q 308 701 294 625 l 336 678 q 161 642 265 642 q 63 665 97 642 q 28 739 28 689 q 67 823 28 793 q 171 853 106 853 q 252 848 214 853 q 319 836 290 843 m 594 935 q 576 989 578 949 q 585 1085 575 1029 q 603 1171 594 1131 q 633 1233 611 1211 q 680 1258 651 1256 q 738 1251 708 1260 q 783 1229 767 1243 q 804 1184 806 1211 q 781 1113 803 1157 q 742 1048 764 1081 q 701 988 721 1015 q 667 942 682 960 q 632 924 654 926 q 594 935 610 922 z "},"ț":{"ha":735,"x_min":28,"x_max":707,"o":"m 319 836 l 292 836 q 294 952 288 897 q 324 1041 301 1007 q 390 1075 347 1075 q 447 1050 429 1075 q 465 981 465 1025 q 432 831 465 893 l 407 833 q 576 860 482 860 q 672 837 636 860 q 707 760 707 814 q 665 682 707 708 q 561 656 624 656 q 481 659 524 656 q 399 671 439 663 l 422 700 q 447 580 435 647 q 468 440 458 513 q 483 300 478 368 q 489 178 489 232 q 461 38 489 89 q 379 -14 433 -14 q 312 13 336 -14 q 277 80 288 39 q 265 165 267 121 q 263 246 263 210 q 268 384 263 307 q 284 543 274 461 q 308 701 294 625 l 336 678 q 161 642 265 642 q 63 665 97 642 q 28 739 28 689 q 67 823 28 793 q 171 853 106 853 q 252 848 214 853 q 319 836 290 843 m 371 -244 q 279 -221 306 -244 q 253 -153 253 -197 q 263 -104 253 -128 q 299 -65 274 -81 q 369 -50 325 -50 q 452 -77 421 -50 q 483 -164 483 -104 q 466 -235 483 -196 q 421 -306 449 -274 q 376 -346 399 -332 q 333 -360 354 -360 q 310 -353 319 -360 q 300 -335 300 -347 q 312 -297 300 -321 q 363 -231 324 -272 l 371 -244 z "},"u":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 z "},"ú":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 346 908 q 375 958 346 931 q 451 1021 404 986 q 541 1078 499 1054 q 615 1103 583 1103 q 664 1087 643 1103 q 697 1049 685 1071 q 710 1007 710 1026 q 684 963 710 981 q 607 926 658 944 q 522 901 567 913 q 440 884 478 890 q 376 878 401 878 q 354 887 363 878 q 346 908 346 896 z "},"ŭ":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 464 879 q 315 931 368 879 q 261 1051 261 983 q 315 1108 261 1108 q 379 1056 368 1108 q 406 1002 388 1019 q 463 985 424 985 q 516 1000 499 985 q 542 1047 533 1015 q 567 1103 551 1083 q 613 1122 582 1122 q 653 1106 640 1122 q 667 1058 667 1089 q 643 970 667 1011 q 574 904 619 929 q 464 879 529 879 z "},"û":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 469 1114 q 530 1101 492 1114 q 604 1065 568 1088 q 671 1014 647 1039 q 694 954 694 989 q 673 906 694 924 q 619 889 651 889 q 528 930 575 889 q 447 1042 482 971 l 468 1046 q 372 921 419 960 q 288 882 325 882 q 250 895 265 882 q 235 931 235 908 q 260 992 235 963 q 328 1051 285 1021 q 404 1097 368 1079 q 469 1114 440 1114 z "},"ü":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 300 893 q 218 921 244 893 q 192 986 192 949 q 226 1065 192 1038 q 324 1092 261 1092 q 404 1062 378 1092 q 431 990 431 1032 q 394 918 431 943 q 300 893 357 893 m 624 1106 q 708 1075 682 1106 q 735 1004 735 1044 q 703 926 735 953 q 610 900 671 900 q 525 929 553 900 q 497 1000 497 958 q 532 1078 497 1051 q 624 1106 567 1106 z "},"ù":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 582 908 q 574 887 582 896 q 551 878 567 878 q 488 884 526 878 q 406 901 450 890 q 321 926 363 913 q 244 963 269 944 q 218 1007 218 981 q 231 1049 218 1026 q 265 1087 243 1071 q 313 1103 286 1103 q 387 1078 344 1103 q 476 1021 429 1054 q 553 958 525 986 q 582 908 582 931 z "},"ű":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 564 881 q 538 890 550 881 q 526 915 526 900 q 539 961 526 933 q 572 1024 551 989 q 604 1072 586 1044 q 644 1121 622 1100 q 694 1142 667 1142 q 738 1131 715 1142 q 776 1102 761 1119 q 792 1068 792 1085 q 740 996 792 1042 q 690 954 718 975 q 634 916 661 933 q 589 888 607 899 q 577 883 583 885 q 564 881 571 881 m 297 881 q 272 890 283 881 q 260 914 260 899 q 272 960 260 933 q 307 1022 285 988 q 344 1080 326 1053 q 383 1124 363 1107 q 429 1140 403 1140 q 472 1129 450 1140 q 510 1101 494 1118 q 525 1068 525 1085 q 476 994 525 1039 q 421 952 451 974 q 363 913 390 931 q 317 888 335 896 q 306 883 311 885 q 297 881 300 881 z "},"ū":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 306 893 q 226 913 251 893 q 200 965 200 933 q 223 1015 200 997 q 300 1046 246 1032 q 398 1061 344 1056 q 506 1069 451 1067 q 604 1072 560 1072 q 699 1053 671 1072 q 728 1001 728 1033 q 704 946 728 967 q 635 917 681 925 q 531 904 592 910 q 410 896 469 899 q 306 893 350 893 z "},"ų":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 656 -293 q 537 -261 583 -293 q 490 -167 490 -229 q 528 -63 490 -117 q 654 39 567 -10 l 763 42 q 641 -58 686 -6 q 596 -137 596 -110 q 613 -162 596 -156 q 657 -169 629 -169 q 690 -168 672 -169 q 728 -167 707 -167 q 769 -181 756 -167 q 782 -221 782 -196 q 749 -275 782 -257 q 656 -293 717 -293 z "},"ů":{"ha":889,"x_min":85,"x_max":804,"o":"m 710 8 q 652 34 672 8 q 625 101 632 60 q 618 188 618 142 l 625 193 q 571 90 611 133 q 478 24 531 47 q 372 1 425 1 q 243 35 301 1 q 153 138 185 68 q 103 323 121 211 q 85 553 85 435 q 90 671 85 617 q 108 760 96 725 q 142 813 119 796 q 199 831 164 831 q 262 799 239 831 q 290 713 285 768 q 298 599 296 667 q 302 465 300 532 q 308 351 304 397 q 351 228 317 268 q 436 189 386 189 q 549 244 510 189 q 588 400 588 300 q 582 513 588 450 q 570 636 576 576 q 564 735 564 696 q 586 828 564 800 q 647 857 608 857 q 703 839 681 857 q 740 789 726 821 q 774 675 760 747 q 796 511 788 603 q 804 318 804 419 q 783 85 804 163 q 710 8 763 8 m 461 875 q 329 905 382 875 q 276 997 276 935 q 328 1102 276 1061 q 478 1143 381 1143 q 608 1105 567 1143 q 650 1014 650 1067 q 599 914 650 953 q 461 875 549 875 m 453 950 q 530 965 499 950 q 561 1008 561 979 q 538 1055 561 1038 q 464 1072 514 1072 q 389 1051 413 1072 q 365 1007 365 1031 q 390 966 365 982 q 453 950 414 950 z "},"v":{"ha":807,"x_min":35,"x_max":772,"o":"m 125 874 q 206 832 179 874 q 250 704 232 790 q 293 534 265 631 q 356 336 321 438 q 429 142 392 235 l 435 142 q 497 325 468 228 q 545 516 525 422 q 572 683 565 610 q 601 812 581 774 q 668 850 622 850 q 744 811 717 850 q 772 690 772 772 q 758 543 772 621 q 719 389 743 465 q 664 247 694 313 q 592 112 628 169 q 512 22 556 54 q 406 -10 468 -10 q 292 38 339 -10 q 188 186 244 85 q 106 368 140 274 q 53 553 72 463 q 35 719 35 644 q 56 835 35 797 q 125 874 78 874 z "},"w":{"ha":1067,"x_min":35,"x_max":1032,"o":"m 35 564 q 69 772 35 708 q 158 836 103 836 q 208 813 190 836 q 232 752 225 790 q 239 667 239 714 q 240 527 239 607 q 242 363 240 447 q 247 207 244 279 l 253 207 q 340 506 296 389 q 430 678 383 622 q 524 735 476 735 q 622 678 575 735 q 713 508 668 622 q 806 221 758 394 l 811 221 q 817 472 815 340 q 818 714 818 604 q 844 831 818 793 q 918 868 871 868 q 1005 806 978 868 q 1032 640 1032 744 q 1024 477 1032 564 q 1003 310 1017 390 q 969 169 989 229 q 905 35 940 81 q 813 -11 869 -11 q 710 49 761 -11 q 615 231 660 110 q 533 532 571 351 l 528 532 q 442 244 492 360 q 338 69 393 128 q 229 11 283 11 q 134 63 172 11 q 71 221 96 114 q 51 337 60 275 q 39 458 43 399 q 35 564 35 518 z "},"ẃ":{"ha":1067,"x_min":35,"x_max":1032,"o":"m 35 564 q 69 772 35 708 q 158 836 103 836 q 208 813 190 836 q 232 752 225 790 q 239 667 239 714 q 240 527 239 607 q 242 363 240 447 q 247 207 244 279 l 253 207 q 340 506 296 389 q 430 678 383 622 q 524 735 476 735 q 622 678 575 735 q 713 508 668 622 q 806 221 758 394 l 811 221 q 817 472 815 340 q 818 714 818 604 q 844 831 818 793 q 918 868 871 868 q 1005 806 978 868 q 1032 640 1032 744 q 1024 477 1032 564 q 1003 310 1017 390 q 969 169 989 229 q 905 35 940 81 q 813 -11 869 -11 q 710 49 761 -11 q 615 231 660 110 q 533 532 571 351 l 528 532 q 442 244 492 360 q 338 69 393 128 q 229 11 283 11 q 134 63 172 11 q 71 221 96 114 q 51 337 60 275 q 39 458 43 399 q 35 564 35 518 m 415 924 q 444 974 415 946 q 521 1036 474 1001 q 610 1094 568 1069 q 685 1118 653 1118 q 733 1102 713 1118 q 767 1064 754 1086 q 779 1022 779 1042 q 753 978 779 996 q 676 942 728 960 q 592 917 636 928 q 509 899 547 906 q 446 893 471 893 q 424 902 432 893 q 415 924 415 911 z "},"ŵ":{"ha":1067,"x_min":35,"x_max":1032,"o":"m 35 564 q 69 772 35 708 q 158 836 103 836 q 208 813 190 836 q 232 752 225 790 q 239 667 239 714 q 240 527 239 607 q 242 363 240 447 q 247 207 244 279 l 253 207 q 340 506 296 389 q 430 678 383 622 q 524 735 476 735 q 622 678 575 735 q 713 508 668 622 q 806 221 758 394 l 811 221 q 817 472 815 340 q 818 714 818 604 q 844 831 818 793 q 918 868 871 868 q 1005 806 978 868 q 1032 640 1032 744 q 1024 477 1032 564 q 1003 310 1017 390 q 969 169 989 229 q 905 35 940 81 q 813 -11 869 -11 q 710 49 761 -11 q 615 231 660 110 q 533 532 571 351 l 528 532 q 442 244 492 360 q 338 69 393 128 q 229 11 283 11 q 134 63 172 11 q 71 221 96 114 q 51 337 60 275 q 39 458 43 399 q 35 564 35 518 m 539 1129 q 599 1116 561 1129 q 674 1081 638 1103 q 740 1029 717 1054 q 764 969 764 1004 q 742 922 764 939 q 689 904 721 904 q 598 945 644 904 q 517 1057 551 986 l 538 1061 q 442 936 489 975 q 357 897 394 897 q 319 910 335 897 q 304 946 304 924 q 329 1007 304 978 q 397 1067 354 1036 q 474 1112 438 1094 q 539 1129 510 1129 z "},"ẅ":{"ha":1067,"x_min":35,"x_max":1032,"o":"m 35 564 q 69 772 35 708 q 158 836 103 836 q 208 813 190 836 q 232 752 225 790 q 239 667 239 714 q 240 527 239 607 q 242 363 240 447 q 247 207 244 279 l 253 207 q 340 506 296 389 q 430 678 383 622 q 524 735 476 735 q 622 678 575 735 q 713 508 668 622 q 806 221 758 394 l 811 221 q 817 472 815 340 q 818 714 818 604 q 844 831 818 793 q 918 868 871 868 q 1005 806 978 868 q 1032 640 1032 744 q 1024 477 1032 564 q 1003 310 1017 390 q 969 169 989 229 q 905 35 940 81 q 813 -11 869 -11 q 710 49 761 -11 q 615 231 660 110 q 533 532 571 351 l 528 532 q 442 244 492 360 q 338 69 393 128 q 229 11 283 11 q 134 63 172 11 q 71 221 96 114 q 51 337 60 275 q 39 458 43 399 q 35 564 35 518 m 369 908 q 288 936 314 908 q 261 1001 261 964 q 296 1080 261 1053 q 393 1107 331 1107 q 474 1077 447 1107 q 500 1006 500 1047 q 463 933 500 958 q 369 908 426 908 m 693 1121 q 778 1090 751 1121 q 804 1019 804 1060 q 772 942 804 968 q 679 915 740 915 q 594 944 622 915 q 567 1015 567 974 q 601 1094 567 1067 q 693 1121 636 1121 z "},"ẁ":{"ha":1067,"x_min":35,"x_max":1032,"o":"m 35 564 q 69 772 35 708 q 158 836 103 836 q 208 813 190 836 q 232 752 225 790 q 239 667 239 714 q 240 527 239 607 q 242 363 240 447 q 247 207 244 279 l 253 207 q 340 506 296 389 q 430 678 383 622 q 524 735 476 735 q 622 678 575 735 q 713 508 668 622 q 806 221 758 394 l 811 221 q 817 472 815 340 q 818 714 818 604 q 844 831 818 793 q 918 868 871 868 q 1005 806 978 868 q 1032 640 1032 744 q 1024 477 1032 564 q 1003 310 1017 390 q 969 169 989 229 q 905 35 940 81 q 813 -11 869 -11 q 710 49 761 -11 q 615 231 660 110 q 533 532 571 351 l 528 532 q 442 244 492 360 q 338 69 393 128 q 229 11 283 11 q 134 63 172 11 q 71 221 96 114 q 51 337 60 275 q 39 458 43 399 q 35 564 35 518 m 651 924 q 644 902 651 911 q 621 893 636 893 q 558 899 596 893 q 476 917 519 906 q 390 942 432 928 q 313 978 339 960 q 288 1022 288 996 q 300 1064 288 1042 q 334 1102 313 1086 q 382 1118 356 1118 q 456 1094 414 1118 q 546 1036 499 1069 q 623 974 594 1001 q 651 924 651 946 z "},"x":{"ha":875,"x_min":29,"x_max":847,"o":"m 124 -12 q 57 16 85 -12 q 29 88 29 44 q 69 197 29 138 q 187 313 110 256 q 371 413 264 369 l 371 418 q 112 586 194 493 q 29 757 29 679 q 44 811 29 789 q 83 846 58 833 q 133 858 107 858 q 244 816 190 858 q 349 695 297 774 q 449 507 400 617 l 454 507 q 602 784 525 697 q 763 871 679 871 q 825 845 803 871 q 847 781 847 819 q 768 601 847 689 q 528 436 689 514 l 528 429 q 749 259 676 347 q 822 104 822 171 q 798 38 822 63 q 740 13 774 13 q 632 56 682 13 q 538 176 582 99 q 456 353 494 253 l 450 353 q 344 145 399 226 q 233 26 289 64 q 124 -12 178 -12 z "},"y":{"ha":853,"x_min":35,"x_max":818,"o":"m 222 -276 q 147 -196 147 -276 q 178 -90 147 -151 q 267 42 208 -29 q 411 186 326 113 l 410 175 q 130 497 225 358 q 35 738 35 636 q 60 815 35 788 q 129 843 86 843 q 311 710 221 843 q 482 304 401 576 l 488 304 q 600 724 540 590 q 742 858 660 858 q 799 831 781 858 q 818 756 818 804 q 801 649 818 715 q 752 501 783 583 q 680 329 721 418 q 590 154 639 240 q 379 -173 467 -69 q 222 -276 292 -276 z "},"ý":{"ha":853,"x_min":35,"x_max":818,"o":"m 222 -276 q 147 -196 147 -276 q 178 -90 147 -151 q 267 42 208 -29 q 411 186 326 113 l 410 175 q 130 497 225 358 q 35 738 35 636 q 60 815 35 788 q 129 843 86 843 q 311 710 221 843 q 482 304 401 576 l 488 304 q 600 724 540 590 q 742 858 660 858 q 799 831 781 858 q 818 756 818 804 q 801 649 818 715 q 752 501 783 583 q 680 329 721 418 q 590 154 639 240 q 379 -173 467 -69 q 222 -276 292 -276 m 317 913 q 346 963 317 935 q 422 1025 375 990 q 512 1083 469 1058 q 586 1107 554 1107 q 635 1091 614 1107 q 668 1053 656 1075 q 681 1011 681 1031 q 655 967 681 985 q 578 931 629 949 q 493 906 538 917 q 410 888 449 894 q 347 882 372 882 q 325 891 333 882 q 317 913 317 900 z "},"ŷ":{"ha":853,"x_min":35,"x_max":818,"o":"m 222 -276 q 147 -196 147 -276 q 178 -90 147 -151 q 267 42 208 -29 q 411 186 326 113 l 410 175 q 130 497 225 358 q 35 738 35 636 q 60 815 35 788 q 129 843 86 843 q 311 710 221 843 q 482 304 401 576 l 488 304 q 600 724 540 590 q 742 858 660 858 q 799 831 781 858 q 818 756 818 804 q 801 649 818 715 q 752 501 783 583 q 680 329 721 418 q 590 154 639 240 q 379 -173 467 -69 q 222 -276 292 -276 m 440 1118 q 501 1105 463 1118 q 575 1069 539 1092 q 642 1018 618 1043 q 665 958 665 993 q 644 910 665 928 q 590 893 622 893 q 499 934 546 893 q 418 1046 453 975 l 439 1050 q 343 925 390 964 q 258 886 296 886 q 221 899 236 886 q 206 935 206 913 q 231 996 206 967 q 299 1056 256 1025 q 375 1101 339 1083 q 440 1118 411 1118 z "},"ÿ":{"ha":853,"x_min":35,"x_max":818,"o":"m 222 -276 q 147 -196 147 -276 q 178 -90 147 -151 q 267 42 208 -29 q 411 186 326 113 l 410 175 q 130 497 225 358 q 35 738 35 636 q 60 815 35 788 q 129 843 86 843 q 311 710 221 843 q 482 304 401 576 l 488 304 q 600 724 540 590 q 742 858 660 858 q 799 831 781 858 q 818 756 818 804 q 801 649 818 715 q 752 501 783 583 q 680 329 721 418 q 590 154 639 240 q 379 -173 467 -69 q 222 -276 292 -276 m 271 897 q 189 925 215 897 q 163 990 163 953 q 197 1069 163 1042 q 294 1096 232 1096 q 375 1066 349 1096 q 401 994 401 1036 q 365 922 401 947 q 271 897 328 897 m 594 1110 q 679 1079 653 1110 q 706 1008 706 1049 q 674 931 706 957 q 581 904 642 904 q 496 933 524 904 q 468 1004 468 963 q 503 1083 468 1056 q 594 1110 538 1110 z "},"ỳ":{"ha":853,"x_min":35,"x_max":818,"o":"m 222 -276 q 147 -196 147 -276 q 178 -90 147 -151 q 267 42 208 -29 q 411 186 326 113 l 410 175 q 130 497 225 358 q 35 738 35 636 q 60 815 35 788 q 129 843 86 843 q 311 710 221 843 q 482 304 401 576 l 488 304 q 600 724 540 590 q 742 858 660 858 q 799 831 781 858 q 818 756 818 804 q 801 649 818 715 q 752 501 783 583 q 680 329 721 418 q 590 154 639 240 q 379 -173 467 -69 q 222 -276 292 -276 m 553 913 q 545 891 553 900 q 522 882 538 882 q 459 888 497 882 q 377 906 421 894 q 292 931 333 917 q 215 967 240 949 q 189 1011 189 985 q 201 1053 189 1031 q 235 1091 214 1075 q 283 1107 257 1107 q 358 1083 315 1107 q 447 1025 400 1058 q 524 963 496 990 q 553 913 553 935 z "},"z":{"ha":801,"x_min":49,"x_max":753,"o":"m 49 147 q 115 300 49 214 q 304 486 182 386 q 593 690 426 586 l 593 696 q 453 663 529 678 q 306 640 376 649 q 188 631 235 631 q 83 653 115 631 q 50 719 50 675 q 73 776 50 751 q 135 815 96 801 q 232 844 175 832 q 353 864 289 857 q 476 871 417 871 q 629 859 568 871 q 722 816 690 847 q 753 725 753 785 q 721 633 753 686 q 622 512 689 579 q 447 361 554 444 q 190 178 340 278 l 190 172 q 307 201 240 189 q 447 222 374 214 q 586 229 519 229 q 706 208 669 229 q 742 138 742 186 q 656 32 742 74 q 404 -10 569 -10 q 136 32 224 -10 q 49 147 49 74 z "},"ź":{"ha":801,"x_min":49,"x_max":753,"o":"m 49 147 q 115 300 49 214 q 304 486 182 386 q 593 690 426 586 l 593 696 q 453 663 529 678 q 306 640 376 649 q 188 631 235 631 q 83 653 115 631 q 50 719 50 675 q 73 776 50 751 q 135 815 96 801 q 232 844 175 832 q 353 864 289 857 q 476 871 417 871 q 629 859 568 871 q 722 816 690 847 q 753 725 753 785 q 721 633 753 686 q 622 512 689 579 q 447 361 554 444 q 190 178 340 278 l 190 172 q 307 201 240 189 q 447 222 374 214 q 586 229 519 229 q 706 208 669 229 q 742 138 742 186 q 656 32 742 74 q 404 -10 569 -10 q 136 32 224 -10 q 49 147 49 74 m 286 924 q 315 974 286 946 q 392 1036 344 1001 q 481 1094 439 1069 q 556 1118 524 1118 q 604 1102 583 1118 q 638 1064 625 1086 q 650 1022 650 1042 q 624 978 650 996 q 547 942 599 960 q 463 917 507 928 q 380 899 418 906 q 317 893 342 893 q 294 902 303 893 q 286 924 286 911 z "},"ž":{"ha":801,"x_min":49,"x_max":753,"o":"m 49 147 q 115 300 49 214 q 304 486 182 386 q 593 690 426 586 l 593 696 q 453 663 529 678 q 306 640 376 649 q 188 631 235 631 q 83 653 115 631 q 50 719 50 675 q 73 776 50 751 q 135 815 96 801 q 232 844 175 832 q 353 864 289 857 q 476 871 417 871 q 629 859 568 871 q 722 816 690 847 q 753 725 753 785 q 721 633 753 686 q 622 512 689 579 q 447 361 554 444 q 190 178 340 278 l 190 172 q 307 201 240 189 q 447 222 374 214 q 586 229 519 229 q 706 208 669 229 q 742 138 742 186 q 656 32 742 74 q 404 -10 569 -10 q 136 32 224 -10 q 49 147 49 74 m 410 911 q 344 929 381 911 q 268 974 308 947 q 200 1033 225 1004 q 175 1094 175 1063 q 190 1130 175 1117 q 228 1143 206 1143 q 313 1104 265 1143 q 408 979 360 1065 l 388 983 q 469 1095 422 1054 q 560 1136 515 1136 q 613 1119 592 1136 q 635 1071 635 1101 q 611 1011 635 1036 q 544 960 588 986 q 470 924 508 938 q 410 911 432 911 z "},"ż":{"ha":801,"x_min":49,"x_max":753,"o":"m 49 147 q 115 300 49 214 q 304 486 182 386 q 593 690 426 586 l 593 696 q 453 663 529 678 q 306 640 376 649 q 188 631 235 631 q 83 653 115 631 q 50 719 50 675 q 73 776 50 751 q 135 815 96 801 q 232 844 175 832 q 353 864 289 857 q 476 871 417 871 q 629 859 568 871 q 722 816 690 847 q 753 725 753 785 q 721 633 753 686 q 622 512 689 579 q 447 361 554 444 q 190 178 340 278 l 190 172 q 307 201 240 189 q 447 222 374 214 q 586 229 519 229 q 706 208 669 229 q 742 138 742 186 q 656 32 742 74 q 404 -10 569 -10 q 136 32 224 -10 q 49 147 49 74 m 414 1121 q 494 1090 469 1121 q 518 1019 518 1060 q 488 942 518 969 q 404 915 458 915 q 325 945 351 915 q 299 1015 299 975 q 331 1094 299 1068 q 414 1121 363 1121 z "},"ª":{"ha":592,"x_min":28,"x_max":524,"o":"m 453 542 q 404 567 417 542 q 389 644 392 593 l 419 636 q 224 539 367 539 q 76 588 124 539 q 28 706 28 638 q 84 827 28 782 q 231 872 140 872 q 335 856 290 872 q 410 808 379 839 l 376 793 q 343 914 371 879 q 258 949 315 949 q 208 938 238 949 q 149 917 178 928 q 97 907 119 907 q 56 924 71 907 q 42 967 42 940 q 74 1030 42 1001 q 158 1076 106 1058 q 271 1094 210 1094 q 400 1060 346 1094 q 481 960 454 1025 q 514 838 504 906 q 524 696 524 771 q 507 574 524 607 q 453 542 490 542 m 260 657 q 339 672 301 657 q 376 717 376 688 q 345 753 376 740 q 268 765 314 765 q 194 751 218 765 q 171 713 171 736 q 260 657 171 657 z "},"º":{"ha":536,"x_min":-11,"x_max":492,"o":"m 232 546 q 56 615 122 546 q -11 803 -11 685 q 19 947 -11 885 q 105 1043 50 1008 q 233 1078 160 1078 q 370 1044 313 1078 q 460 951 428 1011 q 492 811 492 890 q 421 617 492 689 q 232 546 350 546 m 243 681 q 322 717 293 681 q 350 821 350 754 q 322 924 350 888 q 243 960 293 960 q 163 924 192 960 q 135 821 135 888 q 163 717 135 754 q 243 681 192 681 z "},"₀":{"ha":626,"x_min":51,"x_max":575,"o":"m 306 -283 q 121 -206 190 -283 q 51 4 51 -128 q 84 167 51 97 q 176 276 117 236 q 314 315 235 315 q 451 278 393 315 q 542 174 510 240 q 575 22 575 108 q 501 -201 575 -118 q 306 -283 428 -283 m 317 -157 q 394 -115 365 -157 q 424 21 424 -72 q 394 148 424 108 q 317 188 365 188 q 238 148 267 188 q 208 21 208 108 q 238 -115 208 -72 q 317 -157 267 -157 z "},"₁":{"ha":361,"x_min":24,"x_max":293,"o":"m 207 310 q 242 299 228 310 q 265 263 256 288 q 285 169 278 229 q 293 25 293 110 q 288 -80 293 -26 q 275 -178 283 -133 q 256 -247 267 -222 q 233 -285 246 -272 q 199 -299 219 -299 q 143 -236 157 -299 q 134 -165 138 -206 q 131 -79 131 -124 q 143 58 131 -14 q 174 188 156 131 l 199 176 q 135 127 171 144 q 67 110 99 110 q 35 120 47 110 q 24 149 24 131 q 51 224 24 186 q 122 285 79 261 q 207 310 165 310 z "},"₂":{"ha":494,"x_min":26,"x_max":468,"o":"m 235 306 q 410 257 351 306 q 468 131 468 208 q 390 -34 468 40 q 142 -189 313 -108 l 128 -172 l 144 -150 q 374 -165 303 -144 q 446 -232 446 -185 q 419 -282 446 -264 q 343 -300 393 -300 q 228 -293 293 -300 q 110 -275 163 -286 q 47 -250 68 -267 q 26 -203 26 -233 q 60 -138 26 -172 q 179 -42 94 -104 q 259 22 232 -3 q 297 65 286 46 q 307 103 307 83 q 288 144 307 129 q 225 158 269 158 q 192 155 208 158 q 160 146 176 151 q 126 138 143 142 q 90 135 108 135 q 46 148 61 135 q 31 183 31 161 q 87 268 31 231 q 235 306 143 306 z "},"₃":{"ha":501,"x_min":35,"x_max":460,"o":"m 253 314 q 398 276 340 314 q 456 160 456 238 q 409 52 456 99 q 267 -12 363 6 l 258 6 l 271 21 q 413 -28 365 13 q 460 -133 460 -68 q 400 -251 460 -203 q 224 -299 340 -299 q 76 -274 118 -299 q 36 -212 35 -249 q 51 -170 36 -187 q 97 -153 67 -153 q 125 -155 111 -153 q 154 -160 139 -157 q 185 -165 169 -162 q 218 -168 201 -168 q 279 -156 260 -168 q 299 -125 299 -143 q 281 -92 299 -104 q 197 -67 263 -79 q 131 -46 156 -58 q 107 -6 107 -33 q 133 40 107 24 q 201 71 158 57 q 278 105 256 90 q 300 140 300 119 q 228 179 300 179 q 199 176 214 179 q 168 171 185 174 q 135 166 153 168 q 100 164 118 164 q 40 213 40 164 q 100 285 40 256 q 253 314 160 314 z "},"₄":{"ha":538,"x_min":24,"x_max":515,"o":"m 303 -304 q 247 -281 265 -304 q 229 -218 229 -258 q 251 -106 229 -165 l 283 -128 q 208 -146 256 -139 q 113 -153 160 -153 q 47 -137 69 -153 q 24 -93 24 -122 q 39 -8 24 -57 q 78 92 54 42 q 126 185 101 143 q 213 288 165 250 q 324 326 261 326 q 413 297 386 326 q 440 211 440 267 q 431 96 440 161 q 403 -36 421 31 l 376 -14 q 404 -8 389 -10 q 432 -6 419 -6 q 515 -71 515 -6 q 489 -122 515 -104 q 422 -140 463 -140 q 391 -138 407 -140 q 364 -132 375 -136 l 386 -117 q 390 -156 389 -132 q 392 -203 392 -181 q 368 -278 392 -251 q 303 -304 344 -304 m 193 -19 q 251 -1 226 -19 q 288 50 275 17 q 300 131 300 83 q 293 169 300 158 q 272 179 286 179 q 219 155 244 179 q 176 94 193 131 q 160 22 160 58 q 168 -11 160 -3 q 193 -19 176 -19 z "},"₅":{"ha":497,"x_min":35,"x_max":456,"o":"m 456 228 q 431 178 456 197 q 365 158 407 158 q 271 163 326 158 q 172 174 215 167 l 210 197 q 201 103 208 151 q 182 25 193 54 l 143 53 q 221 58 182 58 q 397 13 338 58 q 456 -108 456 -32 q 397 -244 456 -189 q 224 -299 339 -299 q 76 -272 118 -299 q 36 -208 35 -246 q 51 -166 36 -183 q 97 -149 67 -149 q 162 -156 124 -149 q 228 -164 200 -164 q 315 -117 315 -164 q 293 -77 315 -89 q 224 -65 271 -65 q 197 -66 217 -65 q 160 -67 178 -67 q 138 -67 143 -67 q 81 -51 100 -67 q 63 3 63 -35 q 65 75 63 33 q 72 158 68 117 q 81 224 76 199 q 110 286 89 264 q 178 308 132 308 q 283 305 222 308 q 386 296 343 301 q 456 228 456 286 z "},"₆":{"ha":539,"x_min":31,"x_max":507,"o":"m 467 263 q 403 165 467 218 q 210 53 339 111 l 201 51 l 196 74 q 240 83 217 81 q 282 86 263 86 q 450 33 393 86 q 507 -100 507 -21 q 476 -207 507 -162 q 394 -274 446 -251 q 278 -297 342 -297 q 90 -244 149 -297 q 31 -108 31 -192 q 65 35 31 -33 q 169 179 99 103 q 294 285 235 250 q 399 319 353 319 q 448 304 429 319 q 467 263 467 289 m 269 -26 q 196 -46 221 -26 q 171 -97 171 -65 q 263 -160 171 -160 q 335 -140 310 -160 q 361 -87 361 -121 q 337 -42 361 -58 q 269 -26 313 -26 z "},"₇":{"ha":454,"x_min":24,"x_max":432,"o":"m 138 310 q 229 308 179 310 q 326 301 279 306 q 403 276 375 296 q 432 214 432 256 q 417 146 432 193 q 371 32 403 99 q 272 -158 314 -86 q 194 -265 231 -231 q 114 -299 157 -299 q 74 -285 88 -299 q 60 -246 60 -271 q 74 -183 60 -221 q 111 -101 88 -144 q 208 53 149 -35 q 333 218 268 142 l 353 199 l 346 181 q 231 171 292 174 q 122 168 169 168 q 24 229 24 169 q 55 290 24 271 q 138 310 86 310 z "},"₈":{"ha":571,"x_min":42,"x_max":529,"o":"m 292 321 q 463 276 404 321 q 521 149 521 232 q 479 38 521 82 q 374 -25 438 -6 l 367 32 q 485 -19 442 21 q 529 -129 529 -58 q 466 -254 529 -210 q 268 -299 403 -299 q 92 -256 143 -299 q 42 -144 42 -212 q 92 -28 42 -74 q 232 32 142 18 l 236 -28 q 107 15 157 -28 q 57 138 57 57 q 88 240 57 200 q 173 301 119 281 q 292 321 226 321 m 374 132 q 349 169 374 158 q 288 179 325 179 q 188 124 188 179 q 206 86 188 99 q 271 74 224 74 q 349 88 325 74 q 374 132 374 101 m 289 -51 q 210 -69 235 -51 q 186 -111 186 -86 q 208 -149 186 -139 q 279 -160 229 -160 q 360 -144 338 -160 q 383 -101 383 -129 q 365 -65 383 -78 q 289 -51 346 -51 z "},"₉":{"ha":531,"x_min":31,"x_max":499,"o":"m 46 -212 q 67 -166 46 -183 q 126 -149 89 -149 q 149 -149 132 -149 q 183 -151 167 -150 q 206 -151 200 -151 q 311 -119 283 -151 q 339 -37 339 -87 q 338 -12 339 -24 l 379 -31 q 310 -62 349 -54 q 239 -71 271 -71 q 83 -18 136 -71 q 31 114 31 35 q 90 266 31 213 q 243 319 150 319 q 430 244 361 319 q 499 32 499 168 q 477 -103 499 -43 q 421 -207 456 -164 q 324 -276 381 -254 q 204 -297 267 -297 q 86 -275 126 -297 q 46 -212 46 -253 m 258 182 q 189 164 214 182 q 164 113 164 146 q 187 67 164 85 q 254 49 210 49 q 344 119 344 49 q 324 165 344 147 q 258 182 303 182 z "},"⁰":{"ha":626,"x_min":51,"x_max":575,"o":"m 306 550 q 121 628 190 550 q 51 838 51 706 q 84 1000 51 931 q 176 1109 117 1069 q 314 1149 235 1149 q 451 1111 393 1149 q 542 1008 510 1074 q 575 856 575 942 q 501 633 575 715 q 306 550 428 550 m 317 676 q 394 719 365 676 q 424 854 424 761 q 394 981 424 942 q 317 1021 365 1021 q 238 981 267 1021 q 208 854 208 942 q 238 719 208 761 q 317 676 267 676 z "},"¹":{"ha":361,"x_min":24,"x_max":293,"o":"m 207 1143 q 242 1132 228 1143 q 265 1096 256 1121 q 285 1003 278 1063 q 293 858 293 943 q 288 753 293 807 q 275 656 283 700 q 256 586 267 611 q 233 548 246 561 q 199 535 219 535 q 143 597 157 535 q 134 669 138 628 q 131 754 131 710 q 143 892 131 819 q 174 1021 156 964 l 199 1010 q 135 960 171 978 q 67 943 99 943 q 35 953 47 943 q 24 982 24 964 q 51 1057 24 1019 q 122 1119 79 1094 q 207 1143 165 1143 z "},"²":{"ha":494,"x_min":26,"x_max":468,"o":"m 235 1139 q 410 1090 351 1139 q 468 964 468 1042 q 390 799 468 874 q 142 644 313 725 l 128 661 l 144 683 q 374 669 303 689 q 446 601 446 649 q 419 551 446 569 q 343 533 393 533 q 228 540 293 533 q 110 558 163 547 q 47 583 68 567 q 26 631 26 600 q 60 695 26 661 q 179 792 94 729 q 259 855 232 831 q 297 898 286 879 q 307 936 307 917 q 288 977 307 963 q 225 992 269 992 q 192 988 208 992 q 160 979 176 985 q 126 972 143 975 q 90 968 108 968 q 46 981 61 968 q 31 1017 31 994 q 87 1101 31 1064 q 235 1139 143 1139 z "},"³":{"ha":501,"x_min":35,"x_max":460,"o":"m 253 1147 q 398 1109 340 1147 q 456 993 456 1071 q 409 885 456 932 q 267 821 363 839 l 258 839 l 271 854 q 413 806 365 846 q 460 700 460 765 q 400 583 460 631 q 224 535 340 535 q 76 560 118 535 q 36 621 35 585 q 51 663 36 646 q 97 681 67 681 q 125 678 111 681 q 154 674 139 676 q 185 668 169 671 q 218 665 201 665 q 279 678 260 665 q 299 708 299 690 q 281 742 299 729 q 197 767 263 754 q 131 788 156 775 q 107 828 107 800 q 133 874 107 857 q 201 904 158 890 q 278 938 256 924 q 300 974 300 953 q 228 1013 300 1013 q 199 1010 214 1013 q 168 1004 185 1007 q 135 999 153 1001 q 100 997 118 997 q 40 1046 40 997 q 100 1118 40 1089 q 253 1147 160 1147 z "},"⁴":{"ha":538,"x_min":24,"x_max":515,"o":"m 303 529 q 247 552 265 529 q 229 615 229 575 q 251 728 229 668 l 283 706 q 208 688 256 694 q 113 681 160 681 q 47 696 69 681 q 24 740 24 711 q 39 826 24 776 q 78 926 54 875 q 126 1018 101 976 q 213 1122 165 1083 q 324 1160 261 1160 q 413 1130 386 1160 q 440 1044 440 1100 q 431 929 440 994 q 403 797 421 864 l 376 819 q 404 826 389 824 q 432 828 419 828 q 515 763 515 828 q 489 711 515 729 q 422 693 463 693 q 391 695 407 693 q 364 701 375 697 l 386 717 q 390 677 389 701 q 392 631 392 653 q 368 556 392 582 q 303 529 344 529 m 193 814 q 251 832 226 814 q 288 883 275 850 q 300 964 300 917 q 293 1002 300 992 q 272 1013 286 1013 q 219 988 244 1013 q 176 928 193 964 q 160 856 160 892 q 168 822 160 831 q 193 814 176 814 z "},"⁵":{"ha":497,"x_min":35,"x_max":456,"o":"m 456 1061 q 431 1011 456 1031 q 365 992 407 992 q 271 996 326 992 q 172 1007 215 1000 l 210 1031 q 201 936 208 985 q 182 858 193 888 l 143 886 q 221 892 182 892 q 397 847 338 892 q 456 725 456 801 q 397 590 456 644 q 224 535 339 535 q 76 561 118 535 q 36 625 35 588 q 51 667 36 650 q 97 685 67 685 q 162 677 124 685 q 228 669 200 669 q 315 717 315 669 q 293 756 315 744 q 224 768 271 768 q 197 767 217 768 q 160 767 178 767 q 138 767 143 767 q 81 783 100 767 q 63 836 63 799 q 65 908 63 867 q 72 991 68 950 q 81 1057 76 1032 q 110 1119 89 1097 q 178 1142 132 1142 q 283 1138 222 1142 q 386 1129 343 1135 q 456 1061 456 1119 z "},"⁶":{"ha":539,"x_min":31,"x_max":507,"o":"m 467 1096 q 403 998 467 1051 q 210 886 339 944 l 201 885 l 196 907 q 240 917 217 914 q 282 919 263 919 q 450 866 393 919 q 507 733 507 813 q 476 626 507 671 q 394 559 446 582 q 278 536 342 536 q 90 589 149 536 q 31 725 31 642 q 65 868 31 800 q 169 1013 99 936 q 294 1118 235 1083 q 399 1153 353 1153 q 448 1138 429 1153 q 467 1096 467 1122 m 269 807 q 196 788 221 807 q 171 736 171 768 q 263 674 171 674 q 335 693 310 674 q 361 746 361 713 q 337 791 361 775 q 269 807 313 807 z "},"⁷":{"ha":454,"x_min":24,"x_max":432,"o":"m 138 1143 q 229 1141 179 1143 q 326 1135 279 1139 q 403 1109 375 1129 q 432 1047 432 1089 q 417 979 432 1026 q 371 865 403 932 q 272 675 314 747 q 194 569 231 603 q 114 535 157 535 q 74 549 88 535 q 60 588 60 563 q 74 651 60 613 q 111 732 88 689 q 208 887 149 799 q 333 1051 268 975 l 353 1032 l 346 1014 q 231 1004 292 1007 q 122 1001 169 1001 q 24 1063 24 1003 q 55 1124 24 1104 q 138 1143 86 1143 z "},"⁸":{"ha":571,"x_min":42,"x_max":529,"o":"m 292 1154 q 463 1110 404 1154 q 521 982 521 1065 q 479 872 521 915 q 374 808 438 828 l 367 865 q 485 815 442 854 q 529 704 529 775 q 466 579 529 624 q 268 535 403 535 q 92 578 143 535 q 42 689 42 621 q 92 806 42 760 q 232 865 142 851 l 236 806 q 107 848 157 806 q 57 971 57 890 q 88 1074 57 1033 q 173 1134 119 1114 q 292 1154 226 1154 m 374 965 q 349 1002 374 992 q 288 1013 325 1013 q 188 957 188 1013 q 206 919 188 932 q 271 907 224 907 q 349 921 325 907 q 374 965 374 935 m 289 782 q 210 765 235 782 q 186 722 186 747 q 208 684 186 694 q 279 674 229 674 q 360 689 338 674 q 383 732 383 704 q 365 769 383 756 q 289 782 346 782 z "},"⁹":{"ha":531,"x_min":31,"x_max":499,"o":"m 46 621 q 67 667 46 650 q 126 685 89 685 q 149 684 132 685 q 183 683 167 683 q 206 682 200 682 q 311 714 283 682 q 339 796 339 746 q 338 821 339 810 l 379 803 q 310 771 349 779 q 239 763 271 763 q 83 815 136 763 q 31 947 31 868 q 90 1099 31 1046 q 243 1153 150 1153 q 430 1077 361 1153 q 499 865 499 1001 q 477 730 499 790 q 421 626 456 669 q 324 558 381 579 q 204 536 267 536 q 86 558 126 536 q 46 621 46 581 m 258 1015 q 189 997 214 1015 q 164 946 164 979 q 187 900 164 918 q 254 882 210 882 q 344 953 344 882 q 324 998 344 981 q 258 1015 303 1015 z "},"⁄":{"ha":163,"x_min":-194,"x_max":385,"o":"m -135 -19 q -180 1 -165 -19 q -194 51 -194 21 q -161 191 -194 113 q -78 363 -128 269 q 24 564 -28 457 q 116 772 79 681 q 182 934 153 864 q 244 1053 211 1004 q 286 1101 265 1085 q 329 1118 307 1118 q 372 1099 360 1118 q 385 1050 385 1079 q 349 913 385 997 q 255 719 313 828 q 132 481 197 610 q 62 324 93 403 q 4 176 31 246 q -50 57 -22 107 q -87 3 -67 26 q -135 -19 -107 -19 z "},"⅟":{"ha":524,"x_min":24,"x_max":746,"o":"m 207 1083 q 242 1072 228 1083 q 265 1036 256 1061 q 285 943 278 1003 q 293 799 293 883 q 288 694 293 747 q 275 596 283 640 q 256 526 267 551 q 233 488 246 501 q 199 475 219 475 q 143 538 157 475 q 134 609 138 568 q 131 694 131 650 q 143 832 131 760 q 174 961 156 904 l 199 950 q 135 901 171 918 q 67 883 99 883 q 35 894 47 883 q 24 922 24 904 q 51 997 24 960 q 122 1059 79 1035 q 207 1083 165 1083 m 226 -19 q 181 1 196 -19 q 167 51 167 21 q 200 191 167 113 q 283 363 233 269 q 385 564 333 457 q 477 772 440 681 q 543 934 514 864 q 606 1053 572 1004 q 647 1101 626 1085 q 690 1118 668 1118 q 733 1099 721 1118 q 746 1050 746 1079 q 710 913 746 997 q 616 719 674 828 q 493 481 558 610 q 423 324 454 403 q 365 176 392 246 q 311 57 339 107 q 274 3 294 26 q 226 -19 254 -19 z "},"½":{"ha":1018,"x_min":24,"x_max":992,"o":"m 207 1083 q 242 1072 228 1083 q 265 1036 256 1061 q 285 943 278 1003 q 293 799 293 883 q 288 694 293 747 q 275 596 283 640 q 256 526 267 551 q 233 488 246 501 q 199 475 219 475 q 143 538 157 475 q 134 609 138 568 q 131 694 131 650 q 143 832 131 760 q 174 961 156 904 l 199 950 q 135 901 171 918 q 67 883 99 883 q 35 894 47 883 q 24 922 24 904 q 51 997 24 960 q 122 1059 79 1035 q 207 1083 165 1083 m 226 -19 q 181 1 196 -19 q 167 51 167 21 q 200 191 167 113 q 283 363 233 269 q 385 564 333 457 q 477 772 440 681 q 543 934 514 864 q 606 1053 572 1004 q 647 1101 626 1085 q 690 1118 668 1118 q 733 1099 721 1118 q 746 1050 746 1079 q 710 913 746 997 q 616 719 674 828 q 493 481 558 610 q 423 324 454 403 q 365 176 392 246 q 311 57 339 107 q 274 3 294 26 q 226 -19 254 -19 m 758 583 q 933 535 875 583 q 992 408 992 486 q 914 244 992 318 q 665 89 836 169 l 651 106 l 668 128 q 898 113 826 133 q 969 46 969 93 q 943 -4 969 14 q 867 -22 917 -22 q 751 -15 817 -22 q 633 3 686 -8 q 571 28 592 11 q 550 75 550 44 q 584 140 550 106 q 703 236 618 174 q 783 299 756 275 q 820 342 810 324 q 831 381 831 361 q 812 422 831 407 q 749 436 793 436 q 716 433 732 436 q 683 424 700 429 q 649 416 667 419 q 614 413 632 413 q 569 426 585 413 q 554 461 554 439 q 610 546 554 508 q 758 583 667 583 z "},"⅓":{"ha":1025,"x_min":24,"x_max":983,"o":"m 207 1083 q 242 1072 228 1083 q 265 1036 256 1061 q 285 943 278 1003 q 293 799 293 883 q 288 694 293 747 q 275 596 283 640 q 256 526 267 551 q 233 488 246 501 q 199 475 219 475 q 143 538 157 475 q 134 609 138 568 q 131 694 131 650 q 143 832 131 760 q 174 961 156 904 l 199 950 q 135 901 171 918 q 67 883 99 883 q 35 894 47 883 q 24 922 24 904 q 51 997 24 960 q 122 1059 79 1035 q 207 1083 165 1083 m 226 -19 q 181 1 196 -19 q 167 51 167 21 q 200 191 167 113 q 283 363 233 269 q 385 564 333 457 q 477 772 440 681 q 543 934 514 864 q 606 1053 572 1004 q 647 1101 626 1085 q 690 1118 668 1118 q 733 1099 721 1118 q 746 1050 746 1079 q 710 913 746 997 q 616 719 674 828 q 493 481 558 610 q 423 324 454 403 q 365 176 392 246 q 311 57 339 107 q 274 3 294 26 q 226 -19 254 -19 m 776 592 q 922 553 864 592 q 979 438 979 515 q 933 330 979 376 q 790 265 886 283 l 782 283 l 794 299 q 936 250 889 290 q 983 144 983 210 q 924 27 983 75 q 747 -21 864 -21 q 600 4 642 -21 q 560 65 558 29 q 575 108 560 90 q 621 125 590 125 q 649 123 635 125 q 678 118 663 121 q 709 113 693 115 q 742 110 725 110 q 803 122 783 110 q 822 153 822 135 q 804 186 822 174 q 721 211 786 199 q 655 232 679 219 q 631 272 631 244 q 656 318 631 301 q 725 349 682 335 q 801 383 779 368 q 824 418 824 397 q 751 457 824 457 q 723 454 738 457 q 692 449 708 451 q 659 444 676 446 q 624 442 642 442 q 564 490 564 442 q 624 563 564 533 q 776 592 683 592 z "},"¼":{"ha":1061,"x_min":24,"x_max":1039,"o":"m 207 1083 q 242 1072 228 1083 q 265 1036 256 1061 q 285 943 278 1003 q 293 799 293 883 q 288 694 293 747 q 275 596 283 640 q 256 526 267 551 q 233 488 246 501 q 199 475 219 475 q 143 538 157 475 q 134 609 138 568 q 131 694 131 650 q 143 832 131 760 q 174 961 156 904 l 199 950 q 135 901 171 918 q 67 883 99 883 q 35 894 47 883 q 24 922 24 904 q 51 997 24 960 q 122 1059 79 1035 q 207 1083 165 1083 m 226 -19 q 181 1 196 -19 q 167 51 167 21 q 200 191 167 113 q 283 363 233 269 q 385 564 333 457 q 477 772 440 681 q 543 934 514 864 q 606 1053 572 1004 q 647 1101 626 1085 q 690 1118 668 1118 q 733 1099 721 1118 q 746 1050 746 1079 q 710 913 746 997 q 616 719 674 828 q 493 481 558 610 q 423 324 454 403 q 365 176 392 246 q 311 57 339 107 q 274 3 294 26 q 226 -19 254 -19 m 826 -26 q 771 -3 789 -26 q 753 60 753 19 q 775 172 753 113 l 807 150 q 731 132 779 139 q 636 125 683 125 q 570 140 593 125 q 547 185 547 156 q 563 270 547 221 q 601 370 578 319 q 650 463 625 421 q 737 566 689 528 q 847 604 785 604 q 937 574 910 604 q 964 489 964 544 q 954 374 964 439 q 926 242 944 308 l 900 264 q 928 270 913 268 q 956 272 943 272 q 1039 207 1039 272 q 1013 156 1039 174 q 946 138 986 138 q 915 140 931 138 q 888 146 899 142 l 910 161 q 914 122 913 146 q 915 75 915 97 q 892 0 915 26 q 826 -26 868 -26 m 717 258 q 774 276 750 258 q 811 328 799 294 q 824 408 824 361 q 817 447 824 436 q 796 457 810 457 q 742 433 768 457 q 700 372 717 408 q 683 300 683 336 q 692 267 683 275 q 717 258 700 258 z "},"¾":{"ha":1201,"x_min":35,"x_max":1179,"o":"m 253 1088 q 398 1049 340 1088 q 456 933 456 1011 q 409 826 456 872 q 267 761 363 779 l 258 779 l 271 794 q 413 746 365 786 q 460 640 460 706 q 400 523 460 571 q 224 475 340 475 q 76 500 118 475 q 36 561 35 525 q 51 603 36 586 q 97 621 67 621 q 125 619 111 621 q 154 614 139 617 q 185 608 169 611 q 218 606 201 606 q 279 618 260 606 q 299 649 299 631 q 281 682 299 669 q 197 707 263 694 q 131 728 156 715 q 107 768 107 740 q 133 814 107 797 q 201 844 158 831 q 278 878 256 864 q 300 914 300 893 q 228 953 300 953 q 199 950 214 953 q 168 944 185 947 q 135 940 153 942 q 100 938 118 938 q 40 986 40 938 q 100 1058 40 1029 q 253 1088 160 1088 m 367 -19 q 322 1 336 -19 q 307 51 307 21 q 340 191 307 113 q 424 363 374 269 q 525 564 474 457 q 617 772 581 681 q 683 934 654 864 q 746 1053 713 1004 q 788 1101 767 1085 q 831 1118 808 1118 q 874 1099 861 1118 q 886 1050 886 1079 q 850 913 886 997 q 756 719 814 828 q 633 481 699 610 q 563 324 594 403 q 506 176 532 246 q 451 57 479 107 q 415 3 435 26 q 367 -19 394 -19 m 967 -26 q 911 -3 929 -26 q 893 60 893 19 q 915 172 893 113 l 947 150 q 872 132 919 139 q 776 125 824 125 q 710 140 733 125 q 688 185 688 156 q 703 270 688 221 q 742 370 718 319 q 790 463 765 421 q 877 566 829 528 q 988 604 925 604 q 1077 574 1050 604 q 1104 489 1104 544 q 1094 374 1104 439 q 1067 242 1085 308 l 1040 264 q 1068 270 1053 268 q 1096 272 1083 272 q 1179 207 1179 272 q 1153 156 1179 174 q 1086 138 1126 138 q 1055 140 1071 138 q 1028 146 1039 142 l 1050 161 q 1054 122 1053 146 q 1056 75 1056 97 q 1032 0 1056 26 q 967 -26 1008 -26 m 857 258 q 915 276 890 258 q 951 328 939 294 q 964 408 964 361 q 957 447 964 436 q 936 457 950 457 q 883 433 908 457 q 840 372 857 408 q 824 300 824 336 q 832 267 824 275 q 857 258 840 258 z "},"⅚":{"ha":1199,"x_min":35,"x_max":1167,"o":"m 456 1001 q 431 951 456 971 q 365 932 407 932 q 271 936 326 932 q 172 947 215 940 l 210 971 q 201 876 208 925 q 182 799 193 828 l 143 826 q 221 832 182 832 q 397 787 338 832 q 456 665 456 742 q 397 530 456 585 q 224 475 339 475 q 76 501 118 475 q 36 565 35 528 q 51 608 36 590 q 97 625 67 625 q 162 617 124 625 q 228 610 200 610 q 315 657 315 610 q 293 697 315 685 q 224 708 271 708 q 197 708 217 708 q 160 707 178 707 q 138 707 143 707 q 81 723 100 707 q 63 776 63 739 q 65 849 63 807 q 72 931 68 890 q 81 997 76 972 q 110 1060 89 1038 q 178 1082 132 1082 q 283 1078 222 1082 q 386 1069 343 1075 q 456 1001 456 1060 m 363 -19 q 317 1 332 -19 q 303 51 303 21 q 336 191 303 113 q 419 363 369 269 q 521 564 469 457 q 613 772 576 681 q 679 934 650 864 q 742 1053 708 1004 q 783 1101 763 1085 q 826 1118 804 1118 q 869 1099 857 1118 q 882 1050 882 1079 q 846 913 882 997 q 752 719 810 828 q 629 481 694 610 q 559 324 590 403 q 501 176 528 246 q 447 57 475 107 q 410 3 431 26 q 363 -19 390 -19 m 1126 540 q 1063 442 1126 496 q 869 331 999 389 l 861 329 l 856 351 q 899 361 876 358 q 942 364 922 364 q 1110 310 1053 364 q 1167 178 1167 257 q 1136 71 1167 115 q 1053 3 1106 26 q 938 -19 1001 -19 q 749 33 808 -19 q 690 169 690 86 q 724 313 690 244 q 829 457 758 381 q 953 563 894 528 q 1058 597 1013 597 q 1108 582 1089 597 q 1126 540 1126 567 m 929 251 q 856 232 881 251 q 831 181 831 213 q 922 118 831 118 q 995 138 969 118 q 1021 190 1021 157 q 997 235 1021 219 q 929 251 972 251 z "},"⅛":{"ha":1094,"x_min":24,"x_max":1053,"o":"m 207 1083 q 242 1072 228 1083 q 265 1036 256 1061 q 285 943 278 1003 q 293 799 293 883 q 288 694 293 747 q 275 596 283 640 q 256 526 267 551 q 233 488 246 501 q 199 475 219 475 q 143 538 157 475 q 134 609 138 568 q 131 694 131 650 q 143 832 131 760 q 174 961 156 904 l 199 950 q 135 901 171 918 q 67 883 99 883 q 35 894 47 883 q 24 922 24 904 q 51 997 24 960 q 122 1059 79 1035 q 207 1083 165 1083 m 226 -19 q 181 1 196 -19 q 167 51 167 21 q 200 191 167 113 q 283 363 233 269 q 385 564 333 457 q 477 772 440 681 q 543 934 514 864 q 606 1053 572 1004 q 647 1101 626 1085 q 690 1118 668 1118 q 733 1099 721 1118 q 746 1050 746 1079 q 710 913 746 997 q 616 719 674 828 q 493 481 558 610 q 423 324 454 403 q 365 176 392 246 q 311 57 339 107 q 274 3 294 26 q 226 -19 254 -19 m 815 599 q 986 554 928 599 q 1044 426 1044 510 q 1003 316 1044 360 q 897 253 961 272 l 890 310 q 1009 259 965 299 q 1053 149 1053 219 q 990 24 1053 68 q 792 -21 926 -21 q 616 22 667 -21 q 565 133 565 65 q 615 250 565 204 q 756 310 665 296 l 760 250 q 631 292 681 250 q 581 415 581 335 q 612 518 581 478 q 697 578 643 558 q 815 599 750 599 m 897 410 q 873 447 897 436 q 811 457 849 457 q 711 401 711 457 q 729 364 711 376 q 794 351 747 351 q 873 365 849 351 q 897 410 897 379 m 813 226 q 734 209 758 226 q 710 167 710 192 q 731 128 710 139 q 803 118 753 118 q 884 133 861 118 q 907 176 907 149 q 888 213 907 200 q 813 226 869 226 z "},"⅜":{"ha":1235,"x_min":35,"x_max":1193,"o":"m 253 1088 q 398 1049 340 1088 q 456 933 456 1011 q 409 826 456 872 q 267 761 363 779 l 258 779 l 271 794 q 413 746 365 786 q 460 640 460 706 q 400 523 460 571 q 224 475 340 475 q 76 500 118 475 q 36 561 35 525 q 51 603 36 586 q 97 621 67 621 q 125 619 111 621 q 154 614 139 617 q 185 608 169 611 q 218 606 201 606 q 279 618 260 606 q 299 649 299 631 q 281 682 299 669 q 197 707 263 694 q 131 728 156 715 q 107 768 107 740 q 133 814 107 797 q 201 844 158 831 q 278 878 256 864 q 300 914 300 893 q 228 953 300 953 q 199 950 214 953 q 168 944 185 947 q 135 940 153 942 q 100 938 118 938 q 40 986 40 938 q 100 1058 40 1029 q 253 1088 160 1088 m 367 -19 q 322 1 336 -19 q 307 51 307 21 q 340 191 307 113 q 424 363 374 269 q 525 564 474 457 q 617 772 581 681 q 683 934 654 864 q 746 1053 713 1004 q 788 1101 767 1085 q 831 1118 808 1118 q 874 1099 861 1118 q 886 1050 886 1079 q 850 913 886 997 q 756 719 814 828 q 633 481 699 610 q 563 324 594 403 q 506 176 532 246 q 451 57 479 107 q 415 3 435 26 q 367 -19 394 -19 m 956 599 q 1126 554 1068 599 q 1185 426 1185 510 q 1143 316 1185 360 q 1038 253 1101 272 l 1031 310 q 1149 259 1106 299 q 1193 149 1193 219 q 1130 24 1193 68 q 932 -21 1067 -21 q 756 22 807 -21 q 706 133 706 65 q 756 250 706 204 q 896 310 806 296 l 900 250 q 771 292 821 250 q 721 415 721 335 q 752 518 721 478 q 837 578 783 558 q 956 599 890 599 m 1038 410 q 1013 447 1038 436 q 951 457 989 457 q 851 401 851 457 q 869 364 851 376 q 935 351 888 351 q 1013 365 989 351 q 1038 410 1038 379 m 953 226 q 874 209 899 226 q 850 167 850 192 q 872 128 850 139 q 943 118 893 118 q 1024 133 1001 118 q 1047 176 1047 149 q 1028 213 1047 200 q 953 226 1010 226 z "},"⅝":{"ha":1231,"x_min":35,"x_max":1189,"o":"m 456 1001 q 431 951 456 971 q 365 932 407 932 q 271 936 326 932 q 172 947 215 940 l 210 971 q 201 876 208 925 q 182 799 193 828 l 143 826 q 221 832 182 832 q 397 787 338 832 q 456 665 456 742 q 397 530 456 585 q 224 475 339 475 q 76 501 118 475 q 36 565 35 528 q 51 608 36 590 q 97 625 67 625 q 162 617 124 625 q 228 610 200 610 q 315 657 315 610 q 293 697 315 685 q 224 708 271 708 q 197 708 217 708 q 160 707 178 707 q 138 707 143 707 q 81 723 100 707 q 63 776 63 739 q 65 849 63 807 q 72 931 68 890 q 81 997 76 972 q 110 1060 89 1038 q 178 1082 132 1082 q 283 1078 222 1082 q 386 1069 343 1075 q 456 1001 456 1060 m 363 -19 q 317 1 332 -19 q 303 51 303 21 q 336 191 303 113 q 419 363 369 269 q 521 564 469 457 q 613 772 576 681 q 679 934 650 864 q 742 1053 708 1004 q 783 1101 763 1085 q 826 1118 804 1118 q 869 1099 857 1118 q 882 1050 882 1079 q 846 913 882 997 q 752 719 810 828 q 629 481 694 610 q 559 324 590 403 q 501 176 528 246 q 447 57 475 107 q 410 3 431 26 q 363 -19 390 -19 m 951 599 q 1122 554 1064 599 q 1181 426 1181 510 q 1139 316 1181 360 q 1033 253 1097 272 l 1026 310 q 1145 259 1101 299 q 1189 149 1189 219 q 1126 24 1189 68 q 928 -21 1063 -21 q 752 22 803 -21 q 701 133 701 65 q 751 250 701 204 q 892 310 801 296 l 896 250 q 767 292 817 250 q 717 415 717 335 q 748 518 717 478 q 833 578 779 558 q 951 599 886 599 m 1033 410 q 1009 447 1033 436 q 947 457 985 457 q 847 401 847 457 q 865 364 847 376 q 931 351 883 351 q 1009 365 985 351 q 1033 410 1033 379 m 949 226 q 870 209 894 226 q 846 167 846 192 q 867 128 846 139 q 939 118 889 118 q 1020 133 997 118 q 1043 176 1043 149 q 1024 213 1043 200 q 949 226 1006 226 z "},"⅞":{"ha":1188,"x_min":24,"x_max":1146,"o":"m 138 1083 q 229 1081 179 1083 q 326 1075 279 1079 q 403 1049 375 1069 q 432 988 432 1029 q 417 919 432 967 q 371 806 403 872 q 272 615 314 688 q 194 509 231 543 q 114 475 157 475 q 74 489 88 475 q 60 528 60 503 q 74 591 60 553 q 111 672 88 629 q 208 827 149 739 q 333 992 268 915 l 353 972 l 346 954 q 231 944 292 947 q 122 942 169 942 q 24 1003 24 943 q 55 1064 24 1044 q 138 1083 86 1083 m 319 -19 q 274 1 289 -19 q 260 51 260 21 q 293 191 260 113 q 376 363 326 269 q 478 564 426 457 q 570 772 533 681 q 636 934 607 864 q 699 1053 665 1004 q 740 1101 719 1085 q 783 1118 761 1118 q 826 1099 814 1118 q 839 1050 839 1079 q 803 913 839 997 q 709 719 767 828 q 586 481 651 610 q 516 324 547 403 q 458 176 485 246 q 404 57 432 107 q 367 3 388 26 q 319 -19 347 -19 m 908 599 q 1079 554 1021 599 q 1138 426 1138 510 q 1096 316 1138 360 q 990 253 1054 272 l 983 310 q 1102 259 1058 299 q 1146 149 1146 219 q 1083 24 1146 68 q 885 -21 1019 -21 q 709 22 760 -21 q 658 133 658 65 q 708 250 658 204 q 849 310 758 296 l 853 250 q 724 292 774 250 q 674 415 674 335 q 705 518 674 478 q 790 578 736 558 q 908 599 843 599 m 990 410 q 966 447 990 436 q 904 457 942 457 q 804 401 804 457 q 822 364 804 376 q 888 351 840 351 q 966 365 942 351 q 990 410 990 379 m 906 226 q 827 209 851 226 q 803 167 803 192 q 824 128 803 139 q 896 118 846 118 q 977 133 954 118 q 1000 176 1000 149 q 981 213 1000 200 q 906 226 963 226 z "}," ":{"ha":278,"x_min":0,"x_max":0,"o":""}," ":{"ha":278,"x_min":0,"x_max":0,"o":""},".":{"ha":319,"x_min":35,"x_max":285,"o":"m 161 299 q 251 260 217 299 q 285 149 285 222 q 252 33 285 81 q 147 -14 219 -14 q 62 25 89 -14 q 35 135 35 64 q 46 214 35 176 q 85 275 57 251 q 161 299 113 299 z "},",":{"ha":328,"x_min":35,"x_max":293,"o":"m 167 14 q 65 49 94 14 q 35 147 35 83 q 47 216 35 182 q 87 273 58 250 q 165 296 115 296 q 258 256 222 296 q 293 132 293 215 q 274 29 293 85 q 224 -74 254 -26 q 173 -132 197 -112 q 125 -151 149 -151 q 98 -142 108 -151 q 88 -115 88 -133 q 101 -60 88 -96 q 157 35 114 -25 l 167 14 z "},":":{"ha":319,"x_min":35,"x_max":285,"o":"m 161 299 q 251 260 217 299 q 285 149 285 222 q 252 33 285 81 q 147 -14 219 -14 q 62 25 89 -14 q 35 135 35 64 q 46 214 35 176 q 85 275 57 251 q 161 299 113 299 m 161 868 q 251 830 217 868 q 285 718 285 792 q 252 603 285 650 q 147 556 219 556 q 62 594 89 556 q 35 704 35 633 q 46 783 35 746 q 85 844 57 821 q 161 868 113 868 z "},";":{"ha":328,"x_min":35,"x_max":293,"o":"m 161 868 q 251 830 217 868 q 285 718 285 792 q 252 603 285 650 q 147 556 219 556 q 62 594 89 556 q 35 704 35 633 q 46 783 35 746 q 85 844 57 821 q 161 868 113 868 m 167 14 q 65 49 94 14 q 35 147 35 83 q 47 216 35 182 q 87 273 58 250 q 165 296 115 296 q 258 256 222 296 q 293 132 293 215 q 274 29 293 85 q 224 -74 254 -26 q 173 -132 197 -112 q 125 -151 149 -151 q 98 -142 108 -151 q 88 -115 88 -133 q 101 -60 88 -96 q 157 35 114 -25 l 167 14 z "},"…":{"ha":903,"x_min":35,"x_max":868,"o":"m 453 299 q 542 260 508 299 q 576 149 576 222 q 544 33 576 81 q 439 -14 511 -14 q 353 25 381 -14 q 326 135 326 64 q 338 214 326 176 q 376 275 349 251 q 453 299 404 299 m 744 299 q 834 260 800 299 q 868 149 868 222 q 835 33 868 81 q 731 -14 803 -14 q 645 25 672 -14 q 618 135 618 64 q 629 214 618 176 q 668 275 640 251 q 744 299 696 299 m 161 299 q 251 260 217 299 q 285 149 285 222 q 252 33 285 81 q 147 -14 219 -14 q 62 25 89 -14 q 35 135 35 64 q 46 214 35 176 q 85 275 57 251 q 161 299 113 299 z "},"!":{"ha":336,"x_min":44,"x_max":292,"o":"m 44 99 q 64 173 44 144 q 113 215 83 201 q 176 229 143 229 q 262 197 232 229 q 292 111 292 165 q 254 15 292 44 q 163 -15 217 -15 q 75 16 106 -15 q 44 99 44 47 m 183 1032 q 262 976 239 1032 q 285 815 285 919 q 275 619 285 718 q 249 454 265 521 q 208 347 231 381 q 150 313 186 313 q 76 411 97 313 q 56 732 56 510 q 67 908 56 843 q 106 1003 78 974 q 183 1032 133 1032 z "},"¡":{"ha":336,"x_min":44,"x_max":292,"o":"m 292 779 q 273 706 292 735 q 224 663 254 676 q 160 649 193 649 q 74 681 104 649 q 44 767 44 713 q 82 863 44 833 q 174 893 119 893 q 261 862 231 893 q 292 779 292 831 m 153 -154 q 74 -98 97 -154 q 51 63 51 -42 q 61 259 51 161 q 88 424 71 357 q 129 531 107 497 q 186 565 151 565 q 260 467 239 565 q 281 146 281 369 q 269 -30 281 36 q 231 -125 258 -96 q 153 -154 204 -154 z "},"?":{"ha":653,"x_min":14,"x_max":639,"o":"m 297 1029 q 552 942 465 1029 q 639 717 639 856 q 608 575 639 636 q 522 465 576 514 q 394 374 467 417 q 293 326 339 340 q 208 313 247 313 q 158 328 178 313 q 138 371 138 344 q 169 433 138 404 q 263 499 200 461 q 404 600 353 551 q 456 708 456 649 q 428 781 456 756 q 336 807 401 807 q 238 790 286 807 q 140 774 189 774 q 47 799 81 774 q 14 871 14 824 q 52 956 14 921 q 155 1010 90 992 q 297 1029 219 1029 m 125 85 q 144 151 125 125 q 194 189 164 176 q 257 201 224 201 q 342 174 313 201 q 372 97 372 146 q 335 11 372 38 q 243 -15 297 -15 q 156 13 186 -15 q 125 85 125 40 z "},"¿":{"ha":653,"x_min":14,"x_max":639,"o":"m 356 -154 q 101 -67 188 -154 q 14 158 14 19 q 45 300 14 239 q 131 410 76 361 q 258 501 186 458 q 360 549 315 535 q 444 563 406 563 q 495 547 475 563 q 515 504 515 532 q 484 442 515 471 q 390 376 453 414 q 249 276 301 324 q 197 167 197 228 q 224 94 197 119 q 317 68 251 68 q 415 85 367 68 q 513 101 464 101 q 606 76 574 101 q 639 4 639 51 q 601 -81 639 -44 q 498 -135 563 -117 q 356 -154 433 -154 m 528 790 q 508 724 528 750 q 459 686 489 699 q 396 674 429 674 q 310 702 340 674 q 281 778 281 731 q 318 864 281 838 q 410 890 356 890 q 497 863 467 890 q 528 790 528 835 z "},"·":{"ha":319,"x_min":35,"x_max":285,"o":"m 161 618 q 251 580 217 618 q 285 468 285 542 q 252 353 285 400 q 147 306 219 306 q 62 344 89 306 q 35 454 35 383 q 46 533 35 496 q 85 594 57 571 q 161 618 113 618 z "},"•":{"ha":611,"x_min":56,"x_max":556,"o":"m 308 822 q 488 745 419 822 q 556 522 556 668 q 527 358 556 432 q 438 241 499 285 q 281 197 376 197 q 110 275 164 197 q 56 494 56 353 q 68 615 56 557 q 109 721 81 674 q 187 795 138 768 q 308 822 236 822 z "},"*":{"ha":660,"x_min":31,"x_max":629,"o":"m 464 399 q 376 456 408 399 q 321 625 343 514 l 325 618 q 254 459 290 517 q 161 401 218 401 q 115 421 131 401 q 100 467 100 440 q 142 557 100 508 q 282 665 185 606 l 286 654 q 86 681 142 657 q 31 744 31 706 q 52 789 31 771 q 117 807 74 807 q 214 787 161 807 q 308 731 267 767 l 297 726 q 266 823 276 771 q 256 914 256 875 q 270 993 256 961 q 322 1025 285 1025 q 365 1008 350 1025 q 385 963 379 990 q 390 904 390 935 q 383 818 390 863 q 364 729 376 774 l 351 735 q 443 790 392 771 q 536 810 494 810 q 606 790 583 810 q 629 735 629 769 q 609 692 629 710 q 535 663 589 674 q 379 653 482 653 l 390 667 q 494 567 460 615 q 529 471 529 519 q 511 417 529 436 q 464 399 493 399 z "},"#":{"ha":1007,"x_min":35,"x_max":972,"o":"m 211 -11 q 163 13 176 -11 q 149 92 149 36 q 160 185 149 135 q 192 292 172 236 l 206 267 q 172 260 190 263 q 133 257 153 257 q 35 339 35 257 q 58 399 35 375 q 132 424 81 424 q 182 417 157 424 q 225 401 207 410 l 210 389 q 213 503 206 440 q 238 621 219 565 l 246 603 q 212 598 231 600 q 168 596 193 596 q 99 614 125 596 q 72 671 72 632 q 103 738 72 719 q 179 756 135 756 q 237 748 208 756 q 283 733 265 740 l 254 701 q 280 884 261 814 q 325 988 299 954 q 378 1021 351 1021 q 422 999 406 1021 q 438 931 438 978 q 422 825 438 889 q 378 701 406 761 l 381 736 q 469 753 417 750 q 576 751 522 757 q 668 731 631 746 l 654 711 q 658 817 654 764 q 667 908 661 869 q 695 1001 675 974 q 751 1029 715 1029 q 801 1004 786 1029 q 817 908 817 979 q 810 815 817 865 q 790 713 804 765 l 781 731 q 834 742 808 739 q 878 746 860 746 q 949 726 926 746 q 972 669 972 706 q 949 608 972 631 q 868 586 925 586 q 820 590 846 586 q 771 600 794 594 l 783 615 q 778 496 786 557 q 749 376 769 435 l 739 390 q 789 402 765 399 q 829 406 813 406 q 906 385 882 406 q 931 329 931 365 q 903 268 931 290 q 813 246 876 246 q 722 260 768 246 l 735 293 q 688 65 725 138 q 597 -7 650 -7 q 551 15 567 -7 q 536 90 536 36 q 543 160 536 121 q 564 239 550 199 q 596 310 578 279 l 583 267 q 500 248 551 253 q 397 248 449 243 q 313 267 346 253 l 319 286 q 324 222 324 256 q 294 56 324 124 q 211 -11 264 -11 m 460 383 q 588 418 542 383 q 633 525 633 453 q 599 595 633 569 q 497 621 564 621 q 378 583 421 621 q 335 472 335 546 q 460 383 335 383 z "},"/":{"ha":710,"x_min":31,"x_max":679,"o":"m 78 -149 q 44 -131 57 -149 q 31 -82 31 -114 q 50 4 31 -58 q 104 156 69 67 q 185 353 139 246 q 288 574 232 460 q 403 798 343 688 q 522 1004 463 908 q 586 1082 557 1058 q 636 1106 615 1106 q 667 1088 656 1106 q 679 1039 679 1071 q 659 952 679 1015 q 603 798 639 889 q 519 599 567 707 q 415 374 471 490 q 300 145 360 258 q 181 -67 240 32 q 128 -129 156 -110 q 78 -149 101 -149 z "},"\\\\":{"ha":710,"x_min":31,"x_max":679,"o":"m 632 -149 q 582 -129 610 -149 q 529 -67 554 -110 q 410 145 469 32 q 294 374 350 258 q 191 599 239 490 q 107 798 143 707 q 51 952 71 889 q 31 1039 31 1015 q 42 1088 31 1071 q 74 1106 54 1106 q 124 1082 94 1106 q 188 1004 153 1058 q 308 798 249 908 q 422 574 367 688 q 524 353 478 460 q 606 156 571 246 q 660 4 640 67 q 679 -82 679 -58 q 666 -131 679 -114 q 632 -149 653 -149 z "},"‥":{"ha":639,"x_min":35,"x_max":604,"o":"m 161 299 q 251 260 217 299 q 285 149 285 222 q 252 33 285 81 q 147 -14 219 -14 q 62 25 89 -14 q 35 135 35 64 q 46 214 35 176 q 85 275 57 251 q 161 299 113 299 m 481 299 q 570 260 536 299 q 604 149 604 222 q 572 33 604 81 q 467 -14 539 -14 q 381 25 408 -14 q 354 135 354 64 q 365 214 354 176 q 404 275 376 251 q 481 299 432 299 z "},"-":{"ha":575,"x_min":35,"x_max":540,"o":"m 149 379 q 63 401 90 379 q 35 457 35 422 q 60 510 35 490 q 143 546 85 531 q 274 567 200 561 q 407 572 347 572 q 510 551 479 572 q 540 496 540 531 q 515 435 540 457 q 440 403 489 414 q 348 390 401 396 q 241 382 294 385 q 149 379 188 379 z "},"­":{"ha":575,"x_min":35,"x_max":540,"o":"m 149 379 q 63 401 90 379 q 35 457 35 422 q 60 510 35 490 q 143 546 85 531 q 274 567 200 561 q 407 572 347 572 q 510 551 479 572 q 540 496 540 531 q 515 435 540 457 q 440 403 489 414 q 348 390 401 396 q 241 382 294 385 q 149 379 188 379 z "},"–":{"ha":808,"x_min":26,"x_max":782,"o":"m 117 397 q 47 412 68 397 q 26 453 26 426 q 46 495 26 478 q 119 522 65 513 q 240 535 169 529 q 388 547 310 542 q 542 556 465 553 q 682 560 618 560 q 760 543 738 560 q 782 500 782 526 q 762 456 782 472 q 693 431 742 439 q 563 419 640 425 q 401 408 485 413 q 242 400 317 403 q 117 397 167 397 z "},"—":{"ha":1139,"x_min":35,"x_max":1096,"o":"m 107 435 q 51 441 67 435 q 35 458 35 447 q 50 478 35 469 q 115 493 65 488 q 255 506 172 499 q 435 518 338 513 q 635 529 532 524 q 836 538 738 535 q 1018 540 935 540 q 1078 533 1060 540 q 1096 513 1096 525 q 1081 492 1096 500 q 1024 479 1067 483 q 863 467 957 474 q 662 454 768 460 q 451 444 556 449 q 256 438 346 440 q 107 435 167 435 z "},"‒":{"ha":808,"x_min":26,"x_max":782,"o":"m 117 397 q 47 412 68 397 q 26 453 26 426 q 46 495 26 478 q 119 522 65 513 q 240 535 169 529 q 388 547 310 542 q 542 556 465 553 q 682 560 618 560 q 760 543 738 560 q 782 500 782 526 q 762 456 782 472 q 693 431 742 439 q 563 419 640 425 q 401 408 485 413 q 242 400 317 403 q 117 397 167 397 z "},"―":{"ha":1139,"x_min":35,"x_max":1096,"o":"m 107 435 q 51 441 67 435 q 35 458 35 447 q 50 478 35 469 q 115 493 65 488 q 255 506 172 499 q 435 518 338 513 q 635 529 532 524 q 836 538 738 535 q 1018 540 935 540 q 1078 533 1060 540 q 1096 513 1096 525 q 1081 492 1096 500 q 1024 479 1067 483 q 863 467 957 474 q 662 454 768 460 q 451 444 556 449 q 256 438 346 440 q 107 435 167 435 z "},"_":{"ha":808,"x_min":26,"x_max":782,"o":"m 117 -297 q 47 -283 68 -297 q 26 -242 26 -268 q 46 -199 26 -217 q 119 -172 65 -182 q 240 -159 169 -165 q 388 -147 310 -153 q 542 -138 465 -142 q 682 -135 618 -135 q 760 -151 738 -135 q 782 -194 782 -168 q 762 -239 782 -222 q 693 -264 742 -256 q 563 -276 640 -269 q 401 -287 485 -282 q 242 -294 317 -292 q 117 -297 167 -297 z "},"(":{"ha":560,"x_min":92,"x_max":532,"o":"m 92 489 q 126 742 92 629 q 217 937 161 856 q 338 1062 274 1018 q 463 1106 403 1106 q 513 1083 494 1106 q 532 1031 532 1061 q 512 989 532 1011 q 443 935 492 967 q 327 824 371 885 q 265 683 283 763 q 246 497 246 604 q 266 302 246 389 q 330 147 286 215 q 442 28 374 79 q 507 -30 486 -6 q 528 -76 528 -54 q 507 -132 528 -107 q 438 -157 486 -157 q 325 -119 385 -157 q 212 -3 265 -82 q 125 197 158 75 q 92 489 92 319 z "},")":{"ha":536,"x_min":28,"x_max":468,"o":"m 468 460 q 433 207 468 321 q 342 12 399 93 q 222 -113 286 -69 q 97 -157 157 -157 q 47 -135 67 -157 q 28 -82 28 -112 q 49 -40 28 -62 q 117 14 69 -18 q 233 125 190 64 q 295 266 276 186 q 314 451 314 346 q 294 647 314 560 q 231 801 274 733 q 118 921 188 869 q 53 978 75 954 q 32 1025 32 1003 q 53 1081 32 1057 q 122 1106 75 1106 q 235 1068 175 1106 q 348 952 294 1031 q 435 751 401 874 q 468 460 468 629 z "},"{":{"ha":733,"x_min":69,"x_max":692,"o":"m 485 -147 q 356 -117 404 -147 q 288 -25 307 -87 q 259 138 268 39 q 250 407 250 238 q 235 406 243 406 q 218 406 228 406 q 108 431 146 406 q 69 503 69 456 q 103 566 69 542 q 203 590 136 590 q 227 590 214 590 q 254 589 240 590 q 264 761 257 682 q 279 890 271 840 q 358 1052 297 1000 q 543 1104 419 1104 q 653 1080 615 1104 q 692 1007 692 1056 q 658 944 692 968 q 558 919 625 919 q 489 923 528 919 q 418 932 450 926 q 453 816 447 868 q 460 736 460 764 q 442 608 460 672 q 392 507 424 543 q 427 412 411 468 q 443 278 443 356 q 435 174 443 219 q 413 86 428 128 q 379 -3 399 44 q 477 34 424 19 q 586 49 531 49 q 663 28 636 49 q 689 -29 689 7 q 669 -89 689 -65 q 619 -125 650 -112 q 552 -142 588 -137 q 485 -147 517 -147 z "},"}":{"ha":733,"x_min":69,"x_max":692,"o":"m 276 1104 q 406 1074 357 1104 q 474 982 456 1044 q 502 819 493 918 q 511 550 511 719 q 526 551 518 551 q 543 551 533 551 q 653 527 615 551 q 692 454 692 503 q 658 391 692 415 q 558 367 625 367 q 534 367 547 367 q 507 368 521 367 q 497 196 504 275 q 482 67 490 117 q 403 -95 464 -43 q 218 -147 342 -147 q 108 -122 146 -147 q 69 -50 69 -97 q 103 13 69 -11 q 203 38 136 38 q 273 35 235 38 q 343 25 311 32 q 308 141 314 89 q 301 221 301 193 q 319 350 301 285 q 369 450 338 415 q 334 546 350 489 q 318 679 318 603 q 326 784 318 739 q 348 871 333 829 q 382 960 363 913 q 285 923 339 938 q 175 908 231 908 q 99 929 125 908 q 72 986 72 950 q 92 1046 72 1022 q 142 1082 111 1069 q 209 1099 174 1094 q 276 1104 244 1104 z "},"[":{"ha":564,"x_min":92,"x_max":533,"o":"m 326 -147 q 197 -117 246 -147 q 129 -25 149 -87 q 101 142 110 40 q 92 417 92 243 q 96 601 92 511 q 107 767 100 692 q 121 890 114 843 q 200 1052 139 1000 q 385 1104 261 1104 q 495 1080 457 1104 q 533 1007 533 1056 q 500 944 533 968 q 400 919 467 919 q 324 924 365 919 q 249 933 282 928 l 258 964 q 262 785 261 882 q 263 586 263 689 q 249 268 263 429 q 217 -29 236 107 l 186 -22 q 297 28 232 7 q 428 49 361 49 q 504 28 478 49 q 531 -29 531 7 q 511 -89 531 -65 q 460 -125 492 -112 q 394 -142 429 -137 q 326 -147 358 -147 z "},"]":{"ha":564,"x_min":31,"x_max":472,"o":"m 238 1104 q 367 1074 318 1104 q 435 982 417 1044 q 463 816 454 918 q 472 540 472 714 q 468 356 472 446 q 458 190 464 265 q 443 67 451 115 q 364 -95 425 -43 q 179 -147 303 -147 q 69 -122 107 -147 q 31 -50 31 -97 q 64 13 31 -11 q 164 38 97 38 q 240 34 199 38 q 315 24 282 31 l 306 -7 q 303 172 304 75 q 301 371 301 268 q 315 689 301 528 q 347 986 328 850 l 378 979 q 267 929 332 950 q 136 908 203 908 q 60 929 86 908 q 33 986 33 950 q 53 1046 33 1022 q 103 1082 72 1069 q 170 1099 135 1094 q 238 1104 206 1104 z "},"‚":{"ha":328,"x_min":35,"x_max":293,"o":"m 167 14 q 65 49 94 14 q 35 147 35 83 q 47 216 35 182 q 87 273 58 250 q 165 296 115 296 q 258 256 222 296 q 293 132 293 215 q 274 29 293 85 q 224 -74 254 -26 q 173 -132 197 -112 q 125 -151 149 -151 q 98 -142 108 -151 q 88 -115 88 -133 q 101 -60 88 -96 q 157 35 114 -25 l 167 14 z "},"„":{"ha":647,"x_min":35,"x_max":613,"o":"m 486 14 q 384 49 414 14 q 354 147 354 83 q 366 216 354 182 q 406 273 378 250 q 485 296 435 296 q 577 256 542 296 q 613 132 613 215 q 593 29 613 85 q 543 -74 574 -26 q 492 -132 517 -112 q 444 -151 468 -151 q 417 -142 428 -151 q 407 -115 407 -133 q 420 -60 407 -96 q 476 35 433 -25 l 486 14 m 167 28 q 65 58 94 28 q 35 147 35 89 q 47 209 35 178 q 87 261 58 240 q 165 282 115 282 q 258 249 222 282 q 293 146 293 215 q 269 44 293 99 q 210 -60 246 -11 q 158 -117 182 -97 q 111 -137 135 -137 q 84 -128 94 -137 q 74 -101 74 -119 q 90 -47 74 -82 q 157 49 106 -11 l 167 28 z "},"“":{"ha":647,"x_min":35,"x_max":613,"o":"m 161 867 q 264 833 235 867 q 293 733 293 799 q 281 665 293 700 q 241 608 269 631 q 163 585 213 585 q 70 625 106 585 q 35 749 35 665 q 54 852 35 797 q 104 954 74 907 q 156 1013 131 994 q 203 1032 181 1032 q 230 1023 219 1032 q 240 996 240 1014 q 227 942 240 976 q 171 846 214 907 l 161 867 m 481 853 q 583 822 554 853 q 613 733 613 792 q 601 672 613 703 q 560 619 589 640 q 482 599 532 599 q 390 633 425 599 q 354 735 354 667 q 378 838 354 783 q 438 940 401 892 q 490 998 465 978 q 536 1018 514 1018 q 563 1009 553 1018 q 574 982 574 1000 q 558 928 574 963 q 490 832 542 893 l 481 853 z "},"”":{"ha":647,"x_min":35,"x_max":613,"o":"m 486 750 q 384 785 414 750 q 354 883 354 819 q 366 952 354 918 q 406 1009 378 986 q 485 1032 435 1032 q 577 992 542 1032 q 613 868 613 951 q 593 765 613 821 q 543 663 574 710 q 492 604 517 624 q 444 585 468 585 q 417 594 428 585 q 407 621 407 603 q 420 676 407 640 q 476 771 433 711 l 486 750 m 167 764 q 65 794 94 764 q 35 883 35 825 q 47 945 35 914 q 87 997 58 976 q 165 1018 115 1018 q 258 985 222 1018 q 293 882 293 951 q 269 780 293 835 q 210 676 246 725 q 158 619 182 639 q 111 599 135 599 q 84 608 94 599 q 74 635 74 617 q 90 690 74 654 q 157 785 106 725 l 167 764 z "},"‘":{"ha":328,"x_min":35,"x_max":293,"o":"m 161 867 q 264 833 235 867 q 293 733 293 799 q 281 665 293 700 q 241 608 269 631 q 163 585 213 585 q 70 625 106 585 q 35 749 35 665 q 54 852 35 797 q 104 954 74 907 q 156 1013 131 994 q 203 1032 181 1032 q 230 1023 219 1032 q 240 996 240 1014 q 227 942 240 976 q 171 846 214 907 l 161 867 z "},"’":{"ha":328,"x_min":35,"x_max":293,"o":"m 167 750 q 65 785 94 750 q 35 883 35 819 q 47 952 35 918 q 87 1009 58 986 q 165 1032 115 1032 q 258 992 222 1032 q 293 868 293 951 q 274 765 293 821 q 224 663 254 710 q 173 604 197 624 q 125 585 149 585 q 98 594 108 585 q 88 621 88 603 q 101 676 88 640 q 157 771 114 711 l 167 750 z "},"«":{"ha":653,"x_min":31,"x_max":622,"o":"m 235 232 q 172 256 207 232 q 105 318 138 281 q 51 394 72 356 q 31 463 31 433 q 53 535 31 492 q 112 620 76 578 q 185 690 147 663 q 254 718 224 718 q 303 697 289 718 q 317 649 317 675 q 268 562 317 608 q 133 471 219 515 l 133 485 q 258 393 214 439 q 301 303 301 347 q 285 251 301 269 q 235 232 268 232 m 540 204 q 469 231 510 204 q 393 300 429 258 q 333 385 357 342 q 308 463 308 429 q 326 525 308 489 q 371 600 343 561 q 432 672 399 639 q 499 725 465 704 q 560 746 533 746 q 608 724 594 746 q 622 676 622 703 q 566 576 622 629 q 411 471 510 522 l 411 485 q 556 378 506 432 q 607 275 607 325 q 590 223 607 242 q 540 204 574 204 z "},"»":{"ha":653,"x_min":31,"x_max":622,"o":"m 418 718 q 481 694 446 718 q 548 632 515 669 q 601 556 581 594 q 622 488 622 517 q 599 415 622 458 q 541 330 576 372 q 467 260 506 288 q 399 232 429 232 q 350 253 364 232 q 336 301 336 275 q 385 389 336 342 q 519 479 435 436 l 519 465 q 395 558 439 511 q 351 647 351 604 q 368 699 351 681 q 418 718 385 718 m 113 746 q 184 719 144 746 q 260 650 224 692 q 320 565 296 608 q 344 488 344 521 q 327 425 344 461 q 282 350 310 389 q 221 278 254 311 q 154 225 188 246 q 93 204 121 204 q 44 226 58 204 q 31 274 31 247 q 88 374 31 321 q 242 479 144 428 l 242 465 q 97 572 149 518 q 46 675 46 625 q 63 727 46 708 q 113 746 79 746 z "},"‹":{"ha":375,"x_min":31,"x_max":344,"o":"m 263 204 q 192 231 232 204 q 115 300 151 258 q 55 385 79 342 q 31 463 31 429 q 48 525 31 489 q 93 600 65 561 q 154 672 121 639 q 222 725 188 704 q 282 746 256 746 q 331 724 317 746 q 344 676 344 703 q 288 576 344 629 q 133 471 232 522 l 133 485 q 278 378 228 432 q 329 275 329 325 q 313 223 329 242 q 263 204 296 204 z "},"›":{"ha":375,"x_min":31,"x_max":344,"o":"m 113 746 q 184 719 144 746 q 260 650 224 692 q 320 565 296 608 q 344 488 344 521 q 327 425 344 461 q 282 350 310 389 q 221 278 254 311 q 154 225 188 246 q 93 204 121 204 q 44 226 58 204 q 31 274 31 247 q 88 374 31 321 q 242 479 144 428 l 242 465 q 97 572 149 518 q 46 675 46 625 q 63 727 46 708 q 113 746 79 746 z "},"\\"":{"ha":519,"x_min":35,"x_max":485,"o":"m 138 1026 q 197 991 174 1026 q 221 860 221 956 q 205 725 221 788 q 164 624 189 663 q 111 585 139 585 q 67 618 85 585 q 42 705 50 651 q 35 821 35 758 q 63 978 35 929 q 138 1026 92 1026 m 401 1026 q 461 991 438 1026 q 485 860 485 956 q 469 725 485 788 q 428 624 453 663 q 375 585 403 585 q 331 618 349 585 q 306 705 314 651 q 299 821 299 758 q 327 978 299 929 q 401 1026 356 1026 z "},"\'":{"ha":256,"x_min":35,"x_max":221,"o":"m 138 1026 q 197 991 174 1026 q 221 860 221 956 q 205 725 221 788 q 164 624 189 663 q 111 585 139 585 q 67 618 85 585 q 42 705 50 651 q 35 821 35 758 q 63 978 35 929 q 138 1026 92 1026 z "},"ƒ":{"ha":754,"x_min":28,"x_max":726,"o":"m 171 -14 q 69 10 101 -14 q 38 79 38 33 q 63 147 38 124 q 139 189 88 171 q 212 229 183 206 q 259 300 240 253 q 290 430 278 347 q 310 646 301 513 l 324 633 q 239 610 285 618 q 139 603 193 603 q 57 625 86 603 q 28 692 28 647 q 48 749 28 726 q 104 785 68 772 q 188 797 140 797 q 271 792 232 797 q 339 781 310 788 l 310 781 q 308 801 308 792 q 308 821 308 811 q 319 928 308 875 q 359 1023 331 981 q 441 1091 388 1065 q 579 1117 494 1117 q 692 1093 657 1117 q 726 1024 726 1069 q 692 953 726 979 q 597 922 658 928 q 513 903 544 917 q 465 859 482 889 q 438 775 447 829 l 426 778 q 508 797 463 790 q 597 804 554 804 q 685 782 651 804 q 718 710 718 760 q 673 630 718 657 q 567 603 628 603 q 494 608 532 603 q 421 624 457 614 l 431 644 q 449 513 442 589 q 456 365 456 438 q 444 228 456 296 q 402 106 432 161 q 316 19 372 51 q 171 -14 260 -14 z "},"☀":{"ha":1057,"x_min":28,"x_max":1029,"o":"m 529 319 q 393 369 436 319 q 350 494 350 419 q 370 590 350 546 q 431 660 390 633 q 532 688 472 688 q 662 642 613 688 q 711 510 711 597 q 664 376 711 432 q 529 319 617 319 m 199 122 q 159 139 176 122 q 142 178 142 156 q 185 254 142 211 q 247 300 210 279 q 314 321 285 321 q 342 313 331 321 q 353 288 353 304 q 334 234 353 265 q 283 171 315 203 q 199 122 235 122 m 542 -8 q 471 76 471 -8 q 478 150 471 111 q 501 216 486 189 q 536 243 517 243 q 577 217 560 243 q 603 154 594 190 q 613 88 613 118 q 597 16 613 40 q 542 -8 581 -8 m 138 443 q 56 458 85 443 q 28 507 28 472 q 126 571 28 571 q 194 562 158 571 q 254 537 229 553 q 279 499 279 521 q 238 458 279 472 q 138 443 197 443 m 308 701 q 256 721 286 701 q 193 771 225 740 q 143 856 143 821 q 160 894 143 878 q 199 911 178 911 q 275 869 233 911 q 322 806 300 843 q 343 740 343 769 q 334 713 343 724 q 308 701 325 701 m 868 115 q 806 147 838 115 q 751 219 776 178 q 725 289 725 261 q 736 314 725 306 q 765 322 747 322 q 835 301 796 322 q 897 256 874 279 q 938 183 938 215 q 915 137 938 158 q 868 115 893 115 m 944 436 q 871 444 910 436 q 805 467 832 451 q 778 501 778 482 q 804 542 778 525 q 867 569 831 560 q 933 578 904 578 q 1005 562 981 578 q 1029 507 1029 546 q 944 436 1029 436 m 533 769 q 492 810 507 769 q 478 911 478 851 q 492 992 478 964 q 542 1021 507 1021 q 606 922 606 1021 q 597 855 606 890 q 572 794 588 819 q 533 769 556 769 m 746 685 q 719 696 728 685 q 711 725 711 707 q 733 794 711 756 q 778 857 754 833 q 850 897 818 897 q 897 874 875 897 q 918 826 918 851 q 886 765 918 797 q 815 710 857 735 q 746 685 774 685 z "},"★":{"ha":1086,"x_min":28,"x_max":1058,"o":"m 797 6 q 672 67 740 6 q 521 242 603 128 q 329 65 403 118 q 201 13 256 13 q 118 97 118 13 q 146 219 118 139 q 232 414 174 299 q 75 563 122 496 q 28 685 28 629 q 56 752 28 725 q 133 779 83 779 q 230 769 174 779 q 344 742 286 760 q 419 999 375 910 q 521 1088 464 1088 q 629 1003 581 1088 q 713 758 678 919 q 822 772 767 767 q 914 778 876 778 q 1024 751 989 778 q 1058 685 1058 725 q 990 559 1058 625 q 806 426 921 493 q 873 239 850 325 q 896 110 896 153 q 869 33 896 61 q 797 6 842 6 z "},"☆":{"ha":1086,"x_min":28,"x_max":1058,"o":"m 797 6 q 672 67 740 6 q 521 242 603 128 q 329 65 403 118 q 201 13 256 13 q 118 97 118 13 q 146 219 118 139 q 232 414 174 299 q 75 563 122 496 q 28 685 28 629 q 56 752 28 725 q 133 779 83 779 q 230 769 174 779 q 344 742 286 760 q 419 999 375 910 q 521 1088 464 1088 q 629 1003 581 1088 q 713 758 678 919 q 822 772 767 767 q 914 778 876 778 q 1024 751 989 778 q 1058 685 1058 725 q 990 559 1058 625 q 806 426 921 493 q 873 239 850 325 q 896 110 896 153 q 869 33 896 61 q 797 6 842 6 m 779 114 l 785 118 q 729 315 746 238 q 713 431 713 393 q 735 494 713 463 q 810 569 757 526 q 957 671 864 611 l 957 676 q 746 647 815 650 q 646 668 676 644 q 588 774 617 692 q 526 1004 558 857 l 521 1004 q 466 765 490 851 q 403 651 442 679 q 311 638 376 632 q 113 681 246 644 l 113 675 q 235 563 188 608 q 306 485 283 518 q 329 421 329 453 q 307 313 329 383 q 235 132 285 243 l 239 129 q 411 292 342 233 q 521 350 481 350 q 587 326 553 350 q 667 249 621 301 q 779 114 713 197 z "},"☼":{"ha":1057,"x_min":28,"x_max":1029,"o":"m 529 292 q 372 349 422 292 q 322 493 322 407 q 346 602 322 551 q 416 684 369 653 q 532 715 463 715 q 682 664 625 715 q 739 511 739 613 q 715 401 739 451 q 644 322 690 351 q 529 292 597 292 m 199 122 q 159 139 176 122 q 142 178 142 156 q 185 254 142 211 q 247 300 210 279 q 314 321 285 321 q 342 313 331 321 q 353 288 353 304 q 334 234 353 265 q 283 171 315 203 q 199 122 235 122 m 542 -8 q 471 76 471 -8 q 478 150 471 111 q 501 216 486 189 q 536 243 517 243 q 577 217 560 243 q 603 154 594 190 q 613 88 613 118 q 597 16 613 40 q 542 -8 581 -8 m 138 443 q 56 458 85 443 q 28 507 28 472 q 126 571 28 571 q 194 562 158 571 q 254 537 229 553 q 279 499 279 521 q 238 458 279 472 q 138 443 197 443 m 529 390 q 613 425 583 390 q 642 507 642 460 q 611 589 642 561 q 532 617 581 617 q 448 581 476 617 q 419 499 419 544 q 447 421 419 451 q 529 390 474 390 m 308 701 q 256 721 286 701 q 193 771 225 740 q 143 856 143 821 q 160 894 143 878 q 199 911 178 911 q 275 869 233 911 q 322 806 300 843 q 343 740 343 769 q 334 713 343 724 q 308 701 325 701 m 868 115 q 806 147 838 115 q 751 219 776 178 q 725 289 725 261 q 736 314 725 306 q 765 322 747 322 q 835 301 796 322 q 897 256 874 279 q 938 183 938 215 q 915 137 938 158 q 868 115 893 115 m 944 436 q 871 444 910 436 q 805 467 832 451 q 778 501 778 482 q 804 542 778 525 q 867 569 831 560 q 933 578 904 578 q 1005 562 981 578 q 1029 507 1029 546 q 944 436 1029 436 m 533 769 q 492 810 507 769 q 478 911 478 851 q 492 992 478 964 q 542 1021 507 1021 q 606 922 606 1021 q 597 855 606 890 q 572 794 588 819 q 533 769 556 769 m 746 685 q 719 696 728 685 q 711 725 711 707 q 733 794 711 756 q 778 857 754 833 q 850 897 818 897 q 897 874 875 897 q 918 826 918 851 q 886 765 918 797 q 815 710 857 735 q 746 685 774 685 z "},"♡":{"ha":972,"x_min":28,"x_max":944,"o":"m 456 -11 q 365 22 413 -11 q 253 131 318 54 q 90 397 151 253 q 28 692 28 542 q 82 907 28 836 q 233 978 136 978 q 332 954 285 978 q 417 874 379 931 q 476 715 454 817 q 569 951 503 881 q 732 1022 635 1022 q 892 950 840 1022 q 944 760 944 878 q 913 567 944 668 q 826 364 882 465 q 699 171 771 263 q 572 38 633 86 q 456 -11 510 -11 m 456 96 q 549 186 500 131 q 647 309 599 242 q 733 451 694 376 q 796 601 772 525 q 819 746 819 676 q 794 859 819 821 q 717 897 768 897 q 669 884 692 897 q 624 833 646 871 q 581 721 601 796 q 535 606 558 644 q 479 567 511 567 q 430 597 453 567 q 374 713 407 628 q 315 822 343 792 q 246 853 286 853 q 174 811 194 853 q 153 692 153 769 q 191 483 153 589 q 297 277 229 376 q 456 96 365 178 z "},"♥":{"ha":972,"x_min":28,"x_max":944,"o":"m 456 -11 q 365 22 413 -11 q 253 131 318 54 q 90 397 151 253 q 28 692 28 542 q 82 907 28 836 q 233 978 136 978 q 332 954 285 978 q 417 874 379 931 q 476 715 454 817 q 569 951 503 881 q 732 1022 635 1022 q 892 950 840 1022 q 944 760 944 878 q 913 567 944 668 q 826 364 882 465 q 699 171 771 263 q 572 38 633 86 q 456 -11 510 -11 z "},"⚠":{"ha":972,"x_min":28,"x_max":944,"o":"m 433 -11 q 194 3 283 -11 q 67 51 106 17 q 28 149 28 86 q 46 260 28 192 q 94 410 64 328 q 165 579 125 492 q 248 751 204 667 q 335 908 292 836 q 401 992 365 958 q 489 1025 438 1025 q 561 999 529 1025 q 626 924 593 972 q 724 763 676 849 q 811 588 771 676 q 881 417 851 499 q 928 271 911 336 q 944 167 944 206 q 826 31 944 74 q 433 -11 707 -11 m 433 100 q 669 113 569 100 q 833 153 769 126 q 815 256 833 190 q 764 408 797 322 q 685 587 731 493 q 585 774 639 681 q 471 951 531 868 l 497 957 q 392 779 444 874 q 294 589 340 685 q 214 406 249 493 q 159 248 179 318 q 139 135 139 178 q 257 109 182 118 q 433 100 332 100 m 406 213 q 431 273 406 254 q 486 292 456 292 q 538 272 519 292 q 556 221 556 253 q 533 163 556 181 q 478 144 510 144 q 424 163 443 144 q 406 213 406 182 m 490 775 q 538 741 524 775 q 551 644 551 707 q 546 526 551 585 q 529 428 540 468 q 505 363 518 383 q 469 342 492 342 q 425 401 438 342 q 413 594 413 460 q 428 735 413 694 q 490 775 444 775 z "},"✓":{"ha":926,"x_min":42,"x_max":885,"o":"m 388 -11 q 350 -2 369 -11 q 305 30 331 7 q 238 96 279 53 q 90 283 138 201 q 42 418 42 364 q 58 481 42 461 q 103 501 75 501 q 248 404 172 501 q 401 100 324 307 l 369 100 q 403 228 381 154 q 457 388 426 303 q 522 560 488 472 q 592 732 557 649 q 661 885 628 815 q 733 995 697 961 q 807 1029 768 1029 q 868 1004 851 1029 q 885 926 885 979 q 844 745 885 858 q 732 485 804 632 q 563 169 660 339 q 490 60 522 99 q 433 5 458 21 q 388 -11 408 -11 z "},"✗":{"ha":949,"x_min":36,"x_max":913,"o":"m 121 -10 q 59 16 82 -10 q 36 79 36 42 q 75 199 36 131 q 190 347 114 268 q 378 506 267 425 l 378 511 q 119 740 203 633 q 36 929 36 847 q 49 980 36 958 q 81 1013 61 1001 q 122 1025 101 1025 q 293 915 204 1025 q 457 589 382 804 l 463 589 q 595 840 532 744 q 717 981 658 936 q 829 1025 775 1025 q 889 994 865 1025 q 913 919 913 964 q 820 736 913 839 q 558 524 728 633 l 558 518 q 758 359 681 435 q 874 218 836 283 q 913 99 913 153 q 897 42 913 67 q 859 5 882 18 q 813 -8 836 -8 q 634 107 722 -8 q 464 438 546 222 l 458 438 q 333 181 393 279 q 221 36 274 82 q 121 -10 168 -10 z "},"❤":{"ha":1167,"x_min":28,"x_max":1139,"o":"m 546 75 q 442 108 506 75 q 300 203 379 142 q 99 410 169 307 q 28 628 28 514 q 94 822 28 758 q 276 886 160 886 q 396 864 339 886 q 499 787 453 842 q 572 633 544 732 q 684 856 604 789 q 882 922 764 922 q 1076 856 1014 922 q 1139 683 1139 790 q 1104 542 1139 614 q 1003 394 1069 469 q 840 236 936 318 q 681 122 761 168 q 546 75 601 75 z "},"℀":{"ha":1272,"x_min":28,"x_max":1267,"o":"m 1043 -15 q 858 49 917 -15 q 799 224 799 113 q 834 376 799 310 q 935 479 869 442 q 1093 517 1001 517 q 1222 490 1176 517 q 1267 418 1267 463 q 1248 373 1267 390 q 1194 356 1229 356 q 1172 358 1183 356 q 1147 365 1160 361 q 1116 373 1133 369 q 1076 376 1099 376 q 975 344 1007 376 q 943 244 943 311 q 974 157 943 183 q 1061 131 1004 131 q 1103 135 1085 131 q 1138 144 1121 139 q 1166 152 1151 149 q 1194 156 1181 156 q 1236 141 1219 156 q 1253 99 1253 126 q 1200 19 1253 54 q 1043 -15 1147 -15 m 453 542 q 404 567 417 542 q 389 644 392 593 l 419 636 q 224 539 367 539 q 76 588 124 539 q 28 706 28 638 q 84 827 28 782 q 231 872 140 872 q 335 856 290 872 q 410 808 379 839 l 376 793 q 343 914 371 879 q 258 949 315 949 q 208 938 238 949 q 149 917 178 928 q 97 907 119 907 q 56 924 71 907 q 42 967 42 940 q 74 1030 42 1001 q 158 1076 106 1058 q 271 1094 210 1094 q 400 1060 346 1094 q 481 960 454 1025 q 514 838 504 906 q 524 696 524 771 q 507 574 524 607 q 453 542 490 542 m 260 657 q 339 672 301 657 q 376 717 376 688 q 345 753 376 740 q 268 765 314 765 q 194 751 218 765 q 171 713 171 736 q 260 657 171 657 m 457 -19 q 412 1 426 -19 q 397 51 397 21 q 431 191 397 113 q 514 363 464 269 q 615 564 564 457 q 708 772 671 681 q 774 934 744 864 q 836 1053 803 1004 q 878 1101 857 1085 q 921 1118 899 1118 q 964 1099 951 1118 q 976 1050 976 1079 q 940 913 976 997 q 847 719 904 828 q 724 481 789 610 q 653 324 685 403 q 596 176 622 246 q 542 57 569 107 q 505 3 525 26 q 457 -19 485 -19 z "},"℁":{"ha":1264,"x_min":28,"x_max":1219,"o":"m 1050 539 q 1169 514 1132 539 q 1207 450 1207 489 q 1190 409 1207 425 q 1140 393 1172 393 q 1083 401 1108 393 q 1017 408 1058 408 q 958 395 975 408 q 940 360 940 382 q 956 329 940 339 q 1025 313 971 319 q 1169 271 1119 303 q 1219 158 1219 239 q 1156 33 1219 74 q 986 -8 1093 -8 q 842 16 885 -8 q 799 83 799 40 q 817 126 799 111 q 861 140 836 140 q 928 131 894 140 q 1006 122 963 122 q 1063 131 1046 122 q 1081 163 1081 140 q 1064 194 1081 185 q 985 208 1047 203 q 890 227 932 214 q 826 270 849 240 q 803 354 803 300 q 867 488 803 436 q 1050 539 932 539 m 453 542 q 404 567 417 542 q 389 644 392 593 l 419 636 q 224 539 367 539 q 76 588 124 539 q 28 706 28 638 q 84 827 28 782 q 231 872 140 872 q 335 856 290 872 q 410 808 379 839 l 376 793 q 343 914 371 879 q 258 949 315 949 q 208 938 238 949 q 149 917 178 928 q 97 907 119 907 q 56 924 71 907 q 42 967 42 940 q 74 1030 42 1001 q 158 1076 106 1058 q 271 1094 210 1094 q 400 1060 346 1094 q 481 960 454 1025 q 514 838 504 906 q 524 696 524 771 q 507 574 524 607 q 453 542 490 542 m 260 657 q 339 672 301 657 q 376 717 376 688 q 345 753 376 740 q 268 765 314 765 q 194 751 218 765 q 171 713 171 736 q 260 657 171 657 m 457 -19 q 412 1 426 -19 q 397 51 397 21 q 431 191 397 113 q 514 363 464 269 q 615 564 564 457 q 708 772 671 681 q 774 934 744 864 q 836 1053 803 1004 q 878 1101 857 1085 q 921 1118 899 1118 q 964 1099 951 1118 q 976 1050 976 1079 q 940 913 976 997 q 847 719 904 828 q 724 481 789 610 q 653 324 685 403 q 596 176 622 246 q 542 57 569 107 q 505 3 525 26 q 457 -19 485 -19 z "},"⅍":{"ha":1256,"x_min":33,"x_max":1211,"o":"m 99 544 q 51 563 68 544 q 33 628 33 582 q 48 728 33 668 q 88 853 63 788 q 144 972 113 918 q 224 1073 185 1046 q 310 1100 263 1100 q 394 1071 356 1100 q 465 976 432 1042 q 508 870 489 929 q 539 751 528 811 q 550 639 550 692 q 529 568 550 592 q 471 544 508 544 q 415 569 435 544 q 389 649 396 593 q 385 716 385 681 q 389 782 386 751 l 429 719 q 344 706 397 710 q 235 708 292 703 q 132 725 178 713 l 208 779 q 204 712 210 744 q 192 651 199 679 q 163 573 182 601 q 99 544 143 544 m 304 808 q 371 819 353 808 q 389 849 389 829 q 377 904 389 871 q 347 964 365 938 q 306 990 328 990 q 266 964 285 990 q 235 903 247 938 q 222 844 222 869 q 241 817 222 826 q 304 808 260 808 m 1042 539 q 1161 514 1124 539 q 1199 450 1199 489 q 1181 409 1199 425 q 1132 393 1164 393 q 1075 401 1100 393 q 1008 408 1050 408 q 949 395 967 408 q 932 360 932 382 q 947 329 932 339 q 1017 313 963 319 q 1161 271 1111 303 q 1211 158 1211 239 q 1148 33 1211 74 q 978 -8 1085 -8 q 833 16 876 -8 q 790 83 790 40 q 809 126 790 111 q 853 140 828 140 q 920 131 886 140 q 997 122 954 122 q 1055 131 1038 122 q 1072 163 1072 140 q 1056 194 1072 185 q 976 208 1039 203 q 882 227 924 214 q 817 270 840 240 q 794 354 794 300 q 859 488 794 436 q 1042 539 924 539 m 449 -19 q 403 1 418 -19 q 389 51 389 21 q 422 191 389 113 q 506 363 456 269 q 607 564 556 457 q 699 772 663 681 q 765 934 736 864 q 828 1053 794 1004 q 869 1101 849 1085 q 913 1118 890 1118 q 956 1099 943 1118 q 968 1050 968 1079 q 932 913 968 997 q 838 719 896 828 q 715 481 781 610 q 645 324 676 403 q 588 176 614 246 q 533 57 561 107 q 497 3 517 26 q 449 -19 476 -19 z "},"@":{"ha":1301,"x_min":68,"x_max":1233,"o":"m 649 -187 q 424 -153 529 -187 q 238 -49 318 -119 q 113 131 158 21 q 68 393 68 242 q 113 651 68 529 q 242 865 158 772 q 442 1010 326 957 q 699 1063 557 1063 q 931 1022 831 1063 q 1098 908 1031 981 q 1199 744 1165 836 q 1233 547 1233 651 q 1207 355 1233 435 q 1138 224 1181 275 q 1042 148 1094 172 q 935 124 989 124 q 827 165 857 124 q 794 278 797 207 l 811 289 q 726 162 786 203 q 579 121 665 121 q 426 180 483 121 q 368 386 368 239 q 402 576 368 493 q 498 708 436 660 q 644 756 560 756 q 753 722 706 756 q 819 621 801 689 l 806 636 q 830 746 806 708 q 896 783 854 783 q 955 765 935 783 q 975 714 975 746 q 967 638 975 686 q 947 531 958 589 q 926 417 935 474 q 918 315 918 360 q 928 269 918 281 q 954 258 939 258 q 1024 294 992 258 q 1076 393 1057 331 q 1096 536 1096 456 q 985 826 1096 725 q 686 926 874 926 q 449 868 553 926 q 287 695 346 810 q 228 411 228 581 q 281 160 228 257 q 428 16 335 63 q 639 -31 521 -31 q 772 -18 713 -31 q 863 -6 832 -6 q 939 -72 939 -6 q 860 -158 939 -129 q 649 -187 782 -187 m 624 272 q 697 297 663 272 q 754 365 732 321 q 776 469 776 410 q 751 584 776 544 q 676 624 725 624 q 606 593 638 624 q 556 514 575 563 q 538 410 538 465 q 561 306 538 339 q 624 272 585 272 z "},"&":{"ha":933,"x_min":49,"x_max":899,"o":"m 371 -17 q 196 24 268 -17 q 86 138 124 65 q 49 306 49 211 q 113 485 49 417 q 296 581 178 554 l 288 514 q 182 623 211 563 q 153 743 153 683 q 197 887 153 829 q 313 974 240 944 q 467 1003 385 1003 q 667 938 599 1003 q 736 775 736 872 q 669 615 736 686 q 456 492 603 544 l 472 535 q 576 428 529 490 q 650 301 622 367 l 589 297 q 701 494 650 438 q 799 551 751 551 q 861 528 842 551 q 881 469 881 504 q 830 359 881 422 q 693 231 779 296 l 699 278 q 856 159 814 210 q 899 69 899 108 q 879 17 899 39 q 824 -4 860 -4 q 719 38 772 -4 q 608 158 665 81 l 633 149 q 528 26 596 68 q 371 -17 461 -17 m 383 129 q 475 159 442 129 q 508 235 508 189 q 483 332 508 282 q 416 417 457 382 q 326 451 375 451 q 249 415 283 451 q 214 314 214 379 q 236 220 214 263 q 297 153 258 178 q 383 129 336 129 m 424 621 q 526 657 485 621 q 568 750 568 693 q 539 826 568 794 q 450 858 510 858 q 356 826 393 858 q 319 735 319 794 q 346 653 319 685 q 424 621 372 621 z "},"¶":{"ha":1264,"x_min":31,"x_max":1233,"o":"m 622 -65 q 542 -8 569 -65 q 515 160 515 50 q 520 258 515 204 q 535 365 525 313 q 558 457 544 418 q 457 419 507 429 q 363 410 407 410 q 193 448 268 410 q 74 556 118 486 q 31 719 31 625 q 51 851 31 796 q 108 944 72 907 q 190 1004 144 982 q 283 1036 235 1026 q 376 1046 331 1046 q 519 1038 440 1046 q 683 1015 599 1029 q 849 985 768 1001 q 999 953 931 968 q 1113 926 1067 938 q 1186 901 1160 915 q 1223 869 1213 886 q 1233 832 1233 853 q 1210 774 1233 797 q 1133 751 1186 751 q 1143 683 1139 718 q 1149 599 1147 647 q 1151 482 1151 551 q 1147 296 1151 383 q 1133 154 1142 208 q 1104 69 1125 94 q 1043 44 1083 44 q 980 76 1004 44 q 944 189 956 108 q 927 360 933 268 q 921 551 921 451 q 924 674 921 629 q 932 753 926 718 q 817 767 876 758 q 694 785 757 775 q 728 581 718 700 q 738 308 738 461 q 728 89 738 171 q 693 -29 718 7 q 622 -65 668 -65 z "},"§":{"ha":840,"x_min":35,"x_max":806,"o":"m 365 -299 q 263 -293 319 -299 q 155 -273 207 -287 q 69 -231 103 -258 q 35 -158 35 -203 q 65 -90 35 -114 q 163 -67 94 -67 q 269 -79 210 -67 q 382 -92 328 -92 q 501 -68 463 -92 q 539 -1 539 -44 q 524 45 539 25 q 467 85 510 65 q 338 128 424 104 q 259 151 306 136 q 167 194 213 167 q 92 264 122 221 q 61 372 61 307 q 82 481 61 433 q 139 565 103 529 q 221 626 175 601 q 131 703 160 660 q 103 808 103 747 q 130 936 103 882 q 203 1028 157 990 q 306 1090 249 1067 q 422 1123 363 1113 q 535 1133 481 1133 q 730 1097 654 1133 q 806 1000 806 1061 q 777 931 806 957 q 690 904 749 904 q 631 911 665 904 q 554 924 596 918 q 463 931 513 931 q 332 906 378 931 q 286 824 286 881 q 299 781 286 800 q 353 742 313 763 q 479 692 394 722 q 627 629 569 660 q 717 566 685 599 q 763 497 750 533 q 775 414 775 460 q 755 315 775 360 q 697 238 735 271 q 607 182 660 206 q 705 93 676 143 q 733 -19 733 43 q 687 -165 733 -103 q 558 -263 640 -228 q 365 -299 475 -299 m 269 404 q 306 364 269 374 q 381 354 342 354 q 523 378 475 354 q 571 431 571 401 q 542 473 571 460 q 451 486 513 486 q 320 465 371 486 q 269 404 269 444 z "},"©":{"ha":1301,"x_min":68,"x_max":1261,"o":"m 638 -187 q 419 -153 522 -187 q 238 -49 317 -119 q 113 131 158 21 q 68 393 68 242 q 113 651 68 529 q 242 865 158 772 q 442 1010 326 957 q 699 1063 557 1063 q 935 1020 831 1063 q 1112 899 1039 978 q 1223 713 1185 821 q 1261 475 1261 606 q 1249 343 1261 415 q 1210 197 1238 271 q 1135 53 1182 122 q 1020 -69 1089 -15 q 856 -156 951 -124 q 638 -187 761 -187 m 639 86 q 397 172 475 86 q 319 414 319 258 q 366 624 319 532 q 499 767 413 715 q 707 819 586 819 q 873 784 815 819 q 931 693 931 749 q 909 640 931 658 q 847 621 888 621 q 777 635 814 621 q 683 649 740 649 q 535 597 585 649 q 485 444 485 544 q 533 307 485 350 q 664 264 581 264 q 735 273 704 264 q 793 291 767 282 q 847 300 819 300 q 893 283 875 300 q 911 233 911 265 q 843 132 911 178 q 639 86 775 86 m 639 -31 q 775 -11 713 -31 q 889 44 838 8 q 978 126 940 79 q 1043 231 1017 174 q 1083 349 1069 288 q 1096 475 1096 411 q 1046 731 1096 632 q 903 878 996 831 q 686 926 811 926 q 449 868 553 926 q 287 695 346 810 q 228 411 228 581 q 281 160 228 257 q 428 16 335 63 q 639 -31 521 -31 z "},"®":{"ha":1329,"x_min":68,"x_max":1261,"o":"m 638 -187 q 419 -153 522 -187 q 238 -49 317 -119 q 113 131 158 21 q 68 393 68 242 q 113 651 68 529 q 242 865 158 772 q 442 1010 326 957 q 699 1063 557 1063 q 935 1020 831 1063 q 1112 899 1039 978 q 1223 713 1185 821 q 1261 475 1261 606 q 1249 343 1261 415 q 1210 197 1238 271 q 1135 53 1182 122 q 1020 -69 1089 -15 q 856 -156 951 -124 q 638 -187 761 -187 m 639 -31 q 775 -11 713 -31 q 889 44 838 8 q 978 126 940 79 q 1043 231 1017 174 q 1083 349 1069 288 q 1096 475 1096 411 q 1046 731 1096 632 q 903 878 996 831 q 686 926 811 926 q 449 868 553 926 q 287 695 346 810 q 228 411 228 581 q 281 160 228 257 q 428 16 335 63 q 639 -31 521 -31 m 442 74 q 372 123 390 74 q 354 294 354 172 q 372 565 354 451 q 432 742 389 679 q 538 828 474 803 q 678 853 603 853 q 866 793 806 853 q 926 638 926 733 q 881 499 926 553 q 760 422 836 444 q 592 411 685 400 l 592 407 q 844 265 768 332 q 921 151 921 199 q 902 103 921 121 q 849 86 883 86 q 755 115 807 86 q 640 209 703 143 q 500 386 576 275 l 496 386 q 508 295 503 351 q 513 193 513 239 q 497 104 513 135 q 442 74 481 74 m 624 506 q 739 539 692 506 q 786 629 786 572 q 752 707 786 678 q 651 736 718 736 q 548 695 583 736 q 513 599 513 654 q 540 532 513 558 q 624 506 567 506 z "},"™":{"ha":1172,"x_min":25,"x_max":1126,"o":"m 289 1115 q 401 1109 354 1115 q 474 1093 447 1103 q 519 1063 506 1081 q 532 1025 532 1046 q 507 974 532 993 q 433 954 482 954 q 367 960 403 954 q 296 978 332 965 l 322 1001 q 341 871 333 944 q 353 728 349 797 q 357 615 357 660 q 338 511 357 547 q 271 475 318 475 q 188 606 188 475 q 192 703 188 649 q 203 817 196 758 q 220 927 211 875 q 239 1015 229 979 l 267 978 q 194 959 238 968 q 118 950 150 950 q 47 967 69 950 q 25 1013 25 983 q 42 1056 25 1039 q 89 1088 58 1074 q 173 1108 122 1101 q 289 1115 224 1115 m 1035 474 q 981 499 1001 474 q 961 590 961 524 q 967 716 961 649 q 979 853 972 783 q 990 986 986 922 l 985 986 q 923 799 957 864 q 844 733 889 733 q 794 758 817 733 q 752 839 772 782 q 710 990 732 896 l 704 990 q 711 897 707 947 q 719 797 715 847 q 727 701 724 746 q 731 619 731 656 q 715 534 731 572 q 654 496 699 496 q 594 526 614 496 q 575 621 575 557 q 578 737 575 669 q 588 872 582 804 q 603 989 594 940 q 635 1075 614 1049 q 692 1101 657 1101 q 747 1079 721 1101 q 801 1005 774 1057 q 858 863 829 953 l 840 863 q 921 1059 882 1000 q 999 1118 960 1118 q 1058 1090 1039 1118 q 1089 1015 1078 1063 q 1110 893 1103 963 q 1122 751 1118 824 q 1126 615 1126 679 q 1101 506 1126 539 q 1035 474 1076 474 z "},"℅":{"ha":1272,"x_min":44,"x_max":1228,"o":"m 289 540 q 103 604 163 540 q 44 779 44 668 q 80 931 44 865 q 181 1035 115 997 q 339 1072 247 1072 q 467 1045 422 1072 q 513 974 513 1018 q 494 928 513 946 q 440 911 475 911 q 417 914 429 911 q 393 921 406 917 q 362 928 379 925 q 322 932 344 932 q 221 899 253 932 q 189 800 189 867 q 219 713 189 739 q 307 686 250 686 q 349 690 331 686 q 383 700 367 694 q 412 708 397 704 q 440 711 426 711 q 482 697 465 711 q 499 654 499 682 q 446 575 499 610 q 289 540 393 540 m 968 -8 q 792 61 858 -8 q 725 249 725 131 q 756 392 725 331 q 841 489 786 454 q 969 524 896 524 q 1106 490 1049 524 q 1196 397 1164 457 q 1228 257 1228 336 q 1157 63 1228 135 q 968 -8 1086 -8 m 979 126 q 1058 163 1029 126 q 1086 267 1086 200 q 1058 369 1086 333 q 979 406 1029 406 q 899 369 928 406 q 871 267 871 333 q 899 163 871 200 q 979 126 928 126 m 383 -19 q 338 1 353 -19 q 324 51 324 21 q 357 191 324 113 q 440 363 390 269 q 542 564 490 457 q 634 772 597 681 q 700 934 671 864 q 763 1053 729 1004 q 804 1101 783 1085 q 847 1118 825 1118 q 890 1099 878 1118 q 903 1050 903 1079 q 867 913 903 997 q 773 719 831 828 q 650 481 715 610 q 580 324 611 403 q 522 176 549 246 q 468 57 496 107 q 431 3 451 26 q 383 -19 411 -19 z "},"°":{"ha":489,"x_min":28,"x_max":461,"o":"m 244 569 q 88 630 147 569 q 28 792 28 690 q 88 953 28 893 q 244 1014 147 1014 q 402 953 343 1014 q 461 792 461 893 q 402 630 461 690 q 244 569 343 569 m 244 646 q 348 684 311 646 q 385 792 385 722 q 348 899 385 861 q 244 938 311 938 q 141 899 178 938 q 104 792 104 861 q 141 684 104 722 q 244 646 178 646 z "},"|":{"ha":408,"x_min":111,"x_max":297,"o":"m 197 -293 q 149 -267 165 -293 q 126 -179 132 -240 q 115 41 119 -94 q 111 331 111 176 q 115 590 111 469 q 124 812 118 711 q 139 988 131 913 q 164 1087 147 1056 q 210 1118 181 1118 q 255 1089 238 1118 q 278 997 272 1060 q 289 850 285 938 q 295 656 293 763 q 297 429 297 549 q 292 134 297 275 q 278 -129 288 -7 q 250 -258 271 -222 q 197 -293 229 -293 z "},"¦":{"ha":408,"x_min":111,"x_max":297,"o":"m 197 493 q 150 511 165 493 q 126 571 135 529 q 116 657 121 604 q 111 769 111 710 q 119 920 111 853 q 139 1032 126 988 q 166 1097 151 1076 q 210 1118 181 1118 q 253 1098 238 1118 q 278 1036 268 1078 q 292 942 286 1001 q 297 813 297 883 q 292 697 297 753 q 278 593 286 642 q 249 515 268 538 q 197 493 229 493 m 197 -293 q 150 -275 165 -293 q 126 -215 135 -257 q 116 -129 121 -182 q 111 -17 111 -76 q 119 134 111 67 q 139 246 126 201 q 166 311 151 290 q 210 332 181 332 q 253 312 238 332 q 278 250 268 292 q 292 156 286 215 q 297 26 297 97 q 292 -89 297 -33 q 278 -193 286 -144 q 249 -271 268 -249 q 197 -293 229 -293 z "},"†":{"ha":763,"x_min":28,"x_max":735,"o":"m 333 725 l 321 711 q 307 839 311 776 q 303 961 303 901 q 311 1042 303 1007 q 339 1097 319 1078 q 390 1117 358 1117 q 458 1081 436 1117 q 479 981 479 1046 q 470 838 479 904 q 446 719 461 771 l 421 722 q 590 763 497 763 q 695 740 656 763 q 735 663 735 717 q 690 585 735 611 q 575 558 644 558 q 495 565 538 558 q 413 588 453 572 l 436 603 q 460 476 449 547 q 482 329 472 406 q 497 181 492 253 q 503 53 503 110 q 475 -149 503 -75 q 393 -222 447 -222 q 326 -192 350 -222 q 291 -114 301 -161 q 278 -15 281 -67 q 276 79 276 38 q 282 238 276 150 q 298 422 288 326 q 322 604 308 517 l 350 594 q 175 544 281 544 q 67 568 106 544 q 28 642 28 592 q 70 726 28 696 q 185 756 113 756 q 266 747 228 756 q 333 725 304 739 z "},"‡":{"ha":763,"x_min":28,"x_max":735,"o":"m 372 -222 q 305 -186 326 -222 q 283 -86 283 -150 q 292 27 283 -26 q 317 119 301 81 l 342 117 q 172 76 265 76 q 67 99 107 76 q 28 176 28 122 q 74 255 28 229 q 188 281 119 281 q 267 274 225 281 q 350 251 310 267 l 326 236 q 301 343 313 281 q 290 454 290 406 q 299 552 290 496 q 322 660 307 608 l 350 650 q 175 600 281 600 q 67 624 106 600 q 28 697 28 647 q 70 781 28 751 q 185 811 113 811 q 266 803 228 811 q 333 781 304 794 l 321 767 q 307 865 311 817 q 303 961 303 914 q 323 1074 303 1031 q 390 1117 343 1117 q 458 1081 436 1117 q 479 981 479 1046 q 470 868 479 921 q 446 775 461 815 l 421 778 q 590 818 497 818 q 695 795 656 818 q 735 718 735 772 q 690 640 735 667 q 575 614 644 614 q 495 621 538 614 q 413 643 453 628 l 436 658 q 462 552 451 615 q 472 440 472 489 q 464 342 472 399 q 440 235 456 286 l 413 244 q 588 294 482 294 q 696 271 657 294 q 735 197 735 247 q 692 113 735 143 q 578 83 650 83 q 497 92 535 83 q 429 114 458 100 l 442 128 q 456 28 453 76 q 460 -67 460 -19 q 440 -178 460 -135 q 372 -222 421 -222 z "},"№":{"ha":1489,"x_min":92,"x_max":1444,"o":"m 1082 265 q 1013 283 1035 265 q 990 328 990 300 q 1010 370 990 354 q 1076 399 1031 386 q 1181 416 1122 411 q 1288 421 1240 421 q 1370 403 1346 421 q 1394 360 1394 386 q 1374 310 1394 328 q 1315 285 1354 293 q 1241 275 1283 279 q 1156 268 1199 271 q 1082 265 1113 265 m 247 988 q 335 940 290 988 q 431 797 381 892 q 540 563 481 703 q 669 238 599 422 l 675 238 q 657 383 665 304 q 642 543 649 463 q 631 694 635 624 q 628 814 628 764 q 649 977 628 929 q 717 1025 671 1025 q 768 1008 749 1025 q 801 960 788 992 q 847 746 833 882 q 861 435 861 610 q 850 206 861 300 q 808 63 839 111 q 719 14 778 14 q 640 45 681 14 q 559 138 600 76 q 474 293 518 200 q 383 510 431 386 q 282 789 335 635 l 276 789 q 293 618 286 717 q 304 417 300 519 q 308 228 308 314 q 283 44 308 99 q 203 -10 257 -10 q 117 47 143 -10 q 92 221 92 103 q 95 389 92 294 q 106 583 99 483 q 124 774 113 683 q 163 937 138 886 q 247 988 188 988 m 1185 546 q 1008 615 1075 546 q 942 803 942 685 q 972 947 942 885 q 1058 1043 1003 1008 q 1186 1078 1113 1078 q 1323 1044 1265 1078 q 1413 951 1381 1011 q 1444 811 1444 890 q 1374 617 1444 689 q 1185 546 1303 546 m 1196 681 q 1274 717 1246 681 q 1303 821 1303 754 q 1274 924 1303 888 q 1196 960 1246 960 q 1116 924 1144 960 q 1088 821 1088 888 q 1116 717 1088 754 q 1196 681 1144 681 z "},"℆":{"ha":1293,"x_min":44,"x_max":1225,"o":"m 289 540 q 103 604 163 540 q 44 779 44 668 q 80 931 44 865 q 181 1035 115 997 q 339 1072 247 1072 q 467 1045 422 1072 q 513 974 513 1018 q 494 928 513 946 q 440 911 475 911 q 417 914 429 911 q 393 921 406 917 q 362 928 379 925 q 322 932 344 932 q 221 899 253 932 q 189 800 189 867 q 219 713 189 739 q 307 686 250 686 q 349 690 331 686 q 383 700 367 694 q 412 708 397 704 q 440 711 426 711 q 482 697 465 711 q 499 654 499 682 q 446 575 499 610 q 289 540 393 540 m 1154 0 q 1108 19 1124 0 q 1089 66 1093 38 q 1085 124 1085 94 l 1093 131 l 1111 119 q 1046 28 1097 60 q 942 -4 994 -4 q 854 17 894 -4 q 792 83 814 39 q 760 197 771 129 q 749 338 749 265 q 752 410 749 376 q 764 465 756 443 q 788 503 771 490 q 832 515 806 515 q 880 493 863 515 q 901 435 897 471 q 905 384 904 413 q 907 325 906 356 q 910 266 908 294 q 913 218 911 238 q 936 151 918 171 q 982 131 954 131 q 1065 246 1065 131 q 1063 298 1065 269 q 1057 356 1060 326 q 1053 406 1056 382 q 1050 446 1050 429 q 1067 510 1050 490 q 1114 531 1083 531 q 1156 517 1139 531 q 1183 483 1174 504 q 1214 367 1203 444 q 1225 196 1225 289 q 1210 51 1225 101 q 1154 0 1194 0 m 383 -19 q 338 1 353 -19 q 324 51 324 21 q 357 191 324 113 q 440 363 390 269 q 542 564 490 457 q 634 772 597 681 q 700 934 671 864 q 763 1053 729 1004 q 804 1101 783 1085 q 847 1118 825 1118 q 890 1099 878 1118 q 903 1050 903 1079 q 867 913 903 997 q 773 719 831 828 q 650 481 715 610 q 580 324 611 403 q 522 176 549 246 q 468 57 496 107 q 431 3 451 26 q 383 -19 411 -19 z "},"℃":{"ha":1335,"x_min":28,"x_max":1307,"o":"m 244 569 q 88 630 147 569 q 28 792 28 690 q 88 953 28 893 q 244 1014 147 1014 q 402 953 343 1014 q 461 792 461 893 q 402 630 461 690 q 244 569 343 569 m 244 646 q 348 684 311 646 q 385 792 385 722 q 348 899 385 861 q 244 938 311 938 q 141 899 178 938 q 104 792 104 861 q 141 684 104 722 q 244 646 178 646 m 969 -15 q 708 44 813 -15 q 553 210 604 103 q 501 460 501 317 q 559 737 501 618 q 726 921 617 856 q 990 986 836 986 q 1221 935 1135 986 q 1307 807 1307 885 q 1278 734 1307 761 q 1193 707 1249 707 q 1122 722 1157 707 q 1048 752 1088 738 q 954 767 1008 767 q 826 740 885 767 q 731 652 767 714 q 696 485 696 590 q 766 258 696 325 q 951 192 836 192 q 1036 199 992 192 q 1119 215 1081 207 q 1182 222 1158 222 q 1257 199 1229 222 q 1285 132 1285 176 q 1204 26 1285 68 q 969 -15 1124 -15 z "},"℻":{"ha":1726,"x_min":74,"x_max":1697,"o":"m 361 1100 q 453 1080 425 1100 q 482 1025 482 1060 q 444 967 482 985 q 332 949 406 949 q 267 950 304 949 q 190 953 231 951 l 211 982 q 217 908 218 951 q 208 826 217 865 l 189 851 q 407 810 346 842 q 468 732 468 778 q 450 690 468 707 q 396 674 432 674 q 292 694 351 674 q 171 754 232 715 l 204 776 q 221 719 213 757 q 235 637 229 681 q 240 556 240 593 q 220 483 240 507 q 164 458 200 458 q 123 472 140 458 q 97 508 106 485 q 81 597 88 538 q 74 736 74 656 q 88 928 74 856 q 125 1032 101 1001 q 183 1072 144 1057 q 268 1094 221 1088 q 361 1100 315 1100 m 581 475 q 533 497 550 475 q 515 571 515 519 q 530 688 515 618 q 569 832 544 757 q 626 971 594 907 q 706 1086 667 1054 q 792 1118 744 1118 q 876 1085 838 1118 q 947 975 914 1051 q 990 851 971 919 q 1021 715 1010 783 q 1032 585 1032 646 q 1011 502 1032 529 q 953 475 990 475 q 897 503 917 475 q 871 596 878 532 q 867 674 867 633 q 871 750 868 714 l 911 678 q 826 661 879 665 q 717 663 774 657 q 614 685 660 669 l 690 747 q 686 669 692 707 q 674 599 681 631 q 644 508 664 542 q 581 475 625 475 m 786 781 q 853 792 835 781 q 871 828 871 804 q 859 892 871 854 q 828 960 847 931 q 788 990 810 990 q 748 960 767 990 q 717 890 729 929 q 704 822 704 850 q 723 791 704 801 q 786 781 742 781 m 1160 475 q 1113 494 1131 475 q 1094 539 1094 513 q 1156 659 1094 588 q 1333 804 1218 731 l 1328 793 q 1179 915 1228 857 q 1131 1018 1131 972 q 1151 1069 1131 1050 q 1196 1088 1172 1088 q 1307 1026 1251 1088 q 1410 849 1363 964 l 1392 850 q 1517 1054 1457 990 q 1633 1118 1576 1118 q 1679 1097 1661 1118 q 1697 1043 1697 1075 q 1634 926 1697 990 q 1460 796 1571 863 l 1465 808 q 1633 672 1579 736 q 1688 560 1688 608 q 1676 519 1688 536 q 1649 492 1665 501 q 1614 483 1632 483 q 1493 553 1550 483 q 1383 750 1436 624 l 1401 750 q 1314 594 1356 654 q 1234 504 1272 533 q 1160 475 1196 475 z "},"℉":{"ha":1153,"x_min":28,"x_max":1122,"o":"m 244 569 q 88 630 147 569 q 28 792 28 690 q 88 953 28 893 q 244 1014 147 1014 q 402 953 343 1014 q 461 792 461 893 q 402 630 461 690 q 244 569 343 569 m 244 646 q 348 684 311 646 q 385 792 385 722 q 348 899 385 861 q 244 938 311 938 q 141 899 178 938 q 104 792 104 861 q 141 684 104 722 q 244 646 178 646 m 950 994 q 1083 966 1043 994 q 1122 889 1122 938 q 1069 806 1122 832 q 904 779 1015 779 q 800 781 858 779 q 681 788 742 783 l 694 814 q 703 695 704 765 q 689 561 701 625 l 675 582 q 929 544 836 571 q 1062 482 1022 518 q 1101 401 1101 446 q 1078 344 1101 367 q 1006 321 1054 321 q 845 355 936 321 q 657 453 754 389 l 688 456 q 712 359 700 419 q 731 231 724 299 q 739 107 739 164 q 712 -1 739 33 q 638 -36 685 -36 q 582 -19 604 -36 q 547 33 560 -1 q 522 176 532 81 q 511 407 511 272 q 533 723 511 606 q 590 889 556 840 q 676 951 619 928 q 806 984 733 974 q 950 994 878 994 z "},"⇪":{"ha":903,"x_min":21,"x_max":882,"o":"m 379 985 q 472 1035 432 1040 q 558 975 511 1031 q 730 760 657 860 q 842 590 803 661 q 882 483 882 518 q 863 445 882 458 q 817 432 844 432 q 735 434 778 432 q 649 442 693 436 q 667 403 661 424 q 674 363 674 382 q 667 332 674 344 q 637 311 660 319 q 566 299 614 303 q 436 296 518 296 q 292 301 339 296 q 231 321 246 307 q 217 358 217 335 q 227 399 217 378 q 251 439 238 421 q 184 428 226 433 q 103 424 142 424 q 21 482 21 424 q 56 591 21 525 q 170 753 92 657 q 379 985 249 850 m 311 360 l 285 381 q 444 401 358 400 q 607 385 531 403 l 583 363 q 561 428 561 392 q 620 525 561 497 q 818 525 679 553 l 801 496 q 617 705 700 596 q 464 940 533 814 q 283 702 374 810 q 89 503 192 594 l 89 522 q 276 526 222 546 q 329 425 329 507 q 311 360 329 389 m 436 -11 q 288 -3 339 -11 q 219 31 238 4 q 201 115 201 58 q 220 209 201 174 q 292 260 239 244 q 450 275 346 275 q 607 263 557 275 q 672 219 657 250 q 688 132 688 189 q 679 60 688 88 q 646 17 671 32 q 570 -5 621 1 q 436 -11 519 -11 m 290 54 l 278 67 q 444 79 356 78 q 614 71 533 81 l 604 57 q 590 133 592 89 q 597 219 588 178 l 603 199 q 508 187 564 190 q 392 185 451 183 q 285 190 333 186 l 293 210 q 303 128 304 171 q 290 54 303 85 z "},"⌘":{"ha":1065,"x_min":35,"x_max":1031,"o":"m 239 -11 q 100 49 151 -11 q 49 214 49 110 q 104 382 49 326 q 254 438 160 438 q 305 431 279 438 q 350 415 331 424 l 256 417 q 243 516 244 461 q 251 621 242 571 l 285 603 q 249 598 268 600 q 201 596 229 596 q 78 642 121 596 q 35 796 35 688 q 63 910 35 860 q 140 991 90 961 q 257 1021 190 1021 q 360 995 319 1021 q 419 930 400 969 q 438 847 438 890 q 434 781 438 814 q 411 701 431 749 l 390 764 q 501 782 439 783 q 624 758 564 781 l 608 725 q 600 764 603 744 q 597 797 597 783 q 649 969 596 910 q 796 1029 703 1029 q 960 964 903 1029 q 1018 794 1018 899 q 965 630 1018 688 q 808 572 911 572 q 771 576 786 572 q 743 586 756 581 l 769 601 q 781 496 781 550 q 769 390 782 442 l 740 418 q 815 433 772 433 q 972 383 914 433 q 1031 232 1031 333 q 968 58 1031 122 q 792 -7 906 -7 q 651 40 704 -7 q 597 174 597 86 q 604 242 597 211 q 622 310 611 272 l 635 267 q 565 248 606 253 q 482 248 524 243 q 406 267 440 253 l 418 286 q 428 247 424 271 q 433 194 433 222 q 388 42 433 94 q 239 -11 342 -11 m 236 117 q 313 172 294 117 q 314 322 331 228 q 194 307 242 335 q 147 214 147 279 q 172 142 147 168 q 236 117 197 117 m 504 357 q 628 392 590 357 q 665 504 665 428 q 519 650 665 650 q 405 614 440 650 q 369 493 369 578 q 504 357 369 357 m 811 117 q 876 142 851 117 q 900 214 900 168 q 853 307 900 279 q 733 322 806 335 q 735 172 717 228 q 811 117 753 117 m 236 915 q 172 890 197 915 q 147 818 147 864 q 194 726 147 754 q 314 710 242 697 q 313 861 331 807 q 236 915 294 915 m 811 915 q 735 861 753 915 q 733 710 717 807 q 853 726 806 697 q 900 818 900 754 q 876 890 900 864 q 811 915 851 915 z "},"⬒":{"ha":972,"x_min":42,"x_max":931,"o":"m 479 -11 q 206 0 300 -11 q 79 42 111 11 q 54 103 63 60 q 44 231 46 146 q 42 454 42 315 q 53 800 42 669 q 90 957 64 931 q 219 1009 124 993 q 492 1025 315 1025 q 749 1015 657 1025 q 876 972 842 1004 q 919 831 907 946 q 931 528 931 715 q 920 185 931 300 q 882 46 910 69 q 747 2 844 15 q 479 -11 649 -11 m 158 82 l 132 103 q 361 120 239 115 q 608 122 483 125 q 844 107 732 119 l 821 85 q 798 230 806 149 q 792 399 790 311 q 807 567 794 486 l 826 533 q 619 513 736 518 q 380 510 503 507 q 146 525 257 514 l 161 557 q 182 392 178 479 q 180 225 186 306 q 158 82 174 144 z "},"℠":{"ha":1182,"x_min":28,"x_max":1136,"o":"m 247 478 q 181 482 218 478 q 109 496 144 486 q 51 526 74 506 q 28 576 28 546 q 50 627 28 610 q 119 644 72 644 q 191 637 151 644 q 269 629 231 629 q 346 674 346 629 q 338 698 346 688 q 306 719 331 708 q 228 744 281 731 q 88 805 132 768 q 44 903 44 842 q 72 1005 44 964 q 143 1070 100 1046 q 235 1106 186 1094 q 328 1117 285 1117 q 458 1092 406 1117 q 511 1022 511 1067 q 490 972 511 992 q 426 951 468 951 q 388 956 413 951 q 333 964 363 960 q 272 968 303 968 q 206 956 229 968 q 183 913 183 943 q 190 888 183 899 q 223 867 197 878 q 303 839 249 856 q 451 766 410 808 q 492 664 492 724 q 460 566 492 608 q 374 501 429 524 q 247 478 319 478 m 1044 474 q 991 499 1011 474 q 971 590 971 524 q 976 716 971 649 q 989 853 982 783 q 1000 986 996 922 l 994 986 q 933 799 967 864 q 854 733 899 733 q 804 758 826 733 q 762 839 782 782 q 719 990 742 896 l 714 990 q 721 897 717 947 q 729 797 725 847 q 737 701 733 746 q 740 619 740 656 q 724 534 740 572 q 664 496 708 496 q 604 526 624 496 q 585 621 585 557 q 588 737 585 669 q 598 872 592 804 q 613 989 604 940 q 645 1075 624 1049 q 701 1101 667 1101 q 757 1079 731 1101 q 811 1005 783 1057 q 868 863 839 953 l 850 863 q 931 1059 892 1000 q 1008 1118 969 1118 q 1068 1090 1049 1118 q 1099 1015 1088 1063 q 1120 893 1113 963 q 1132 751 1128 824 q 1136 615 1136 679 q 1111 506 1136 539 q 1044 474 1086 474 z "},"℡":{"ha":1578,"x_min":25,"x_max":1553,"o":"m 289 1115 q 401 1109 354 1115 q 474 1093 447 1103 q 519 1063 506 1081 q 532 1025 532 1046 q 507 974 532 993 q 433 954 482 954 q 367 960 403 954 q 296 978 332 965 l 322 1001 q 341 871 333 944 q 353 728 349 797 q 357 615 357 660 q 338 511 357 547 q 271 475 318 475 q 188 606 188 475 q 192 703 188 649 q 203 817 196 758 q 220 927 211 875 q 239 1015 229 979 l 267 978 q 194 959 238 968 q 118 950 150 950 q 47 967 69 950 q 25 1013 25 983 q 42 1056 25 1039 q 89 1088 58 1074 q 173 1108 122 1101 q 289 1115 224 1115 m 876 1117 q 988 1098 956 1117 q 1021 1043 1021 1079 q 869 968 1021 968 q 788 969 833 968 q 694 974 743 971 l 721 997 q 724 912 728 958 q 706 825 721 865 l 688 844 q 781 857 724 851 q 883 863 838 863 q 972 846 944 863 q 999 803 999 829 q 968 756 999 775 q 868 738 938 738 q 772 741 819 738 q 679 750 724 744 l 703 775 q 717 712 713 749 q 722 638 722 675 q 715 574 722 601 l 690 592 q 797 617 735 607 q 910 626 858 626 q 991 614 963 626 q 1019 571 1019 601 q 1003 532 1019 549 q 951 503 988 515 q 869 484 919 493 q 769 475 819 475 q 613 538 650 475 q 587 622 596 569 q 578 761 578 674 q 592 944 578 882 q 628 1036 606 1006 q 731 1099 664 1081 q 876 1117 799 1117 m 1288 475 q 1201 490 1231 475 q 1153 543 1172 506 q 1132 633 1140 571 q 1124 793 1124 696 q 1126 922 1124 861 q 1136 1018 1129 983 q 1162 1086 1143 1065 q 1211 1107 1181 1107 q 1253 1086 1239 1107 q 1274 1032 1268 1065 q 1281 960 1281 999 q 1273 753 1281 858 q 1253 560 1265 649 l 1213 579 q 1349 646 1274 621 q 1478 671 1425 671 q 1533 655 1514 671 q 1553 611 1553 639 q 1529 558 1553 583 q 1464 513 1506 532 q 1379 486 1429 497 q 1288 475 1329 475 z "},"₳":{"ha":1065,"x_min":31,"x_max":1038,"o":"m 214 -10 q 143 33 165 -10 q 121 163 121 76 q 135 309 121 222 q 176 493 149 396 q 241 685 203 590 q 327 856 279 779 q 431 980 375 933 q 551 1026 488 1026 q 665 983 614 1026 q 756 869 715 940 q 827 709 797 797 q 877 529 857 621 q 907 356 897 438 q 917 214 917 274 q 892 65 917 113 q 813 18 867 18 q 737 66 761 18 q 700 226 713 114 q 677 383 692 303 q 642 544 663 463 q 597 709 622 626 q 539 874 571 792 l 533 874 q 467 706 499 794 q 409 526 436 617 q 363 349 382 435 q 331 189 343 263 q 290 39 313 88 q 214 -10 267 -10 m 128 374 q 52 387 74 374 q 31 424 31 400 q 51 463 31 446 q 132 488 71 479 q 299 504 200 496 q 510 519 397 513 q 732 531 622 526 q 933 535 842 535 q 1014 519 990 535 q 1038 479 1038 504 q 1017 440 1038 456 q 944 417 997 424 q 800 405 883 411 q 623 393 717 399 q 436 383 529 388 q 263 376 343 379 q 128 374 183 374 m 128 165 q 52 178 74 165 q 31 215 31 192 q 51 254 31 238 q 132 279 71 271 q 299 296 200 288 q 510 311 397 304 q 732 322 622 318 q 933 326 842 326 q 1014 311 990 326 q 1038 271 1038 296 q 1017 231 1038 247 q 944 208 997 215 q 800 197 883 203 q 623 185 717 190 q 436 175 529 179 q 263 168 343 171 q 128 165 183 165 z "},"₵":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 485 -17 q 488 153 485 51 q 497 372 492 254 q 508 608 501 489 q 523 832 515 726 q 538 1014 531 938 q 558 1090 544 1071 q 593 1110 572 1110 q 627 1086 614 1110 q 640 1004 640 1063 q 637 801 640 911 q 628 577 633 692 q 615 353 622 463 q 601 149 608 243 q 586 -11 593 56 q 564 -97 579 -76 q 529 -118 549 -118 q 497 -96 508 -118 q 485 -17 485 -74 z "},"¢":{"ha":769,"x_min":56,"x_max":763,"o":"m 426 129 q 145 215 235 129 q 56 451 56 300 q 109 652 56 565 q 263 789 163 739 q 504 839 364 839 q 697 798 631 839 q 763 693 763 757 q 738 631 763 654 q 667 608 714 608 q 610 617 639 608 q 546 633 581 625 q 464 642 511 642 q 301 599 356 642 q 247 474 247 556 q 299 368 247 401 q 440 335 351 335 q 528 345 490 335 q 600 366 567 356 q 667 376 633 376 q 719 356 699 376 q 740 299 740 336 q 706 217 740 256 q 601 153 671 178 q 426 129 532 129 m 439 -39 q 376 -18 397 -39 q 356 39 356 3 q 365 100 356 74 q 388 146 374 126 l 496 149 q 515 96 507 126 q 522 46 522 65 q 504 -15 522 10 q 439 -39 486 -39 m 396 808 q 377 865 385 832 q 369 918 369 899 q 388 978 369 954 q 453 1003 406 1003 q 515 982 494 1003 q 536 925 536 961 q 527 864 536 890 q 504 818 518 838 l 396 808 z "},"₡":{"ha":901,"x_min":68,"x_max":874,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 390 -18 q 393 151 390 50 q 401 370 396 253 q 414 607 407 488 q 428 833 421 726 q 443 1015 436 939 q 463 1089 449 1069 q 496 1108 476 1108 q 528 1085 515 1108 q 542 1006 542 1063 q 538 802 542 913 q 529 577 535 692 q 516 352 524 463 q 501 148 508 242 q 486 -12 493 54 q 466 -97 481 -76 q 432 -118 451 -118 q 401 -96 413 -118 q 390 -18 390 -74 m 571 -18 q 574 151 571 50 q 582 370 576 253 q 594 607 588 488 q 609 833 601 726 q 624 1015 617 939 q 643 1089 629 1069 q 676 1108 657 1108 q 709 1085 696 1108 q 722 1006 722 1063 q 719 802 722 913 q 710 577 715 692 q 697 352 704 463 q 681 148 689 242 q 667 -12 674 54 q 647 -97 661 -76 q 613 -118 632 -118 q 582 -96 593 -118 q 571 -18 571 -74 z "},"₢":{"ha":926,"x_min":68,"x_max":888,"o":"m 536 -15 q 275 44 379 -15 q 119 210 171 103 q 68 460 68 317 q 126 737 68 618 q 293 921 183 856 q 557 986 403 986 q 788 935 701 986 q 874 807 874 885 q 844 734 874 761 q 760 707 815 707 q 689 722 724 707 q 615 752 654 738 q 521 767 575 767 q 392 740 451 767 q 298 652 333 714 q 263 485 263 590 q 333 258 263 325 q 518 192 403 192 q 603 199 558 192 q 686 215 647 207 q 749 222 725 222 q 824 199 796 222 q 851 132 851 176 q 771 26 851 68 q 536 -15 690 -15 m 582 126 l 417 158 q 403 234 410 190 q 393 328 397 278 q 389 432 389 379 q 410 574 389 535 q 471 614 432 614 q 528 584 507 614 q 558 510 549 554 q 568 422 568 467 l 561 425 q 634 554 585 500 q 753 608 683 608 q 855 572 822 608 q 888 478 888 535 q 860 397 888 422 q 793 371 833 371 q 743 380 760 371 q 713 397 726 389 q 675 406 700 406 q 609 358 635 406 q 583 244 583 311 q 583 184 583 215 q 582 126 583 153 z "},"¤":{"ha":918,"x_min":36,"x_max":882,"o":"m 444 136 q 270 179 344 136 q 155 301 196 222 q 114 489 114 381 q 156 689 114 603 q 273 823 197 775 q 449 871 349 871 q 635 824 556 871 q 758 695 714 778 q 801 501 801 613 q 758 307 801 389 q 633 181 714 225 q 444 136 553 136 m 139 -11 q 75 12 99 -11 q 51 74 51 35 q 64 120 51 94 q 109 183 76 146 q 203 276 142 221 l 290 210 q 231 42 264 96 q 139 -11 199 -11 m 782 -4 q 692 52 726 -4 q 632 210 658 108 l 704 290 q 839 190 796 238 q 882 99 882 143 q 856 24 882 51 q 782 -4 831 -4 m 463 304 q 585 362 539 304 q 631 517 631 419 q 585 672 631 615 q 463 729 539 729 q 335 672 382 729 q 289 517 289 615 q 335 362 289 419 q 463 304 382 304 m 218 714 q 79 823 122 779 q 36 915 36 867 q 60 980 36 954 q 125 1006 83 1006 q 220 951 182 1006 q 294 790 258 897 l 218 714 m 704 703 l 613 797 q 668 926 643 875 q 719 1001 693 976 q 779 1026 746 1026 q 850 997 828 1026 q 872 936 872 968 q 827 822 872 888 q 704 703 782 756 z "},"$":{"ha":799,"x_min":35,"x_max":764,"o":"m 365 51 q 263 57 319 51 q 155 78 207 63 q 69 123 103 94 q 35 197 35 151 q 65 268 35 244 q 163 292 94 292 q 282 279 215 292 q 410 267 349 267 q 539 318 539 267 q 524 353 539 339 q 465 383 508 368 q 338 418 422 397 q 179 467 240 443 q 90 529 118 492 q 61 629 61 567 q 88 739 61 692 q 158 819 114 786 q 258 872 203 851 q 370 901 313 892 q 479 911 428 911 q 684 874 604 911 q 764 774 764 836 q 735 701 764 729 q 649 674 707 674 q 581 681 619 674 q 496 694 543 688 q 393 701 449 701 q 283 685 322 701 q 244 632 244 668 q 258 595 244 611 q 315 564 272 579 q 446 526 358 549 q 617 469 554 500 q 707 397 681 438 q 733 300 733 357 q 687 170 733 226 q 558 83 640 114 q 365 51 475 51 m 397 -108 q 335 -87 356 -108 q 314 -31 314 -67 q 323 31 314 4 q 346 76 332 57 l 454 79 q 473 26 465 57 q 481 -24 481 -4 q 463 -84 481 -60 q 397 -108 444 -108 m 410 878 q 391 935 399 901 q 383 988 383 968 q 401 1048 383 1024 q 467 1072 419 1072 q 529 1051 508 1072 q 550 994 550 1031 q 541 933 550 960 q 518 888 532 907 l 410 878 z "},"₯":{"ha":1568,"x_min":36,"x_max":1513,"o":"m 244 -32 q 117 -22 163 -32 q 53 6 71 -12 q 36 47 36 24 q 53 93 36 72 q 110 135 69 114 q 172 183 147 154 q 215 260 197 213 q 249 383 232 308 q 276 528 265 456 q 299 665 288 601 q 322 771 310 728 q 359 840 338 818 q 410 861 381 861 q 461 835 444 861 q 478 757 478 810 q 472 650 478 713 q 453 517 467 588 q 417 376 440 446 q 358 249 393 307 q 271 154 322 190 q 538 212 431 154 q 699 367 644 269 q 753 581 753 464 q 713 733 753 672 q 608 823 672 793 q 469 853 543 853 q 364 841 413 853 q 271 817 315 829 q 183 804 226 804 q 111 822 132 804 q 90 869 90 840 q 113 926 90 899 q 181 975 136 954 q 290 1008 225 996 q 439 1021 356 1021 q 719 967 607 1021 q 890 818 832 914 q 947 593 947 722 q 894 349 947 463 q 745 149 840 235 q 522 16 650 64 q 244 -32 394 -32 m 975 -261 q 917 -226 932 -261 q 903 -135 903 -192 q 908 -24 903 -89 q 922 116 913 42 q 943 261 932 190 q 1013 464 964 388 q 1127 575 1061 540 q 1267 610 1193 610 q 1445 544 1378 610 q 1513 340 1513 479 q 1497 217 1513 278 q 1446 104 1481 156 q 1358 22 1411 53 q 1229 -8 1304 -8 q 1117 26 1154 -8 q 1068 110 1079 60 l 1083 117 q 1080 -19 1083 49 q 1069 -137 1076 -87 q 1039 -225 1063 -189 q 975 -261 1015 -261 m 1196 132 q 1270 153 1240 132 q 1317 208 1300 175 q 1340 275 1333 240 q 1347 336 1347 310 q 1318 441 1347 406 q 1244 476 1289 476 q 1181 456 1208 476 q 1135 403 1153 436 q 1107 333 1117 371 q 1097 261 1097 296 q 1124 166 1099 200 q 1196 132 1150 132 z "},"€":{"ha":924,"x_min":31,"x_max":896,"o":"m 628 -15 q 381 44 479 -15 q 235 210 283 103 q 188 460 188 317 q 242 737 188 618 q 399 921 296 856 q 649 986 503 986 q 828 943 761 986 q 896 835 896 900 q 867 762 896 789 q 782 735 838 735 q 732 743 757 735 q 678 759 707 751 q 613 767 650 767 q 499 740 551 767 q 414 652 446 714 q 382 485 382 590 q 444 258 382 325 q 610 192 507 192 q 669 196 638 192 q 727 204 700 200 q 771 208 754 208 q 846 185 818 208 q 874 118 874 163 q 810 23 874 61 q 628 -15 747 -15 m 115 267 q 55 285 79 267 q 31 350 31 303 q 55 413 31 392 q 122 433 79 433 q 183 424 157 433 q 229 401 210 415 l 374 419 q 464 438 418 433 q 553 443 510 443 q 638 426 607 443 q 669 371 669 408 q 640 316 669 333 q 554 299 610 299 q 460 306 510 299 q 378 324 410 314 l 225 293 q 168 274 201 282 q 115 267 135 267 m 582 521 q 473 528 531 521 q 378 546 415 536 l 253 557 q 196 538 229 546 q 143 531 163 531 q 83 549 107 531 q 58 614 58 567 q 83 676 58 656 q 150 697 107 697 q 211 688 185 697 q 257 665 238 679 l 401 642 q 492 660 446 656 q 581 665 538 665 q 666 648 635 665 q 697 593 697 631 q 667 538 697 556 q 582 521 638 521 z "},"₣":{"ha":740,"x_min":31,"x_max":710,"o":"m 543 1036 q 644 1023 608 1036 q 695 986 681 1010 q 710 929 710 963 q 664 847 710 874 q 519 821 618 821 q 422 826 476 821 q 308 844 368 832 l 322 863 q 331 732 332 807 q 311 578 329 657 l 303 601 q 389 622 336 613 q 485 631 442 631 q 589 603 558 631 q 619 533 619 575 q 583 456 619 488 q 461 425 547 425 q 391 431 429 425 q 313 446 353 436 l 311 463 q 348 374 331 432 q 376 248 365 315 q 388 121 388 181 q 364 19 388 47 q 304 -8 340 -8 q 210 44 251 -8 q 146 200 169 96 q 122 463 122 304 q 150 749 122 640 q 215 910 178 858 q 353 1006 264 975 q 543 1036 443 1036 m 144 132 q 58 151 86 132 q 31 201 31 171 q 56 250 31 232 q 139 282 81 268 q 269 300 196 294 q 403 306 343 306 q 506 287 475 306 q 536 236 536 268 q 510 182 536 201 q 436 153 485 163 q 344 141 397 146 q 237 134 290 136 q 144 132 183 132 z "},"₲":{"ha":908,"x_min":68,"x_max":885,"o":"m 668 386 q 606 379 635 381 q 551 378 578 378 q 460 392 483 378 q 436 443 436 407 q 452 486 436 467 q 499 519 468 506 q 576 546 526 531 q 681 561 626 561 q 831 545 778 561 q 885 485 885 529 q 857 426 885 450 q 765 394 829 401 l 668 386 m 771 414 q 822 343 807 379 q 838 278 838 307 q 804 171 838 222 q 699 87 771 119 q 510 54 626 54 q 263 106 361 54 q 116 253 164 158 q 68 474 68 347 q 128 703 68 604 q 297 860 188 803 q 554 917 407 917 q 753 869 685 917 q 822 757 822 821 q 797 697 822 718 q 722 675 771 675 q 666 685 696 675 q 601 703 636 694 q 519 713 565 713 q 383 689 446 713 q 283 613 321 665 q 246 471 246 560 q 325 292 246 347 q 528 236 404 236 q 638 260 607 236 q 669 335 669 285 q 663 375 669 351 q 644 421 657 399 l 771 414 m 453 -108 q 390 -87 411 -108 q 369 -31 369 -67 q 378 31 369 4 q 401 76 388 57 l 510 79 q 528 26 521 57 q 536 -24 536 -4 q 518 -84 536 -60 q 453 -108 500 -108 m 465 878 q 447 935 454 901 q 439 988 439 968 q 457 1048 439 1024 q 522 1072 475 1072 q 585 1051 564 1072 q 606 994 606 1031 q 597 933 606 960 q 574 888 588 907 l 465 878 z "},"₴":{"ha":829,"x_min":31,"x_max":799,"o":"m 539 631 q 571 664 564 647 q 578 701 578 681 q 532 786 578 760 q 401 813 486 813 q 310 806 351 813 q 234 792 268 799 q 174 785 200 785 q 87 813 115 785 q 58 885 58 840 q 140 985 58 947 q 371 1022 221 1022 q 497 1013 438 1022 q 604 985 556 1004 q 688 937 653 967 q 742 865 722 907 q 761 768 761 824 q 747 699 761 731 q 701 639 732 667 l 539 631 m 429 -4 q 231 27 314 -4 q 105 115 149 58 q 61 244 61 171 q 75 310 61 279 q 121 367 89 340 l 279 363 q 260 335 265 349 q 256 304 256 321 q 294 236 256 261 q 413 211 332 211 q 526 224 467 211 q 632 236 585 236 q 730 213 700 236 q 760 142 760 189 q 726 67 760 96 q 640 23 692 39 q 531 1 588 7 q 429 -4 475 -4 m 117 328 q 50 342 69 328 q 31 379 31 356 q 49 419 31 403 q 121 444 68 436 q 244 458 172 451 q 396 469 315 464 q 556 478 476 475 q 701 482 635 482 q 776 467 754 482 q 799 426 799 451 q 778 385 799 401 q 711 363 758 369 q 576 349 656 356 q 410 338 497 343 q 246 331 324 333 q 117 328 168 328 m 117 508 q 50 522 69 508 q 31 560 31 536 q 49 600 31 583 q 121 625 68 617 q 244 638 172 632 q 396 650 315 644 q 556 659 476 656 q 701 663 635 663 q 776 647 754 663 q 799 607 799 632 q 778 566 799 582 q 711 543 758 550 q 576 530 656 536 q 410 519 497 524 q 246 511 324 514 q 117 508 168 508 z "},"₭":{"ha":919,"x_min":31,"x_max":886,"o":"m 238 -14 q 197 3 213 -14 q 172 60 182 21 q 154 199 163 104 q 146 413 146 294 q 153 662 146 540 q 176 876 161 783 q 209 967 188 938 q 269 997 231 997 q 314 981 294 997 q 344 921 333 964 q 354 799 354 878 q 351 710 354 760 q 343 601 349 661 l 349 601 q 544 845 460 754 q 694 976 629 936 q 807 1017 758 1017 q 866 992 846 1017 q 886 931 886 967 q 772 751 886 854 q 403 518 657 647 l 414 489 q 746 264 633 365 q 858 83 858 163 q 835 24 858 47 q 768 1 813 1 q 650 40 713 1 q 512 169 588 78 q 340 417 436 260 l 335 417 q 339 351 338 385 q 340 283 340 317 q 318 55 340 124 q 238 -14 296 -14 m 122 421 q 52 437 74 421 q 31 479 31 453 q 51 526 31 507 q 125 554 71 544 q 237 567 172 561 q 373 578 301 574 q 515 586 444 583 q 643 589 585 589 q 723 572 700 589 q 746 525 746 556 q 724 478 746 497 q 656 453 703 460 q 534 441 606 447 q 385 431 463 435 q 239 424 308 426 q 122 421 169 421 z "},"₤":{"ha":890,"x_min":28,"x_max":854,"o":"m 614 0 q 438 36 521 0 q 293 132 354 72 l 313 128 q 233 43 281 76 q 124 10 185 10 q 56 38 85 10 q 28 110 28 67 q 81 203 28 167 q 261 261 135 239 l 253 206 q 242 372 246 288 q 239 531 239 456 q 292 799 239 699 q 437 945 344 900 q 649 990 529 990 q 788 963 744 990 q 832 889 832 936 q 792 822 832 846 q 647 788 751 797 q 528 756 575 781 q 456 681 481 732 q 422 543 431 631 q 397 367 414 453 q 360 206 379 282 l 346 256 q 468 224 410 233 q 579 214 526 214 q 676 228 636 214 q 756 242 717 242 q 826 219 797 242 q 854 146 854 197 q 791 40 854 81 q 614 0 728 0 m 144 343 q 74 360 99 343 q 49 408 49 378 q 70 461 49 440 q 131 482 92 482 q 190 474 157 482 q 251 453 224 467 l 378 443 q 483 472 436 463 q 576 482 529 482 q 662 465 629 482 q 694 408 694 447 q 659 353 694 369 q 574 338 624 338 q 478 347 528 338 q 381 376 429 357 l 257 368 q 201 349 231 356 q 144 343 171 343 m 158 524 q 88 541 113 524 q 63 589 63 558 q 84 642 63 621 q 144 663 106 663 q 204 655 171 663 q 265 633 238 647 l 392 624 q 497 653 450 643 q 590 663 543 663 q 676 645 643 663 q 708 589 708 628 q 673 534 708 550 q 588 518 638 518 q 492 528 542 518 q 394 557 443 538 l 271 549 q 215 530 244 536 q 158 524 185 524 z "},"₺":{"ha":740,"x_min":26,"x_max":710,"o":"m 382 -8 q 256 14 297 -8 q 186 94 214 36 q 153 240 167 139 q 140 501 140 340 q 145 717 140 614 q 160 875 150 819 q 197 976 171 946 q 261 1007 222 1007 q 316 976 296 1007 q 344 894 336 946 q 353 779 353 842 q 341 436 353 610 q 308 117 329 263 l 290 142 q 459 199 407 142 q 511 379 511 256 q 508 453 511 415 q 504 524 504 492 q 524 584 504 563 q 578 606 543 606 q 644 577 614 606 q 692 494 674 549 q 710 363 710 440 q 673 165 710 249 q 564 37 636 82 q 382 -8 492 -8 m 132 349 q 74 331 97 328 q 39 357 51 335 q 33 401 26 378 q 74 456 40 425 q 133 502 99 476 q 208 555 168 528 q 286 607 247 582 q 358 651 325 632 q 426 673 401 676 q 465 646 451 669 q 431 547 492 600 q 365 499 404 526 q 282 442 325 471 q 199 390 239 414 q 132 349 160 365 m 132 571 q 74 553 97 550 q 39 579 51 557 q 33 624 26 600 q 74 678 40 647 q 133 724 99 699 q 208 777 168 750 q 286 829 247 804 q 358 874 325 854 q 426 895 401 899 q 465 868 451 892 q 431 769 492 822 q 365 721 404 749 q 282 665 325 693 q 199 612 239 636 q 132 571 160 588 z "},"₼":{"ha":1029,"x_min":92,"x_max":938,"o":"m 496 886 q 749 826 651 886 q 892 642 846 765 q 938 329 938 519 q 935 256 938 296 q 930 181 933 217 q 921 118 926 144 q 887 28 911 58 q 817 -1 863 -1 q 739 119 739 -1 q 740 178 739 140 q 743 261 742 217 q 746 346 744 306 q 747 413 747 386 q 690 633 747 564 q 518 703 633 703 q 339 638 400 703 q 278 413 278 574 q 283 328 278 374 q 295 238 289 283 q 307 156 301 193 q 313 94 313 118 q 295 18 313 43 q 232 -7 278 -7 q 159 27 189 -7 q 118 119 129 61 q 105 194 111 151 q 95 283 99 236 q 92 372 92 329 q 133 661 92 547 q 264 831 175 775 q 496 886 353 886 m 429 943 q 443 1015 429 994 q 481 1035 457 1035 q 522 1015 503 1035 q 546 939 540 996 q 557 772 551 871 q 567 559 563 672 q 575 334 572 446 q 578 131 578 222 q 563 54 578 76 q 522 32 547 32 q 480 51 497 32 q 458 121 463 71 q 450 265 454 181 q 442 444 446 350 q 435 633 438 539 q 431 807 432 726 q 429 943 429 888 z "},"₥":{"ha":1264,"x_min":85,"x_max":1179,"o":"m 683 692 q 733 794 697 749 q 819 867 768 840 q 931 894 869 894 q 1058 860 1003 894 q 1147 746 1114 825 q 1179 535 1179 667 q 1174 397 1179 467 q 1160 268 1168 328 q 1142 168 1151 208 q 1099 83 1128 113 q 1028 54 1071 54 q 971 86 992 54 q 950 178 950 118 q 957 249 950 206 q 972 345 964 293 q 988 451 981 397 q 994 554 994 506 q 965 666 994 626 q 883 706 936 706 q 787 645 825 706 q 742 469 749 585 q 732 287 736 367 q 711 156 728 207 q 680 101 700 119 q 626 83 660 83 q 567 111 589 83 q 543 199 546 139 q 542 317 540 249 q 544 452 543 385 q 542 564 544 519 q 510 694 536 653 q 433 736 485 736 q 338 681 374 736 q 294 526 303 625 q 292 427 292 486 q 294 310 293 368 q 293 213 296 251 q 267 93 292 129 q 200 57 243 57 q 126 90 149 57 q 96 197 103 124 q 88 327 90 263 q 85 456 85 392 q 88 597 85 521 q 99 742 92 674 q 128 858 107 811 q 197 906 149 906 q 254 866 238 906 q 271 744 271 826 q 267 693 271 717 l 263 721 q 351 862 290 811 q 488 913 413 913 q 642 849 586 913 q 703 675 697 786 l 683 692 m 424 35 q 473 195 443 100 q 540 401 503 290 q 617 622 578 511 q 692 831 656 733 q 756 1000 728 929 q 801 1072 779 1056 q 846 1082 824 1089 q 878 1047 871 1076 q 868 957 886 1018 q 810 767 843 869 q 741 556 778 664 q 667 347 704 449 q 597 156 631 244 q 538 6 564 68 q 488 -76 511 -60 q 443 -86 465 -92 q 413 -52 419 -79 q 424 35 406 -25 z "},"₦":{"ha":1014,"x_min":31,"x_max":983,"o":"m 275 988 q 363 940 318 988 q 458 797 408 892 q 567 563 508 703 q 697 238 626 422 l 703 238 q 690 383 699 304 q 674 543 682 463 q 661 694 667 624 q 656 814 656 764 q 677 977 656 929 q 744 1025 699 1025 q 796 1008 776 1025 q 829 960 815 992 q 875 746 861 882 q 889 435 889 610 q 878 206 889 300 q 836 63 867 111 q 747 14 806 14 q 668 45 708 14 q 587 138 628 76 q 502 293 546 200 q 410 510 458 386 q 310 789 363 635 l 304 789 q 312 665 307 735 q 322 518 317 594 q 332 367 328 442 q 336 228 336 292 q 310 44 336 99 q 231 -10 285 -10 q 145 47 171 -10 q 119 221 119 103 q 123 389 119 294 q 133 583 126 483 q 151 774 140 683 q 190 937 165 886 q 275 988 215 988 m 131 458 q 53 474 75 458 q 31 515 31 489 q 51 559 31 540 q 135 586 72 578 q 290 603 199 594 q 485 617 382 611 q 689 628 588 624 q 874 632 790 632 q 959 615 935 632 q 983 571 983 599 q 961 526 983 544 q 885 500 939 507 q 752 488 829 494 q 589 477 675 482 q 417 467 503 472 q 256 460 331 463 q 131 458 182 458 z "},"₧":{"ha":871,"x_min":31,"x_max":840,"o":"m 457 971 q 701 878 622 971 q 779 636 779 786 q 735 450 779 529 q 617 328 692 371 q 447 285 542 285 q 360 294 406 285 q 265 332 314 304 l 272 336 q 298 246 288 301 q 308 146 308 190 q 201 -10 308 -10 q 131 18 157 -10 q 96 110 106 46 q 86 281 86 174 q 106 605 86 471 q 169 818 126 739 q 278 928 207 886 q 457 971 349 971 m 431 435 q 566 481 514 435 q 618 636 618 526 q 581 774 618 726 q 467 821 544 821 q 332 767 381 821 q 283 610 283 714 q 319 476 283 517 q 431 435 354 435 m 128 529 q 53 546 75 529 q 31 590 31 563 q 51 638 31 618 q 131 667 72 657 q 260 681 185 674 q 419 693 335 688 q 584 702 503 699 q 733 706 665 706 q 817 688 793 706 q 840 640 840 671 q 819 592 840 611 q 746 565 797 572 q 605 552 688 558 q 433 540 522 546 q 263 532 343 535 q 128 529 182 529 z "},"₱":{"ha":876,"x_min":31,"x_max":846,"o":"m 460 1026 q 642 981 571 1026 q 747 854 713 936 q 782 664 782 772 q 738 463 782 549 q 619 331 694 378 q 450 285 544 285 q 363 294 408 285 q 268 332 317 304 l 275 336 q 301 246 290 301 q 311 146 311 190 q 204 -10 311 -10 q 134 21 160 -10 q 99 122 108 51 q 89 308 89 192 q 108 642 89 504 q 172 860 128 779 q 282 980 213 933 q 460 1026 351 1026 m 433 435 q 531 455 489 435 q 597 525 574 475 q 621 664 621 575 q 584 827 621 778 q 469 876 547 876 q 335 821 383 876 q 286 638 286 765 q 322 477 286 519 q 433 435 357 435 m 106 506 q 47 515 64 506 q 31 542 31 524 q 47 572 31 560 q 111 590 64 585 q 245 604 165 597 q 416 617 325 611 q 597 627 507 624 q 761 631 686 631 q 826 619 807 631 q 846 589 846 608 q 828 558 846 571 q 769 540 811 546 q 653 530 721 535 q 508 520 585 525 q 356 513 432 515 q 215 508 281 510 q 106 506 150 506 m 106 672 q 47 681 64 672 q 31 708 31 690 q 47 739 31 726 q 111 757 64 751 q 245 771 165 764 q 416 784 325 778 q 597 794 507 790 q 761 797 686 797 q 826 786 807 797 q 846 756 846 775 q 828 725 846 738 q 769 707 811 713 q 653 697 721 701 q 508 687 585 692 q 356 679 432 682 q 215 674 281 676 q 106 672 150 672 z "},"₽":{"ha":889,"x_min":31,"x_max":854,"o":"m 263 -10 q 192 18 218 -10 q 157 110 167 46 q 147 281 147 174 q 166 631 147 486 q 231 860 185 776 q 342 961 267 924 q 532 999 418 999 q 776 922 697 999 q 854 719 854 844 q 808 556 854 625 q 681 448 763 486 q 494 410 600 410 q 419 413 464 410 q 326 422 375 417 l 333 447 q 352 362 344 413 q 365 258 360 311 q 369 160 369 204 q 342 34 369 78 q 263 -10 315 -10 m 138 418 q 60 435 88 418 q 32 488 32 453 q 63 546 32 525 q 139 567 94 567 q 188 562 163 567 q 233 550 213 557 l 238 438 q 138 418 186 418 m 118 154 q 51 171 71 154 q 31 214 31 188 q 51 260 31 242 q 122 288 71 278 q 257 304 178 297 q 420 316 336 311 q 571 321 504 321 q 648 303 625 321 q 671 257 671 286 q 583 183 671 197 q 478 172 540 178 q 348 163 415 167 q 220 156 281 158 q 118 154 160 154 m 331 546 q 551 563 472 546 q 662 619 631 581 q 693 719 693 657 q 656 812 693 775 q 542 849 619 849 q 428 817 475 849 q 356 719 381 786 q 331 546 331 653 z "},"₨":{"ha":1364,"x_min":92,"x_max":1308,"o":"m 208 -10 q 138 19 163 -10 q 102 112 113 47 q 92 285 92 176 q 115 645 92 494 q 196 879 139 796 q 337 993 251 960 q 522 1026 422 1026 q 772 947 692 1026 q 853 740 853 868 q 793 554 853 626 q 633 453 733 482 q 408 439 532 425 l 408 433 q 680 245 597 333 q 763 93 763 157 q 737 31 763 54 q 665 7 711 7 q 563 44 619 7 q 437 169 506 82 q 285 406 368 257 l 279 406 q 291 330 286 375 q 299 238 296 285 q 303 149 303 190 q 281 31 303 72 q 208 -10 260 -10 m 450 565 q 558 585 510 565 q 636 642 607 606 q 665 729 665 679 q 621 833 665 794 q 488 872 576 872 q 386 847 428 872 q 323 779 344 821 q 301 689 301 738 q 338 600 301 635 q 450 565 374 565 m 1044 -8 q 881 19 929 -8 q 832 96 832 47 q 853 143 832 126 q 903 160 875 160 q 979 149 940 160 q 1067 139 1018 139 q 1132 149 1113 139 q 1151 185 1151 160 q 1133 220 1151 210 q 1043 238 1114 231 q 936 258 983 243 q 863 307 889 274 q 836 401 836 340 q 910 553 836 496 q 1117 611 983 611 q 1251 583 1208 611 q 1294 511 1294 554 q 1274 464 1294 482 q 1218 446 1254 446 q 1154 455 1182 446 q 1079 464 1126 464 q 1012 449 1032 464 q 992 408 992 433 q 1010 373 992 385 q 1089 354 1028 361 q 1252 307 1196 343 q 1308 181 1308 271 q 1237 38 1308 83 q 1044 -8 1165 -8 z "},"₹":{"ha":911,"x_min":31,"x_max":881,"o":"m 651 -62 q 531 -28 596 -62 q 397 73 467 6 q 253 240 326 140 q 197 331 213 294 q 182 401 182 368 q 219 471 182 451 q 353 496 256 490 q 468 524 419 501 q 542 588 517 547 q 568 688 568 629 q 524 812 568 765 q 390 858 479 858 q 305 851 356 858 q 207 838 254 844 q 132 831 160 831 q 53 846 76 831 q 31 896 31 861 q 55 944 31 925 q 138 976 79 963 q 262 997 193 989 q 420 1010 331 1006 q 629 1014 510 1014 q 824 997 767 1014 q 881 935 881 981 q 845 887 881 901 q 750 872 810 872 q 677 877 717 872 q 593 892 638 882 l 593 903 q 716 840 676 890 q 756 699 756 790 q 696 496 756 575 q 535 385 636 417 q 311 369 435 353 l 311 364 q 647 176 544 264 q 749 24 749 88 q 723 -39 749 -15 q 651 -62 697 -62 m 128 593 q 55 608 76 593 q 33 647 33 622 q 53 690 33 672 q 131 717 74 708 q 267 732 188 725 q 438 745 347 739 q 616 755 528 751 q 776 758 704 758 q 856 742 833 758 q 879 699 879 726 q 858 655 879 672 q 788 631 838 638 q 638 617 726 624 q 453 604 549 610 q 271 596 357 599 q 128 593 185 593 z "},"₪":{"ha":1244,"x_min":92,"x_max":1153,"o":"m 389 1007 q 860 625 860 1007 q 822 388 860 465 q 733 310 785 310 q 683 331 700 310 q 665 392 665 353 q 669 495 665 440 q 672 601 672 550 q 644 741 672 685 q 550 826 615 797 q 374 856 485 856 q 298 853 335 856 q 233 847 261 851 l 240 892 q 280 565 265 743 q 294 214 294 388 q 286 102 294 153 q 259 22 278 51 q 207 -8 240 -8 q 146 22 169 -8 q 111 124 122 53 q 97 283 101 181 q 92 497 92 385 q 103 753 92 658 q 138 903 115 847 q 222 983 161 960 q 389 1007 283 1007 m 682 -8 q 499 31 564 -8 q 410 156 435 71 q 385 376 385 240 q 392 512 385 447 q 404 611 399 576 q 435 713 415 682 q 486 743 454 743 q 554 690 535 743 q 574 563 574 638 q 563 326 574 446 q 533 107 553 207 l 526 149 q 582 144 554 146 q 636 143 610 143 q 885 221 806 143 q 965 467 965 299 q 961 576 965 511 q 952 710 957 642 q 943 833 947 778 q 939 913 939 888 q 956 973 939 951 q 1007 994 974 994 q 1079 931 1046 994 q 1133 746 1113 868 q 1153 443 1153 624 q 1029 110 1153 229 q 682 -8 906 -8 z "},"£":{"ha":890,"x_min":28,"x_max":854,"o":"m 614 0 q 438 36 521 0 q 293 132 354 72 l 313 128 q 233 43 281 76 q 124 10 185 10 q 56 38 85 10 q 28 110 28 67 q 81 203 28 167 q 261 261 135 239 l 253 206 q 242 372 246 288 q 239 531 239 456 q 292 799 239 699 q 437 945 344 900 q 649 990 529 990 q 788 963 744 990 q 832 889 832 936 q 792 822 832 846 q 647 788 751 797 q 528 756 575 781 q 456 681 481 732 q 422 543 431 631 q 397 367 414 453 q 360 206 379 282 l 346 256 q 468 224 410 233 q 579 214 526 214 q 676 228 636 214 q 756 242 717 242 q 826 219 797 242 q 854 146 854 197 q 791 40 854 81 q 614 0 728 0 m 144 426 q 74 448 99 426 q 49 506 49 469 q 74 569 49 544 q 144 593 99 593 q 197 585 168 593 q 251 564 226 578 l 392 554 q 497 583 450 574 q 590 593 543 593 q 676 572 643 593 q 708 506 708 551 q 673 440 708 458 q 588 421 638 421 q 492 431 542 421 q 394 460 443 440 l 257 451 q 201 433 231 439 q 144 426 171 426 z "},"₸":{"ha":829,"x_min":31,"x_max":799,"o":"m 432 743 q 605 733 535 743 q 718 707 675 722 q 781 665 764 689 q 799 611 799 642 q 765 539 799 567 q 661 511 731 511 q 560 521 614 511 q 449 550 506 531 l 467 569 q 496 433 483 510 q 515 284 508 356 q 521 165 521 213 q 494 34 521 78 q 401 -10 467 -10 q 315 29 342 -10 q 289 149 289 68 q 295 247 289 192 q 313 360 301 301 q 337 472 324 418 q 364 565 350 525 l 389 550 q 317 528 358 539 q 233 512 275 518 q 160 506 192 506 q 60 528 89 506 q 31 590 31 551 q 53 652 31 626 q 121 697 75 678 q 251 731 174 719 q 432 743 328 743 m 133 803 q 60 819 82 803 q 39 863 39 835 q 60 909 39 890 q 136 938 81 928 q 256 951 186 944 q 402 963 325 957 q 556 972 479 968 q 694 975 632 975 q 775 958 751 975 q 799 910 799 940 q 777 862 799 881 q 707 836 756 843 q 576 823 653 829 q 417 813 500 817 q 258 806 333 808 q 133 803 183 803 z "},"₮":{"ha":829,"x_min":31,"x_max":799,"o":"m 432 1021 q 605 1010 535 1021 q 718 985 675 1000 q 781 943 764 967 q 799 889 799 919 q 765 817 799 844 q 661 789 731 789 q 560 799 614 789 q 449 828 506 808 l 467 847 q 489 688 479 775 q 506 510 499 600 q 517 342 514 421 q 521 207 521 263 q 494 44 521 99 q 401 -10 467 -10 q 315 40 342 -10 q 289 190 289 89 q 295 343 289 257 q 313 521 301 429 q 337 697 324 613 q 364 843 350 781 l 389 828 q 317 806 358 817 q 233 790 275 796 q 160 783 192 783 q 60 806 89 783 q 31 868 31 829 q 53 930 31 904 q 121 975 75 956 q 251 1009 174 997 q 432 1021 328 1021 m 183 438 q 122 451 140 438 q 104 489 104 465 q 122 529 104 513 q 188 554 140 546 q 283 567 228 561 q 399 576 338 572 q 519 583 460 581 q 629 586 579 586 q 701 572 681 586 q 722 529 722 557 q 703 488 722 504 q 640 465 683 472 q 536 455 597 460 q 409 446 475 450 q 283 440 343 442 q 183 438 224 438 m 183 257 q 122 271 140 257 q 104 308 104 285 q 122 349 104 332 q 188 374 140 365 q 283 386 228 381 q 399 396 338 392 q 519 403 460 400 q 629 406 579 406 q 701 391 681 406 q 722 349 722 376 q 703 308 722 324 q 640 285 683 292 q 536 274 597 279 q 409 265 475 269 q 283 259 343 261 q 183 257 224 257 z "},"₩":{"ha":1143,"x_min":31,"x_max":1113,"o":"m 101 757 q 131 934 101 881 q 224 988 161 988 q 286 964 264 988 q 317 901 308 940 q 326 811 326 861 q 323 684 326 756 q 315 534 319 613 q 308 378 311 456 q 304 232 304 300 l 310 232 q 391 517 350 400 q 474 696 432 635 q 558 757 515 757 q 649 694 606 757 q 734 512 692 631 q 821 228 776 393 l 826 228 q 823 432 826 326 q 815 641 819 538 q 811 833 811 744 q 824 951 811 910 q 858 1008 836 992 q 910 1025 881 1025 q 1001 959 969 1025 q 1033 765 1033 893 q 1026 551 1033 661 q 1003 338 1018 442 q 965 146 988 235 q 917 31 947 72 q 839 -11 888 -11 q 765 28 801 -11 q 693 141 728 68 q 627 314 658 214 q 568 535 596 414 l 563 535 q 503 318 535 414 q 438 155 472 222 q 365 51 404 88 q 281 15 325 15 q 203 56 231 15 q 157 189 175 96 q 136 320 146 246 q 119 474 126 394 q 106 628 111 554 q 101 757 101 701 m 129 450 q 52 463 74 450 q 31 497 31 475 q 51 536 31 519 q 135 560 72 553 q 274 574 193 567 q 450 587 356 581 q 642 599 544 593 q 834 607 740 604 q 1007 610 928 610 q 1089 595 1065 610 q 1113 557 1113 581 q 1092 519 1113 535 q 1017 496 1071 503 q 860 483 951 489 q 667 470 769 476 q 465 460 565 464 q 276 453 364 456 q 129 450 189 450 z "},"¥":{"ha":892,"x_min":31,"x_max":861,"o":"m 400 -12 q 319 24 350 -12 q 288 157 288 61 q 297 297 288 225 q 322 435 307 369 q 356 544 338 500 l 364 506 q 161 674 233 600 q 60 803 89 747 q 31 901 31 860 q 45 960 31 936 q 83 997 60 983 q 136 1010 107 1010 q 272 908 203 1010 q 415 607 340 807 l 421 607 q 548 842 483 750 q 672 980 613 935 q 776 1025 732 1025 q 839 998 817 1025 q 861 928 861 971 q 813 791 861 865 q 674 642 764 717 q 457 504 583 567 l 469 531 q 502 410 488 475 q 525 283 517 346 q 533 169 533 219 q 497 34 533 81 q 400 -12 460 -12 m 183 368 q 122 382 140 368 q 104 419 104 396 q 122 460 104 443 q 188 485 140 476 q 283 497 228 492 q 399 507 338 503 q 519 514 460 511 q 629 517 579 517 q 701 502 681 517 q 722 460 722 488 q 703 419 722 435 q 640 396 683 403 q 536 385 597 390 q 409 376 475 381 q 283 370 343 372 q 183 368 224 368 m 183 188 q 122 201 140 188 q 104 239 104 215 q 122 279 104 263 q 188 304 140 296 q 283 317 228 311 q 399 326 338 322 q 519 333 460 331 q 629 336 579 336 q 701 322 681 336 q 722 279 722 307 q 703 238 722 254 q 640 215 683 222 q 536 205 597 210 q 409 196 475 200 q 283 190 343 192 q 183 188 224 188 z "},"∕":{"ha":710,"x_min":31,"x_max":679,"o":"m 78 -10 q 44 4 57 -10 q 31 44 31 18 q 50 114 31 64 q 104 237 69 164 q 185 397 139 310 q 288 576 232 483 q 403 758 343 668 q 522 925 463 847 q 586 988 557 969 q 636 1007 615 1007 q 667 992 656 1007 q 679 953 679 978 q 659 882 679 933 q 603 757 639 831 q 519 596 567 683 q 415 415 471 508 q 300 229 360 321 q 181 57 240 138 q 128 6 156 22 q 78 -10 101 -10 z "},"+":{"ha":638,"x_min":35,"x_max":603,"o":"m 271 551 l 243 551 q 246 661 239 610 q 276 744 253 713 q 342 776 299 776 q 399 756 381 776 q 417 696 417 735 q 383 546 417 608 l 358 549 q 432 568 390 561 q 514 575 474 575 q 578 557 554 575 q 603 496 603 539 q 573 433 603 454 q 499 413 543 413 q 426 416 464 413 q 350 428 388 419 l 374 457 q 406 363 392 418 q 419 268 419 308 q 397 199 419 225 q 331 174 375 174 q 258 199 281 174 q 235 281 235 225 q 241 365 235 317 q 260 458 247 414 l 288 435 q 126 399 224 399 q 58 417 82 399 q 35 475 35 436 q 62 544 35 519 q 136 568 89 568 q 210 563 175 568 q 271 551 244 558 z "},"−":{"ha":638,"x_min":35,"x_max":603,"o":"m 149 379 q 63 401 90 379 q 35 457 35 422 q 60 510 35 490 q 143 543 85 529 q 247 560 190 554 q 363 569 304 567 q 469 572 421 572 q 572 551 542 572 q 603 496 603 531 q 577 435 603 457 q 503 404 551 414 q 391 390 456 396 q 261 382 326 385 q 149 379 196 379 z "},"×":{"ha":657,"x_min":88,"x_max":569,"o":"m 474 238 q 436 248 456 238 q 397 278 417 258 q 355 326 378 297 q 311 386 332 356 q 280 335 299 360 q 236 285 261 310 q 201 258 218 267 q 169 250 185 250 q 130 264 149 250 q 99 298 111 278 q 88 339 88 318 q 97 376 88 358 q 124 411 106 394 q 165 449 143 432 q 206 479 188 467 q 128 563 160 519 q 97 646 97 607 q 110 688 97 669 q 140 718 122 707 q 174 729 157 729 q 193 726 183 729 q 213 716 203 722 q 232 700 222 710 q 280 643 260 674 q 310 585 300 613 q 344 635 325 610 q 386 683 364 661 q 418 708 401 699 q 451 717 435 717 q 488 705 469 717 q 517 675 506 693 q 529 636 529 657 q 519 597 529 617 q 490 558 508 576 q 451 522 472 540 q 407 486 431 503 q 478 446 443 469 q 536 400 514 422 q 561 366 553 383 q 569 332 569 349 q 554 288 569 310 q 517 251 539 265 q 474 238 494 238 z "},"÷":{"ha":638,"x_min":35,"x_max":603,"o":"m 149 379 q 63 401 90 379 q 35 457 35 422 q 60 510 35 490 q 143 543 85 529 q 247 560 190 554 q 363 569 304 567 q 469 572 421 572 q 572 551 542 572 q 603 496 603 531 q 577 435 603 457 q 503 404 551 414 q 391 390 456 396 q 261 382 326 385 q 149 379 196 379 m 325 335 q 406 308 375 335 q 438 229 438 281 q 408 149 438 182 q 313 115 378 115 q 237 142 261 115 q 213 219 213 169 q 236 299 213 264 q 325 335 260 335 m 325 835 q 406 808 375 835 q 438 729 438 781 q 408 649 438 682 q 313 615 378 615 q 237 642 261 615 q 213 719 213 669 q 236 799 213 764 q 325 835 260 835 z "},"=":{"ha":638,"x_min":35,"x_max":603,"o":"m 149 226 q 63 248 90 226 q 35 304 35 269 q 60 357 35 338 q 143 390 85 376 q 247 408 190 401 q 363 417 304 414 q 469 419 421 419 q 572 399 542 419 q 603 343 603 378 q 577 283 603 304 q 503 251 551 261 q 391 238 456 243 q 261 229 326 232 q 149 226 196 226 m 149 532 q 63 553 90 532 q 35 610 35 575 q 60 663 35 643 q 143 696 85 682 q 247 713 190 707 q 363 722 304 719 q 469 725 421 725 q 572 704 542 725 q 603 649 603 683 q 577 588 603 610 q 503 557 551 567 q 391 543 456 549 q 261 535 326 538 q 149 532 196 532 z "},"≠":{"ha":638,"x_min":35,"x_max":603,"o":"m 149 226 q 63 248 90 226 q 35 304 35 269 q 60 357 35 338 q 143 390 85 376 q 247 408 190 401 q 363 417 304 414 q 469 419 421 419 q 572 399 542 419 q 603 343 603 378 q 577 283 603 304 q 503 251 551 261 q 391 238 456 243 q 261 229 326 232 q 149 226 196 226 m 149 532 q 63 553 90 532 q 35 610 35 575 q 60 663 35 643 q 143 696 85 682 q 247 713 190 707 q 363 722 304 719 q 469 725 421 725 q 572 704 542 725 q 603 649 603 683 q 577 588 603 610 q 503 557 551 567 q 391 543 456 549 q 261 535 326 538 q 149 532 196 532 m 208 204 q 231 303 217 244 q 264 430 246 363 q 301 565 282 497 q 338 694 319 633 q 369 797 356 754 q 403 856 385 840 q 443 865 421 871 q 474 838 465 861 q 472 765 483 814 q 438 619 458 699 q 395 458 418 539 q 350 307 372 378 q 311 188 328 236 q 274 126 293 140 q 236 115 256 111 q 207 140 215 119 q 208 204 199 161 z "},">":{"ha":625,"x_min":31,"x_max":594,"o":"m 126 788 q 239 767 176 788 q 364 711 301 746 q 478 636 426 676 q 563 557 531 596 q 594 488 594 518 q 561 415 594 457 q 474 330 528 374 q 354 248 419 286 q 224 186 289 210 q 107 163 160 163 q 48 184 65 163 q 31 232 31 206 q 154 353 31 289 q 492 479 278 418 l 492 465 q 162 593 278 529 q 46 717 46 657 q 66 769 46 750 q 126 788 86 788 z "},"<":{"ha":625,"x_min":31,"x_max":594,"o":"m 499 163 q 386 183 449 163 q 261 239 324 204 q 147 314 199 274 q 63 393 94 354 q 31 463 31 432 q 64 535 31 493 q 151 620 97 576 q 271 702 206 664 q 401 764 336 740 q 518 788 465 788 q 577 766 560 788 q 594 718 594 744 q 471 597 594 663 q 133 471 347 532 l 133 485 q 463 358 347 421 q 579 233 579 294 q 559 181 579 200 q 499 163 539 163 z "},"±":{"ha":638,"x_min":35,"x_max":603,"o":"m 271 579 l 243 579 q 246 675 239 631 q 276 748 253 719 q 342 776 299 776 q 399 756 381 776 q 417 696 417 735 q 408 629 417 661 q 383 574 399 597 l 358 576 q 432 596 390 589 q 514 603 474 603 q 578 585 554 603 q 603 524 603 567 q 573 461 603 482 q 499 440 543 440 q 426 444 464 440 q 350 456 388 447 l 374 485 q 406 404 392 451 q 419 324 419 357 q 397 255 419 281 q 331 229 375 229 q 258 255 281 229 q 235 336 235 281 q 241 408 235 367 q 260 486 247 449 l 288 463 q 126 426 224 426 q 58 445 82 426 q 35 503 35 464 q 62 572 35 547 q 136 596 89 596 q 210 591 175 596 q 271 579 244 586 m 149 -7 q 63 15 90 -7 q 35 71 35 36 q 60 119 35 101 q 143 150 85 136 q 247 167 190 161 q 363 176 304 174 q 469 179 421 179 q 572 158 542 179 q 603 103 603 138 q 577 47 603 68 q 503 18 551 26 q 391 4 456 10 q 261 -4 326 -1 q 149 -7 196 -7 z "},"~":{"ha":651,"x_min":42,"x_max":610,"o":"m 235 544 q 333 519 289 544 q 419 458 376 494 q 438 450 431 449 q 449 461 446 451 q 487 541 465 515 q 549 567 508 567 q 595 549 581 567 q 610 503 610 532 q 592 428 610 471 q 535 353 574 385 q 438 321 497 321 q 336 351 381 321 q 247 433 292 382 q 229 444 238 446 q 214 421 221 443 q 177 337 200 363 q 110 311 154 311 q 60 331 79 311 q 42 381 42 351 q 67 460 42 422 q 135 521 92 497 q 235 544 179 544 z "},"^":{"ha":617,"x_min":42,"x_max":575,"o":"m 92 496 q 52 511 63 496 q 42 557 42 526 q 58 674 42 604 q 104 821 75 744 q 170 965 133 897 q 248 1074 207 1032 q 328 1117 289 1117 q 403 1077 367 1117 q 470 975 439 1038 q 525 840 501 913 q 562 701 549 768 q 575 588 575 633 q 563 531 575 549 q 518 513 550 513 q 463 542 481 513 q 431 638 444 571 q 404 745 421 688 q 367 863 388 803 q 322 981 347 924 l 317 981 q 263 861 289 925 q 217 733 238 797 q 182 614 196 669 q 149 525 168 554 q 92 496 131 496 z "},"∞":{"ha":1217,"x_min":56,"x_max":1161,"o":"m 864 85 q 683 152 757 85 q 572 328 608 219 l 619 333 q 530 151 597 215 q 347 86 463 86 q 132 183 208 86 q 56 482 56 279 q 92 710 56 626 q 190 829 129 793 q 321 865 250 865 q 516 792 439 865 q 621 585 593 719 l 563 581 q 647 790 582 710 q 847 869 713 869 q 1022 817 953 869 q 1126 674 1092 764 q 1161 472 1161 585 q 1085 183 1161 281 q 864 85 1008 85 m 378 282 q 470 320 432 282 q 536 464 508 358 q 460 626 501 578 q 363 674 418 674 q 264 624 293 674 q 235 478 235 575 q 274 328 235 375 q 378 282 314 282 m 851 283 q 924 310 896 283 q 964 382 951 338 q 976 479 976 426 q 938 642 976 585 q 836 699 900 699 q 744 653 781 699 q 681 506 708 608 q 752 340 708 396 q 851 283 796 283 z "},"∅":{"ha":792,"x_min":35,"x_max":757,"o":"m 394 114 q 204 155 285 114 q 79 271 124 196 q 35 450 35 346 q 79 653 35 565 q 206 789 124 740 q 399 838 288 838 q 589 790 508 838 q 713 660 669 743 q 757 465 757 576 q 713 278 757 357 q 587 157 668 200 q 394 114 506 114 m 399 239 q 569 301 506 239 q 632 468 632 363 q 570 644 632 576 q 401 713 508 713 q 225 642 290 713 q 160 456 160 571 q 224 297 160 356 q 399 239 289 239 m 142 183 q 206 291 167 228 q 291 426 244 354 q 385 571 338 499 q 476 707 433 643 q 553 815 519 771 q 605 865 582 856 q 646 863 628 874 q 666 826 665 851 q 640 754 667 800 q 544 596 599 682 q 432 423 489 510 q 323 262 375 336 q 233 138 271 188 q 176 84 199 93 q 136 85 154 75 q 118 119 118 96 q 142 183 118 142 z "},"∫":{"ha":717,"x_min":28,"x_max":689,"o":"m 161 -292 q 60 -268 92 -292 q 28 -199 28 -244 q 53 -131 28 -154 q 129 -89 78 -107 q 219 -40 189 -67 q 261 35 250 -12 q 272 167 272 83 q 268 294 272 219 q 258 450 264 369 q 247 603 251 531 q 243 724 243 675 q 275 885 243 819 q 373 985 307 951 q 542 1019 439 1019 q 654 996 619 1019 q 689 926 689 972 q 655 856 689 882 q 560 825 621 831 q 444 784 475 817 q 414 678 414 751 q 417 574 414 638 q 426 439 421 511 q 435 297 431 367 q 442 172 439 228 q 446 88 446 117 q 434 -49 446 18 q 392 -172 422 -117 q 306 -259 363 -226 q 161 -292 250 -292 z "},"∏":{"ha":953,"x_min":92,"x_max":861,"o":"m 735 -261 q 670 -227 692 -261 q 642 -106 649 -193 q 635 136 635 -19 q 638 353 635 238 q 648 587 642 468 q 661 815 654 706 l 683 801 q 582 785 642 790 q 443 779 522 779 q 358 781 406 779 q 261 788 311 783 l 275 814 q 292 644 283 738 q 306 453 300 550 q 316 266 313 356 q 319 107 319 176 q 313 -112 319 -32 q 285 -225 307 -192 q 218 -258 264 -258 q 151 -235 176 -258 q 113 -152 126 -212 q 96 17 100 -92 q 92 296 92 125 q 110 687 92 540 q 171 889 129 833 q 257 951 200 928 q 386 984 314 974 q 531 994 458 994 q 673 982 615 994 q 760 943 731 969 q 821 817 799 908 q 852 568 843 725 q 861 179 861 411 q 851 -79 861 18 q 815 -219 842 -176 q 735 -261 788 -261 z "},"∑":{"ha":739,"x_min":36,"x_max":703,"o":"m 324 -286 q 149 -271 213 -286 q 61 -225 86 -256 q 36 -149 36 -194 q 51 -68 36 -115 q 99 44 65 -21 q 188 195 132 110 q 324 390 243 281 l 319 363 q 158 581 217 492 q 74 733 99 669 q 50 851 50 797 q 71 925 50 893 q 142 978 92 957 q 277 1011 192 1000 q 492 1022 363 1022 q 657 996 611 1022 q 703 919 703 969 q 649 840 703 867 q 481 813 596 813 q 346 815 421 813 q 190 822 271 817 l 192 839 q 396 590 319 708 q 472 372 472 471 q 398 160 472 283 q 183 -136 324 36 l 175 -128 q 289 -99 225 -111 q 420 -79 353 -86 q 546 -72 488 -72 q 662 -89 624 -72 q 700 -146 700 -106 q 678 -199 700 -176 q 606 -242 657 -222 q 526 -263 572 -253 q 427 -280 479 -274 q 324 -286 375 -286 z "},"√":{"ha":942,"x_min":28,"x_max":907,"o":"m 494 -93 q 398 -55 443 -93 q 317 45 353 -17 q 252 178 281 107 q 205 317 224 250 q 176 432 186 385 l 211 414 q 167 382 186 394 q 133 365 149 369 q 101 360 117 360 q 48 383 68 360 q 28 442 28 407 q 49 497 28 469 q 102 547 69 525 q 171 583 135 569 q 239 596 207 596 q 326 558 296 596 q 372 429 357 519 q 399 315 382 379 q 436 185 415 251 q 479 58 457 118 l 485 58 q 554 256 524 153 q 610 463 585 360 q 655 660 635 567 q 692 831 675 754 q 738 979 714 931 q 817 1028 763 1028 q 886 990 865 1028 q 907 874 907 951 q 897 733 907 808 q 870 577 888 657 q 828 417 853 497 q 775 260 804 336 q 713 114 746 183 q 605 -46 658 1 q 494 -93 551 -93 z "},"∂":{"ha":863,"x_min":56,"x_max":807,"o":"m 424 -19 q 151 65 247 -19 q 56 325 56 150 q 102 529 56 450 q 228 647 149 608 q 404 685 307 685 q 540 655 474 685 q 653 571 606 625 l 626 574 q 630 612 629 593 q 631 649 631 631 q 566 878 631 804 q 408 953 501 953 q 326 931 353 953 q 275 860 299 908 q 240 810 260 825 q 192 796 219 796 q 142 816 161 796 q 124 876 124 836 q 156 990 124 933 q 251 1085 188 1047 q 407 1122 314 1122 q 615 1066 525 1122 q 756 895 704 1010 q 807 604 807 781 q 783 322 807 440 q 710 128 758 204 q 590 17 661 53 q 424 -19 518 -19 m 418 153 q 510 174 468 153 q 578 240 553 196 q 604 354 604 285 q 560 478 604 431 q 429 526 515 526 q 301 477 350 526 q 253 328 253 428 q 298 202 253 251 q 418 153 343 153 z "},"%":{"ha":967,"x_min":38,"x_max":929,"o":"m 235 546 q 91 601 144 546 q 38 750 38 656 q 92 909 38 849 q 238 969 146 969 q 390 910 332 969 q 447 757 447 851 q 390 603 447 660 q 235 546 332 546 m 244 661 q 297 689 276 661 q 317 765 317 717 q 297 841 317 813 q 244 869 276 869 q 192 841 211 869 q 172 765 172 813 q 192 689 172 717 q 244 661 211 661 m 717 -3 q 573 53 626 -3 q 519 203 519 108 q 574 362 519 301 q 719 422 628 422 q 872 363 814 422 q 929 210 929 304 q 872 55 929 113 q 717 -3 814 -3 m 726 114 q 779 142 760 114 q 799 218 799 169 q 779 294 799 265 q 726 322 760 322 q 674 294 693 322 q 654 218 654 265 q 674 142 654 169 q 726 114 693 114 m 228 -19 q 184 -1 197 -19 q 171 43 171 17 q 210 167 171 97 q 306 320 249 236 q 422 499 364 404 q 527 683 485 601 q 603 826 569 764 q 674 932 638 889 q 717 976 696 961 q 761 990 739 990 q 803 973 792 990 q 815 931 815 956 q 773 808 815 883 q 664 637 731 733 q 525 425 597 540 q 410 218 460 321 q 317 49 361 115 q 277 1 299 21 q 228 -19 256 -19 z "},"‰":{"ha":1414,"x_min":38,"x_max":1376,"o":"m 1164 -3 q 1020 53 1074 -3 q 967 203 967 108 q 1021 362 967 301 q 1167 422 1075 422 q 1319 363 1261 422 q 1376 210 1376 304 q 1319 55 1376 113 q 1164 -3 1261 -3 m 1174 114 q 1226 142 1207 114 q 1246 218 1246 169 q 1226 294 1246 265 q 1174 322 1207 322 q 1121 294 1140 322 q 1101 218 1101 265 q 1121 142 1101 169 q 1174 114 1140 114 m 235 546 q 91 601 144 546 q 38 750 38 656 q 92 909 38 849 q 238 969 146 969 q 390 910 332 969 q 447 757 447 851 q 390 603 447 660 q 235 546 332 546 m 244 661 q 297 689 276 661 q 317 765 317 717 q 297 841 317 813 q 244 869 276 869 q 192 841 211 869 q 172 765 172 813 q 192 689 172 717 q 244 661 211 661 m 717 -3 q 573 53 626 -3 q 519 203 519 108 q 574 362 519 301 q 719 422 628 422 q 872 363 814 422 q 929 210 929 304 q 872 55 929 113 q 717 -3 814 -3 m 726 114 q 779 142 760 114 q 799 218 799 169 q 779 294 799 265 q 726 322 760 322 q 674 294 693 322 q 654 218 654 265 q 674 142 654 169 q 726 114 693 114 m 228 -19 q 184 -1 197 -19 q 171 43 171 17 q 210 167 171 97 q 306 320 249 236 q 422 499 364 404 q 527 683 485 601 q 603 826 569 764 q 674 932 638 889 q 717 976 696 961 q 761 990 739 990 q 803 973 792 990 q 815 931 815 956 q 773 808 815 883 q 664 637 731 733 q 525 425 597 540 q 410 218 460 321 q 317 49 361 115 q 277 1 299 21 q 228 -19 256 -19 z "},"‱":{"ha":1861,"x_min":38,"x_max":1824,"o":"m 1164 -3 q 1020 53 1074 -3 q 967 203 967 108 q 1021 362 967 301 q 1167 422 1075 422 q 1319 363 1261 422 q 1376 210 1376 304 q 1319 55 1376 113 q 1164 -3 1261 -3 m 1174 114 q 1226 142 1207 114 q 1246 218 1246 169 q 1226 294 1246 265 q 1174 322 1207 322 q 1121 294 1140 322 q 1101 218 1101 265 q 1121 142 1101 169 q 1174 114 1140 114 m 1611 -3 q 1467 53 1521 -3 q 1414 203 1414 108 q 1468 362 1414 301 q 1614 422 1522 422 q 1766 363 1708 422 q 1824 210 1824 304 q 1766 55 1824 113 q 1611 -3 1708 -3 m 1621 114 q 1674 142 1654 114 q 1693 218 1693 169 q 1674 294 1693 265 q 1621 322 1654 322 q 1568 294 1588 322 q 1549 218 1549 265 q 1568 142 1549 169 q 1621 114 1588 114 m 235 546 q 91 601 144 546 q 38 750 38 656 q 92 909 38 849 q 238 969 146 969 q 390 910 332 969 q 447 757 447 851 q 390 603 447 660 q 235 546 332 546 m 244 661 q 297 689 276 661 q 317 765 317 717 q 297 841 317 813 q 244 869 276 869 q 192 841 211 869 q 172 765 172 813 q 192 689 172 717 q 244 661 211 661 m 717 -3 q 573 53 626 -3 q 519 203 519 108 q 574 362 519 301 q 719 422 628 422 q 872 363 814 422 q 929 210 929 304 q 872 55 929 113 q 717 -3 814 -3 m 726 114 q 779 142 760 114 q 799 218 799 169 q 779 294 799 265 q 726 322 760 322 q 674 294 693 322 q 654 218 654 265 q 674 142 654 169 q 726 114 693 114 m 228 -19 q 184 -1 197 -19 q 171 43 171 17 q 210 167 171 97 q 306 320 249 236 q 422 499 364 404 q 527 683 485 601 q 603 826 569 764 q 674 932 638 889 q 717 976 696 961 q 761 990 739 990 q 803 973 792 990 q 815 931 815 956 q 773 808 815 883 q 664 637 731 733 q 525 425 597 540 q 410 218 460 321 q 317 49 361 115 q 277 1 299 21 q 228 -19 256 -19 z "},"→":{"ha":897,"x_min":21,"x_max":876,"o":"m 431 68 q 372 90 392 68 q 351 147 351 113 q 428 276 351 200 q 694 454 506 353 l 694 460 q 413 417 538 432 q 199 401 289 401 q 103 413 143 401 q 42 449 63 424 q 21 514 21 474 q 63 608 21 581 q 194 636 106 636 q 409 618 283 636 q 692 568 535 600 l 692 574 q 483 692 560 640 q 375 789 407 744 q 343 875 343 833 q 367 936 343 915 q 429 957 390 957 q 510 937 469 957 q 604 869 551 917 q 731 738 657 821 q 822 629 790 672 q 865 558 853 586 q 876 510 876 531 q 847 433 876 478 q 750 306 817 388 q 568 124 646 179 q 431 68 490 68 z "},"⇧":{"ha":903,"x_min":21,"x_max":882,"o":"m 379 985 q 472 1035 432 1040 q 558 975 511 1031 q 730 760 657 860 q 842 590 803 661 q 882 483 882 518 q 863 445 882 458 q 817 432 844 432 q 735 434 778 432 q 649 442 693 436 q 663 312 657 381 q 671 186 668 243 q 674 99 674 129 q 658 40 674 64 q 592 3 643 15 q 436 -10 542 -10 q 296 1 343 -10 q 233 35 249 13 q 217 94 217 58 q 219 154 217 115 q 227 242 222 193 q 238 342 232 290 q 251 439 244 393 q 184 428 226 433 q 103 424 142 424 q 21 482 21 424 q 56 591 21 525 q 170 753 92 657 q 379 985 249 850 m 318 82 l 285 103 q 444 124 358 122 q 607 107 531 125 l 576 85 q 555 244 563 156 q 547 428 547 333 q 610 525 547 497 q 818 525 672 553 l 801 496 q 617 705 700 596 q 464 940 533 814 q 283 702 374 810 q 89 503 192 594 l 89 522 q 286 526 229 546 q 343 425 343 507 q 337 241 343 329 q 318 82 331 153 z "},"⬆":{"ha":903,"x_min":21,"x_max":882,"o":"m 379 985 q 472 1035 432 1040 q 558 975 511 1031 q 730 760 657 860 q 842 590 803 661 q 882 483 882 518 q 863 445 882 458 q 817 432 844 432 q 735 434 778 432 q 649 442 693 436 q 663 312 657 381 q 671 186 668 243 q 674 99 674 129 q 658 40 674 64 q 592 3 643 15 q 436 -10 542 -10 q 296 1 343 -10 q 233 35 249 13 q 217 94 217 58 q 219 154 217 115 q 227 242 222 193 q 238 342 232 290 q 251 439 244 393 q 184 428 226 433 q 103 424 142 424 q 21 482 21 424 q 56 591 21 525 q 170 753 92 657 q 379 985 249 850 z "},"●":{"ha":972,"x_min":28,"x_max":944,"o":"m 471 -11 q 237 48 336 -11 q 83 217 138 107 q 28 478 28 326 q 83 760 28 639 q 240 950 139 882 q 475 1018 340 1018 q 724 952 618 1018 q 887 768 829 886 q 944 493 944 650 q 886 224 944 338 q 722 50 828 111 q 471 -11 615 -11 z "},"○":{"ha":972,"x_min":28,"x_max":944,"o":"m 471 -11 q 237 48 336 -11 q 83 217 138 107 q 28 478 28 326 q 83 760 28 639 q 240 950 139 882 q 475 1018 340 1018 q 724 952 618 1018 q 887 768 829 886 q 944 493 944 650 q 886 224 944 338 q 722 50 828 111 q 471 -11 615 -11 m 475 114 q 658 160 581 114 q 777 292 735 206 q 819 496 819 378 q 778 703 819 614 q 659 843 736 793 q 478 893 582 893 q 306 842 379 893 q 193 698 233 790 q 153 483 153 606 q 192 286 153 369 q 305 158 232 203 q 475 114 378 114 z "},"❖":{"ha":981,"x_min":28,"x_max":953,"o":"m 489 608 q 460 616 474 608 q 433 636 447 624 q 372 702 400 667 q 325 768 343 738 q 307 813 307 799 q 326 861 307 831 q 372 927 344 892 q 428 992 400 963 q 456 1015 442 1006 q 492 1025 471 1025 q 520 1017 507 1025 q 547 997 533 1010 q 610 932 581 968 q 656 866 639 896 q 674 821 674 836 q 655 773 674 804 q 608 706 636 742 q 553 642 581 671 q 524 618 539 628 q 489 608 510 608 m 489 -15 q 460 -8 474 -15 q 433 13 447 -1 q 371 78 400 43 q 324 144 342 114 q 306 189 306 175 q 324 238 306 207 q 372 303 343 268 q 428 368 400 339 q 456 392 440 382 q 492 401 471 401 q 520 394 507 401 q 547 374 533 388 q 610 308 581 344 q 657 242 639 272 q 675 197 675 211 q 656 149 675 181 q 610 83 638 118 q 553 18 582 47 q 525 -6 540 4 q 489 -15 510 -15 m 211 290 q 183 297 196 290 q 156 318 169 304 q 93 384 122 349 q 46 450 64 419 q 28 494 28 481 q 47 543 28 513 q 94 609 65 574 q 150 674 122 644 q 178 697 163 688 q 214 707 193 707 q 242 700 229 707 q 269 679 256 693 q 332 614 303 650 q 379 547 361 578 q 397 503 397 517 q 378 455 397 486 q 332 388 360 424 q 275 324 304 353 q 247 300 263 310 q 211 290 232 290 m 767 304 q 738 311 751 304 q 711 332 725 318 q 649 398 678 363 q 601 464 619 433 q 583 508 583 494 q 602 557 583 526 q 649 623 621 588 q 706 688 678 658 q 733 711 718 701 q 769 721 749 721 q 798 714 785 721 q 825 693 811 707 q 888 628 858 664 q 935 561 917 592 q 953 517 953 531 q 934 469 953 500 q 888 402 915 438 q 831 338 860 367 q 803 314 818 324 q 767 304 788 304 z "},"◊":{"ha":972,"x_min":28,"x_max":944,"o":"m 483 -15 q 412 3 444 -15 q 343 54 379 22 q 224 175 281 110 q 124 303 168 240 q 53 417 79 367 q 28 496 28 468 q 55 581 28 528 q 126 697 82 633 q 224 824 171 760 q 331 942 278 888 q 401 1001 364 976 q 489 1025 438 1025 q 562 1006 529 1025 q 629 956 594 988 q 748 835 692 900 q 849 706 804 769 q 919 592 893 643 q 944 514 944 542 q 917 429 944 482 q 846 313 890 376 q 748 186 801 250 q 642 68 694 122 q 572 9 608 33 q 483 -15 535 -15 m 485 69 l 490 69 q 576 190 526 124 q 681 323 626 256 q 788 448 736 390 q 875 542 839 506 l 875 486 q 781 576 832 522 q 676 692 729 629 q 574 820 622 756 q 488 940 525 885 l 482 940 q 397 820 447 886 q 291 687 346 754 q 185 562 236 619 q 97 468 133 504 l 97 524 q 192 435 140 489 q 297 317 243 381 q 399 190 350 254 q 485 69 447 126 z "},"■":{"ha":972,"x_min":42,"x_max":931,"o":"m 492 1025 q 749 1015 657 1025 q 876 972 842 1004 q 919 831 907 946 q 931 528 931 715 q 920 185 931 300 q 882 46 910 69 q 747 2 844 15 q 479 -11 649 -11 q 206 0 300 -11 q 79 42 111 11 q 54 103 63 60 q 44 231 46 146 q 42 454 42 315 q 53 800 42 669 q 90 957 64 931 q 219 1009 124 993 q 492 1025 315 1025 z "},"□":{"ha":972,"x_min":42,"x_max":931,"o":"m 479 -11 q 206 0 300 -11 q 79 42 111 11 q 54 103 63 60 q 44 231 46 146 q 42 454 42 315 q 53 800 42 669 q 90 957 64 931 q 219 1009 124 993 q 492 1025 315 1025 q 749 1015 657 1025 q 876 972 842 1004 q 919 831 907 946 q 931 528 931 715 q 920 185 931 300 q 882 46 910 69 q 747 2 844 15 q 479 -11 649 -11 m 158 82 l 132 103 q 361 120 239 115 q 608 122 483 125 q 844 107 732 119 l 821 85 q 798 342 806 197 q 792 642 790 486 q 807 942 794 797 l 826 908 q 619 888 736 893 q 380 885 503 882 q 146 900 257 889 l 161 932 q 178 712 174 826 q 183 484 183 597 q 176 268 182 371 q 158 82 169 165 z "},"▢":{"ha":972,"x_min":42,"x_max":931,"o":"m 479 -11 q 213 7 300 -11 q 93 56 125 25 q 65 113 76 74 q 47 234 53 153 q 42 454 42 315 q 60 793 42 669 q 104 943 78 917 q 226 1002 138 979 q 492 1025 315 1025 q 742 1008 657 1025 q 863 958 828 990 q 912 824 893 932 q 931 528 931 715 q 913 192 931 300 q 868 60 896 83 q 740 9 831 29 q 479 -11 649 -11 m 482 114 q 676 124 606 114 q 774 157 747 133 q 799 263 793 175 q 806 522 806 350 q 797 752 806 665 q 768 858 789 839 q 676 892 742 885 q 490 900 610 900 q 293 888 363 900 q 200 847 224 875 q 174 728 182 828 q 167 467 167 629 q 168 297 167 361 q 175 201 169 233 q 193 156 181 168 q 283 123 215 132 q 482 114 351 114 z "},"▲":{"ha":972,"x_min":28,"x_max":944,"o":"m 433 -11 q 194 3 283 -11 q 67 51 106 17 q 28 149 28 86 q 46 260 28 192 q 94 410 64 328 q 165 579 125 492 q 248 751 204 667 q 335 908 292 836 q 401 992 365 958 q 489 1025 438 1025 q 561 999 529 1025 q 626 924 593 972 q 724 763 676 849 q 811 588 771 676 q 881 417 851 499 q 928 271 911 336 q 944 167 944 206 q 826 31 944 74 q 433 -11 707 -11 z "},"▶":{"ha":972,"x_min":42,"x_max":944,"o":"m 160 -11 q 110 1 128 -11 q 81 31 92 13 q 57 102 65 57 q 45 231 49 147 q 42 454 42 315 q 53 802 42 669 q 86 978 64 935 q 119 1013 99 1001 q 172 1025 140 1025 q 294 1000 219 1025 q 456 933 369 975 q 629 838 543 890 q 787 729 715 785 q 901 622 858 674 q 944 528 944 569 q 903 428 944 485 q 793 312 863 372 q 639 194 724 251 q 465 90 554 136 q 297 17 376 44 q 160 -11 218 -11 z "},"▼":{"ha":972,"x_min":28,"x_max":944,"o":"m 483 -11 q 412 15 444 -11 q 346 90 379 42 q 249 251 296 165 q 161 426 201 338 q 91 597 121 515 q 44 743 61 678 q 28 847 28 808 q 147 983 28 942 q 539 1025 267 1025 q 778 1011 690 1025 q 906 963 867 997 q 944 865 944 928 q 926 754 944 822 q 878 604 908 686 q 808 435 847 522 q 724 263 768 347 q 638 106 681 178 q 571 22 607 56 q 483 -11 535 -11 z "},"△":{"ha":972,"x_min":28,"x_max":944,"o":"m 433 -11 q 194 3 283 -11 q 67 51 106 17 q 28 149 28 86 q 46 260 28 192 q 94 410 64 328 q 165 579 125 492 q 248 751 204 667 q 335 908 292 836 q 401 992 365 958 q 489 1025 438 1025 q 561 999 529 1025 q 626 924 593 972 q 724 763 676 849 q 811 588 771 676 q 881 417 851 499 q 928 271 911 336 q 944 167 944 206 q 826 31 944 74 q 433 -11 707 -11 m 97 121 q 266 137 158 132 q 517 142 374 142 q 728 141 639 142 q 875 139 817 140 q 781 297 832 201 q 676 503 729 392 q 574 728 622 615 q 488 940 525 842 l 482 940 q 415 776 454 865 q 333 594 376 688 q 247 411 290 500 q 165 247 204 322 q 97 121 126 172 z "},"▽":{"ha":972,"x_min":28,"x_max":944,"o":"m 539 1025 q 778 1011 690 1025 q 906 963 867 997 q 944 865 944 928 q 926 754 944 822 q 878 604 908 686 q 808 435 847 522 q 724 263 768 347 q 638 106 681 178 q 571 22 607 56 q 483 -11 535 -11 q 412 15 444 -11 q 346 90 379 42 q 249 251 296 165 q 161 426 201 338 q 91 597 121 515 q 44 743 61 678 q 28 847 28 808 q 147 983 28 942 q 539 1025 267 1025 m 875 893 q 706 878 814 883 q 456 872 599 872 q 244 873 333 872 q 97 875 156 874 q 192 717 140 813 q 297 510 243 622 q 399 285 350 399 q 485 74 447 172 l 490 74 q 557 238 518 149 q 639 420 596 326 q 725 603 682 514 q 807 767 768 692 q 875 893 846 842 z "},"◄":{"ha":972,"x_min":28,"x_max":931,"o":"m 813 1025 q 863 1014 844 1025 q 892 983 881 1003 q 915 913 907 958 q 927 783 924 867 q 931 560 931 700 q 920 213 931 346 q 886 36 910 79 q 853 1 874 14 q 800 -11 832 -11 q 678 14 753 -11 q 516 81 603 39 q 343 176 429 124 q 185 285 257 229 q 71 393 114 340 q 28 486 28 446 q 69 585 28 529 q 179 702 110 642 q 333 820 249 763 q 507 924 418 878 q 676 997 596 969 q 813 1025 756 1025 z "},"̈":{"ha":0,"x_min":42,"x_max":585,"o":"m 150 908 q 68 936 94 908 q 42 1001 42 964 q 76 1080 42 1053 q 174 1107 111 1107 q 254 1077 228 1107 q 281 1006 281 1047 q 244 933 281 958 q 150 908 207 908 m 474 1121 q 558 1090 532 1121 q 585 1019 585 1060 q 553 942 585 968 q 460 915 521 915 q 375 944 403 915 q 347 1015 347 974 q 382 1094 347 1067 q 474 1121 417 1121 z "},"̇":{"ha":0,"x_min":76,"x_max":296,"o":"m 192 1121 q 272 1090 247 1121 q 296 1019 296 1060 q 266 942 296 969 q 182 915 236 915 q 103 945 129 915 q 76 1015 76 975 q 108 1094 76 1068 q 192 1121 140 1121 z "},"̀":{"ha":0,"x_min":42,"x_max":406,"o":"m 406 924 q 398 902 406 911 q 375 893 390 893 q 312 899 350 893 q 230 917 274 906 q 144 942 186 928 q 67 978 93 960 q 42 1022 42 996 q 54 1064 42 1042 q 88 1102 67 1086 q 136 1118 110 1118 q 210 1094 168 1118 q 300 1036 253 1069 q 377 974 349 1001 q 406 924 406 946 z "},"́":{"ha":0,"x_min":42,"x_max":406,"o":"m 42 924 q 71 974 42 946 q 147 1036 100 1001 q 237 1094 194 1069 q 311 1118 279 1118 q 360 1102 339 1118 q 393 1064 381 1086 q 406 1022 406 1042 q 380 978 406 996 q 303 942 354 960 q 218 917 263 928 q 135 899 174 906 q 72 893 97 893 q 50 902 58 893 q 42 924 42 911 z "},"̋":{"ha":0,"x_min":89,"x_max":621,"o":"m 393 896 q 367 906 379 896 q 356 931 356 915 q 368 976 356 949 q 401 1039 381 1004 q 433 1088 415 1060 q 474 1136 451 1115 q 524 1157 496 1157 q 567 1146 544 1157 q 606 1117 590 1135 q 621 1083 621 1100 q 569 1011 621 1057 q 519 969 547 990 q 463 931 490 949 q 418 903 436 914 q 406 898 413 900 q 393 896 400 896 m 126 896 q 101 905 113 896 q 89 929 89 914 q 101 976 89 949 q 136 1038 114 1003 q 174 1095 156 1068 q 212 1139 192 1122 q 258 1156 232 1156 q 301 1144 279 1156 q 339 1117 324 1133 q 354 1083 354 1100 q 306 1010 354 1054 q 250 967 281 989 q 192 928 219 946 q 146 903 164 911 q 135 898 140 900 q 126 896 129 896 z "},"̂":{"ha":0,"x_min":42,"x_max":501,"o":"m 276 1129 q 337 1116 299 1129 q 411 1081 375 1103 q 478 1029 454 1054 q 501 969 501 1004 q 480 922 501 939 q 426 904 458 904 q 335 945 382 904 q 254 1057 289 986 l 275 1061 q 179 936 226 975 q 94 897 132 897 q 57 910 72 897 q 42 946 42 924 q 67 1007 42 978 q 135 1067 92 1036 q 211 1112 175 1094 q 276 1129 247 1129 z "},"̌":{"ha":0,"x_min":42,"x_max":501,"o":"m 276 911 q 211 929 247 911 q 135 974 175 947 q 67 1033 92 1004 q 42 1094 42 1063 q 57 1130 42 1117 q 94 1143 72 1143 q 179 1104 132 1143 q 275 979 226 1065 l 254 983 q 335 1095 289 1054 q 426 1136 382 1136 q 480 1119 458 1136 q 501 1071 501 1101 q 478 1011 501 1036 q 411 960 454 986 q 337 924 375 938 q 276 911 299 911 z "},"̆":{"ha":0,"x_min":42,"x_max":447,"o":"m 244 894 q 95 947 149 894 q 42 1067 42 999 q 96 1124 42 1124 q 160 1071 149 1124 q 186 1017 168 1035 q 243 1000 204 1000 q 297 1015 279 1000 q 322 1063 314 1031 q 347 1118 332 1099 q 393 1138 363 1138 q 434 1121 421 1138 q 447 1074 447 1104 q 424 985 447 1026 q 355 919 400 944 q 244 894 310 894 z "},"̊":{"ha":0,"x_min":42,"x_max":415,"o":"m 226 890 q 94 920 147 890 q 42 1013 42 950 q 94 1117 42 1076 q 243 1158 146 1158 q 374 1120 332 1158 q 415 1029 415 1082 q 365 929 415 968 q 226 890 314 890 m 218 965 q 295 980 264 965 q 326 1024 326 994 q 303 1070 326 1053 q 229 1088 279 1088 q 154 1067 178 1088 q 131 1022 131 1046 q 155 981 131 997 q 218 965 179 965 z "},"̃":{"ha":0,"x_min":42,"x_max":528,"o":"m 207 1103 q 292 1079 254 1103 q 365 1022 329 1056 q 381 1015 375 1014 q 390 1025 388 1015 q 424 1100 406 1076 q 476 1124 442 1124 q 528 1064 528 1124 q 513 994 528 1033 q 465 924 497 954 q 381 894 432 894 q 294 923 332 894 q 218 999 257 951 q 201 1010 208 1011 q 189 988 194 1008 q 157 909 176 933 q 100 885 138 885 q 58 904 74 885 q 42 950 42 924 q 63 1024 42 989 q 122 1081 85 1058 q 207 1103 160 1103 z "},"̄":{"ha":0,"x_min":42,"x_max":569,"o":"m 147 908 q 67 928 93 908 q 42 981 42 949 q 65 1030 42 1013 q 142 1061 88 1047 q 240 1076 186 1071 q 347 1085 293 1082 q 446 1088 401 1088 q 541 1068 513 1088 q 569 1017 569 1049 q 546 961 569 982 q 476 932 522 940 q 372 919 433 925 q 251 911 311 914 q 147 908 192 908 z "},"̒":{"ha":0,"x_min":35,"x_max":265,"o":"m 149 911 q 66 938 97 911 q 35 1025 35 965 q 53 1096 35 1057 q 97 1167 71 1135 q 142 1208 121 1194 q 185 1221 164 1221 q 209 1215 200 1221 q 218 1196 218 1208 q 206 1158 218 1182 q 156 1092 194 1133 l 147 1106 q 239 1082 213 1106 q 265 1014 265 1058 q 255 966 265 990 q 219 926 244 942 q 149 911 193 911 z "},"̦":{"ha":0,"x_min":35,"x_max":265,"o":"m 153 -244 q 61 -221 88 -244 q 35 -153 35 -197 q 45 -104 35 -128 q 81 -65 56 -81 q 151 -50 107 -50 q 234 -77 203 -50 q 265 -164 265 -104 q 248 -235 265 -196 q 203 -306 231 -274 q 158 -346 181 -332 q 115 -360 136 -360 q 92 -353 101 -360 q 82 -335 82 -347 q 94 -297 82 -321 q 144 -231 106 -272 l 153 -244 z "},"̧":{"ha":0,"x_min":42,"x_max":363,"o":"m 132 -289 q 42 -232 42 -289 q 64 -188 42 -201 q 115 -169 86 -175 q 169 -162 140 -165 q 208 -156 197 -158 q 240 -144 228 -151 q 253 -122 253 -136 q 236 -99 253 -107 q 174 -85 219 -90 q 101 -64 128 -76 q 75 -25 75 -51 q 96 7 75 -1 q 147 15 117 15 q 247 -2 197 15 q 330 -53 297 -19 q 363 -135 363 -86 q 333 -211 363 -176 q 251 -267 303 -246 q 132 -289 199 -289 z "},"̨":{"ha":0,"x_min":42,"x_max":333,"o":"m 207 -289 q 88 -257 135 -289 q 42 -162 42 -225 q 80 -59 42 -112 q 206 43 118 -6 l 314 46 q 192 -53 238 -1 q 147 -133 147 -106 q 164 -158 147 -151 q 208 -165 181 -165 q 241 -164 224 -165 q 279 -162 258 -162 q 320 -177 307 -162 q 333 -217 333 -192 q 301 -271 333 -253 q 207 -289 268 -289 z "},"¨":{"ha":626,"x_min":42,"x_max":585,"o":"m 150 908 q 68 936 94 908 q 42 1001 42 964 q 76 1080 42 1053 q 174 1107 111 1107 q 254 1077 228 1107 q 281 1006 281 1047 q 244 933 281 958 q 150 908 207 908 m 474 1121 q 558 1090 532 1121 q 585 1019 585 1060 q 553 942 585 968 q 460 915 521 915 q 375 944 403 915 q 347 1015 347 974 q 382 1094 347 1067 q 474 1121 417 1121 z "},"˙":{"ha":372,"x_min":76,"x_max":296,"o":"m 192 1121 q 272 1090 247 1121 q 296 1019 296 1060 q 266 942 296 969 q 182 915 236 915 q 103 945 129 915 q 76 1015 76 975 q 108 1094 76 1068 q 192 1121 140 1121 z "},"`":{"ha":447,"x_min":42,"x_max":406,"o":"m 406 924 q 398 902 406 911 q 375 893 390 893 q 312 899 350 893 q 230 917 274 906 q 144 942 186 928 q 67 978 93 960 q 42 1022 42 996 q 54 1064 42 1042 q 88 1102 67 1086 q 136 1118 110 1118 q 210 1094 168 1118 q 300 1036 253 1069 q 377 974 349 1001 q 406 924 406 946 z "},"´":{"ha":447,"x_min":42,"x_max":406,"o":"m 42 924 q 71 974 42 946 q 147 1036 100 1001 q 237 1094 194 1069 q 311 1118 279 1118 q 360 1102 339 1118 q 393 1064 381 1086 q 406 1022 406 1042 q 380 978 406 996 q 303 942 354 960 q 218 917 263 928 q 135 899 174 906 q 72 893 97 893 q 50 902 58 893 q 42 924 42 911 z "},"˝":{"ha":710,"x_min":89,"x_max":621,"o":"m 393 896 q 367 906 379 896 q 356 931 356 915 q 368 976 356 949 q 401 1039 381 1004 q 433 1088 415 1060 q 474 1136 451 1115 q 524 1157 496 1157 q 567 1146 544 1157 q 606 1117 590 1135 q 621 1083 621 1100 q 569 1011 621 1057 q 519 969 547 990 q 463 931 490 949 q 418 903 436 914 q 406 898 413 900 q 393 896 400 896 m 126 896 q 101 905 113 896 q 89 929 89 914 q 101 976 89 949 q 136 1038 114 1003 q 174 1095 156 1068 q 212 1139 192 1122 q 258 1156 232 1156 q 301 1144 279 1156 q 339 1117 324 1133 q 354 1083 354 1100 q 306 1010 354 1054 q 250 967 281 989 q 192 928 219 946 q 146 903 164 911 q 135 898 140 900 q 126 896 129 896 z "},"ˆ":{"ha":543,"x_min":42,"x_max":501,"o":"m 276 1129 q 337 1116 299 1129 q 411 1081 375 1103 q 478 1029 454 1054 q 501 969 501 1004 q 480 922 501 939 q 426 904 458 904 q 335 945 382 904 q 254 1057 289 986 l 275 1061 q 179 936 226 975 q 94 897 132 897 q 57 910 72 897 q 42 946 42 924 q 67 1007 42 978 q 135 1067 92 1036 q 211 1112 175 1094 q 276 1129 247 1129 z "},"ˇ":{"ha":543,"x_min":42,"x_max":501,"o":"m 276 911 q 211 929 247 911 q 135 974 175 947 q 67 1033 92 1004 q 42 1094 42 1063 q 57 1130 42 1117 q 94 1143 72 1143 q 179 1104 132 1143 q 275 979 226 1065 l 254 983 q 335 1095 289 1054 q 426 1136 382 1136 q 480 1119 458 1136 q 501 1071 501 1101 q 478 1011 501 1036 q 411 960 454 986 q 337 924 375 938 q 276 911 299 911 z "},"˘":{"ha":489,"x_min":42,"x_max":447,"o":"m 244 894 q 95 947 149 894 q 42 1067 42 999 q 96 1124 42 1124 q 160 1071 149 1124 q 186 1017 168 1035 q 243 1000 204 1000 q 297 1015 279 1000 q 322 1063 314 1031 q 347 1118 332 1099 q 393 1138 363 1138 q 434 1121 421 1138 q 447 1074 447 1104 q 424 985 447 1026 q 355 919 400 944 q 244 894 310 894 z "},"˚":{"ha":457,"x_min":42,"x_max":415,"o":"m 226 890 q 94 920 147 890 q 42 1013 42 950 q 94 1117 42 1076 q 243 1158 146 1158 q 374 1120 332 1158 q 415 1029 415 1082 q 365 929 415 968 q 226 890 314 890 m 218 965 q 295 980 264 965 q 326 1024 326 994 q 303 1070 326 1053 q 229 1088 279 1088 q 154 1067 178 1088 q 131 1022 131 1046 q 155 981 131 997 q 218 965 179 965 z "},"˜":{"ha":569,"x_min":42,"x_max":528,"o":"m 207 1103 q 292 1079 254 1103 q 365 1022 329 1056 q 381 1015 375 1014 q 390 1025 388 1015 q 424 1100 406 1076 q 476 1124 442 1124 q 528 1064 528 1124 q 513 994 528 1033 q 465 924 497 954 q 381 894 432 894 q 294 923 332 894 q 218 999 257 951 q 201 1010 208 1011 q 189 988 194 1008 q 157 909 176 933 q 100 885 138 885 q 58 904 74 885 q 42 950 42 924 q 63 1024 42 989 q 122 1081 85 1058 q 207 1103 160 1103 z "},"¯":{"ha":611,"x_min":42,"x_max":569,"o":"m 147 908 q 67 928 93 908 q 42 981 42 949 q 65 1030 42 1013 q 142 1061 88 1047 q 240 1076 186 1071 q 347 1085 293 1082 q 446 1088 401 1088 q 541 1068 513 1088 q 569 1017 569 1049 q 546 961 569 982 q 476 932 522 940 q 372 919 433 925 q 251 911 311 914 q 147 908 192 908 z "},"¸":{"ha":404,"x_min":42,"x_max":363,"o":"m 132 -289 q 42 -232 42 -289 q 64 -188 42 -201 q 115 -169 86 -175 q 169 -162 140 -165 q 208 -156 197 -158 q 240 -144 228 -151 q 253 -122 253 -136 q 236 -99 253 -107 q 174 -85 219 -90 q 101 -64 128 -76 q 75 -25 75 -51 q 96 7 75 -1 q 147 15 117 15 q 247 -2 197 15 q 330 -53 297 -19 q 363 -135 363 -86 q 333 -211 363 -176 q 251 -267 303 -246 q 132 -289 199 -289 z "},"˛":{"ha":375,"x_min":42,"x_max":333,"o":"m 207 -289 q 88 -257 135 -289 q 42 -162 42 -225 q 80 -59 42 -112 q 206 43 118 -6 l 314 46 q 192 -53 238 -1 q 147 -133 147 -106 q 164 -158 147 -151 q 208 -165 181 -165 q 241 -164 224 -165 q 279 -162 258 -162 q 320 -177 307 -162 q 333 -217 333 -192 q 301 -271 333 -253 q 207 -289 268 -289 z "}},"familyName":"DynaPuff","ascender":1340,"descender":-326,"underlinePosition":-139,"underlineThickness":69,"boundingBox":{"yMin":-387,"xMin":-194,"yMax":1368,"xMax":1824},"resolution":1000,"original_font_information":{"format":0,"copyright":"Copyright 2021 The DynaPuff Project Authors (https://github.com/googlefonts/dynapuff)","fontFamily":"DynaPuff","fontSubfamily":"Regular","uniqueID":"2.000;GOOG;DynaPuff-Regular","fullName":"DynaPuff Regular","version":"Version 2.000","postScriptName":"DynaPuff-Regular","manufacturer":"Google Fonts","designer":"Toshi Omagari, Jennifer Daniel","manufacturerURL":"https://github.com/googlefonts/dynapuff","designerURL":"https://tosche.net","licence":"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL","licenceURL":"https://scripts.sil.org/OFL","unknown1":"DynaPuff","unknown2":"ss01","unknown3":"ss02","unknown4":"Weight","unknown5":"Width","unknown6":"Regular","unknown7":"Medium","unknown8":"SemiBold","unknown9":"Bold","unknown10":"DynaPuff-Regular","unknown11":"DynaPuff-Medium","unknown12":"DynaPuff-SemiBold","unknown13":"DynaPuff-Bold","unknown14":"Condensed","unknown15":"Normal"},"cssFontWeight":"normal","cssFontStyle":"normal"}');function su(t){return su="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},su(t)}function qu(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function lu(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,hu(n.key),n)}}function hu(t){var e=function(t,e){if("object"!==su(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,"string");if("object"!==su(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===su(e)?e:String(e)}var cu=function(){function t(e,i,n){var r,o,a;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,a=function(){var t=null,e=Math.atan(3/8),i=Math.atan(3/Math.sqrt(Math.pow(3,2)+Math.pow(8,2)));return function(n){if(!t)return t=n,null;if(!n)return t=null,null;var r=window.APP.Layout,o=r.W,a=r.H,s=o/(a-8),q=(a-8)/2,l=o/2,h=t,c=h.clientX,u=h.clientY,p=15*(n.clientX-c)*s/l,d=-1*(n.clientY-u)*15/q,m=p*Math.cos(e),f=d*Math.cos(i),v=p*Math.sin(e)+d*Math.sin(i);return t=n,{dx:m,dy:f,dz:v}}},(o=hu(o="getCoordsDiff"))in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,this.loader=new xh;var s=this.loader.parse(au);this.worlds=["Paralect","Startup","Summer"],this.scene=e,this.world=i,this.camera=n,this.totalMass=1,this.cMaterial=new(ou().Material),this.worldMat=new(ou().Material),this.mouse=new Re,this.raycaster=new oc,this.pointerHandler=this.onPointer(),this.pointDiffer=this.getCoordsDiff(),this.setup(s),this.bindEvents()}var e,i;return e=t,i=[{key:"bindEvents",value:function(){var t=this;document.addEventListener("pointerdown",(function(e){return t.pointerHandler(e)})),document.addEventListener("pointerup",(function(e){return t.pointerHandler(e)})),document.addEventListener("pointermove",(function(e){return t.pointerHandler(e)})),document.addEventListener("touchstart",(function(e){return t.pointerHandler(e)})),document.addEventListener("touchend",(function(e){return t.pointerHandler(e)})),document.addEventListener("touchmove",(function(e){return t.pointerHandler(e)})),document.addEventListener("click",(function(){return t.onClick()})),window.addEventListener("mousemove",(function(e){return t.onMouseMove(e)}))}},{key:"onPointer",value:function(){var t=this,e=null,i=0;return function(n){switch(n.preventDefault(),n.type){case"pointerdown":t.raycaster.setFromCamera(t.mouse,t.camera);var r=t.raycaster.intersectObjects(t.scene.children,!0);if(r.length>0){var o=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var i=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=i){var n,r,o,a,s=[],q=!0,l=!1;try{if(o=(i=i.call(t)).next,0===e){if(Object(i)!==i)return;q=!1}else for(;!(q=(n=o.call(i)).done)&&(s.push(n.value),s.length!==e);q=!0);}catch(t){l=!0,r=t}finally{try{if(!q&&null!=i.return&&(a=i.return(),Object(a)!==a))return}finally{if(l)throw r}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return qu(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?qu(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(r,1)[0];e=o.object.isMesh&&o.object}return;case"pointerup":t.moving=!1;var a=t.pointDiffer(n);if(!a)return t.pointDiffer(null),void(e=null);var s=new(ou().Vec3)(a.dx/5,a.dy,-a.dz).scale(10);return e.body.applyLocalImpulse(s,new(ou().Vec3)),t.pointDiffer(null),void(e=null);case"pointermove":if(e){t.moving=!0;var q=t.pointDiffer(n),l=t.words.find((function(t,i){return t.children.some((function(t){return t===e}))}));if(!q)return;if(5===i){var h=new(ou().Vec3)(q.dx/10,q.dy,-q.dz).scale(10);e.body.applyLocalImpulse(h,new(ou().Vec3)),i=0}l.position.set(l.position.x+q.dx,l.position.y+q.dy>15?l.position.y:l.position.y+q.dy,l.position.z+q.dz>10?l.position.z:l.position.z+q.dz),i++}}}}},{key:"setup",value:function(t){var e=this;this.words=[],this.margin=6.5,this.offset=this.worlds.length*this.margin*.4;var i={font:t,size:5,height:.4,curveSegments:24,bevelEnabled:!0,bevelThickness:.9,bevelSize:.3,bevelOffset:0,bevelSegments:10};Array.from(this.worlds).reverse().forEach((function(t,n){var r=new _a;r.len=0,r.ground=new(ou().Body)({mass:0,shape:new(ou().Box)(new(ou().Vec3)(100,100,.1)),quaternion:(new(ou().Quaternion)).setFromEuler(Math.PI/-2,0,0),position:new(ou().Vec3)(0,n*e.margin-e.offset,0),material:e.worldMat}),r.isGroundDisplayed=!1,Array.from(t).forEach((function(o,a){var s=new Hq({color:new qn("#7A5099")}),q=new bq(o,i);q.computeBoundingBox(),q.computeBoundingSphere();var l=new $n(q,s);l.size=l.geometry.boundingBox.getSize(new Ne),l.size.multiply(new Ne(.5,.5,.5)),l.initPosition=new(ou().Vec3)(2*r.len,(e.worlds.length-1-n)*e.margin-e.offset,0),l.initPositionOffset=new(ou().Vec3)(l.initPosition.x,l.initPosition.y+20*(n+1)+.01*a,l.initPosition.z),r.len+=l.size.x;var h=new(ou().Box)(new(ou().Vec3)(l.size.x,l.size.y,l.size.z));l.body=new(ou().Body)({mass:e.totalMass/t.length,position:l.initPositionOffset,material:e.cMaterial,linearDamping:.1,angularDamping:.99}),l.body.addShape(h,new(ou().Vec3)(l.geometry.boundingSphere.center.x,l.geometry.boundingSphere.center.y,l.geometry.boundingSphere.center.z)),e.world.addBody(l.body),r.add(l)})),r.children.forEach((function(t){t.body.position.x-=r.len})),e.words.push(r),e.scene.add(r)}));var n=new(ou().ContactMaterial)(this.cMaterial,this.worldMat,{friction:.002,frictionEquationStiffness:1e6,frictionEquationRelaxation:3,restitution:.2,contactEquationStiffness:1e20,contactEquationRelaxation:3});this.world.addContactMaterial(n),this.setConstraints()}},{key:"onMouseMove",value:function(t){this.mouse.x=t.clientX/window.innerWidth*2-1,this.mouse.y=-t.clientY/window.innerHeight*2+1,this.raycaster.setFromCamera(this.mouse,this.camera);var e=this.raycaster.intersectObjects(this.scene.children,!0);document.body.style.cursor=e.length>0?"pointer":""}},{key:"onClick",value:function(){if(!this.moving){this.raycaster.setFromCamera(this.mouse,this.camera);var t=this.raycaster.intersectObjects(this.scene.children,!0);if(t.length>0){var e=t[0],i=e.object,n=e.face;if(!i.isMesh)return;var r=(new(ou().Vec3)).copy(n.normal).scale(-10);this.words.forEach((function(t,e){t.children.forEach((function(t){var e=t.body;t===i&&e.applyLocalImpulse(r,new(ou().Vec3))}))}))}}}},{key:"update",value:function(){var t=this;this.words&&this.words.forEach((function(e,i){for(var n=0;n<e.children.length;n++){var r=e.children[n];r.position.copy(r.body.position),r.quaternion.copy(r.body.quaternion),i===t.words.length-1&&r.body.position.y<=-50&&t.reset(),e.isGroundDisplayed||r.body.position.y+r.initPosition.y<=0&&(t.world.addBody(e.ground),e.isGroundDisplayed=!0)}}))}},{key:"reset",value:function(){this.words.forEach((function(t){t.isGroundDisplayed=!1;for(var e={from:new qn("#7A5099"),to:new qn("#7A5099")},i=0;i<t.children.length;i++){var n=i/(t.children.length-1),r=t.children[i];r.body.sleep();var o=r.initPositionOffset,a=o.x,s=o.y,q=o.z;r.material.color=e.from.clone().lerp(e.to,n),r.material.needsUpdate=!0,r.body.position.set(a-t.len,s,q),r.body.quaternion.set(0,0,0,1),r.body.angularVelocity.setZero(),r.body.torque.setZero(),r.body.force.setZero(),r.body.wakeUp()}}))}},{key:"setConstraints",value:function(){var t=this;this.words.forEach((function(e){for(var i=0;i<e.children.length;i++){var n=e.children[i],r=i+1===e.children.length?null:e.children[i+1];if(r){var o=new(ou().ConeTwistConstraint)(n.body,r.body,{pivotA:new(ou().Vec3)(2*n.size.x,0,0),pivotB:new(ou().Vec3)(0,0,0),axisA:ou().Vec3.UNIT_X,axisB:ou().Vec3.UNIT_X,angle:0,twistAngle:0,maxForce:1e30});o.collideConnected=!0,t.world.addConstraint(o)}}}))}}],i&&lu(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}();function uu(t){return uu="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},uu(t)}function pu(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==uu(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,"string");if("object"!==uu(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===uu(r)?r:String(r)),n)}var r}var du=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.$stage=document.getElementById("stage"),this.setup(),this.bindEvents()}var e,i;return e=t,(i=[{key:"bindEvents",value:function(){var t=this;window.addEventListener("resize",(function(){return t.onResize()}))}},{key:"setup",value:function(){this.world=new(ou().World),this.world.gravity.set(0,-50,0),this.scene=new gi,this.setCamera(),this.setLights(),this.setRender(),this.addObjects()}},{key:"onResize",value:function(){var t=APP.Layout,e=t.W,i=t.H;this.camera.aspect=e/(i-8),this.camera.top=15,this.camera.right=15*this.camera.aspect,this.camera.bottom=-15,this.camera.left=-15*this.camera.aspect,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,i-8)}},{key:"setCamera",value:function(){var t=APP.Layout,e=t.W/(t.H-8);this.camera=new th(-15*e,15*e,15,-15,-10,100),this.camera.position.set(-3,3,8),this.camera.lookAt(new Ne)}},{key:"setLights",value:function(){var t=new nh(13421772);this.scene.add(t);var e=new ih(16777215,.5);e.position.set(5,5,20),this.scene.add(e);var i=new ih(16777215,1);i.position.set(-5,-5,-10),this.scene.add(i)}},{key:"setRender",value:function(){var t=this;this.renderer=new za({antialias:!0,canvas:this.$stage}),this.renderer.setClearColor(16772606),this.renderer.setSize(APP.Layout.W,APP.Layout.H-8),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setAnimationLoop((function(){return t.draw()}))}},{key:"addObjects",value:function(){this.menu=new cu(this.scene,this.world,this.camera)}},{key:"draw",value:function(){this.updatePhysics(),this.renderer.render(this.scene,this.camera)}},{key:"updatePhysics",value:function(){this.dbr&&this.dbr.update(),this.menu.update(),this.world.step(1/60)}}])&&pu(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}();function mu(t){return mu="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},mu(t)}function fu(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==mu(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,"string");if("object"!==mu(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===mu(r)?r:String(r)),n)}var r}var vu=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.setup(),this.onResize(),this.bindEvents()}var e,i;return e=t,(i=[{key:"bindEvents",value:function(){var t=this;window.addEventListener("resize",(function(){return t.onResize()}))}},{key:"setup",value:function(){this.mainScene=new du}},{key:"onResize",value:function(){var t=APP.Layout.isSmallMobile?.5:APP.Layout.isMobile?.7:1;this.mainScene.scene.scale.set(t,t,t)}}])&&fu(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}(),gu=window.APP||{},yu=function(){window.APP=gu,gu.Layout=new n,gu.Stage=new vu};"complete"===document.readyState||"loading"!==document.readyState&&!document.documentElement.doScroll?yu():document.addEventListener("DOMContentLoaded",yu)}()}();