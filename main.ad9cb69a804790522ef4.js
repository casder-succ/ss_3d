/*! For license information please see main.ad9cb69a804790522ef4.js.LICENSE.txt */
!function(){var t={125:function(t){t.exports=function t(e,i,n){function r(a,s){if(!i[a]){if(!e[a]){if(o)return o(a,!0);throw new Error("Cannot find module '"+a+"'")}var l=i[a]={exports:{}};e[a][0].call(l.exports,(function(t){return r(e[a][1][t]||t)}),l,l.exports,t,e,i,n)}return i[a].exports}for(var o=void 0,a=0;a<n.length;a++)r(n[a]);return r}({1:[function(t,e,i){e.exports={name:"cannon",version:"0.6.2",description:"A lightweight 3D physics engine written in JavaScript.",homepage:"https://github.com/schteppe/cannon.js",author:"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",keywords:["cannon.js","cannon","physics","engine","3d"],main:"./build/cannon.js",engines:{node:"*"},repository:{type:"git",url:"https://github.com/schteppe/cannon.js.git"},bugs:{url:"https://github.com/schteppe/cannon.js/issues"},licenses:[{type:"MIT"}],devDependencies:{jshint:"latest","uglify-js":"latest",nodeunit:"^0.9.0",grunt:"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-concat":"~0.1.3","grunt-contrib-uglify":"^0.5.1","grunt-browserify":"^2.1.4","grunt-contrib-yuidoc":"^0.5.2",browserify:"*"},dependencies:{}}},{}],2:[function(t,e,i){e.exports={version:t("../package.json").version,AABB:t("./collision/AABB"),ArrayCollisionMatrix:t("./collision/ArrayCollisionMatrix"),Body:t("./objects/Body"),Box:t("./shapes/Box"),Broadphase:t("./collision/Broadphase"),Constraint:t("./constraints/Constraint"),ContactEquation:t("./equations/ContactEquation"),Narrowphase:t("./world/Narrowphase"),ConeTwistConstraint:t("./constraints/ConeTwistConstraint"),ContactMaterial:t("./material/ContactMaterial"),ConvexPolyhedron:t("./shapes/ConvexPolyhedron"),Cylinder:t("./shapes/Cylinder"),DistanceConstraint:t("./constraints/DistanceConstraint"),Equation:t("./equations/Equation"),EventTarget:t("./utils/EventTarget"),FrictionEquation:t("./equations/FrictionEquation"),GSSolver:t("./solver/GSSolver"),GridBroadphase:t("./collision/GridBroadphase"),Heightfield:t("./shapes/Heightfield"),HingeConstraint:t("./constraints/HingeConstraint"),LockConstraint:t("./constraints/LockConstraint"),Mat3:t("./math/Mat3"),Material:t("./material/Material"),NaiveBroadphase:t("./collision/NaiveBroadphase"),ObjectCollisionMatrix:t("./collision/ObjectCollisionMatrix"),Pool:t("./utils/Pool"),Particle:t("./shapes/Particle"),Plane:t("./shapes/Plane"),PointToPointConstraint:t("./constraints/PointToPointConstraint"),Quaternion:t("./math/Quaternion"),Ray:t("./collision/Ray"),RaycastVehicle:t("./objects/RaycastVehicle"),RaycastResult:t("./collision/RaycastResult"),RigidVehicle:t("./objects/RigidVehicle"),RotationalEquation:t("./equations/RotationalEquation"),RotationalMotorEquation:t("./equations/RotationalMotorEquation"),SAPBroadphase:t("./collision/SAPBroadphase"),SPHSystem:t("./objects/SPHSystem"),Shape:t("./shapes/Shape"),Solver:t("./solver/Solver"),Sphere:t("./shapes/Sphere"),SplitSolver:t("./solver/SplitSolver"),Spring:t("./objects/Spring"),Trimesh:t("./shapes/Trimesh"),Vec3:t("./math/Vec3"),Vec3Pool:t("./utils/Vec3Pool"),World:t("./world/World")}},{"../package.json":1,"./collision/AABB":3,"./collision/ArrayCollisionMatrix":4,"./collision/Broadphase":5,"./collision/GridBroadphase":6,"./collision/NaiveBroadphase":7,"./collision/ObjectCollisionMatrix":8,"./collision/Ray":9,"./collision/RaycastResult":10,"./collision/SAPBroadphase":11,"./constraints/ConeTwistConstraint":12,"./constraints/Constraint":13,"./constraints/DistanceConstraint":14,"./constraints/HingeConstraint":15,"./constraints/LockConstraint":16,"./constraints/PointToPointConstraint":17,"./equations/ContactEquation":19,"./equations/Equation":20,"./equations/FrictionEquation":21,"./equations/RotationalEquation":22,"./equations/RotationalMotorEquation":23,"./material/ContactMaterial":24,"./material/Material":25,"./math/Mat3":27,"./math/Quaternion":28,"./math/Vec3":30,"./objects/Body":31,"./objects/RaycastVehicle":32,"./objects/RigidVehicle":33,"./objects/SPHSystem":34,"./objects/Spring":35,"./shapes/Box":37,"./shapes/ConvexPolyhedron":38,"./shapes/Cylinder":39,"./shapes/Heightfield":40,"./shapes/Particle":41,"./shapes/Plane":42,"./shapes/Shape":43,"./shapes/Sphere":44,"./shapes/Trimesh":45,"./solver/GSSolver":46,"./solver/Solver":47,"./solver/SplitSolver":48,"./utils/EventTarget":49,"./utils/Pool":51,"./utils/Vec3Pool":54,"./world/Narrowphase":55,"./world/World":56}],3:[function(t,e,i){var n=t("../math/Vec3");function r(t){t=t||{},this.lowerBound=new n,t.lowerBound&&this.lowerBound.copy(t.lowerBound),this.upperBound=new n,t.upperBound&&this.upperBound.copy(t.upperBound)}t("../utils/Utils"),e.exports=r;var o=new n;r.prototype.setFromPoints=function(t,e,i,n){var r=this.lowerBound,a=this.upperBound,s=i;r.copy(t[0]),s&&s.vmult(r,r),a.copy(r);for(var l=1;l<t.length;l++){var h=t[l];s&&(s.vmult(h,o),h=o),h.x>a.x&&(a.x=h.x),h.x<r.x&&(r.x=h.x),h.y>a.y&&(a.y=h.y),h.y<r.y&&(r.y=h.y),h.z>a.z&&(a.z=h.z),h.z<r.z&&(r.z=h.z)}return e&&(e.vadd(r,r),e.vadd(a,a)),n&&(r.x-=n,r.y-=n,r.z-=n,a.x+=n,a.y+=n,a.z+=n),this},r.prototype.copy=function(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this},r.prototype.clone=function(){return(new r).copy(this)},r.prototype.extend=function(t){var e=t.lowerBound.x;this.lowerBound.x>e&&(this.lowerBound.x=e);var i=t.upperBound.x;this.upperBound.x<i&&(this.upperBound.x=i),e=t.lowerBound.y,this.lowerBound.y>e&&(this.lowerBound.y=e),i=t.upperBound.y,this.upperBound.y<i&&(this.upperBound.y=i),e=t.lowerBound.z,this.lowerBound.z>e&&(this.lowerBound.z=e),i=t.upperBound.z,this.upperBound.z<i&&(this.upperBound.z=i)},r.prototype.overlaps=function(t){var e=this.lowerBound,i=this.upperBound,n=t.lowerBound,r=t.upperBound;return(n.x<=i.x&&i.x<=r.x||e.x<=r.x&&r.x<=i.x)&&(n.y<=i.y&&i.y<=r.y||e.y<=r.y&&r.y<=i.y)&&(n.z<=i.z&&i.z<=r.z||e.z<=r.z&&r.z<=i.z)},r.prototype.contains=function(t){var e=this.lowerBound,i=this.upperBound,n=t.lowerBound,r=t.upperBound;return e.x<=n.x&&i.x>=r.x&&e.y<=n.y&&i.y>=r.y&&e.z<=n.z&&i.z>=r.z},r.prototype.getCorners=function(t,e,i,n,r,o,a,s){var l=this.lowerBound,h=this.upperBound;t.copy(l),e.set(h.x,l.y,l.z),i.set(h.x,h.y,l.z),n.set(l.x,h.y,h.z),r.set(h.x,l.y,l.z),o.set(l.x,h.y,l.z),a.set(l.x,l.y,h.z),s.copy(h)};var a=[new n,new n,new n,new n,new n,new n,new n,new n];r.prototype.toLocalFrame=function(t,e){var i=a,n=i[0],r=i[1],o=i[2],s=i[3],l=i[4],h=i[5],c=i[6],u=i[7];this.getCorners(n,r,o,s,l,h,c,u);for(var q=0;8!==q;q++){var p=i[q];t.pointToLocal(p,p)}return e.setFromPoints(i)},r.prototype.toWorldFrame=function(t,e){var i=a,n=i[0],r=i[1],o=i[2],s=i[3],l=i[4],h=i[5],c=i[6],u=i[7];this.getCorners(n,r,o,s,l,h,c,u);for(var q=0;8!==q;q++){var p=i[q];t.pointToWorld(p,p)}return e.setFromPoints(i)}},{"../math/Vec3":30,"../utils/Utils":53}],4:[function(t,e,i){function n(){this.matrix=[]}e.exports=n,n.prototype.get=function(t,e){if(t=t.index,(e=e.index)>t){var i=e;e=t,t=i}return this.matrix[(t*(t+1)>>1)+e-1]},n.prototype.set=function(t,e,i){if(t=t.index,(e=e.index)>t){var n=e;e=t,t=n}this.matrix[(t*(t+1)>>1)+e-1]=i?1:0},n.prototype.reset=function(){for(var t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0},n.prototype.setNumObjects=function(t){this.matrix.length=t*(t-1)>>1}},{}],5:[function(t,e,i){var n=t("../objects/Body"),r=t("../math/Vec3"),o=t("../math/Quaternion");function a(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}t("../shapes/Shape"),t("../shapes/Plane"),e.exports=a,a.prototype.collisionPairs=function(t,e,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")};var s=n.STATIC|n.KINEMATIC;a.prototype.needBroadphaseCollision=function(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&s)&&t.sleepState!==n.SLEEPING||0==(e.type&s)&&e.sleepState!==n.SLEEPING)},a.prototype.intersectionTest=function(t,e,i,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,i,n):this.doBoundingSphereBroadphase(t,e,i,n)};var l=new r;new r,new o,new r,a.prototype.doBoundingSphereBroadphase=function(t,e,i,n){var r=l;e.position.vsub(t.position,r);var o=Math.pow(t.boundingRadius+e.boundingRadius,2);r.norm2()<o&&(i.push(t),n.push(e))},a.prototype.doBoundingBoxBroadphase=function(t,e,i,n){t.aabbNeedsUpdate&&t.computeAABB(),e.aabbNeedsUpdate&&e.computeAABB(),t.aabb.overlaps(e.aabb)&&(i.push(t),n.push(e))};var h={keys:[]},c=[],u=[];a.prototype.makePairsUnique=function(t,e){for(var i=h,n=c,r=u,o=t.length,a=0;a!==o;a++)n[a]=t[a],r[a]=e[a];for(t.length=0,e.length=0,a=0;a!==o;a++){var s=n[a].id,l=r[a].id;i[q=s<l?s+","+l:l+","+s]=a,i.keys.push(q)}for(a=0;a!==i.keys.length;a++){var q=i.keys.pop(),p=i[q];t.push(n[p]),e.push(r[p]),delete i[q]}},a.prototype.setWorld=function(t){};var q=new r;a.boundingSphereCheck=function(t,e){var i=q;return t.position.vsub(e.position,i),Math.pow(t.shape.boundingSphereRadius+e.shape.boundingSphereRadius,2)>i.norm2()},a.prototype.aabbQuery=function(t,e,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}},{"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Plane":42,"../shapes/Shape":43}],6:[function(t,e,i){e.exports=a;var n=t("./Broadphase"),r=t("../math/Vec3"),o=t("../shapes/Shape");function a(t,e,i,o,a){n.apply(this),this.nx=i||10,this.ny=o||10,this.nz=a||10,this.aabbMin=t||new r(100,100,100),this.aabbMax=e||new r(-100,-100,-100);var s=this.nx*this.ny*this.nz;if(s<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=s,this.binLengths.length=s;for(var l=0;l<s;l++)this.bins[l]=[],this.binLengths[l]=0}a.prototype=new n,a.prototype.constructor=a;var s=new r;new r,a.prototype.collisionPairs=function(t,e,i){for(var n=t.numObjects(),r=t.bodies,a=this.aabbMax,l=this.aabbMin,h=this.nx,c=this.ny,u=this.nz,q=c*u,p=u,d=1,m=a.x,f=a.y,v=a.z,g=l.x,y=l.y,x=l.z,w=h/(m-g),b=c/(f-y),_=u/(v-x),M=(m-g)/h,S=(f-y)/c,E=(v-x)/u,T=.5*Math.sqrt(M*M+S*S+E*E),A=o.types,L=A.SPHERE,z=A.PLANE,P=(A.BOX,A.COMPOUND,A.CONVEXPOLYHEDRON,this.bins),R=this.binLengths,C=this.bins.length,I=0;I!==C;I++)R[I]=0;var N=Math.ceil;function O(t,e,i,n,r,o,a){var s=(t-g)*w|0,l=(e-y)*b|0,m=(i-x)*_|0,f=N((n-g)*w),v=N((r-y)*b),M=N((o-x)*_);s<0?s=0:s>=h&&(s=h-1),l<0?l=0:l>=c&&(l=c-1),m<0?m=0:m>=u&&(m=u-1),f<0?f=0:f>=h&&(f=h-1),v<0?v=0:v>=c&&(v=c-1),M<0?M=0:M>=u&&(M=u-1),l*=p,m*=d,f*=q,v*=p,M*=d;for(var S=s*=q;S<=f;S+=q)for(var E=l;E<=v;E+=p)for(var T=m;T<=M;T+=d){var A=S+E+T;P[A][R[A]++]=a}}for(l=Math.min,a=Math.max,I=0;I!==n;I++){var B=(it=r[I]).shape;switch(B.type){case L:var D=it.position.x,F=it.position.y,V=it.position.z,U=B.radius;O(D-U,F-U,V-U,D+U,F+U,V+U,it);break;case z:B.worldNormalNeedsUpdate&&B.computeWorldNormal(it.quaternion);var j=B.worldNormal,G=g+.5*M-it.position.x,H=y+.5*S-it.position.y,k=x+.5*E-it.position.z,W=s;W.set(G,H,k);for(var X=0,Y=0;X!==h;X++,Y+=q,W.y=H,W.x+=M)for(var Z=0,J=0;Z!==c;Z++,J+=p,W.z=k,W.y+=S)for(var Q=0,K=0;Q!==u;Q++,K+=d,W.z+=E)if(W.dot(j)<T){var $=Y+J+K;P[$][R[$]++]=it}break;default:it.aabbNeedsUpdate&&it.computeAABB(),O(it.aabb.lowerBound.x,it.aabb.lowerBound.y,it.aabb.lowerBound.z,it.aabb.upperBound.x,it.aabb.upperBound.y,it.aabb.upperBound.z,it)}}for(I=0;I!==C;I++){var tt=R[I];if(tt>1){var et=P[I];for(X=0;X!==tt;X++){var it=et[X];for(Z=0;Z!==X;Z++){var nt=et[Z];this.needBroadphaseCollision(it,nt)&&this.intersectionTest(it,nt,e,i)}}}}this.makePairsUnique(e,i)}},{"../math/Vec3":30,"../shapes/Shape":43,"./Broadphase":5}],7:[function(t,e,i){e.exports=o;var n=t("./Broadphase"),r=t("./AABB");function o(){n.apply(this)}o.prototype=new n,o.prototype.constructor=o,o.prototype.collisionPairs=function(t,e,i){var n,r,o,a,s=t.bodies,l=s.length;for(n=0;n!==l;n++)for(r=0;r!==n;r++)o=s[n],a=s[r],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,i)},new r,o.prototype.aabbQuery=function(t,e,i){i=i||[];for(var n=0;n<t.bodies.length;n++){var r=t.bodies[n];r.aabbNeedsUpdate&&r.computeAABB(),r.aabb.overlaps(e)&&i.push(r)}return i}},{"./AABB":3,"./Broadphase":5}],8:[function(t,e,i){function n(){this.matrix={}}e.exports=n,n.prototype.get=function(t,e){if(t=t.id,(e=e.id)>t){var i=e;e=t,t=i}return t+"-"+e in this.matrix},n.prototype.set=function(t,e,i){if(t=t.id,(e=e.id)>t){var n=e;e=t,t=n}i?this.matrix[t+"-"+e]=!0:delete this.matrix[t+"-"+e]},n.prototype.reset=function(){this.matrix={}},n.prototype.setNumObjects=function(t){}},{}],9:[function(t,e,i){e.exports=h;var n=t("../math/Vec3"),r=t("../math/Quaternion"),o=t("../math/Transform"),a=(t("../shapes/ConvexPolyhedron"),t("../shapes/Box"),t("../collision/RaycastResult")),s=t("../shapes/Shape"),l=t("../collision/AABB");function h(t,e){this.from=t?t.clone():new n,this.to=e?e.clone():new n,this._direction=new n,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=h.ANY,this.result=new a,this.hasHit=!1,this.callback=function(t){}}h.prototype.constructor=h,h.CLOSEST=1,h.ANY=2,h.ALL=4;var c=new l,u=[];h.prototype.intersectWorld=function(t,e){return this.mode=e.mode||h.ANY,this.result=e.result||new a,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(c),u.length=0,t.broadphase.aabbQuery(t,c,u),this.intersectBodies(u),this.hasHit};var q=new n,p=new n;function d(t,e,i,n){n.vsub(e,I),i.vsub(e,q),t.vsub(e,p);var r,o,a=I.dot(I),s=I.dot(q),l=I.dot(p),h=q.dot(q),c=q.dot(p);return(r=h*l-s*c)>=0&&(o=a*c-s*l)>=0&&r+o<a*h-s*s}h.pointInTriangle=d;var m=new n,f=new r;h.prototype.intersectBody=function(t,e){e&&(this.result=e,this._updateDirection());var i=this.checkCollisionResponse;if((!i||t.collisionResponse)&&0!=(this.collisionFilterGroup&t.collisionFilterMask)&&0!=(t.collisionFilterGroup&this.collisionFilterMask))for(var n=m,r=f,o=0,a=t.shapes.length;o<a;o++){var s=t.shapes[o];if((!i||s.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],n),n.vadd(t.position,n),this.intersectShape(s,r,n,t),this.result._shouldStop))break}},h.prototype.intersectBodies=function(t,e){e&&(this.result=e,this._updateDirection());for(var i=0,n=t.length;!this.result._shouldStop&&i<n;i++)this.intersectBody(t[i])},h.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},h.prototype.intersectShape=function(t,e,i,n){if(!(function(t,e,i){i.vsub(t,I);var n=I.dot(e);return e.mult(n,N),N.vadd(t,N),i.distanceTo(N)}(this.from,this._direction,i)>t.boundingSphereRadius)){var r=this[t.type];r&&r.call(this,t,e,i,n)}},new n,new n;var v=new n,g=new n,y=new n,x=new n;new n,new a,h.prototype.intersectBox=function(t,e,i,n){return this.intersectConvex(t.convexPolyhedronRepresentation,e,i,n)},h.prototype[s.types.BOX]=h.prototype.intersectBox,h.prototype.intersectPlane=function(t,e,i,r){var o=this.from,a=this.to,s=this._direction,l=new n(0,0,1);e.vmult(l,l);var h=new n;o.vsub(i,h);var c=h.dot(l);if(a.vsub(i,h),!(c*h.dot(l)>0||o.distanceTo(a)<c)){var u=l.dot(s);if(!(Math.abs(u)<this.precision)){var q=new n,p=new n,d=new n;o.vsub(i,q);var m=-l.dot(q)/u;s.scale(m,p),o.vadd(p,d),this.reportIntersection(l,d,t,r,-1)}}},h.prototype[s.types.PLANE]=h.prototype.intersectPlane,h.prototype.getAABB=function(t){var e=this.to,i=this.from;t.lowerBound.x=Math.min(e.x,i.x),t.lowerBound.y=Math.min(e.y,i.y),t.lowerBound.z=Math.min(e.z,i.z),t.upperBound.x=Math.max(e.x,i.x),t.upperBound.y=Math.max(e.y,i.y),t.upperBound.z=Math.max(e.z,i.z)};var w={faceList:[0]};h.prototype.intersectHeightfield=function(t,e,i,r){t.data,t.elementSize;var a=new n,s=new h(this.from,this.to);o.pointToLocalFrame(i,e,s.from,s.from),o.pointToLocalFrame(i,e,s.to,s.to);var l=[],c=null,u=null,q=null,p=null,d=t.getIndexOfPosition(s.from.x,s.from.y,l,!1);if(d&&(c=l[0],u=l[1],q=l[0],p=l[1]),(d=t.getIndexOfPosition(s.to.x,s.to.y,l,!1))&&((null===c||l[0]<c)&&(c=l[0]),(null===q||l[0]>q)&&(q=l[0]),(null===u||l[1]<u)&&(u=l[1]),(null===p||l[1]>p)&&(p=l[1])),null!==c){var m=[];t.getRectMinMax(c,u,q,p,m);for(var f=c;f<=q;f++)for(var v=u;v<=p;v++){if(this.result._shouldStop)return;if(t.getConvexTrianglePillar(f,v,!1),o.pointToWorldFrame(i,e,t.pillarOffset,a),this.intersectConvex(t.pillarConvex,e,a,r,w),this.result._shouldStop)return;t.getConvexTrianglePillar(f,v,!0),o.pointToWorldFrame(i,e,t.pillarOffset,a),this.intersectConvex(t.pillarConvex,e,a,r,w)}}},h.prototype[s.types.HEIGHTFIELD]=h.prototype.intersectHeightfield;var b=new n,_=new n;h.prototype.intersectSphere=function(t,e,i,n){var r=this.from,o=this.to,a=t.radius,s=Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)+Math.pow(o.z-r.z,2),l=2*((o.x-r.x)*(r.x-i.x)+(o.y-r.y)*(r.y-i.y)+(o.z-r.z)*(r.z-i.z)),h=Math.pow(r.x-i.x,2)+Math.pow(r.y-i.y,2)+Math.pow(r.z-i.z,2)-Math.pow(a,2),c=Math.pow(l,2)-4*s*h,u=b,q=_;if(!(c<0))if(0===c)r.lerp(o,c,u),u.vsub(i,q),q.normalize(),this.reportIntersection(q,u,t,n,-1);else{var p=(-l-Math.sqrt(c))/(2*s),d=(-l+Math.sqrt(c))/(2*s);if(p>=0&&p<=1&&(r.lerp(o,p,u),u.vsub(i,q),q.normalize(),this.reportIntersection(q,u,t,n,-1)),this.result._shouldStop)return;d>=0&&d<=1&&(r.lerp(o,d,u),u.vsub(i,q),q.normalize(),this.reportIntersection(q,u,t,n,-1))}},h.prototype[s.types.SPHERE]=h.prototype.intersectSphere;var M=new n,S=(new n,new n,new n);h.prototype.intersectConvex=function(t,e,i,n,r){for(var o=M,a=S,s=r&&r.faceList||null,l=t.faces,h=t.vertices,c=t.faceNormals,u=this._direction,q=this.from,p=this.to,m=q.distanceTo(p),f=s?s.length:l.length,w=this.result,b=0;!w._shouldStop&&b<f;b++){var _=s?s[b]:b,E=l[_],T=c[_],A=e,L=i;a.copy(h[E[0]]),A.vmult(a,a),a.vadd(L,a),a.vsub(q,a),A.vmult(T,o);var z=u.dot(o);if(!(Math.abs(z)<this.precision)){var P=o.dot(a)/z;if(!(P<0)){u.mult(P,v),v.vadd(q,v),g.copy(h[E[0]]),A.vmult(g,g),L.vadd(g,g);for(var R=1;!w._shouldStop&&R<E.length-1;R++){y.copy(h[E[R]]),x.copy(h[E[R+1]]),A.vmult(y,y),A.vmult(x,x),L.vadd(y,y),L.vadd(x,x);var C=v.distanceTo(q);!d(v,g,y,x)&&!d(v,y,g,x)||C>m||this.reportIntersection(o,v,t,n,_)}}}}},h.prototype[s.types.CONVEXPOLYHEDRON]=h.prototype.intersectConvex;var E=new n,T=new n,A=new n,L=new n,z=new n,P=new n,R=(new l,[]),C=new o;h.prototype.intersectTrimesh=function(t,e,i,n,r){var a=E,s=R,l=C,h=S,c=T,u=A,q=L,p=P,m=z,f=(r&&r.faceList,t.indices),w=(t.vertices,t.faceNormals,this.from),b=this.to,_=this._direction;l.position.copy(i),l.quaternion.copy(e),o.vectorToLocalFrame(i,e,_,c),o.pointToLocalFrame(i,e,w,u),o.pointToLocalFrame(i,e,b,q);var M=u.distanceSquared(q);t.tree.rayQuery(this,l,s);for(var I=0,N=s.length;!this.result._shouldStop&&I!==N;I++){var O=s[I];t.getNormal(O,a),t.getVertex(f[3*O],g),g.vsub(u,h);var B=c.dot(a),D=a.dot(h)/B;if(!(D<0)){c.scale(D,v),v.vadd(u,v),t.getVertex(f[3*O+1],y),t.getVertex(f[3*O+2],x);var F=v.distanceSquared(u);!d(v,y,g,x)&&!d(v,g,y,x)||F>M||(o.vectorToWorldFrame(e,a,m),o.pointToWorldFrame(i,e,v,p),this.reportIntersection(m,p,t,n,O))}}s.length=0},h.prototype[s.types.TRIMESH]=h.prototype.intersectTrimesh,h.prototype.reportIntersection=function(t,e,i,n,r){var o=this.from,a=this.to,s=o.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this._direction)>0))switch(l.hitFaceIndex=void 0!==r?r:-1,this.mode){case h.ALL:this.hasHit=!0,l.set(o,a,t,e,i,n,s),l.hasHit=!0,this.callback(l);break;case h.CLOSEST:(s<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,a,t,e,i,n,s));break;case h.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,a,t,e,i,n,s),l._shouldStop=!0}};var I=new n,N=new n},{"../collision/AABB":3,"../collision/RaycastResult":10,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../shapes/Box":37,"../shapes/ConvexPolyhedron":38,"../shapes/Shape":43}],10:[function(t,e,i){var n=t("../math/Vec3");function r(){this.rayFromWorld=new n,this.rayToWorld=new n,this.hitNormalWorld=new n,this.hitPointWorld=new n,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}e.exports=r,r.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},r.prototype.abort=function(){this._shouldStop=!0},r.prototype.set=function(t,e,i,n,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(n),this.shape=r,this.body=o,this.distance=a}},{"../math/Vec3":30}],11:[function(t,e,i){t("../shapes/Shape");var n=t("../collision/Broadphase");function r(t){n.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var e=this.axisList;this._addBodyHandler=function(t){e.push(t.body)},this._removeBodyHandler=function(t){var i=e.indexOf(t.body);-1!==i&&e.splice(i,1)},t&&this.setWorld(t)}e.exports=r,r.prototype=new n,r.prototype.setWorld=function(t){this.axisList.length=0;for(var e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0},r.insertionSortX=function(t){for(var e=1,i=t.length;e<i;e++){for(var n=t[e],r=e-1;r>=0&&!(t[r].aabb.lowerBound.x<=n.aabb.lowerBound.x);r--)t[r+1]=t[r];t[r+1]=n}return t},r.insertionSortY=function(t){for(var e=1,i=t.length;e<i;e++){for(var n=t[e],r=e-1;r>=0&&!(t[r].aabb.lowerBound.y<=n.aabb.lowerBound.y);r--)t[r+1]=t[r];t[r+1]=n}return t},r.insertionSortZ=function(t){for(var e=1,i=t.length;e<i;e++){for(var n=t[e],r=e-1;r>=0&&!(t[r].aabb.lowerBound.z<=n.aabb.lowerBound.z);r--)t[r+1]=t[r];t[r+1]=n}return t},r.prototype.collisionPairs=function(t,e,i){var n,o,a=this.axisList,s=a.length,l=this.axisIndex;for(this.dirty&&(this.sortList(),this.dirty=!1),n=0;n!==s;n++){var h=a[n];for(o=n+1;o<s;o++){var c=a[o];if(this.needBroadphaseCollision(h,c)){if(!r.checkBounds(h,c,l))break;this.intersectionTest(h,c,e,i)}}}},r.prototype.sortList=function(){for(var t=this.axisList,e=this.axisIndex,i=t.length,n=0;n!==i;n++){var o=t[n];o.aabbNeedsUpdate&&o.computeAABB()}0===e?r.insertionSortX(t):1===e?r.insertionSortY(t):2===e&&r.insertionSortZ(t)},r.checkBounds=function(t,e,i){var n,r;0===i?(n=t.position.x,r=e.position.x):1===i?(n=t.position.y,r=e.position.y):2===i&&(n=t.position.z,r=e.position.z);var o=t.boundingRadius;return r-e.boundingRadius<n+o},r.prototype.autoDetectAxis=function(){for(var t=0,e=0,i=0,n=0,r=0,o=0,a=this.axisList,s=a.length,l=1/s,h=0;h!==s;h++){var c=a[h],u=c.position.x;t+=u,e+=u*u;var q=c.position.y;i+=q,n+=q*q;var p=c.position.z;r+=p,o+=p*p}var d=e-t*t*l,m=n-i*i*l,f=o-r*r*l;this.axisIndex=d>m?d>f?0:2:m>f?1:2},r.prototype.aabbQuery=function(t,e,i){i=i||[],this.dirty&&(this.sortList(),this.dirty=!1);var n=this.axisIndex,r="x";1===n&&(r="y"),2===n&&(r="z");for(var o=this.axisList,a=(e.lowerBound[r],e.upperBound[r],0);a<o.length;a++){var s=o[a];s.aabbNeedsUpdate&&s.computeAABB(),s.aabb.overlaps(e)&&i.push(s)}return i}},{"../collision/Broadphase":5,"../shapes/Shape":43}],12:[function(t,e,i){e.exports=s,t("./Constraint");var n=t("./PointToPointConstraint"),r=t("../equations/ConeEquation"),o=t("../equations/RotationalEquation"),a=(t("../equations/ContactEquation"),t("../math/Vec3"));function s(t,e,i){var s=void 0!==(i=i||{}).maxForce?i.maxForce:1e6,l=i.pivotA?i.pivotA.clone():new a,h=i.pivotB?i.pivotB.clone():new a;this.axisA=i.axisA?i.axisA.clone():new a,this.axisB=i.axisB?i.axisB.clone():new a,n.call(this,t,l,e,h,s),this.collideConnected=!!i.collideConnected,this.angle=void 0!==i.angle?i.angle:0;var c=this.coneEquation=new r(t,e,i),u=this.twistEquation=new o(t,e,i);this.twistAngle=void 0!==i.twistAngle?i.twistAngle:0,c.maxForce=0,c.minForce=-s,u.maxForce=0,u.minForce=-s,this.equations.push(c,u)}s.prototype=new n,s.constructor=s,new a,new a,s.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.coneEquation,r=this.twistEquation;n.prototype.update.call(this),t.vectorToWorldFrame(this.axisA,i.axisA),e.vectorToWorldFrame(this.axisB,i.axisB),this.axisA.tangents(r.axisA,r.axisA),t.vectorToWorldFrame(r.axisA,r.axisA),this.axisB.tangents(r.axisB,r.axisB),e.vectorToWorldFrame(r.axisB,r.axisB),i.angle=this.angle,r.maxAngle=this.twistAngle}},{"../equations/ConeEquation":18,"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],13:[function(t,e,i){e.exports=r;var n=t("../utils/Utils");function r(t,e,i){i=n.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=r.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}r.prototype.update=function(){throw new Error("method update() not implmemented in this Constraint subclass!")},r.prototype.enable=function(){for(var t=this.equations,e=0;e<t.length;e++)t[e].enabled=!0},r.prototype.disable=function(){for(var t=this.equations,e=0;e<t.length;e++)t[e].enabled=!1},r.idCounter=0},{"../utils/Utils":53}],14:[function(t,e,i){e.exports=o;var n=t("./Constraint"),r=t("../equations/ContactEquation");function o(t,e,i,o){n.call(this,t,e),void 0===i&&(i=t.position.distanceTo(e.position)),void 0===o&&(o=1e6),this.distance=i;var a=this.distanceEquation=new r(t,e);this.equations.push(a),a.minForce=-o,a.maxForce=o}o.prototype=new n,o.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.distanceEquation,n=.5*this.distance,r=i.ni;e.position.vsub(t.position,r),r.normalize(),r.mult(n,i.ri),r.mult(-n,i.rj)}},{"../equations/ContactEquation":19,"./Constraint":13}],15:[function(t,e,i){e.exports=s,t("./Constraint");var n=t("./PointToPointConstraint"),r=t("../equations/RotationalEquation"),o=t("../equations/RotationalMotorEquation"),a=(t("../equations/ContactEquation"),t("../math/Vec3"));function s(t,e,i){var s=void 0!==(i=i||{}).maxForce?i.maxForce:1e6,l=i.pivotA?i.pivotA.clone():new a,h=i.pivotB?i.pivotB.clone():new a;n.call(this,t,l,e,h,s),(this.axisA=i.axisA?i.axisA.clone():new a(1,0,0)).normalize(),(this.axisB=i.axisB?i.axisB.clone():new a(1,0,0)).normalize();var c=this.rotationalEquation1=new r(t,e,i),u=this.rotationalEquation2=new r(t,e,i),q=this.motorEquation=new o(t,e,s);q.enabled=!1,this.equations.push(c,u,q)}s.prototype=new n,s.constructor=s,s.prototype.enableMotor=function(){this.motorEquation.enabled=!0},s.prototype.disableMotor=function(){this.motorEquation.enabled=!1},s.prototype.setMotorSpeed=function(t){this.motorEquation.targetVelocity=t},s.prototype.setMotorMaxForce=function(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t};var l=new a,h=new a;s.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.motorEquation,r=this.rotationalEquation1,o=this.rotationalEquation2,a=l,s=h,c=this.axisA,u=this.axisB;n.prototype.update.call(this),t.quaternion.vmult(c,a),e.quaternion.vmult(u,s),a.tangents(r.axisA,o.axisA),r.axisB.copy(s),o.axisB.copy(s),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,i.axisA),e.quaternion.vmult(this.axisB,i.axisB))}},{"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../equations/RotationalMotorEquation":23,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],16:[function(t,e,i){e.exports=a,t("./Constraint");var n=t("./PointToPointConstraint"),r=t("../equations/RotationalEquation"),o=(t("../equations/RotationalMotorEquation"),t("../equations/ContactEquation"),t("../math/Vec3"));function a(t,e,i){var a=void 0!==(i=i||{}).maxForce?i.maxForce:1e6,s=new o,l=new o,h=new o;t.position.vadd(e.position,h),h.scale(.5,h),e.pointToLocalFrame(h,l),t.pointToLocalFrame(h,s),n.call(this,t,s,e,l,a);var c=this.rotationalEquation1=new r(t,e,i),u=this.rotationalEquation2=new r(t,e,i),q=this.rotationalEquation3=new r(t,e,i);this.equations.push(c,u,q)}a.prototype=new n,a.constructor=a,new o,new o,a.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=(this.motorEquation,this.rotationalEquation1),r=this.rotationalEquation2,a=this.rotationalEquation3;n.prototype.update.call(this),t.vectorToWorldFrame(o.UNIT_X,i.axisA),e.vectorToWorldFrame(o.UNIT_Y,i.axisB),t.vectorToWorldFrame(o.UNIT_Y,r.axisA),e.vectorToWorldFrame(o.UNIT_Z,r.axisB),t.vectorToWorldFrame(o.UNIT_Z,a.axisA),e.vectorToWorldFrame(o.UNIT_X,a.axisB)}},{"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../equations/RotationalMotorEquation":23,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],17:[function(t,e,i){e.exports=a;var n=t("./Constraint"),r=t("../equations/ContactEquation"),o=t("../math/Vec3");function a(t,e,i,a,s){n.call(this,t,i),s=void 0!==s?s:1e6,this.pivotA=e?e.clone():new o,this.pivotB=a?a.clone():new o;var l=this.equationX=new r(t,i),h=this.equationY=new r(t,i),c=this.equationZ=new r(t,i);this.equations.push(l,h,c),l.minForce=h.minForce=c.minForce=-s,l.maxForce=h.maxForce=c.maxForce=s,l.ni.set(1,0,0),h.ni.set(0,1,0),c.ni.set(0,0,1)}a.prototype=new n,a.prototype.update=function(){var t=this.bodyA,e=this.bodyB,i=this.equationX,n=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,i.ri),e.quaternion.vmult(this.pivotB,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),r.ri.copy(i.ri),r.rj.copy(i.rj)}},{"../equations/ContactEquation":19,"../math/Vec3":30,"./Constraint":13}],18:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=(t("../math/Mat3"),t("./Equation"));function o(t,e,i){var o=void 0!==(i=i||{}).maxForce?i.maxForce:1e6;r.call(this,t,e,-o,o),this.axisA=i.axisA?i.axisA.clone():new n(1,0,0),this.axisB=i.axisB?i.axisB.clone():new n(0,1,0),this.angle=void 0!==i.angle?i.angle:0}o.prototype=new r,o.prototype.constructor=o;var a=new n,s=new n;o.prototype.computeB=function(t){var e=this.a,i=this.b,n=this.axisA,r=this.axisB,o=a,l=s,h=this.jacobianElementA,c=this.jacobianElementB;return n.cross(r,o),r.cross(n,l),h.rotational.copy(l),c.rotational.copy(o),-(Math.cos(this.angle)-n.dot(r))*e-this.computeGW()*i-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],19:[function(t,e,i){e.exports=o;var n=t("./Equation"),r=t("../math/Vec3");function o(t,e,i){i=void 0!==i?i:1e6,n.call(this,t,e,0,i),this.restitution=0,this.ri=new r,this.rj=new r,this.ni=new r}t("../math/Mat3"),o.prototype=new n,o.prototype.constructor=o;var a=new r,s=new r,l=new r;o.prototype.computeB=function(t){var e=this.a,i=this.b,n=this.bi,r=this.bj,o=this.ri,h=this.rj,c=a,u=s,q=n.velocity,p=n.angularVelocity,d=(n.force,n.torque,r.velocity),m=r.angularVelocity,f=(r.force,r.torque,l),v=this.jacobianElementA,g=this.jacobianElementB,y=this.ni;o.cross(y,c),h.cross(y,u),y.negate(v.spatial),c.negate(v.rotational),g.spatial.copy(y),g.rotational.copy(u),f.copy(r.position),f.vadd(h,f),f.vsub(n.position,f),f.vsub(o,f);var x=y.dot(f),w=this.restitution+1;return-x*e-(w*d.dot(y)-w*q.dot(y)+m.dot(u)-p.dot(c))*i-t*this.computeGiMf()};var h=new r,c=new r,u=new r,q=new r,p=new r;o.prototype.getImpactVelocityAlongNormal=function(){var t=h,e=c,i=u,n=q,r=p;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(i,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,r),this.ni.dot(r)}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],20:[function(t,e,i){e.exports=o;var n=t("../math/JacobianElement"),r=t("../math/Vec3");function o(t,e,i,r){this.id=o.id++,this.minForce=void 0===i?-1e6:i,this.maxForce=void 0===r?1e6:r,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new n,this.jacobianElementB=new n,this.enabled=!0,this.setSpookParams(1e7,4,1/60)}o.prototype.constructor=o,o.id=0,o.prototype.setSpookParams=function(t,e,i){var n=e,r=t,o=i;this.a=4/(o*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(o*o*r*(1+4*n))},o.prototype.computeB=function(t,e,i){var n=this.computeGW();return-this.computeGq()*t-n*e-this.computeGiMf()*i},o.prototype.computeGq=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.position,o=n.position;return t.spatial.dot(r)+e.spatial.dot(o)};var a=new r;o.prototype.computeGW=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.velocity,o=n.velocity,s=i.angularVelocity||a,l=n.angularVelocity||a;return t.multiplyVectors(r,s)+e.multiplyVectors(o,l)},o.prototype.computeGWlambda=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.vlambda,o=n.vlambda,s=i.wlambda||a,l=n.wlambda||a;return t.multiplyVectors(r,s)+e.multiplyVectors(o,l)};var s=new r,l=new r,h=new r,c=new r;o.prototype.computeGiMf=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.force,o=i.torque,a=n.force,u=n.torque,q=i.invMassSolve,p=n.invMassSolve;return i.invInertiaWorldSolve?i.invInertiaWorldSolve.vmult(o,h):h.set(0,0,0),n.invInertiaWorldSolve?n.invInertiaWorldSolve.vmult(u,c):c.set(0,0,0),r.mult(q,s),a.mult(p,l),t.multiplyVectors(s,h)+e.multiplyVectors(l,c)};var u=new r;o.prototype.computeGiMGt=function(){var t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,n=this.bj,r=i.invMassSolve,o=n.invMassSolve,a=i.invInertiaWorldSolve,s=n.invInertiaWorldSolve,l=r+o;return a&&(a.vmult(t.rotational,u),l+=u.dot(t.rotational)),s&&(s.vmult(e.rotational,u),l+=u.dot(e.rotational)),l};var q=new r;new r,new r,new r,new r,new r,o.prototype.addToWlambda=function(t){var e=this.jacobianElementA,i=this.jacobianElementB,n=this.bi,r=this.bj,o=q;e.spatial.mult(n.invMassSolve*t,o),n.vlambda.vadd(o,n.vlambda),i.spatial.mult(r.invMassSolve*t,o),r.vlambda.vadd(o,r.vlambda),n.invInertiaWorldSolve&&(n.invInertiaWorldSolve.vmult(e.rotational,o),o.mult(t,o),n.wlambda.vadd(o,n.wlambda)),r.invInertiaWorldSolve&&(r.invInertiaWorldSolve.vmult(i.rotational,o),o.mult(t,o),r.wlambda.vadd(o,r.wlambda))},o.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{"../math/JacobianElement":26,"../math/Vec3":30}],21:[function(t,e,i){e.exports=o;var n=t("./Equation"),r=t("../math/Vec3");function o(t,e,i){n.call(this,t,e,-i,i),this.ri=new r,this.rj=new r,this.t=new r}t("../math/Mat3"),o.prototype=new n,o.prototype.constructor=o;var a=new r,s=new r;o.prototype.computeB=function(t){this.a;var e=this.b,i=(this.bi,this.bj,this.ri),n=this.rj,r=a,o=s,l=this.t;i.cross(l,r),n.cross(l,o);var h=this.jacobianElementA,c=this.jacobianElementB;return l.negate(h.spatial),r.negate(h.rotational),c.spatial.copy(l),c.rotational.copy(o),-this.computeGW()*e-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],22:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=(t("../math/Mat3"),t("./Equation"));function o(t,e,i){var o=void 0!==(i=i||{}).maxForce?i.maxForce:1e6;r.call(this,t,e,-o,o),this.axisA=i.axisA?i.axisA.clone():new n(1,0,0),this.axisB=i.axisB?i.axisB.clone():new n(0,1,0),this.maxAngle=Math.PI/2}o.prototype=new r,o.prototype.constructor=o;var a=new n,s=new n;o.prototype.computeB=function(t){var e=this.a,i=this.b,n=this.axisA,r=this.axisB,o=a,l=s,h=this.jacobianElementA,c=this.jacobianElementB;return n.cross(r,o),r.cross(n,l),h.rotational.copy(l),c.rotational.copy(o),-(Math.cos(this.maxAngle)-n.dot(r))*e-this.computeGW()*i-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],23:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=(t("../math/Mat3"),t("./Equation"));function o(t,e,i){i=void 0!==i?i:1e6,r.call(this,t,e,-i,i),this.axisA=new n,this.axisB=new n,this.targetVelocity=0}o.prototype=new r,o.prototype.constructor=o,o.prototype.computeB=function(t){this.a;var e=this.b,i=(this.bi,this.bj,this.axisA),n=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;return r.rotational.copy(i),n.negate(o.rotational),-(this.computeGW()-this.targetVelocity)*e-t*this.computeGiMf()}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],24:[function(t,e,i){var n=t("../utils/Utils");function r(t,e,i){i=n.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=r.idCounter++,this.materials=[t,e],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}e.exports=r,r.idCounter=0},{"../utils/Utils":53}],25:[function(t,e,i){function n(t){var e="";"string"==typeof(t=t||{})?(e=t,t={}):"object"==typeof t&&(e=""),this.name=e,this.id=n.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}e.exports=n,n.idCounter=0},{}],26:[function(t,e,i){e.exports=r;var n=t("./Vec3");function r(){this.spatial=new n,this.rotational=new n}r.prototype.multiplyElement=function(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)},r.prototype.multiplyVectors=function(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}},{"./Vec3":30}],27:[function(t,e,i){e.exports=r;var n=t("./Vec3");function r(t){this.elements=t||[0,0,0,0,0,0,0,0,0]}r.prototype.identity=function(){var t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1},r.prototype.setZero=function(){var t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0},r.prototype.setTrace=function(t){var e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z},r.prototype.getTrace=function(t){t=t||new n;var e=this.elements;t.x=e[0],t.y=e[4],t.z=e[8]},r.prototype.vmult=function(t,e){e=e||new n;var i=this.elements,r=t.x,o=t.y,a=t.z;return e.x=i[0]*r+i[1]*o+i[2]*a,e.y=i[3]*r+i[4]*o+i[5]*a,e.z=i[6]*r+i[7]*o+i[8]*a,e},r.prototype.smult=function(t){for(var e=0;e<this.elements.length;e++)this.elements[e]*=t},r.prototype.mmult=function(t,e){for(var i=e||new r,n=0;n<3;n++)for(var o=0;o<3;o++){for(var a=0,s=0;s<3;s++)a+=t.elements[n+3*s]*this.elements[s+3*o];i.elements[n+3*o]=a}return i},r.prototype.scale=function(t,e){e=e||new r;for(var i=this.elements,n=e.elements,o=0;3!==o;o++)n[3*o+0]=t.x*i[3*o+0],n[3*o+1]=t.y*i[3*o+1],n[3*o+2]=t.z*i[3*o+2];return e},r.prototype.solve=function(t,e){e=e||new n;for(var i,r=[],o=0;o<12;o++)r.push(0);for(o=0;o<3;o++)for(i=0;i<3;i++)r[o+4*i]=this.elements[o+3*i];r[3]=t.x,r[7]=t.y,r[11]=t.z;var a,s,l=3,h=l;do{if(0===r[(o=h-l)+4*o])for(i=o+1;i<h;i++)if(0!==r[o+4*i]){a=4;do{r[(s=4-a)+4*o]+=r[s+4*i]}while(--a);break}if(0!==r[o+4*o])for(i=o+1;i<h;i++){var c=r[o+4*i]/r[o+4*o];a=4;do{r[(s=4-a)+4*i]=s<=o?0:r[s+4*i]-r[s+4*o]*c}while(--a)}}while(--l);if(e.z=r[11]/r[10],e.y=(r[7]-r[6]*e.z)/r[5],e.x=(r[3]-r[2]*e.z-r[1]*e.y)/r[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw"Could not solve equation! Got x=["+e.toString()+"], b=["+t.toString()+"], A=["+this.toString()+"]";return e},r.prototype.e=function(t,e,i){if(void 0===i)return this.elements[e+3*t];this.elements[e+3*t]=i},r.prototype.copy=function(t){for(var e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this},r.prototype.toString=function(){for(var t="",e=0;e<9;e++)t+=this.elements[e]+",";return t},r.prototype.reverse=function(t){t=t||new r;for(var e,i=[],n=0;n<18;n++)i.push(0);for(n=0;n<3;n++)for(e=0;e<3;e++)i[n+6*e]=this.elements[n+3*e];i[3]=1,i[9]=0,i[15]=0,i[4]=0,i[10]=1,i[16]=0,i[5]=0,i[11]=0,i[17]=1;var o,a,s=3,l=s;do{if(0===i[(n=l-s)+6*n])for(e=n+1;e<l;e++)if(0!==i[n+6*e]){o=6;do{i[(a=6-o)+6*n]+=i[a+6*e]}while(--o);break}if(0!==i[n+6*n])for(e=n+1;e<l;e++){var h=i[n+6*e]/i[n+6*n];o=6;do{i[(a=6-o)+6*e]=a<=n?0:i[a+6*e]-i[a+6*n]*h}while(--o)}}while(--s);n=2;do{e=n-1;do{h=i[n+6*e]/i[n+6*n],o=6;do{i[(a=6-o)+6*e]=i[a+6*e]-i[a+6*n]*h}while(--o)}while(e--)}while(--n);n=2;do{h=1/i[n+6*n],o=6;do{i[(a=6-o)+6*n]=i[a+6*n]*h}while(--o)}while(n--);n=2;do{e=2;do{if(a=i[3+e+6*n],isNaN(a)||a===1/0)throw"Could not reverse! A=["+this.toString()+"]";t.e(n,e,a)}while(e--)}while(n--);return t},r.prototype.setRotationFromQuaternion=function(t){var e=t.x,i=t.y,n=t.z,r=t.w,o=e+e,a=i+i,s=n+n,l=e*o,h=e*a,c=e*s,u=i*a,q=i*s,p=n*s,d=r*o,m=r*a,f=r*s,v=this.elements;return v[0]=1-(u+p),v[1]=h-f,v[2]=c+m,v[3]=h+f,v[4]=1-(l+p),v[5]=q-d,v[6]=c-m,v[7]=q+d,v[8]=1-(l+u),this},r.prototype.transpose=function(t){for(var e=(t=t||new r).elements,i=this.elements,n=0;3!==n;n++)for(var o=0;3!==o;o++)e[3*n+o]=i[3*o+n];return t}},{"./Vec3":30}],28:[function(t,e,i){e.exports=r;var n=t("./Vec3");function r(t,e,i,n){this.x=void 0!==t?t:0,this.y=void 0!==e?e:0,this.z=void 0!==i?i:0,this.w=void 0!==n?n:1}r.prototype.set=function(t,e,i,n){this.x=t,this.y=e,this.z=i,this.w=n},r.prototype.toString=function(){return this.x+","+this.y+","+this.z+","+this.w},r.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},r.prototype.setFromAxisAngle=function(t,e){var i=Math.sin(.5*e);this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e)},r.prototype.toAxisAngle=function(t){t=t||new n,this.normalize();var e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]};var o=new n,a=new n;r.prototype.setFromVectors=function(t,e){if(t.isAntiparallelTo(e)){var i=o,n=a;t.tangents(i,n),this.setFromAxisAngle(i,Math.PI)}else{var r=t.cross(e);this.x=r.x,this.y=r.y,this.z=r.z,this.w=Math.sqrt(Math.pow(t.norm(),2)*Math.pow(e.norm(),2))+t.dot(e),this.normalize()}};var s=new n,l=new n,h=new n;r.prototype.mult=function(t,e){e=e||new r;var i=this.w,n=s,o=l,a=h;return n.set(this.x,this.y,this.z),o.set(t.x,t.y,t.z),e.w=i*t.w-n.dot(o),n.cross(o,a),e.x=i*o.x+t.w*n.x+a.x,e.y=i*o.y+t.w*n.y+a.y,e.z=i*o.z+t.w*n.z+a.z,e},r.prototype.inverse=function(t){var e=this.x,i=this.y,n=this.z,o=this.w;t=t||new r,this.conjugate(t);var a=1/(e*e+i*i+n*n+o*o);return t.x*=a,t.y*=a,t.z*=a,t.w*=a,t},r.prototype.conjugate=function(t){return(t=t||new r).x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t},r.prototype.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t)},r.prototype.normalizeFast=function(){var t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t)},r.prototype.vmult=function(t,e){e=e||new n;var i=t.x,r=t.y,o=t.z,a=this.x,s=this.y,l=this.z,h=this.w,c=h*i+s*o-l*r,u=h*r+l*i-a*o,q=h*o+a*r-s*i,p=-a*i-s*r-l*o;return e.x=c*h+p*-a+u*-l-q*-s,e.y=u*h+p*-s+q*-a-c*-l,e.z=q*h+p*-l+c*-s-u*-a,e},r.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},r.prototype.toEuler=function(t,e){var i,n,r;e=e||"YZX";var o=this.x,a=this.y,s=this.z,l=this.w;if("YZX"!==e)throw new Error("Euler order "+e+" not supported yet.");var h=o*a+s*l;if(h>.499&&(i=2*Math.atan2(o,l),n=Math.PI/2,r=0),h<-.499&&(i=-2*Math.atan2(o,l),n=-Math.PI/2,r=0),isNaN(i)){var c=o*o,u=a*a,q=s*s;i=Math.atan2(2*a*l-2*o*s,1-2*u-2*q),n=Math.asin(2*h),r=Math.atan2(2*o*l-2*a*s,1-2*c-2*q)}t.y=i,t.z=n,t.x=r},r.prototype.setFromEuler=function(t,e,i,n){n=n||"XYZ";var r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(i/2),s=Math.sin(t/2),l=Math.sin(e/2),h=Math.sin(i/2);return"XYZ"===n?(this.x=s*o*a+r*l*h,this.y=r*l*a-s*o*h,this.z=r*o*h+s*l*a,this.w=r*o*a-s*l*h):"YXZ"===n?(this.x=s*o*a+r*l*h,this.y=r*l*a-s*o*h,this.z=r*o*h-s*l*a,this.w=r*o*a+s*l*h):"ZXY"===n?(this.x=s*o*a-r*l*h,this.y=r*l*a+s*o*h,this.z=r*o*h+s*l*a,this.w=r*o*a-s*l*h):"ZYX"===n?(this.x=s*o*a-r*l*h,this.y=r*l*a+s*o*h,this.z=r*o*h-s*l*a,this.w=r*o*a+s*l*h):"YZX"===n?(this.x=s*o*a+r*l*h,this.y=r*l*a+s*o*h,this.z=r*o*h-s*l*a,this.w=r*o*a-s*l*h):"XZY"===n&&(this.x=s*o*a-r*l*h,this.y=r*l*a-s*o*h,this.z=r*o*h+s*l*a,this.w=r*o*a+s*l*h),this},r.prototype.clone=function(){return new r(this.x,this.y,this.z,this.w)}},{"./Vec3":30}],29:[function(t,e,i){var n=t("./Vec3"),r=t("./Quaternion");function o(t){t=t||{},this.position=new n,t.position&&this.position.copy(t.position),this.quaternion=new r,t.quaternion&&this.quaternion.copy(t.quaternion)}e.exports=o;var a=new r;o.pointToLocalFrame=function(t,e,i,r){return r=r||new n,i.vsub(t,r),e.conjugate(a),a.vmult(r,r),r},o.prototype.pointToLocal=function(t,e){return o.pointToLocalFrame(this.position,this.quaternion,t,e)},o.pointToWorldFrame=function(t,e,i,r){return r=r||new n,e.vmult(i,r),r.vadd(t,r),r},o.prototype.pointToWorld=function(t,e){return o.pointToWorldFrame(this.position,this.quaternion,t,e)},o.prototype.vectorToWorldFrame=function(t,e){return e=e||new n,this.quaternion.vmult(t,e),e},o.vectorToWorldFrame=function(t,e,i){return t.vmult(e,i),i},o.vectorToLocalFrame=function(t,e,i,r){return r=r||new n,e.w*=-1,e.vmult(i,r),e.w*=-1,r}},{"./Quaternion":28,"./Vec3":30}],30:[function(t,e,i){e.exports=r;var n=t("./Mat3");function r(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}r.ZERO=new r(0,0,0),r.UNIT_X=new r(1,0,0),r.UNIT_Y=new r(0,1,0),r.UNIT_Z=new r(0,0,1),r.prototype.cross=function(t,e){var i=t.x,n=t.y,o=t.z,a=this.x,s=this.y,l=this.z;return(e=e||new r).x=s*o-l*n,e.y=l*i-a*o,e.z=a*n-s*i,e},r.prototype.set=function(t,e,i){return this.x=t,this.y=e,this.z=i,this},r.prototype.setZero=function(){this.x=this.y=this.z=0},r.prototype.vadd=function(t,e){if(!e)return new r(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z},r.prototype.vsub=function(t,e){if(!e)return new r(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z},r.prototype.crossmat=function(){return new n([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},r.prototype.normalize=function(){var t=this.x,e=this.y,i=this.z,n=Math.sqrt(t*t+e*e+i*i);if(n>0){var r=1/n;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return n},r.prototype.unit=function(t){t=t||new r;var e=this.x,i=this.y,n=this.z,o=Math.sqrt(e*e+i*i+n*n);return o>0?(o=1/o,t.x=e*o,t.y=i*o,t.z=n*o):(t.x=1,t.y=0,t.z=0),t},r.prototype.norm=function(){var t=this.x,e=this.y,i=this.z;return Math.sqrt(t*t+e*e+i*i)},r.prototype.length=r.prototype.norm,r.prototype.norm2=function(){return this.dot(this)},r.prototype.lengthSquared=r.prototype.norm2,r.prototype.distanceTo=function(t){var e=this.x,i=this.y,n=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-i)*(o-i)+(a-n)*(a-n))},r.prototype.distanceSquared=function(t){var e=this.x,i=this.y,n=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-i)*(o-i)+(a-n)*(a-n)},r.prototype.mult=function(t,e){e=e||new r;var i=this.x,n=this.y,o=this.z;return e.x=t*i,e.y=t*n,e.z=t*o,e},r.prototype.scale=r.prototype.mult,r.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},r.prototype.isZero=function(){return 0===this.x&&0===this.y&&0===this.z},r.prototype.negate=function(t){return(t=t||new r).x=-this.x,t.y=-this.y,t.z=-this.z,t};var o=new r,a=new r;r.prototype.tangents=function(t,e){var i=this.norm();if(i>0){var n=o,r=1/i;n.set(this.x*r,this.y*r,this.z*r);var s=a;Math.abs(n.x)<.9?(s.set(1,0,0),n.cross(s,t)):(s.set(0,1,0),n.cross(s,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)},r.prototype.toString=function(){return this.x+","+this.y+","+this.z},r.prototype.toArray=function(){return[this.x,this.y,this.z]},r.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},r.prototype.lerp=function(t,e,i){var n=this.x,r=this.y,o=this.z;i.x=n+(t.x-n)*e,i.y=r+(t.y-r)*e,i.z=o+(t.z-o)*e},r.prototype.almostEquals=function(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)},r.prototype.almostZero=function(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)};var s=new r;r.prototype.isAntiparallelTo=function(t,e){return this.negate(s),s.almostEquals(t,e)},r.prototype.clone=function(){return new r(this.x,this.y,this.z)}},{"./Mat3":27}],31:[function(t,e,i){e.exports=h;var n=t("../utils/EventTarget"),r=(t("../shapes/Shape"),t("../math/Vec3")),o=t("../math/Mat3"),a=t("../math/Quaternion"),s=(t("../material/Material"),t("../collision/AABB")),l=t("../shapes/Box");function h(t){t=t||{},n.apply(this),this.id=h.idCounter++,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new r,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:1,this.collisionResponse=!0,this.position=new r,t.position&&this.position.copy(t.position),this.previousPosition=new r,this.initPosition=new r,this.velocity=new r,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new r,this.force=new r;var e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?h.STATIC:h.DYNAMIC,typeof t.type==typeof h.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=0,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new r,this.quaternion=new a,t.quaternion&&this.quaternion.copy(t.quaternion),this.initQuaternion=new a,this.angularVelocity=new r,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new r,this.interpolatedPosition=new r,this.interpolatedQuaternion=new a,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new r,this.invInertia=new r,this.invInertiaWorld=new o,this.invMassSolve=0,this.invInertiaSolve=new r,this.invInertiaWorldSolve=new o,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.aabb=new s,this.aabbNeedsUpdate=!0,this.wlambda=new r,t.shape&&this.addShape(t.shape),this.updateMassProperties()}h.prototype=new n,h.prototype.constructor=h,h.DYNAMIC=1,h.STATIC=2,h.KINEMATIC=4,h.AWAKE=0,h.SLEEPY=1,h.SLEEPING=2,h.idCounter=0,h.prototype.wakeUp=function(){var t=this.sleepState;this.sleepState=0,t===h.SLEEPING&&this.dispatchEvent({type:"wakeup"})},h.prototype.sleep=function(){this.sleepState=h.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0)},h.sleepyEvent={type:"sleepy"},h.sleepEvent={type:"sleep"},h.prototype.sleepTick=function(t){if(this.allowSleep){var e=this.sleepState,i=this.velocity.norm2()+this.angularVelocity.norm2(),n=Math.pow(this.sleepSpeedLimit,2);e===h.AWAKE&&i<n?(this.sleepState=h.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(h.sleepyEvent)):e===h.SLEEPY&&i>n?this.wakeUp():e===h.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(h.sleepEvent))}},h.prototype.updateSolveMassProperties=function(){this.sleepState===h.SLEEPING||this.type===h.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},h.prototype.pointToLocalFrame=function(t,e){return e=e||new r,t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e},h.prototype.vectorToLocalFrame=function(t,e){return e=e||new r,this.quaternion.conjugate().vmult(t,e),e},h.prototype.pointToWorldFrame=function(t,e){return e=e||new r,this.quaternion.vmult(t,e),e.vadd(this.position,e),e},h.prototype.vectorToWorldFrame=function(t,e){return e=e||new r,this.quaternion.vmult(t,e),e};var c=new r,u=new a;h.prototype.addShape=function(t,e,i){var n=new r,o=new a;return e&&n.copy(e),i&&o.copy(i),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(o),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,this},h.prototype.updateBoundingRadius=function(){for(var t=this.shapes,e=this.shapeOffsets,i=t.length,n=0,r=0;r!==i;r++){var o=t[r];o.updateBoundingSphereRadius();var a=e[r].norm(),s=o.boundingSphereRadius;a+s>n&&(n=a+s)}this.boundingRadius=n};var q=new s;h.prototype.computeAABB=function(){for(var t=this.shapes,e=this.shapeOffsets,i=this.shapeOrientations,n=t.length,r=c,o=u,a=this.quaternion,s=this.aabb,l=q,h=0;h!==n;h++){var p=t[h];i[h].mult(a,o),o.vmult(e[h],r),r.vadd(this.position,r),p.calculateWorldAABB(r,o,l.lowerBound,l.upperBound),0===h?s.copy(l):s.extend(l)}this.aabbNeedsUpdate=!1};var p=new o,d=new o;new o,h.prototype.updateInertiaWorld=function(t){var e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){var i=p,n=d;i.setRotationFromQuaternion(this.quaternion),i.transpose(n),i.scale(e,i),i.mmult(n,this.invInertiaWorld)}};var m=new r,f=new r;h.prototype.applyForce=function(t,e){if(this.type===h.DYNAMIC){var i=m;e.vsub(this.position,i);var n=f;i.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}};var v=new r,g=new r;h.prototype.applyLocalForce=function(t,e){if(this.type===h.DYNAMIC){var i=v,n=g;this.vectorToWorldFrame(t,i),this.pointToWorldFrame(e,n),this.applyForce(i,n)}};var y=new r,x=new r,w=new r;h.prototype.applyImpulse=function(t,e){if(this.type===h.DYNAMIC){var i=y;e.vsub(this.position,i);var n=x;n.copy(t),n.mult(this.invMass,n),this.velocity.vadd(n,this.velocity);var r=w;i.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}};var b=new r,_=new r;h.prototype.applyLocalImpulse=function(t,e){if(this.type===h.DYNAMIC){var i=b,n=_;this.vectorToWorldFrame(t,i),this.pointToWorldFrame(e,n),this.applyImpulse(i,n)}};var M=new r;h.prototype.updateMassProperties=function(){var t=M;this.invMass=this.mass>0?1/this.mass:0;var e=this.inertia,i=this.fixedRotation;this.computeAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),l.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!i?1/e.x:0,e.y>0&&!i?1/e.y:0,e.z>0&&!i?1/e.z:0),this.updateInertiaWorld(!0)},h.prototype.getVelocityAtWorldPoint=function(t,e){var i=new r;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}},{"../collision/AABB":3,"../material/Material":25,"../math/Mat3":27,"../math/Quaternion":28,"../math/Vec3":30,"../shapes/Box":37,"../shapes/Shape":43,"../utils/EventTarget":49}],32:[function(t,e,i){t("./Body");var n=t("../math/Vec3"),r=t("../math/Quaternion"),o=(t("../collision/RaycastResult"),t("../collision/Ray")),a=t("../objects/WheelInfo");function s(t){this.chassisBody=t.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=void 0!==t.indexRightAxis?t.indexRightAxis:1,this.indexForwardAxis=void 0!==t.indexForwardAxis?t.indexForwardAxis:0,this.indexUpAxis=void 0!==t.indexUpAxis?t.indexUpAxis:2}e.exports=s,new n,new n,new n;var l=new n,h=new n,c=new n;new o,s.prototype.addWheel=function(t){var e=new a(t=t||{}),i=this.wheelInfos.length;return this.wheelInfos.push(e),i},s.prototype.setSteeringValue=function(t,e){this.wheelInfos[e].steering=t},new n,s.prototype.applyEngineForce=function(t,e){this.wheelInfos[e].engineForce=t},s.prototype.setBrake=function(t,e){this.wheelInfos[e].brake=t},s.prototype.addToWorld=function(t){this.constraints,t.add(this.chassisBody);var e=this;this.preStepCallback=function(){e.updateVehicle(t.dt)},t.addEventListener("preStep",this.preStepCallback),this.world=t},s.prototype.getVehicleAxisWorld=function(t,e){e.set(0===t?1:0,1===t?1:0,2===t?1:0),this.chassisBody.vectorToWorldFrame(e,e)},s.prototype.updateVehicle=function(t){for(var e=this.wheelInfos,i=e.length,r=this.chassisBody,o=0;o<i;o++)this.updateWheelTransform(o);this.currentVehicleSpeedKmHour=3.6*r.velocity.norm();var a=new n;for(this.getVehicleAxisWorld(this.indexForwardAxis,a),a.dot(r.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1),o=0;o<i;o++)this.castRay(e[o]);this.updateSuspension(t);var s=new n,l=new n;for(o=0;o<i;o++){var h=(p=e[o]).suspensionForce;h>p.maxSuspensionForce&&(h=p.maxSuspensionForce),p.raycastResult.hitNormalWorld.scale(h*t,s),p.raycastResult.hitPointWorld.vsub(r.position,l),r.applyImpulse(s,p.raycastResult.hitPointWorld)}this.updateFriction(t);var c=new n,u=new n,q=new n;for(o=0;o<i;o++){var p=e[o];r.getVelocityAtWorldPoint(p.chassisConnectionPointWorld,q);var d=1;if(1===this.indexUpAxis&&(d=-1),p.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,u);var m=u.dot(p.raycastResult.hitNormalWorld);p.raycastResult.hitNormalWorld.scale(m,c),u.vsub(c,u);var f=u.dot(q);p.deltaRotation=d*f*t/p.radius}!p.sliding&&p.isInContact||0===p.engineForce||!p.useCustomSlidingRotationalSpeed||(p.deltaRotation=(p.engineForce>0?1:-1)*p.customSlidingRotationalSpeed*t),Math.abs(p.brake)>Math.abs(p.engineForce)&&(p.deltaRotation=0),p.rotation+=p.deltaRotation,p.deltaRotation*=.99}},s.prototype.updateSuspension=function(t){for(var e=this.chassisBody.mass,i=this.wheelInfos,n=i.length,r=0;r<n;r++){var o=i[r];if(o.isInContact){var a,s=o.suspensionRestLength-o.suspensionLength;a=o.suspensionStiffness*s*o.clippedInvContactDotSuspension;var l=o.suspensionRelativeVelocity;a-=(l<0?o.dampingCompression:o.dampingRelaxation)*l,o.suspensionForce=a*e,o.suspensionForce<0&&(o.suspensionForce=0)}else o.suspensionForce=0}},s.prototype.removeFromWorld=function(t){this.constraints,t.remove(this.chassisBody),t.removeEventListener("preStep",this.preStepCallback),this.world=null};var u=new n,q=new n;s.prototype.castRay=function(t){var e=u,i=q;this.updateWheelTransformWorld(t);var r=this.chassisBody,o=-1,a=t.suspensionRestLength+t.radius;t.directionWorld.scale(a,e);var s=t.chassisConnectionPointWorld;s.vadd(e,i);var l=t.raycastResult;l.reset();var h=r.collisionResponse;r.collisionResponse=!1,this.world.rayTest(s,i,l),r.collisionResponse=h;var c=l.body;if(t.raycastResult.groundObject=0,c){o=l.distance,t.raycastResult.hitNormalWorld=l.hitNormalWorld,t.isInContact=!0;var p=l.distance;t.suspensionLength=p-t.radius;var d=t.suspensionRestLength-t.maxSuspensionTravel,m=t.suspensionRestLength+t.maxSuspensionTravel;t.suspensionLength<d&&(t.suspensionLength=d),t.suspensionLength>m&&(t.suspensionLength=m,t.raycastResult.reset());var f=t.raycastResult.hitNormalWorld.dot(t.directionWorld),v=new n;r.getVelocityAtWorldPoint(t.raycastResult.hitPointWorld,v);var g=t.raycastResult.hitNormalWorld.dot(v);if(f>=-.1)t.suspensionRelativeVelocity=0,t.clippedInvContactDotSuspension=10;else{var y=-1/f;t.suspensionRelativeVelocity=g*y,t.clippedInvContactDotSuspension=y}}else t.suspensionLength=t.suspensionRestLength+0*t.maxSuspensionTravel,t.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.raycastResult.hitNormalWorld),t.clippedInvContactDotSuspension=1;return o},s.prototype.updateWheelTransformWorld=function(t){t.isInContact=!1;var e=this.chassisBody;e.pointToWorldFrame(t.chassisConnectionPointLocal,t.chassisConnectionPointWorld),e.vectorToWorldFrame(t.directionLocal,t.directionWorld),e.vectorToWorldFrame(t.axleLocal,t.axleWorld)},s.prototype.updateWheelTransform=function(t){var e=l,i=h,n=c,o=this.wheelInfos[t];this.updateWheelTransformWorld(o),o.directionLocal.scale(-1,e),i.copy(o.axleLocal),e.cross(i,n),n.normalize(),i.normalize();var a=o.steering,s=new r;s.setFromAxisAngle(e,a);var u=new r;u.setFromAxisAngle(i,o.rotation);var q=o.worldTransform.quaternion;this.chassisBody.quaternion.mult(s,q),q.mult(u,q),q.normalize();var p=o.worldTransform.position;p.copy(o.directionWorld),p.scale(o.suspensionLength,p),p.vadd(o.chassisConnectionPointWorld,p)};var p=[new n(1,0,0),new n(0,1,0),new n(0,0,1)];s.prototype.getWheelTransformWorld=function(t){return this.wheelInfos[t].worldTransform};var d=new n,m=[],f=[];s.prototype.updateFriction=function(t){for(var e=d,i=this.wheelInfos,r=i.length,o=this.chassisBody,a=f,s=m,l=0;l<r;l++)q=(E=i[l]).raycastResult.body,E.sideImpulse=0,E.forwardImpulse=0,a[l]||(a[l]=new n),s[l]||(s[l]=new n);for(l=0;l<r;l++)if(q=(E=i[l]).raycastResult.body){var h=s[l];this.getWheelTransformWorld(l).vectorToWorldFrame(p[this.indexRightAxis],h);var c=E.raycastResult.hitNormalWorld,u=h.dot(c);c.scale(u,e),h.vsub(e,h),h.normalize(),c.cross(h,a[l]),a[l].normalize(),E.sideImpulse=L(o,E.raycastResult.hitPointWorld,q,E.raycastResult.hitPointWorld,h),E.sideImpulse*=1}for(this.sliding=!1,l=0;l<r;l++){var q=(E=i[l]).raycastResult.body,v=0;if(E.slipInfo=1,q){var g=E.brake?E.brake:0;v=x(o,q,E.raycastResult.hitPointWorld,a[l],g);var y=g/(v+=E.engineForce*t);E.slipInfo*=y}if(E.forwardImpulse=0,E.skidInfo=1,q){E.skidInfo=1;var w=E.suspensionForce*t*E.frictionSlip,b=w*w;E.forwardImpulse=v;var _=.5*E.forwardImpulse,M=1*E.sideImpulse,S=_*_+M*M;E.sliding=!1,S>b&&(this.sliding=!0,E.sliding=!0,y=w/Math.sqrt(S),E.skidInfo*=y)}}if(this.sliding)for(l=0;l<r;l++)0!==(E=i[l]).sideImpulse&&E.skidInfo<1&&(E.forwardImpulse*=E.skidInfo,E.sideImpulse*=E.skidInfo);for(l=0;l<r;l++){var E=i[l],T=new n;if(T.copy(E.raycastResult.hitPointWorld),0!==E.forwardImpulse){var A=new n;a[l].scale(E.forwardImpulse,A),o.applyImpulse(A,T)}if(0!==E.sideImpulse){q=E.raycastResult.body;var z=new n;z.copy(E.raycastResult.hitPointWorld);var P=new n;s[l].scale(E.sideImpulse,P),o.pointToLocalFrame(T,T),T["xyz"[this.indexUpAxis]]*=E.rollInfluence,o.pointToWorldFrame(T,T),o.applyImpulse(P,T),P.scale(-1,P),q.applyImpulse(P,z)}}};var v=new n,g=new n,y=new n;function x(t,e,i,n,r){var o=0,a=i,s=v,l=g,h=y;return t.getVelocityAtWorldPoint(a,s),e.getVelocityAtWorldPoint(a,l),s.vsub(l,h),r<(o=-n.dot(h)*(1/(S(t,i,n)+S(e,i,n))))&&(o=r),o<-r&&(o=-r),o}var w=new n,b=new n,_=new n,M=new n;function S(t,e,i){var n=w,r=b,o=_,a=M;return e.vsub(t.position,n),n.cross(i,r),t.invInertiaWorld.vmult(r,a),a.cross(n,o),t.invMass+i.dot(o)}var E=new n,T=new n,A=new n;function L(t,e,i,n,r,o){if(r.norm2()>1.1)return 0;var a=E,s=T,l=A;return t.getVelocityAtWorldPoint(e,a),i.getVelocityAtWorldPoint(n,s),a.vsub(s,l),-.2*r.dot(l)*(1/(t.invMass+i.invMass))}},{"../collision/Ray":9,"../collision/RaycastResult":10,"../math/Quaternion":28,"../math/Vec3":30,"../objects/WheelInfo":36,"./Body":31}],33:[function(t,e,i){var n=t("./Body"),r=t("../shapes/Sphere"),o=t("../shapes/Box"),a=t("../math/Vec3"),s=t("../constraints/HingeConstraint");function l(t){if(this.wheelBodies=[],this.coordinateSystem=void 0===t.coordinateSystem?new a(1,2,3):t.coordinateSystem.clone(),this.chassisBody=t.chassisBody,!this.chassisBody){var e=new o(new a(5,2,.5));this.chassisBody=new n(1,e)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}e.exports=l,l.prototype.addWheel=function(t){var e=(t=t||{}).body;e||(e=new n(1,new r(1.2))),this.wheelBodies.push(e),this.wheelForces.push(0),new a;var i=void 0!==t.position?t.position.clone():new a,o=new a;this.chassisBody.pointToWorldFrame(i,o),e.position.set(o.x,o.y,o.z);var l=void 0!==t.axis?t.axis.clone():new a(0,1,0);this.wheelAxes.push(l);var h=new s(this.chassisBody,e,{pivotA:i,axisA:l,pivotB:a.ZERO,axisB:l,collideConnected:!1});return this.constraints.push(h),this.wheelBodies.length-1},l.prototype.setSteeringValue=function(t,e){var i=this.wheelAxes[e],n=Math.cos(t),r=Math.sin(t),o=i.x,a=i.y;this.constraints[e].axisA.set(n*o-r*a,r*o+n*a,0)},l.prototype.setMotorSpeed=function(t,e){var i=this.constraints[e];i.enableMotor(),i.motorTargetVelocity=t},l.prototype.disableMotor=function(t){this.constraints[t].disableMotor()};var h=new a;l.prototype.setWheelForce=function(t,e){this.wheelForces[e]=t},l.prototype.applyWheelForce=function(t,e){var i=this.wheelAxes[e],n=this.wheelBodies[e],r=n.torque;i.scale(t,h),n.vectorToWorldFrame(h,h),r.vadd(h,r)},l.prototype.addToWorld=function(t){for(var e=this.constraints,i=this.wheelBodies.concat([this.chassisBody]),n=0;n<i.length;n++)t.add(i[n]);for(n=0;n<e.length;n++)t.addConstraint(e[n]);t.addEventListener("preStep",this._update.bind(this))},l.prototype._update=function(){for(var t=this.wheelForces,e=0;e<t.length;e++)this.applyWheelForce(t[e],e)},l.prototype.removeFromWorld=function(t){for(var e=this.constraints,i=this.wheelBodies.concat([this.chassisBody]),n=0;n<i.length;n++)t.remove(i[n]);for(n=0;n<e.length;n++)t.removeConstraint(e[n])};var c=new a;l.prototype.getWheelSpeed=function(t){var e=this.wheelAxes[t],i=this.wheelBodies[t].angularVelocity;return this.chassisBody.vectorToWorldFrame(e,c),i.dot(c)}},{"../constraints/HingeConstraint":15,"../math/Vec3":30,"../shapes/Box":37,"../shapes/Sphere":44,"./Body":31}],34:[function(t,e,i){e.exports=r,t("../shapes/Shape");var n=t("../math/Vec3");function r(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}t("../math/Quaternion"),t("../shapes/Particle"),t("../objects/Body"),t("../material/Material"),r.prototype.add=function(t){this.particles.push(t),this.neighbors.length<this.particles.length&&this.neighbors.push([])},r.prototype.remove=function(t){var e=this.particles.indexOf(t);-1!==e&&(this.particles.splice(e,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var o=new n;r.prototype.getNeighbors=function(t,e){for(var i=this.particles.length,n=t.id,r=this.smoothingRadius*this.smoothingRadius,a=o,s=0;s!==i;s++){var l=this.particles[s];l.position.vsub(t.position,a),n!==l.id&&a.norm2()<r&&e.push(l)}};var a=new n,s=new n,l=new n,h=new n,c=new n,u=new n;r.prototype.update=function(){for(var t=this.particles.length,e=a,i=this.speedOfSound,n=this.eps,r=0;r!==t;r++){var o=this.particles[r];(M=this.neighbors[r]).length=0,this.getNeighbors(o,M),M.push(this.particles[r]);for(var q=M.length,p=0,d=0;d!==q;d++){o.position.vsub(M[d].position,e);var m=e.norm(),f=this.w(m);p+=M[d].mass*f}this.densities[r]=p,this.pressures[r]=i*i*(this.densities[r]-this.density)}var v=s,g=l,y=h,x=c,w=u;for(r=0;r!==t;r++){var b,_,M,S=this.particles[r];for(v.set(0,0,0),g.set(0,0,0),q=(M=this.neighbors[r]).length,d=0;d!==q;d++){var E=M[d];S.position.vsub(E.position,x);var T=x.norm();b=-E.mass*(this.pressures[r]/(this.densities[r]*this.densities[r]+n)+this.pressures[d]/(this.densities[d]*this.densities[d]+n)),this.gradw(x,y),y.mult(b,y),v.vadd(y,v),E.velocity.vsub(S.velocity,w),w.mult(1/(1e-4+this.densities[r]*this.densities[d])*this.viscosity*E.mass,w),_=this.nablaw(T),w.mult(_,w),g.vadd(w,g)}g.mult(S.mass,g),v.mult(S.mass,v),S.force.vadd(g,S.force),S.force.vadd(v,S.force)}},r.prototype.w=function(t){var e=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(e,9))*Math.pow(e*e-t*t,3)},r.prototype.gradw=function(t,e){var i=t.norm(),n=this.smoothingRadius;t.mult(945/(32*Math.PI*Math.pow(n,9))*Math.pow(n*n-i*i,2),e)},r.prototype.nablaw=function(t){var e=this.smoothingRadius;return 945/(32*Math.PI*Math.pow(e,9))*(e*e-t*t)*(7*t*t-3*e*e)}},{"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Particle":41,"../shapes/Shape":43}],35:[function(t,e,i){var n=t("../math/Vec3");function r(t,e,i){i=i||{},this.restLength="number"==typeof i.restLength?i.restLength:1,this.stiffness=i.stiffness||100,this.damping=i.damping||1,this.bodyA=t,this.bodyB=e,this.localAnchorA=new n,this.localAnchorB=new n,i.localAnchorA&&this.localAnchorA.copy(i.localAnchorA),i.localAnchorB&&this.localAnchorB.copy(i.localAnchorB),i.worldAnchorA&&this.setWorldAnchorA(i.worldAnchorA),i.worldAnchorB&&this.setWorldAnchorB(i.worldAnchorB)}e.exports=r,r.prototype.setWorldAnchorA=function(t){this.bodyA.pointToLocalFrame(t,this.localAnchorA)},r.prototype.setWorldAnchorB=function(t){this.bodyB.pointToLocalFrame(t,this.localAnchorB)},r.prototype.getWorldAnchorA=function(t){this.bodyA.pointToWorldFrame(this.localAnchorA,t)},r.prototype.getWorldAnchorB=function(t){this.bodyB.pointToWorldFrame(this.localAnchorB,t)};var o=new n,a=new n,s=new n,l=new n,h=new n,c=new n,u=new n,q=new n,p=new n,d=new n,m=new n;r.prototype.applyForce=function(){var t=this.stiffness,e=this.damping,i=this.restLength,n=this.bodyA,r=this.bodyB,f=o,v=a,g=s,y=l,x=m,w=h,b=c,_=u,M=q,S=p,E=d;this.getWorldAnchorA(w),this.getWorldAnchorB(b),w.vsub(n.position,_),b.vsub(r.position,M),b.vsub(w,f);var T=f.norm();v.copy(f),v.normalize(),r.velocity.vsub(n.velocity,g),r.angularVelocity.cross(M,x),g.vadd(x,g),n.angularVelocity.cross(_,x),g.vsub(x,g),v.mult(-t*(T-i)-e*g.dot(v),y),n.force.vsub(y,n.force),r.force.vadd(y,r.force),_.cross(y,S),M.cross(y,E),n.torque.vsub(S,n.torque),r.torque.vadd(E,r.torque)}},{"../math/Vec3":30}],36:[function(t,e,i){var n=t("../math/Vec3"),r=t("../math/Transform"),o=t("../collision/RaycastResult"),a=t("../utils/Utils");function s(t){t=a.defaults(t,{chassisConnectionPointLocal:new n,chassisConnectionPointWorld:new n,directionLocal:new n,directionWorld:new n,axleLocal:new n,axleWorld:new n,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new o,this.worldTransform=new r,this.isInContact=!1}e.exports=s;var l=new n,h=new n;l=new n,s.prototype.updateWheel=function(t){var e=this.raycastResult;if(this.isInContact){var i=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,h),t.getVelocityAtWorldPoint(h,l);var n=e.hitNormalWorld.dot(l);if(i>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{var r=-1/i;this.suspensionRelativeVelocity=n*r,this.clippedInvContactDotSuspension=r}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{"../collision/RaycastResult":10,"../math/Transform":29,"../math/Vec3":30,"../utils/Utils":53}],37:[function(t,e,i){e.exports=a;var n=t("./Shape"),r=t("../math/Vec3"),o=t("./ConvexPolyhedron");function a(t){n.call(this),this.type=n.types.BOX,this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}a.prototype=new n,a.prototype.constructor=a,a.prototype.updateConvexPolyhedronRepresentation=function(){var t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,n=r,a=[new n(-t,-e,-i),new n(t,-e,-i),new n(t,e,-i),new n(-t,e,-i),new n(-t,-e,i),new n(t,-e,i),new n(t,e,i),new n(-t,e,i)],s=(new n(0,0,1),new n(0,1,0),new n(1,0,0),new o(a,[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]]));this.convexPolyhedronRepresentation=s,s.material=this.material},a.prototype.calculateLocalInertia=function(t,e){return e=e||new r,a.calculateInertia(this.halfExtents,t,e),e},a.calculateInertia=function(t,e,i){var n=t;i.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),i.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),i.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)},a.prototype.getSideNormals=function(t,e){var i=t,n=this.halfExtents;if(i[0].set(n.x,0,0),i[1].set(0,n.y,0),i[2].set(0,0,n.z),i[3].set(-n.x,0,0),i[4].set(0,-n.y,0),i[5].set(0,0,-n.z),void 0!==e)for(var r=0;r!==i.length;r++)e.vmult(i[r],i[r]);return i},a.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},a.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};var s=new r;new r,a.prototype.forEachWorldCorner=function(t,e,i){for(var n=this.halfExtents,r=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]],o=0;o<r.length;o++)s.set(r[o][0],r[o][1],r[o][2]),e.vmult(s,s),t.vadd(s,s),i(s.x,s.y,s.z)};var l=[new r,new r,new r,new r,new r,new r,new r,new r];a.prototype.calculateWorldAABB=function(t,e,i,n){var r=this.halfExtents;l[0].set(r.x,r.y,r.z),l[1].set(-r.x,r.y,r.z),l[2].set(-r.x,-r.y,r.z),l[3].set(-r.x,-r.y,-r.z),l[4].set(r.x,-r.y,-r.z),l[5].set(r.x,r.y,-r.z),l[6].set(-r.x,r.y,-r.z),l[7].set(r.x,-r.y,r.z);var o=l[0];e.vmult(o,o),t.vadd(o,o),n.copy(o),i.copy(o);for(var a=1;a<8;a++){o=l[a],e.vmult(o,o),t.vadd(o,o);var s=o.x,h=o.y,c=o.z;s>n.x&&(n.x=s),h>n.y&&(n.y=h),c>n.z&&(n.z=c),s<i.x&&(i.x=s),h<i.y&&(i.y=h),c<i.z&&(i.z=c)}}},{"../math/Vec3":30,"./ConvexPolyhedron":38,"./Shape":43}],38:[function(t,e,i){e.exports=a;var n=t("./Shape"),r=t("../math/Vec3"),o=(t("../math/Quaternion"),t("../math/Transform"));function a(t,e,i){n.call(this),this.type=n.types.CONVEXPOLYHEDRON,this.vertices=t||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=e||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=i?i.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}a.prototype=new n,a.prototype.constructor=a;var s=new r;a.prototype.computeEdges=function(){var t=this.faces,e=this.vertices,i=(e.length,this.uniqueEdges);i.length=0;for(var n=s,r=0;r!==t.length;r++)for(var o=t[r],a=o.length,l=0;l!==a;l++){var h=(l+1)%a;e[o[l]].vsub(e[o[h]],n),n.normalize();for(var c=!1,u=0;u!==i.length;u++)if(i[u].almostEquals(n)||i[u].almostEquals(n)){c=!0;break}c||i.push(n.clone())}},a.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var t=0;t<this.faces.length;t++){for(var e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error("Vertex "+this.faces[t][e]+" not found!");var i=this.faceNormals[t]||new r;this.getFaceNormal(t,i),i.negate(i),this.faceNormals[t]=i;var n=this.vertices[this.faces[t][0]];if(i.dot(n)<0)for(console.error(".faceNormals["+t+"] = Vec3("+i.toString()+") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule."),e=0;e<this.faces[t].length;e++)console.warn(".vertices["+this.faces[t][e]+"] = Vec3("+this.vertices[this.faces[t][e]].toString()+")")}};var l=new r,h=new r;a.computeNormal=function(t,e,i,n){e.vsub(t,h),i.vsub(e,l),l.cross(h,n),n.isZero()||n.normalize()},a.prototype.getFaceNormal=function(t,e){var i=this.faces[t],n=this.vertices[i[0]],r=this.vertices[i[1]],o=this.vertices[i[2]];return a.computeNormal(n,r,o,e)};var c=new r;a.prototype.clipAgainstHull=function(t,e,i,n,o,a,s,l,h){for(var u=c,q=-1,p=-Number.MAX_VALUE,d=0;d<i.faces.length;d++){u.copy(i.faceNormals[d]),o.vmult(u,u);var m=u.dot(a);m>p&&(p=m,q=d)}for(var f=[],v=i.faces[q],g=v.length,y=0;y<g;y++){var x=i.vertices[v[y]],w=new r;w.copy(x),o.vmult(w,w),n.vadd(w,w),f.push(w)}q>=0&&this.clipFaceAgainstHull(a,t,e,f,s,l,h)};var u=new r,q=new r,p=new r,d=new r,m=new r,f=new r;a.prototype.findSeparatingAxis=function(t,e,i,n,r,o,a,s){var l=u,h=q,c=p,v=d,g=m,y=f,x=Number.MAX_VALUE,w=this;if(w.uniqueAxes)for(_=0;_!==w.uniqueAxes.length;_++){if(i.vmult(w.uniqueAxes[_],l),!1===(E=w.testSepAxis(l,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(l))}else for(var b=a?a.length:w.faces.length,_=0;_<b;_++){var M=a?a[_]:_;if(l.copy(w.faceNormals[M]),i.vmult(l,l),!1===(E=w.testSepAxis(l,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(l))}if(t.uniqueAxes)for(_=0;_!==t.uniqueAxes.length;_++){if(r.vmult(t.uniqueAxes[_],h),!1===(E=w.testSepAxis(h,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(h))}else{var S=s?s.length:t.faces.length;for(_=0;_<S;_++){var E;if(M=s?s[_]:_,h.copy(t.faceNormals[M]),r.vmult(h,h),!1===(E=w.testSepAxis(h,t,e,i,n,r)))return!1;E<x&&(x=E,o.copy(h))}}for(var T=0;T!==w.uniqueEdges.length;T++){i.vmult(w.uniqueEdges[T],v);for(var A=0;A!==t.uniqueEdges.length;A++)if(r.vmult(t.uniqueEdges[A],g),v.cross(g,y),!y.almostZero()){y.normalize();var L=w.testSepAxis(y,t,e,i,n,r);if(!1===L)return!1;L<x&&(x=L,o.copy(y))}}return n.vsub(e,c),c.dot(o)>0&&o.negate(o),!0};var v=[],g=[];a.prototype.testSepAxis=function(t,e,i,n,r,o){a.project(this,t,i,n,v),a.project(e,t,r,o,g);var s=v[0],l=v[1],h=g[0],c=g[1];if(s<c||h<l)return!1;var u=s-c,q=h-l;return u<q?u:q};var y=new r,x=new r;a.prototype.calculateLocalInertia=function(t,e){this.computeLocalAABB(y,x);var i=x.x-y.x,n=x.y-y.y,r=x.z-y.z;e.x=1/12*t*(2*n*2*n+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*n*2*n+2*i*2*i)},a.prototype.getPlaneConstantOfFace=function(t){var e=this.faces[t],i=this.faceNormals[t],n=this.vertices[e[0]];return-i.dot(n)};var w=new r,b=new r,_=new r,M=new r,S=new r,E=new r,T=new r,A=new r;a.prototype.clipFaceAgainstHull=function(t,e,i,n,r,o,a){for(var s=w,l=b,h=_,c=M,u=S,q=E,p=T,d=A,m=this,f=n,v=[],g=-1,y=Number.MAX_VALUE,x=0;x<m.faces.length;x++){s.copy(m.faceNormals[x]),i.vmult(s,s);var L=s.dot(t);L<y&&(y=L,g=x)}if(!(g<0)){var z=m.faces[g];z.connectedFaces=[];for(var P=0;P<m.faces.length;P++)for(var R=0;R<m.faces[P].length;R++)-1!==z.indexOf(m.faces[P][R])&&P!==g&&-1===z.connectedFaces.indexOf(P)&&z.connectedFaces.push(P);f.length;for(var C=z.length,I=0;I<C;I++){var N=m.vertices[z[I]],O=m.vertices[z[(I+1)%C]];N.vsub(O,l),h.copy(l),i.vmult(h,h),e.vadd(h,h),c.copy(this.faceNormals[g]),i.vmult(c,c),e.vadd(c,c),h.cross(c,u),u.negate(u),q.copy(N),i.vmult(q,q),e.vadd(q,q),q.dot(u);var B=z.connectedFaces[I];p.copy(this.faceNormals[B]);var D=this.getPlaneConstantOfFace(B);d.copy(p),i.vmult(d,d);var F=D-d.dot(e);for(this.clipFaceAgainstPlane(f,v,d,F);f.length;)f.shift();for(;v.length;)f.push(v.shift())}for(p.copy(this.faceNormals[g]),D=this.getPlaneConstantOfFace(g),d.copy(p),i.vmult(d,d),F=D-d.dot(e),P=0;P<f.length;P++){var V=d.dot(f[P])+F;if(V<=r&&(console.log("clamped: depth="+V+" to minDist="+r),V=r),V<=o){var U=f[P];if(V<=0){var j={point:U,normal:d,depth:V};a.push(j)}}}}},a.prototype.clipFaceAgainstPlane=function(t,e,i,n){var o,a,s=t.length;if(s<2)return e;var l=t[t.length-1],h=t[0];o=i.dot(l)+n;for(var c=0;c<s;c++){if(h=t[c],a=i.dot(h)+n,o<0)if(a<0)(u=new r).copy(h),e.push(u);else{var u=new r;l.lerp(h,o/(o-a),u),e.push(u)}else a<0&&(u=new r,l.lerp(h,o/(o-a),u),e.push(u),e.push(h));l=h,o=a}return e},a.prototype.computeWorldVertices=function(t,e){for(var i=this.vertices.length;this.worldVertices.length<i;)this.worldVertices.push(new r);for(var n=this.vertices,o=this.worldVertices,a=0;a!==i;a++)e.vmult(n[a],o[a]),t.vadd(o[a],o[a]);this.worldVerticesNeedsUpdate=!1},new r,a.prototype.computeLocalAABB=function(t,e){var i=this.vertices.length,n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var r=0;r<i;r++){var o=n[r];o.x<t.x?t.x=o.x:o.x>e.x&&(e.x=o.x),o.y<t.y?t.y=o.y:o.y>e.y&&(e.y=o.y),o.z<t.z?t.z=o.z:o.z>e.z&&(e.z=o.z)}},a.prototype.computeWorldFaceNormals=function(t){for(var e=this.faceNormals.length;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new r);for(var i=this.faceNormals,n=this.worldFaceNormals,o=0;o!==e;o++)t.vmult(i[o],n[o]);this.worldFaceNormalsNeedsUpdate=!1},a.prototype.updateBoundingSphereRadius=function(){for(var t=0,e=this.vertices,i=0,n=e.length;i!==n;i++){var r=e[i].norm2();r>t&&(t=r)}this.boundingSphereRadius=Math.sqrt(t)};var L=new r;a.prototype.calculateWorldAABB=function(t,e,i,n){for(var r,o,a,s,l,h,c=this.vertices.length,u=this.vertices,q=0;q<c;q++){L.copy(u[q]),e.vmult(L,L),t.vadd(L,L);var p=L;p.x<r||void 0===r?r=p.x:(p.x>s||void 0===s)&&(s=p.x),p.y<o||void 0===o?o=p.y:(p.y>l||void 0===l)&&(l=p.y),p.z<a||void 0===a?a=p.z:(p.z>h||void 0===h)&&(h=p.z)}i.set(r,o,a),n.set(s,l,h)},a.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},a.prototype.getAveragePointLocal=function(t){t=t||new r;for(var e=this.vertices.length,i=this.vertices,n=0;n<e;n++)t.vadd(i[n],t);return t.mult(1/e,t),t},a.prototype.transformAllPoints=function(t,e){var i=this.vertices.length,n=this.vertices;if(e){for(var r=0;r<i;r++){var o=n[r];e.vmult(o,o)}for(r=0;r<this.faceNormals.length;r++)o=this.faceNormals[r],e.vmult(o,o)}if(t)for(r=0;r<i;r++)(o=n[r]).vadd(t,o)};var z=new r,P=new r,R=new r;a.prototype.pointIsInside=function(t){var e=this.vertices.length,i=this.vertices,n=this.faces,r=this.faceNormals,o=this.faces.length,a=z;this.getAveragePointLocal(a);for(var s=0;s<o;s++){this.faces[s].length,e=r[s];var l=i[n[s][0]],h=P;t.vsub(l,h);var c=e.dot(h),u=R;a.vsub(l,u);var q=e.dot(u);if(c<0&&q>0||c>0&&q<0)return!1}return-1},new r;var C=new r,I=new r;a.project=function(t,e,i,n,r){var a=t.vertices.length,s=C,l=0,h=0,c=I,u=t.vertices;c.setZero(),o.vectorToLocalFrame(i,n,e,s),o.pointToLocalFrame(i,n,c,c);var q=c.dot(s);h=l=u[0].dot(s);for(var p=1;p<a;p++){var d=u[p].dot(s);d>l&&(l=d),d<h&&(h=d)}if((h-=q)>(l-=q)){var m=h;h=l,l=m}r[0]=l,r[1]=h}},{"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"./Shape":43}],39:[function(t,e,i){e.exports=a;var n=t("./Shape"),r=t("../math/Vec3"),o=(t("../math/Quaternion"),t("./ConvexPolyhedron"));function a(t,e,i,a){var s=a,l=[],h=[],c=[],u=[],q=[],p=Math.cos,d=Math.sin;l.push(new r(e*p(0),e*d(0),.5*-i)),u.push(0),l.push(new r(t*p(0),t*d(0),.5*i)),q.push(1);for(var m=0;m<s;m++){var f=2*Math.PI/s*(m+1),v=2*Math.PI/s*(m+.5);m<s-1?(l.push(new r(e*p(f),e*d(f),.5*-i)),u.push(2*m+2),l.push(new r(t*p(f),t*d(f),.5*i)),q.push(2*m+3),c.push([2*m+2,2*m+3,2*m+1,2*m])):c.push([0,1,2*m+1,2*m]),(s%2==1||m<s/2)&&h.push(new r(p(v),d(v),0))}c.push(q),h.push(new r(0,0,1));var g=[];for(m=0;m<u.length;m++)g.push(u[u.length-m-1]);c.push(g),this.type=n.types.CONVEXPOLYHEDRON,o.call(this,l,c,h)}a.prototype=new o},{"../math/Quaternion":28,"../math/Vec3":30,"./ConvexPolyhedron":38,"./Shape":43}],40:[function(t,e,i){var n=t("./Shape"),r=t("./ConvexPolyhedron"),o=t("../math/Vec3"),a=t("../utils/Utils");function s(t,e){e=a.defaults(e,{maxValue:null,minValue:null,elementSize:1}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,null===e.minValue&&this.updateMinValue(),null===e.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,n.call(this),this.pillarConvex=new r,this.pillarOffset=new o,this.type=n.types.HEIGHTFIELD,this.updateBoundingSphereRadius(),this._cachedPillars={}}e.exports=s,s.prototype=new n,s.prototype.update=function(){this._cachedPillars={}},s.prototype.updateMinValue=function(){for(var t=this.data,e=t[0][0],i=0;i!==t.length;i++)for(var n=0;n!==t[i].length;n++){var r=t[i][n];r<e&&(e=r)}this.minValue=e},s.prototype.updateMaxValue=function(){for(var t=this.data,e=t[0][0],i=0;i!==t.length;i++)for(var n=0;n!==t[i].length;n++){var r=t[i][n];r>e&&(e=r)}this.maxValue=e},s.prototype.setHeightValueAtIndex=function(t,e,i){this.data[t][e]=i,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)},s.prototype.getRectMinMax=function(t,e,i,n,r){r=r||[];for(var o=this.data,a=this.minValue,s=t;s<=i;s++)for(var l=e;l<=n;l++){var h=o[s][l];h>a&&(a=h)}r[0]=this.minValue,r[1]=a},s.prototype.getIndexOfPosition=function(t,e,i,n){var r=this.elementSize,o=this.data,a=Math.floor(t/r),s=Math.floor(e/r);return i[0]=a,i[1]=s,n&&(a<0&&(a=0),s<0&&(s=0),a>=o.length-1&&(a=o.length-1),s>=o[0].length-1&&(s=o[0].length-1)),!(a<0||s<0||a>=o.length-1||s>=o[0].length-1)},s.prototype.getHeightAt=function(t,e,i){var n=[];this.getIndexOfPosition(t,e,n,i);var r=[];return this.getRectMinMax(n[0],n[1]+1,n[0],n[1]+1,r),(r[0]+r[1])/2},s.prototype.getCacheConvexTrianglePillarKey=function(t,e,i){return t+"_"+e+"_"+(i?1:0)},s.prototype.getCachedConvexTrianglePillar=function(t,e,i){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]},s.prototype.setCachedConvexTrianglePillar=function(t,e,i,n,r){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]={convex:n,offset:r}},s.prototype.clearCachedConvexTrianglePillar=function(t,e,i){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,i)]},s.prototype.getConvexTrianglePillar=function(t,e,i){var n=this.pillarConvex,a=this.pillarOffset;if(this.cacheEnabled){if(s=this.getCachedConvexTrianglePillar(t,e,i))return this.pillarConvex=s.convex,void(this.pillarOffset=s.offset);n=new r,a=new o,this.pillarConvex=n,this.pillarOffset=a}var s=this.data,l=this.elementSize,h=n.faces;n.vertices.length=6;for(var c=0;c<6;c++)n.vertices[c]||(n.vertices[c]=new o);for(h.length=5,c=0;c<5;c++)h[c]||(h[c]=[]);var u=n.vertices,q=(Math.min(s[t][e],s[t+1][e],s[t][e+1],s[t+1][e+1])-this.minValue)/2+this.minValue;i?(a.set((t+.75)*l,(e+.75)*l,q),u[0].set(.25*l,.25*l,s[t+1][e+1]-q),u[1].set(-.75*l,.25*l,s[t][e+1]-q),u[2].set(.25*l,-.75*l,s[t+1][e]-q),u[3].set(.25*l,.25*l,-q-1),u[4].set(-.75*l,.25*l,-q-1),u[5].set(.25*l,-.75*l,-q-1),h[0][0]=0,h[0][1]=1,h[0][2]=2,h[1][0]=5,h[1][1]=4,h[1][2]=3,h[2][0]=2,h[2][1]=5,h[2][2]=3,h[2][3]=0,h[3][0]=3,h[3][1]=4,h[3][2]=1,h[3][3]=0,h[4][0]=1,h[4][1]=4,h[4][2]=5,h[4][3]=2):(a.set((t+.25)*l,(e+.25)*l,q),u[0].set(-.25*l,-.25*l,s[t][e]-q),u[1].set(.75*l,-.25*l,s[t+1][e]-q),u[2].set(-.25*l,.75*l,s[t][e+1]-q),u[3].set(-.25*l,-.25*l,-q-1),u[4].set(.75*l,-.25*l,-q-1),u[5].set(-.25*l,.75*l,-q-1),h[0][0]=0,h[0][1]=1,h[0][2]=2,h[1][0]=5,h[1][1]=4,h[1][2]=3,h[2][0]=0,h[2][1]=2,h[2][2]=5,h[2][3]=3,h[3][0]=1,h[3][1]=0,h[3][2]=3,h[3][3]=4,h[4][0]=4,h[4][1]=5,h[4][2]=2,h[4][3]=1),n.computeNormals(),n.computeEdges(),n.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,i,n,a)},s.prototype.calculateLocalInertia=function(t,e){return(e=e||new o).set(0,0,0),e},s.prototype.volume=function(){return Number.MAX_VALUE},s.prototype.calculateWorldAABB=function(t,e,i,n){i.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),n.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},s.prototype.updateBoundingSphereRadius=function(){var t=this.data,e=this.elementSize;this.boundingSphereRadius=new o(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()}},{"../math/Vec3":30,"../utils/Utils":53,"./ConvexPolyhedron":38,"./Shape":43}],41:[function(t,e,i){e.exports=o;var n=t("./Shape"),r=t("../math/Vec3");function o(){n.call(this),this.type=n.types.PARTICLE}o.prototype=new n,o.prototype.constructor=o,o.prototype.calculateLocalInertia=function(t,e){return(e=e||new r).set(0,0,0),e},o.prototype.volume=function(){return 0},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},o.prototype.calculateWorldAABB=function(t,e,i,n){i.copy(t),n.copy(t)}},{"../math/Vec3":30,"./Shape":43}],42:[function(t,e,i){e.exports=o;var n=t("./Shape"),r=t("../math/Vec3");function o(){n.call(this),this.type=n.types.PLANE,this.worldNormal=new r,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}o.prototype=new n,o.prototype.constructor=o,o.prototype.computeWorldNormal=function(t){var e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1},o.prototype.calculateLocalInertia=function(t,e){return e||new r},o.prototype.volume=function(){return Number.MAX_VALUE};var a=new r;o.prototype.calculateWorldAABB=function(t,e,i,n){a.set(0,0,1),e.vmult(a,a);var r=Number.MAX_VALUE;i.set(-r,-r,-r),n.set(r,r,r),1===a.x&&(n.x=t.x),1===a.y&&(n.y=t.y),1===a.z&&(n.z=t.z),-1===a.x&&(i.x=t.x),-1===a.y&&(i.y=t.y),-1===a.z&&(i.z=t.z)},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{"../math/Vec3":30,"./Shape":43}],43:[function(t,e,i){e.exports=n;var n=t("./Shape");function n(){this.id=n.idCounter++,this.type=0,this.boundingSphereRadius=0,this.collisionResponse=!0,this.material=null}t("../math/Vec3"),t("../math/Quaternion"),t("../material/Material"),n.prototype.constructor=n,n.prototype.updateBoundingSphereRadius=function(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type},n.prototype.volume=function(){throw"volume() not implemented for shape type "+this.type},n.prototype.calculateLocalInertia=function(t,e){throw"calculateLocalInertia() not implemented for shape type "+this.type},n.idCounter=0,n.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"./Shape":43}],44:[function(t,e,i){e.exports=o;var n=t("./Shape"),r=t("../math/Vec3");function o(t){if(n.call(this),this.radius=void 0!==t?Number(t):1,this.type=n.types.SPHERE,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}o.prototype=new n,o.prototype.constructor=o,o.prototype.calculateLocalInertia=function(t,e){e=e||new r;var i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e},o.prototype.volume=function(){return 4*Math.PI*this.radius/3},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},o.prototype.calculateWorldAABB=function(t,e,i,n){for(var r=this.radius,o=["x","y","z"],a=0;a<o.length;a++){var s=o[a];i[s]=t[s]-r,n[s]=t[s]+r}}},{"../math/Vec3":30,"./Shape":43}],45:[function(t,e,i){e.exports=l;var n=t("./Shape"),r=t("../math/Vec3"),o=(t("../math/Quaternion"),t("../math/Transform")),a=t("../collision/AABB"),s=t("../utils/Octree");function l(t,e){n.call(this),this.type=n.types.TRIMESH,this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new a,this.edges=null,this.scale=new r(1,1,1),this.tree=new s,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}l.prototype=new n,l.prototype.constructor=l;var h=new r;l.prototype.updateTree=function(){var t=this.tree;t.reset(),t.aabb.copy(this.aabb);var e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;for(var i=new a,n=new r,o=new r,s=new r,l=[n,o,s],h=0;h<this.indices.length/3;h++){var c=3*h;this._getUnscaledVertex(this.indices[c],n),this._getUnscaledVertex(this.indices[c+1],o),this._getUnscaledVertex(this.indices[c+2],s),i.setFromPoints(l),t.insert(i,h)}t.removeEmptyNodes()};var c=new a;l.prototype.getTrianglesInAABB=function(t,e){c.copy(t);var i=this.scale,n=i.x,r=i.y,o=i.z,a=c.lowerBound,s=c.upperBound;return a.x/=n,a.y/=r,a.z/=o,s.x/=n,s.y/=r,s.z/=o,this.tree.aabbQuery(c,e)},l.prototype.setScale=function(t){var e=this.scale.x===this.scale.y===this.scale.z,i=t.x===t.y===t.z;e&&i||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()},l.prototype.updateNormals=function(){for(var t=h,e=this.normals,i=0;i<this.indices.length/3;i++){var n=3*i,r=this.indices[n],o=this.indices[n+1],a=this.indices[n+2];this.getVertex(r,m),this.getVertex(o,f),this.getVertex(a,v),l.computeNormal(f,m,v,t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z}},l.prototype.updateEdges=function(){for(var t={},e=function(e,i){t[r<o?r+"_"+o:o+"_"+r]=!0},i=0;i<this.indices.length/3;i++){var n=3*i,r=this.indices[n],o=this.indices[n+1];this.indices[n+2];e(),e(),e()}var a=Object.keys(t);for(this.edges=new Int16Array(2*a.length),i=0;i<a.length;i++){var s=a[i].split("_");this.edges[2*i]=parseInt(s[0],10),this.edges[2*i+1]=parseInt(s[1],10)}},l.prototype.getEdgeVertex=function(t,e,i){var n=this.edges[2*t+(e?1:0)];this.getVertex(n,i)};var u=new r,q=new r;l.prototype.getEdgeVector=function(t,e){var i=u,n=q;this.getEdgeVertex(t,0,i),this.getEdgeVertex(t,1,n),n.vsub(i,e)};var p=new r,d=new r;l.computeNormal=function(t,e,i,n){e.vsub(t,d),i.vsub(e,p),p.cross(d,n),n.isZero()||n.normalize()};var m=new r,f=new r,v=new r;l.prototype.getVertex=function(t,e){var i=this.scale;return this._getUnscaledVertex(t,e),e.x*=i.x,e.y*=i.y,e.z*=i.z,e},l.prototype._getUnscaledVertex=function(t,e){var i=3*t,n=this.vertices;return e.set(n[i],n[i+1],n[i+2])},l.prototype.getWorldVertex=function(t,e,i,n){return this.getVertex(t,n),o.pointToWorldFrame(e,i,n,n),n},l.prototype.getTriangleVertices=function(t,e,i,n){var r=3*t;this.getVertex(this.indices[r],e),this.getVertex(this.indices[r+1],i),this.getVertex(this.indices[r+2],n)},l.prototype.getNormal=function(t,e){var i=3*t;return e.set(this.normals[i],this.normals[i+1],this.normals[i+2])};var g=new a;l.prototype.calculateLocalInertia=function(t,e){this.computeLocalAABB(g);var i=g.upperBound.x-g.lowerBound.x,n=g.upperBound.y-g.lowerBound.y,r=g.upperBound.z-g.lowerBound.z;return e.set(1/12*t*(2*n*2*n+2*r*2*r),1/12*t*(2*i*2*i+2*r*2*r),1/12*t*(2*n*2*n+2*i*2*i))};var y=new r;l.prototype.computeLocalAABB=function(t){var e=t.lowerBound,i=t.upperBound,n=this.vertices.length,r=(this.vertices,y);this.getVertex(0,r),e.copy(r),i.copy(r);for(var o=0;o!==n;o++)this.getVertex(o,r),r.x<e.x?e.x=r.x:r.x>i.x&&(i.x=r.x),r.y<e.y?e.y=r.y:r.y>i.y&&(i.y=r.y),r.z<e.z?e.z=r.z:r.z>i.z&&(i.z=r.z)},l.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},l.prototype.updateBoundingSphereRadius=function(){for(var t=0,e=this.vertices,i=new r,n=0,o=e.length/3;n!==o;n++){this.getVertex(n,i);var a=i.norm2();a>t&&(t=a)}this.boundingSphereRadius=Math.sqrt(t)},new r;var x=new o,w=new a;l.prototype.calculateWorldAABB=function(t,e,i,n){var r=x,o=w;r.position=t,r.quaternion=e,this.aabb.toWorldFrame(r,o),i.copy(o.lowerBound),n.copy(o.upperBound)},l.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},l.createTorus=function(t,e,i,n,r){t=t||1,e=e||.5,i=i||8,n=n||6,r=r||2*Math.PI;for(var o=[],a=[],s=0;s<=i;s++)for(var h=0;h<=n;h++){var c=h/n*r,u=s/i*Math.PI*2,q=(t+e*Math.cos(u))*Math.cos(c),p=(t+e*Math.cos(u))*Math.sin(c),d=e*Math.sin(u);o.push(q,p,d)}for(s=1;s<=i;s++)for(h=1;h<=n;h++){var m=(n+1)*s+h-1,f=(n+1)*(s-1)+h-1,v=(n+1)*(s-1)+h,g=(n+1)*s+h;a.push(m,f,g),a.push(f,v,g)}return new l(o,a)}},{"../collision/AABB":3,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../utils/Octree":50,"./Shape":43}],46:[function(t,e,i){e.exports=r,t("../math/Vec3"),t("../math/Quaternion");var n=t("./Solver");function r(){n.call(this),this.iterations=10,this.tolerance=1e-7}r.prototype=new n;var o=[],a=[],s=[];r.prototype.solve=function(t,e){var i,n,r,l,h,c=0,u=this.iterations,q=this.tolerance*this.tolerance,p=this.equations,d=p.length,m=e.bodies,f=m.length,v=t;if(0!==d)for(var g=0;g!==f;g++)m[g].updateSolveMassProperties();var y=a,x=s,w=o;for(y.length=d,x.length=d,w.length=d,g=0;g!==d;g++){var b=p[g];w[g]=0,x[g]=b.computeB(v),y[g]=1/b.computeC()}if(0!==d){for(g=0;g!==f;g++){var _=(E=m[g]).vlambda,M=E.wlambda;_.set(0,0,0),M&&M.set(0,0,0)}for(c=0;c!==u;c++){l=0;for(var S=0;S!==d;S++)b=p[S],i=x[S],n=y[S],(h=w[S])+(r=n*(i-b.computeGWlambda()-b.eps*h))<b.minForce?r=b.minForce-h:h+r>b.maxForce&&(r=b.maxForce-h),w[S]+=r,l+=r>0?r:-r,b.addToWlambda(r);if(l*l<q)break}for(g=0;g!==f;g++){var E,T=(E=m[g]).velocity,A=E.angularVelocity;T.vadd(E.vlambda,T),A&&A.vadd(E.wlambda,A)}}return c}},{"../math/Quaternion":28,"../math/Vec3":30,"./Solver":47}],47:[function(t,e,i){function n(){this.equations=[]}e.exports=n,n.prototype.solve=function(t,e){return 0},n.prototype.addEquation=function(t){t.enabled&&this.equations.push(t)},n.prototype.removeEquation=function(t){var e=this.equations,i=e.indexOf(t);-1!==i&&e.splice(i,1)},n.prototype.removeAllEquations=function(){this.equations.length=0}},{}],48:[function(t,e,i){e.exports=o,t("../math/Vec3"),t("../math/Quaternion");var n=t("./Solver"),r=t("../objects/Body");function o(t){for(n.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=t,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}o.prototype=new n;var a=[],s=[],l={bodies:[]},h=r.STATIC;function c(t){for(var e=t.length,i=0;i!==e;i++){var n=t[i];if(!(n.visited||n.body.type&h))return n}return!1}var u=[];function q(t,e,i,n){for(u.push(t),t.visited=!0,e(t,i,n);u.length;)for(var r,o=u.pop();r=c(o.children);)r.visited=!0,e(r,i,n),u.push(r)}function p(t,e,i){e.push(t.body);for(var n=t.eqs.length,r=0;r!==n;r++){var o=t.eqs[r];-1===i.indexOf(o)&&i.push(o)}}function d(t,e){return e.id-t.id}o.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},o.prototype.solve=function(t,e){for(var i=a,n=this.nodePool,r=e.bodies,o=this.equations,h=o.length,u=r.length,m=this.subsolver;n.length<u;)n.push(this.createNode());i.length=u;for(var f=0;f<u;f++)i[f]=n[f];for(f=0;f!==u;f++){var v=i[f];v.body=r[f],v.children.length=0,v.eqs.length=0,v.visited=!1}for(var g=0;g!==h;g++){var y=o[g],x=(f=r.indexOf(y.bi),r.indexOf(y.bj)),w=i[f],b=i[x];w.children.push(b),w.eqs.push(y),b.children.push(w),b.eqs.push(y)}var _,M=0,S=s;m.tolerance=this.tolerance,m.iterations=this.iterations;for(var E=l;_=c(i);){S.length=0,E.bodies.length=0,q(_,p,E.bodies,S);var T=S.length;for(S=S.sort(d),f=0;f!==T;f++)m.addEquation(S[f]);m.solve(t,E),m.removeAllEquations(),M++}return M}},{"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"./Solver":47}],49:[function(t,e,i){var n=function(){};e.exports=n,n.prototype={constructor:n,addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;return void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e),this},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return this;var i=this._listeners;if(void 0===i[t])return this;var n=i[t].indexOf(e);return-1!==n&&i[t].splice(n,1),this},dispatchEvent:function(t){if(void 0===this._listeners)return this;var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=0,n=e.length;i<n;i++)e[i].call(this,t)}return this}}},{}],50:[function(t,e,i){var n=t("../collision/AABB"),r=t("../math/Vec3");function o(t){t=t||{},this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new n,this.data=[],this.children=[]}function a(t,e){(e=e||{}).root=null,e.aabb=t,o.call(this,e),this.maxDepth=void 0!==e.maxDepth?e.maxDepth:8}e.exports=a,a.prototype=new o,o.prototype.reset=function(t,e){this.children.length=this.data.length=0},o.prototype.insert=function(t,e,i){var n=this.data;if(i=i||0,!this.aabb.contains(t))return!1;var r=this.children;if(i<(this.maxDepth||this.root.maxDepth)){var o=!1;r.length||(this.subdivide(),o=!0);for(var a=0;8!==a;a++)if(r[a].insert(t,e,i+1))return!0;o&&(r.length=0)}return n.push(e),!0};var s=new r;o.prototype.subdivide=function(){var t=this.aabb,e=t.lowerBound,i=t.upperBound,a=this.children;a.push(new o({aabb:new n({lowerBound:new r(0,0,0)})}),new o({aabb:new n({lowerBound:new r(1,0,0)})}),new o({aabb:new n({lowerBound:new r(1,1,0)})}),new o({aabb:new n({lowerBound:new r(1,1,1)})}),new o({aabb:new n({lowerBound:new r(0,1,1)})}),new o({aabb:new n({lowerBound:new r(0,0,1)})}),new o({aabb:new n({lowerBound:new r(1,0,1)})}),new o({aabb:new n({lowerBound:new r(0,1,0)})})),i.vsub(e,s),s.scale(.5,s);for(var l=this.root||this,h=0;8!==h;h++){var c=a[h];c.root=l;var u=c.aabb.lowerBound;u.x*=s.x,u.y*=s.y,u.z*=s.z,u.vadd(e,u),u.vadd(s,c.aabb.upperBound)}},o.prototype.aabbQuery=function(t,e){this.data,this.children;for(var i=[this];i.length;){var n=i.pop();n.aabb.overlaps(t)&&Array.prototype.push.apply(e,n.data),Array.prototype.push.apply(i,n.children)}return e};var l=new n;o.prototype.rayQuery=function(t,e,i){return t.getAABB(l),l.toLocalFrame(e,l),this.aabbQuery(l,i),i},o.prototype.removeEmptyNodes=function(){for(var t=[this];t.length;){for(var e=t.pop(),i=e.children.length-1;i>=0;i--)e.children[i].data.length||e.children.splice(i,1);Array.prototype.push.apply(t,e.children)}}},{"../collision/AABB":3,"../math/Vec3":30}],51:[function(t,e,i){function n(){this.objects=[],this.type=Object}e.exports=n,n.prototype.release=function(){for(var t=arguments.length,e=0;e!==t;e++)this.objects.push(arguments[e])},n.prototype.get=function(){return 0===this.objects.length?this.constructObject():this.objects.pop()},n.prototype.constructObject=function(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}},{}],52:[function(t,e,i){function n(){this.data={keys:[]}}e.exports=n,n.prototype.get=function(t,e){if(t>e){var i=e;e=t,t=i}return this.data[t+"-"+e]},n.prototype.set=function(t,e,i){if(t>e){var n=e;e=t,t=n}var r=t+"-"+e;this.get(t,e)||this.data.keys.push(r),this.data[r]=i},n.prototype.reset=function(){for(var t=this.data,e=t.keys;e.length>0;)delete t[e.pop()]}},{}],53:[function(t,e,i){function n(){}e.exports=n,n.defaults=function(t,e){for(var i in t=t||{},e)i in t||(t[i]=e[i]);return t}},{}],54:[function(t,e,i){e.exports=o;var n=t("../math/Vec3"),r=t("./Pool");function o(){r.call(this),this.type=n}o.prototype=new r,o.prototype.constructObject=function(){return new n}},{"../math/Vec3":30,"./Pool":51}],55:[function(t,e,i){e.exports=q;var n=t("../collision/AABB"),r=t("../shapes/Shape"),o=t("../collision/Ray"),a=t("../math/Vec3"),s=t("../math/Transform"),l=(t("../shapes/ConvexPolyhedron"),t("../math/Quaternion")),h=(t("../solver/Solver"),t("../utils/Vec3Pool")),c=t("../equations/ContactEquation"),u=t("../equations/FrictionEquation");function q(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new h,this.world=t,this.currentContactMaterial=null,this.enableFrictionReduction=!1}q.prototype.createContactEquation=function(t,e,i,n,r,o){var a;this.contactPointPool.length?((a=this.contactPointPool.pop()).bi=t,a.bj=e):a=new c(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&i.collisionResponse&&n.collisionResponse;var s=this.currentContactMaterial;a.restitution=s.restitution,a.setSpookParams(s.contactEquationStiffness,s.contactEquationRelaxation,this.world.dt);var l=i.material||t.material,h=n.material||e.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(a.restitution=l.restitution*h.restitution),a.si=r||i,a.sj=o||n,a},q.prototype.createFrictionEquationsFromContact=function(t,e){var i=t.bi,n=t.bj,r=t.si,o=t.sj,a=this.world,s=this.currentContactMaterial,l=s.friction,h=r.material||i.material,c=o.material||n.material;if(h&&c&&h.friction>=0&&c.friction>=0&&(l=h.friction*c.friction),l>0){var q=l*a.gravity.length(),p=i.invMass+n.invMass;p>0&&(p=1/p);var d=this.frictionEquationPool,m=d.length?d.pop():new u(i,n,q*p),f=d.length?d.pop():new u(i,n,q*p);return m.bi=f.bi=i,m.bj=f.bj=n,m.minForce=f.minForce=-q*p,m.maxForce=f.maxForce=q*p,m.ri.copy(t.ri),m.rj.copy(t.rj),f.ri.copy(t.ri),f.rj.copy(t.rj),t.ni.tangents(m.t,f.t),m.setSpookParams(s.frictionEquationStiffness,s.frictionEquationRelaxation,a.dt),f.setSpookParams(s.frictionEquationStiffness,s.frictionEquationRelaxation,a.dt),m.enabled=f.enabled=t.enabled,e.push(m,f),!0}return!1};var p=new a,d=new a,m=new a;q.prototype.createFrictionFromAverage=function(t){var e=this.result[this.result.length-1];if(this.createFrictionEquationsFromContact(e,this.frictionResult)&&1!==t){var i=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];p.setZero(),d.setZero(),m.setZero();for(var r=e.bi,o=(e.bj,0);o!==t;o++)(e=this.result[this.result.length-1-o]).bodyA!==r?(p.vadd(e.ni,p),d.vadd(e.ri,d),m.vadd(e.rj,m)):(p.vsub(e.ni,p),d.vadd(e.rj,d),m.vadd(e.ri,m));var a=1/t;d.scale(a,i.ri),m.scale(a,i.rj),n.ri.copy(i.ri),n.rj.copy(i.rj),p.normalize(),p.tangents(i.t,n.t)}};var f=new a,v=new a,g=new l,y=new l;q.prototype.getContacts=function(t,e,i,n,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=n,this.frictionResult=o;for(var s=g,l=y,h=f,c=v,u=0,q=t.length;u!==q;u++){var p=t[u],d=e[u],m=null;p.material&&d.material&&(m=i.getContactMaterial(p.material,d.material)||null);for(var x=0;x<p.shapes.length;x++){p.quaternion.mult(p.shapeOrientations[x],s),p.quaternion.vmult(p.shapeOffsets[x],h),h.vadd(p.position,h);for(var w=p.shapes[x],b=0;b<d.shapes.length;b++){d.quaternion.mult(d.shapeOrientations[b],l),d.quaternion.vmult(d.shapeOffsets[b],c),c.vadd(d.position,c);var _=d.shapes[b];if(!(h.distanceTo(c)>w.boundingSphereRadius+_.boundingSphereRadius)){var M=null;w.material&&_.material&&(M=i.getContactMaterial(w.material,_.material)||null),this.currentContactMaterial=M||m||i.defaultContactMaterial;var S=this[w.type|_.type];S&&(w.type<_.type?S.call(this,w,_,h,c,s,l,p,d,w,_):S.call(this,_,w,c,h,l,s,d,p,w,_))}}}}},q.prototype[r.types.BOX|r.types.BOX]=q.prototype.boxBox=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,i,n,r,o,a,s,t,e)},q.prototype[r.types.BOX|r.types.CONVEXPOLYHEDRON]=q.prototype.boxConvex=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,i,n,r,o,a,s,t,e)},q.prototype[r.types.BOX|r.types.PARTICLE]=q.prototype.boxParticle=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,i,n,r,o,a,s,t,e)},q.prototype[r.types.SPHERE]=q.prototype.sphereSphere=function(t,e,i,n,r,o,a,s){var l=this.createContactEquation(a,s,t,e);n.vsub(i,l.ni),l.ni.normalize(),l.ri.copy(l.ni),l.rj.copy(l.ni),l.ri.mult(t.radius,l.ri),l.rj.mult(-e.radius,l.rj),l.ri.vadd(i,l.ri),l.ri.vsub(a.position,l.ri),l.rj.vadd(n,l.rj),l.rj.vsub(s.position,l.rj),this.result.push(l),this.createFrictionEquationsFromContact(l,this.frictionResult)};var x=new a,w=new a,b=new a;q.prototype[r.types.PLANE|r.types.TRIMESH]=q.prototype.planeTrimesh=function(t,e,i,n,r,o,l,h){var c=new a,u=x;u.set(0,0,1),r.vmult(u,u);for(var q=0;q<e.vertices.length/3;q++){e.getVertex(q,c);var p=new a;p.copy(c),s.pointToWorldFrame(n,o,p,c);var d=w;if(c.vsub(i,d),u.dot(d)<=0){var m=this.createContactEquation(l,h,t,e);m.ni.copy(u);var f=b;u.scale(d.dot(u),f),c.vsub(f,f),m.ri.copy(f),m.ri.vsub(l.position,m.ri),m.rj.copy(c),m.rj.vsub(h.position,m.rj),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}};var _=new a,M=new a,S=(new a,new a),E=new a,T=new a,A=new a,L=new a,z=new a,P=new a,R=new a,C=new a,I=new a,N=new a,O=new n,B=[];q.prototype[r.types.SPHERE|r.types.TRIMESH]=q.prototype.sphereTrimesh=function(t,e,i,n,r,a,l,h){var c=T,u=A,q=L,p=z,d=P,m=R,f=O,v=E,g=M,y=B;s.pointToLocalFrame(n,a,i,d);var x=t.radius;f.lowerBound.set(d.x-x,d.y-x,d.z-x),f.upperBound.set(d.x+x,d.y+x,d.z+x),e.getTrianglesInAABB(f,y);for(var w=S,b=t.radius*t.radius,D=0;D<y.length;D++)for(var F=0;F<3;F++)e.getVertex(e.indices[3*y[D]+F],w),w.vsub(d,g),g.norm2()<=b&&(v.copy(w),s.pointToWorldFrame(n,a,v,w),w.vsub(i,g),(j=this.createContactEquation(l,h,t,e)).ni.copy(g),j.ni.normalize(),j.ri.copy(j.ni),j.ri.scale(t.radius,j.ri),j.ri.vadd(i,j.ri),j.ri.vsub(l.position,j.ri),j.rj.copy(w),j.rj.vsub(h.position,j.rj),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult));for(D=0;D<y.length;D++)for(F=0;F<3;F++){e.getVertex(e.indices[3*y[D]+F],c),e.getVertex(e.indices[3*y[D]+(F+1)%3],u),u.vsub(c,q),d.vsub(u,m);var V=m.dot(q);d.vsub(c,m);var U=m.dot(q);if(U>0&&V<0&&(d.vsub(c,m),p.copy(q),p.normalize(),U=m.dot(p),p.scale(U,m),m.vadd(c,m),(Y=m.distanceTo(d))<t.radius)){var j=this.createContactEquation(l,h,t,e);m.vsub(d,j.ni),j.ni.normalize(),j.ni.scale(t.radius,j.ri),s.pointToWorldFrame(n,a,m,m),m.vsub(h.position,j.rj),s.vectorToWorldFrame(a,j.ni,j.ni),s.vectorToWorldFrame(a,j.ri,j.ri),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult)}}for(var G=C,H=I,k=N,W=_,X=(D=0,y.length);D!==X;D++){e.getTriangleVertices(y[D],G,H,k),e.getNormal(y[D],W),d.vsub(G,m);var Y=m.dot(W);W.scale(Y,m),d.vsub(m,m),Y=m.distanceTo(d),o.pointInTriangle(m,G,H,k)&&Y<t.radius&&(j=this.createContactEquation(l,h,t,e),m.vsub(d,j.ni),j.ni.normalize(),j.ni.scale(t.radius,j.ri),s.pointToWorldFrame(n,a,m,m),m.vsub(h.position,j.rj),s.vectorToWorldFrame(a,j.ni,j.ni),s.vectorToWorldFrame(a,j.ri,j.ri),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult))}y.length=0};var D=new a,F=new a;q.prototype[r.types.SPHERE|r.types.PLANE]=q.prototype.spherePlane=function(t,e,i,n,r,o,a,s){var l=this.createContactEquation(a,s,t,e);if(l.ni.set(0,0,1),o.vmult(l.ni,l.ni),l.ni.negate(l.ni),l.ni.normalize(),l.ni.mult(t.radius,l.ri),i.vsub(n,D),l.ni.mult(l.ni.dot(D),F),D.vsub(F,l.rj),-D.dot(l.ni)<=t.radius){var h=l.ri,c=l.rj;h.vadd(i,h),h.vsub(a.position,h),c.vadd(n,c),c.vsub(s.position,c),this.result.push(l),this.createFrictionEquationsFromContact(l,this.frictionResult)}};var V=new a,U=new a,j=new a;function G(t,e,i){for(var n=null,r=t.length,o=0;o!==r;o++){var a=t[o],s=V;t[(o+1)%r].vsub(a,s);var l=U;s.cross(e,l);var h=j;i.vsub(a,h);var c=l.dot(h);if(!(null===n||c>0&&!0===n||c<=0&&!1===n))return!1;null===n&&(n=c>0)}return!0}var H=new a,k=new a,W=new a,X=new a,Y=[new a,new a,new a,new a,new a,new a],Z=new a,J=new a,Q=new a,K=new a;q.prototype[r.types.SPHERE|r.types.BOX]=q.prototype.sphereBox=function(t,e,i,n,r,o,a,s){var l=this.v3pool,h=Y;i.vsub(n,H),e.getSideNormals(h,o);for(var c=t.radius,u=!1,q=J,p=Q,d=K,m=null,f=0,v=0,g=0,y=null,x=0,w=h.length;x!==w&&!1===u;x++){var b=k;b.copy(h[x]);var _=b.norm();b.normalize();var M=H.dot(b);if(M<_+c&&M>0){var S=W,E=X;S.copy(h[(x+1)%3]),E.copy(h[(x+2)%3]);var T=S.norm(),A=E.norm();S.normalize(),E.normalize();var L=H.dot(S),z=H.dot(E);if(L<T&&L>-T&&z<A&&z>-A){var P=Math.abs(M-_-c);(null===y||P<y)&&(y=P,v=L,g=z,m=_,q.copy(b),p.copy(S),d.copy(E),f++)}}}if(f){u=!0;var R=this.createContactEquation(a,s,t,e);q.mult(-c,R.ri),R.ni.copy(q),R.ni.negate(R.ni),q.mult(m,q),p.mult(v,p),q.vadd(p,q),d.mult(g,d),q.vadd(d,R.rj),R.ri.vadd(i,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(n,R.rj),R.rj.vsub(s.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}for(var C=l.get(),I=Z,N=0;2!==N&&!u;N++)for(var O=0;2!==O&&!u;O++)for(var B=0;2!==B&&!u;B++)C.set(0,0,0),N?C.vadd(h[0],C):C.vsub(h[0],C),O?C.vadd(h[1],C):C.vsub(h[1],C),B?C.vadd(h[2],C):C.vsub(h[2],C),n.vadd(C,I),I.vsub(i,I),I.norm2()<c*c&&(u=!0,(R=this.createContactEquation(a,s,t,e)).ri.copy(I),R.ri.normalize(),R.ni.copy(R.ri),R.ri.mult(c,R.ri),R.rj.copy(C),R.ri.vadd(i,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(n,R.rj),R.rj.vsub(s.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult));l.release(C),C=null;var D=l.get(),F=l.get(),V=(R=l.get(),l.get()),U=(P=l.get(),h.length);for(N=0;N!==U&&!u;N++)for(O=0;O!==U&&!u;O++)if(N%3!=O%3){h[O].cross(h[N],D),D.normalize(),h[N].vadd(h[O],F),R.copy(i),R.vsub(F,R),R.vsub(n,R);var j=R.dot(D);for(D.mult(j,V),B=0;B===N%3||B===O%3;)B++;P.copy(i),P.vsub(V,P),P.vsub(F,P),P.vsub(n,P);var G=Math.abs(j),$=P.norm();if(G<h[B].norm()&&$<c){u=!0;var tt=this.createContactEquation(a,s,t,e);F.vadd(V,tt.rj),tt.rj.copy(tt.rj),P.negate(tt.ni),tt.ni.normalize(),tt.ri.copy(tt.rj),tt.ri.vadd(n,tt.ri),tt.ri.vsub(i,tt.ri),tt.ri.normalize(),tt.ri.mult(c,tt.ri),tt.ri.vadd(i,tt.ri),tt.ri.vsub(a.position,tt.ri),tt.rj.vadd(n,tt.rj),tt.rj.vsub(s.position,tt.rj),this.result.push(tt),this.createFrictionEquationsFromContact(tt,this.frictionResult)}}l.release(D,F,R,V,P)};var $=new a,tt=new a,et=new a,it=new a,nt=new a,rt=new a,ot=new a,at=new a,st=new a,lt=new a;q.prototype[r.types.SPHERE|r.types.CONVEXPOLYHEDRON]=q.prototype.sphereConvex=function(t,e,i,n,r,o,a,s){var l=this.v3pool;i.vsub(n,$);for(var h=e.faceNormals,c=e.faces,u=e.vertices,q=t.radius,p=0;p!==u.length;p++){var d=u[p],m=nt;o.vmult(d,m),n.vadd(m,m);var f=it;if(m.vsub(i,f),f.norm2()<q*q)return v=!0,(P=this.createContactEquation(a,s,t,e)).ri.copy(f),P.ri.normalize(),P.ni.copy(P.ri),P.ri.mult(q,P.ri),m.vsub(n,P.rj),P.ri.vadd(i,P.ri),P.ri.vsub(a.position,P.ri),P.rj.vadd(n,P.rj),P.rj.vsub(s.position,P.rj),this.result.push(P),void this.createFrictionEquationsFromContact(P,this.frictionResult)}for(var v=!1,g=(p=0,c.length);p!==g&&!1===v;p++){var y=h[p],x=c[p],w=rt;o.vmult(y,w);var b=ot;o.vmult(u[x[0]],b),b.vadd(n,b);var _=at;w.mult(-q,_),i.vadd(_,_);var M=st;_.vsub(b,M);var S=M.dot(w),E=lt;if(i.vsub(b,E),S<0&&E.dot(w)>0){for(var T=[],A=0,L=x.length;A!==L;A++){var z=l.get();o.vmult(u[x[A]],z),n.vadd(z,z),T.push(z)}if(G(T,w,i)){v=!0;var P=this.createContactEquation(a,s,t,e);w.mult(-q,P.ri),w.negate(P.ni);var R=l.get();w.mult(-S,R);var C=l.get();w.mult(-q,C),i.vsub(n,P.rj),P.rj.vadd(C,P.rj),P.rj.vadd(R,P.rj),P.rj.vadd(n,P.rj),P.rj.vsub(s.position,P.rj),P.ri.vadd(i,P.ri),P.ri.vsub(a.position,P.ri),l.release(R),l.release(C),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult),A=0;for(var I=T.length;A!==I;A++)l.release(T[A]);return}for(A=0;A!==x.length;A++){var N=l.get(),O=l.get();o.vmult(u[x[(A+1)%x.length]],N),o.vmult(u[x[(A+2)%x.length]],O),n.vadd(N,N),n.vadd(O,O);var B=tt;O.vsub(N,B);var D=et;B.unit(D);var F=l.get(),V=l.get();i.vsub(N,V);var U=V.dot(D);D.mult(U,F),F.vadd(N,F);var j=l.get();if(F.vsub(i,j),U>0&&U*U<B.norm2()&&j.norm2()<q*q){for(P=this.createContactEquation(a,s,t,e),F.vsub(n,P.rj),F.vsub(i,P.ni),P.ni.normalize(),P.ni.mult(q,P.ri),P.rj.vadd(n,P.rj),P.rj.vsub(s.position,P.rj),P.ri.vadd(i,P.ri),P.ri.vsub(a.position,P.ri),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult),A=0,I=T.length;A!==I;A++)l.release(T[A]);return l.release(N),l.release(O),l.release(F),l.release(j),void l.release(V)}l.release(N),l.release(O),l.release(F),l.release(j),l.release(V)}for(A=0,I=T.length;A!==I;A++)l.release(T[A])}}},new a,new a,q.prototype[r.types.PLANE|r.types.BOX]=q.prototype.planeBox=function(t,e,i,n,r,o,a,s){e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.planeConvex(t,e.convexPolyhedronRepresentation,i,n,r,o,a,s)};var ht=new a,ct=new a,ut=new a,qt=new a;q.prototype[r.types.PLANE|r.types.CONVEXPOLYHEDRON]=q.prototype.planeConvex=function(t,e,i,n,r,o,a,s){var l=ht,h=ct;h.set(0,0,1),r.vmult(h,h);for(var c=0,u=ut,q=0;q!==e.vertices.length;q++)if(l.copy(e.vertices[q]),o.vmult(l,l),n.vadd(l,l),l.vsub(i,u),h.dot(u)<=0){var p=this.createContactEquation(a,s,t,e),d=qt;h.mult(h.dot(u),d),l.vsub(d,d),d.vsub(i,p.ri),p.ni.copy(h),l.vsub(n,p.rj),p.ri.vadd(i,p.ri),p.ri.vsub(a.position,p.ri),p.rj.vadd(n,p.rj),p.rj.vsub(s.position,p.rj),this.result.push(p),c++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(p,this.frictionResult)}this.enableFrictionReduction&&c&&this.createFrictionFromAverage(c)};var pt=new a,dt=new a;q.prototype[r.types.CONVEXPOLYHEDRON]=q.prototype.convexConvex=function(t,e,i,n,r,o,a,s,l,h,c,u){var q=pt;if(!(i.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,i,r,n,o,q,c,u)){var p=[],d=dt;t.clipAgainstHull(i,r,e,n,o,q,-100,100,p);for(var m=0,f=0;f!==p.length;f++){var v=this.createContactEquation(a,s,t,e,l,h),g=v.ri,y=v.rj;q.negate(v.ni),p[f].normal.negate(d),d.mult(p[f].depth,d),p[f].point.vadd(d,g),y.copy(p[f].point),g.vsub(i,g),y.vsub(n,y),g.vadd(i,g),g.vsub(a.position,g),y.vadd(n,y),y.vsub(s.position,y),this.result.push(v),m++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&m&&this.createFrictionFromAverage(m)}};var mt=new a,ft=new a,vt=new a;q.prototype[r.types.PLANE|r.types.PARTICLE]=q.prototype.planeParticle=function(t,e,i,n,r,o,a,s){var l=mt;l.set(0,0,1),a.quaternion.vmult(l,l);var h=ft;if(n.vsub(a.position,h),l.dot(h)<=0){var c=this.createContactEquation(s,a,e,t);c.ni.copy(l),c.ni.negate(c.ni),c.ri.set(0,0,0);var u=vt;l.mult(l.dot(n),u),n.vsub(u,u),c.rj.copy(u),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}};var gt=new a;q.prototype[r.types.PARTICLE|r.types.SPHERE]=q.prototype.sphereParticle=function(t,e,i,n,r,o,a,s){var l=gt;if(l.set(0,0,1),n.vsub(i,l),l.norm2()<=t.radius*t.radius){var h=this.createContactEquation(s,a,e,t);l.normalize(),h.rj.copy(l),h.rj.mult(t.radius,h.rj),h.ni.copy(l),h.ni.negate(h.ni),h.ri.set(0,0,0),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}};var yt=new l,xt=new a,wt=(new a,new a),bt=new a,_t=new a;q.prototype[r.types.PARTICLE|r.types.CONVEXPOLYHEDRON]=q.prototype.convexParticle=function(t,e,i,n,r,o,a,s){var l=-1,h=wt,c=_t,u=null,q=xt;if(q.copy(n),q.vsub(i,q),r.conjugate(yt),yt.vmult(q,q),t.pointIsInside(q)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(i,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(var p=0,d=t.faces.length;p!==d;p++){var m=[t.worldVertices[t.faces[p][0]]],f=t.worldFaceNormals[p];n.vsub(m[0],bt);var v=-f.dot(bt);(null===u||Math.abs(v)<Math.abs(u))&&(u=v,l=p,h.copy(f))}if(-1!==l){var g=this.createContactEquation(s,a,e,t);h.mult(u,c),c.vadd(n,c),c.vsub(i,c),g.rj.copy(c),h.negate(g.ni),g.ri.set(0,0,0);var y=g.ri,x=g.rj;y.vadd(n,y),y.vsub(s.position,y),x.vadd(i,x),x.vsub(a.position,x),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}},q.prototype[r.types.BOX|r.types.HEIGHTFIELD]=q.prototype.boxHeightfield=function(t,e,i,n,r,o,a,s){t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,i,n,r,o,a,s)};var Mt=new a,St=new a,Et=[0];q.prototype[r.types.CONVEXPOLYHEDRON|r.types.HEIGHTFIELD]=q.prototype.convexHeightfield=function(t,e,i,n,r,o,a,l){var h=e.data,c=e.elementSize,u=t.boundingSphereRadius,q=St,p=Et,d=Mt;s.pointToLocalFrame(n,o,i,d);var m=Math.floor((d.x-u)/c)-1,f=Math.ceil((d.x+u)/c)+1,v=Math.floor((d.y-u)/c)-1,g=Math.ceil((d.y+u)/c)+1;if(!(f<0||g<0||m>h.length||v>h[0].length)){m<0&&(m=0),f<0&&(f=0),v<0&&(v=0),g<0&&(g=0),m>=h.length&&(m=h.length-1),f>=h.length&&(f=h.length-1),g>=h[0].length&&(g=h[0].length-1),v>=h[0].length&&(v=h[0].length-1);var y=[];e.getRectMinMax(m,v,f,g,y);var x=y[0],w=y[1];if(!(d.z-u>w||d.z+u<x))for(var b=m;b<f;b++)for(var _=v;_<g;_++)e.getConvexTrianglePillar(b,_,!1),s.pointToWorldFrame(n,o,e.pillarOffset,q),i.distanceTo(q)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.convexConvex(t,e.pillarConvex,i,q,r,o,a,l,null,null,p,null),e.getConvexTrianglePillar(b,_,!0),s.pointToWorldFrame(n,o,e.pillarOffset,q),i.distanceTo(q)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.convexConvex(t,e.pillarConvex,i,q,r,o,a,l,null,null,p,null)}};var Tt=new a,At=new a;q.prototype[r.types.SPHERE|r.types.HEIGHTFIELD]=q.prototype.sphereHeightfield=function(t,e,i,n,r,o,a,l){var h=e.data,c=t.radius,u=e.elementSize,q=At,p=Tt;s.pointToLocalFrame(n,o,i,p);var d=Math.floor((p.x-c)/u)-1,m=Math.ceil((p.x+c)/u)+1,f=Math.floor((p.y-c)/u)-1,v=Math.ceil((p.y+c)/u)+1;if(!(m<0||v<0||d>h.length||v>h[0].length)){d<0&&(d=0),m<0&&(m=0),f<0&&(f=0),v<0&&(v=0),d>=h.length&&(d=h.length-1),m>=h.length&&(m=h.length-1),v>=h[0].length&&(v=h[0].length-1),f>=h[0].length&&(f=h[0].length-1);var g=[];e.getRectMinMax(d,f,m,v,g);var y=g[0],x=g[1];if(!(p.z-c>x||p.z+c<y))for(var w=this.result,b=d;b<m;b++)for(var _=f;_<v;_++){var M=w.length;if(e.getConvexTrianglePillar(b,_,!1),s.pointToWorldFrame(n,o,e.pillarOffset,q),i.distanceTo(q)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.sphereConvex(t,e.pillarConvex,i,q,r,o,a,l),e.getConvexTrianglePillar(b,_,!0),s.pointToWorldFrame(n,o,e.pillarOffset,q),i.distanceTo(q)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&this.sphereConvex(t,e.pillarConvex,i,q,r,o,a,l),w.length-M>2)return}}}},{"../collision/AABB":3,"../collision/Ray":9,"../equations/ContactEquation":19,"../equations/FrictionEquation":21,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../shapes/ConvexPolyhedron":38,"../shapes/Shape":43,"../solver/Solver":47,"../utils/Vec3Pool":54}],56:[function(t,e,i){e.exports=g;var n=t("../shapes/Shape"),r=t("../math/Vec3"),o=t("../math/Quaternion"),a=t("../solver/GSSolver"),s=(t("../utils/Vec3Pool"),t("../equations/ContactEquation"),t("../equations/FrictionEquation"),t("./Narrowphase")),l=t("../utils/EventTarget"),h=t("../collision/ArrayCollisionMatrix"),c=t("../material/Material"),u=t("../material/ContactMaterial"),q=t("../objects/Body"),p=t("../utils/TupleDictionary"),d=t("../collision/RaycastResult"),m=t("../collision/AABB"),f=t("../collision/Ray"),v=t("../collision/NaiveBroadphase");function g(){l.apply(this),this.dt=-1,this.allowSleep=!1,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=0,this.quatNormalizeFast=!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new r,this.broadphase=new v,this.bodies=[],this.solver=new a,this.constraints=[],this.narrowphase=new s(this),this.collisionMatrix=new h,this.collisionMatrixPrevious=new h,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new p,this.defaultMaterial=new c("default"),this.defaultContactMaterial=new u(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null}}g.prototype=new l,new m;var y=new f;if(g.prototype.getContactMaterial=function(t,e){return this.contactMaterialTable.get(t.id,e.id)},g.prototype.numObjects=function(){return this.bodies.length},g.prototype.collisionMatrixTick=function(){var t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset()},g.prototype.add=g.prototype.addBody=function(t){-1===this.bodies.indexOf(t)&&(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof q&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.dispatchEvent(this.addBodyEvent))},g.prototype.addConstraint=function(t){this.constraints.push(t)},g.prototype.removeConstraint=function(t){var e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)},g.prototype.rayTest=function(t,e,i){i instanceof d?this.raycastClosest(t,e,{skipBackfaces:!0},i):this.raycastAll(t,e,{skipBackfaces:!0},i)},g.prototype.raycastAll=function(t,e,i,n){return i.mode=f.ALL,i.from=t,i.to=e,i.callback=n,y.intersectWorld(this,i)},g.prototype.raycastAny=function(t,e,i,n){return i.mode=f.ANY,i.from=t,i.to=e,i.result=n,y.intersectWorld(this,i)},g.prototype.raycastClosest=function(t,e,i,n){return i.mode=f.CLOSEST,i.from=t,i.to=e,i.result=n,y.intersectWorld(this,i)},g.prototype.remove=function(t){t.world=null;var e=this.bodies.length-1,i=this.bodies,n=i.indexOf(t);if(-1!==n){i.splice(n,1);for(var r=0;r!==i.length;r++)i[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,this.dispatchEvent(this.removeBodyEvent)}},g.prototype.removeBody=g.prototype.remove,g.prototype.addMaterial=function(t){this.materials.push(t)},g.prototype.addContactMaterial=function(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)},"undefined"==typeof performance&&(performance={}),!performance.now){var x=Date.now();performance.timing&&performance.timing.navigationStart&&(x=performance.timing.navigationStart),performance.now=function(){return Date.now()-x}}var w=new r;g.prototype.step=function(t,e,i){if(i=i||10,0===(e=e||0))this.internalStep(t),this.time+=t;else{var n=Math.floor((this.time+e)/t)-Math.floor(this.time/t);n=Math.min(n,i);for(var r=performance.now(),o=0;o!==n&&(this.internalStep(t),!(performance.now()-r>1e3*t));o++);this.time+=e;for(var a=this.time%t/t,s=w,l=this.bodies,h=0;h!==l.length;h++){var c=l[h];c.type!==q.STATIC&&c.sleepState!==q.SLEEPING?(c.position.vsub(c.previousPosition,s),s.scale(a,s),c.position.vadd(s,c.interpolatedPosition)):(c.interpolatedPosition.copy(c.position),c.interpolatedQuaternion.copy(c.quaternion))}}};var b={type:"postStep"},_={type:"preStep"},M={type:"collide",body:null,contact:null},S=[],E=[],T=[],A=[],L=(new r,new r,new r,new r,new r,new r,new r,new r,new r,new o,new o),z=new o,P=new r;g.prototype.internalStep=function(t){this.dt=t;var e,i=this.contacts,r=T,o=A,a=this.numObjects(),s=this.bodies,l=this.solver,h=this.gravity,c=this.doProfiling,u=this.profile,p=q.DYNAMIC,d=this.constraints,m=E,f=(h.norm(),h.x),v=h.y,g=h.z,y=0;for(c&&(e=performance.now()),y=0;y!==a;y++)if((V=s[y]).type&p){var x=V.force,w=V.mass;x.x+=w*f,x.y+=w*v,x.z+=w*g}y=0;for(var R=this.subsystems.length;y!==R;y++)this.subsystems[y].update();c&&(e=performance.now()),r.length=0,o.length=0,this.broadphase.collisionPairs(this,r,o),c&&(u.broadphase=performance.now()-e);var C=d.length;for(y=0;y!==C;y++)if(!(j=d[y]).collideConnected)for(var I=r.length-1;I>=0;I-=1)(j.bodyA===r[I]&&j.bodyB===o[I]||j.bodyB===r[I]&&j.bodyA===o[I])&&(r.splice(I,1),o.splice(I,1));this.collisionMatrixTick(),c&&(e=performance.now());var N=S,O=i.length;for(y=0;y!==O;y++)N.push(i[y]);i.length=0;var B=this.frictionEquations.length;for(y=0;y!==B;y++)m.push(this.frictionEquations[y]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(r,o,this,i,N,this.frictionEquations,m),c&&(u.narrowphase=performance.now()-e),c&&(e=performance.now()),y=0;y<this.frictionEquations.length;y++)l.addEquation(this.frictionEquations[y]);for(var D=i.length,F=0;F!==D;F++){var V=(j=i[F]).bi,U=j.bj;j.si,j.sj,(V.material&&U.material&&this.getContactMaterial(V.material,U.material)||this.defaultContactMaterial).friction,V.material&&U.material&&(V.material.friction>=0&&U.material.friction>=0&&(V.material.friction,U.material.friction),V.material.restitution>=0&&U.material.restitution>=0&&(j.restitution=V.material.restitution*U.material.restitution)),l.addEquation(j),V.allowSleep&&V.type===q.DYNAMIC&&V.sleepState===q.SLEEPING&&U.sleepState===q.AWAKE&&U.type!==q.STATIC&&U.velocity.norm2()+U.angularVelocity.norm2()>=2*Math.pow(U.sleepSpeedLimit,2)&&(V._wakeUpAfterNarrowphase=!0),U.allowSleep&&U.type===q.DYNAMIC&&U.sleepState===q.SLEEPING&&V.sleepState===q.AWAKE&&V.type!==q.STATIC&&V.velocity.norm2()+V.angularVelocity.norm2()>=2*Math.pow(V.sleepSpeedLimit,2)&&(U._wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(V,U,!0),this.collisionMatrixPrevious.get(V,U)||(M.body=U,M.contact=j,V.dispatchEvent(M),M.body=V,U.dispatchEvent(M))}for(c&&(u.makeContactConstraints=performance.now()-e,e=performance.now()),y=0;y!==a;y++)(V=s[y])._wakeUpAfterNarrowphase&&(V.wakeUp(),V._wakeUpAfterNarrowphase=!1);for(C=d.length,y=0;y!==C;y++){var j;(j=d[y]).update(),I=0;for(var G=j.equations.length;I!==G;I++){var H=j.equations[I];l.addEquation(H)}}l.solve(t,this),c&&(u.solve=performance.now()-e),l.removeAllEquations();var k=Math.pow;for(y=0;y!==a;y++)if((V=s[y]).type&p){var W=k(1-V.linearDamping,t),X=V.velocity;X.mult(W,X);var Y=V.angularVelocity;if(Y){var Z=k(1-V.angularDamping,t);Y.mult(Z,Y)}}for(this.dispatchEvent(_),y=0;y!==a;y++)(V=s[y]).preStep&&V.preStep.call(V);c&&(e=performance.now());var J=L,Q=z,K=this.stepnumber,$=q.DYNAMIC|q.KINEMATIC,tt=K%(this.quatNormalizeSkip+1)==0,et=this.quatNormalizeFast,it=.5*t;for(n.types.PLANE,n.types.CONVEXPOLYHEDRON,y=0;y!==a;y++){var nt=s[y],rt=nt.force,ot=nt.torque;if(nt.type&$&&nt.sleepState!==q.SLEEPING){var at=nt.velocity,st=nt.angularVelocity,lt=nt.position,ht=nt.quaternion,ct=nt.invMass,ut=nt.invInertiaWorld;at.x+=rt.x*ct*t,at.y+=rt.y*ct*t,at.z+=rt.z*ct*t,nt.angularVelocity&&(ut.vmult(ot,P),P.mult(t,P),P.vadd(st,st)),lt.x+=at.x*t,lt.y+=at.y*t,lt.z+=at.z*t,nt.angularVelocity&&(J.set(st.x,st.y,st.z,0),J.mult(ht,Q),ht.x+=it*Q.x,ht.y+=it*Q.y,ht.z+=it*Q.z,ht.w+=it*Q.w,tt&&(et?ht.normalizeFast():ht.normalize())),nt.aabb&&(nt.aabbNeedsUpdate=!0),nt.updateInertiaWorld&&nt.updateInertiaWorld()}}for(this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=performance.now()-e),this.time+=t,this.stepnumber+=1,this.dispatchEvent(b),y=0;y!==a;y++){var qt=(V=s[y]).postStep;qt&&qt.call(V)}if(this.allowSleep)for(y=0;y!==a;y++)s[y].sleepTick(this.time)},g.prototype.clearForces=function(){for(var t=this.bodies,e=t.length,i=0;i!==e;i++){var n=t[i];n.force,n.torque,n.force.set(0,0,0),n.torque.set(0,0,0)}}},{"../collision/AABB":3,"../collision/ArrayCollisionMatrix":4,"../collision/NaiveBroadphase":7,"../collision/Ray":9,"../collision/RaycastResult":10,"../equations/ContactEquation":19,"../equations/FrictionEquation":21,"../material/ContactMaterial":24,"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Shape":43,"../solver/GSSolver":46,"../utils/EventTarget":49,"../utils/TupleDictionary":52,"../utils/Vec3Pool":54,"./Narrowphase":55}]},{},[2])(2)}},e={};function i(n){var r=e[n];if(void 0!==r)return r.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,i),o.exports}i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},i.d=function(t,e){for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,i){for(var n=0;n<i.length;n++){var r=i[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,i){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===t(o)?o:String(o)),r)}var o}var n=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.onResize(),this.bindEvents()}var i,n;return i=t,(n=[{key:"bindEvents",value:function(){var t=this;window.addEventListener("resize",(function(){return t.onResize()}))}},{key:"onResize",value:function(){this.isMobile=window.matchMedia("(max-width: 767px)").matches,this.isSmallMobile=window.matchMedia("(max-width: 400px)").matches,this.W=window.innerWidth,this.H=window.innerHeight}}])&&e(i.prototype,n),Object.defineProperty(i,"prototype",{writable:!1}),t}();void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==0&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(null!=n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});var r=0,o=1,a=2,s=1,l=2,h=3,c=0,u=1,q=2,p=0,d=2,m=0,f=1,v=2,g=3,y=4,x=5,w=100,b=101,_=102,M=103,S=104,E=200,T=201,A=202,L=203,z=204,P=205,R=206,C=207,I=208,N=209,O=210,B=0,D=1,F=2,V=3,U=4,j=5,G=6,H=7,k=0,W=1,X=2,Y=0,Z=1,J=2,Q=3,K=4,$=5,tt=301,et=302,it=303,nt=304,rt=305,ot=306,at=307,st=1e3,lt=1001,ht=1002,ct=1003,ut=1004,qt=1005,pt=1006,dt=1007,mt=1008,ft=1009,vt=1010,gt=1011,yt=1012,xt=1013,wt=1014,bt=1015,_t=1016,Mt=1017,St=1018,Et=1019,Tt=1020,At=1021,Lt=1022,zt=1023,Pt=1024,Rt=1025,Ct=1026,It=1027,Nt=1028,Ot=33776,Bt=33777,Dt=33778,Ft=33779,Vt=35840,Ut=35841,jt=35842,Gt=35843,Ht=36196,kt=37808,Wt=37809,Xt=37810,Yt=37811,Zt=37812,Jt=37813,Qt=37814,Kt=37815,$t=37816,te=37817,ee=37818,ie=37819,ne=37820,re=37821,oe=2300,ae=2301,se=2302,le=2400,he=2401,ce=2402,ue=0,qe=3e3,pe=3001,de=3007,me=3002,fe=3003,ve=3004,ge=3005,ye=3006,xe=3200,we=3201,be=0,_e=1,Me=7680,Se=519,Ee=35044,Te=35048;function Ae(){}Object.assign(Ae.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners[t];if(void 0!==i){var n=i.indexOf(e);-1!==n&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=e.slice(0),n=0,r=i.length;n<r;n++)i[n].call(this,t)}}}});for(var Le=[],ze=0;ze<256;ze++)Le[ze]=(ze<16?"0":"")+ze.toString(16);var Pe={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Le[255&t]+Le[t>>8&255]+Le[t>>16&255]+Le[t>>24&255]+"-"+Le[255&e]+Le[e>>8&255]+"-"+Le[e>>16&15|64]+Le[e>>24&255]+"-"+Le[63&i|128]+Le[i>>8&255]+"-"+Le[i>>16&255]+Le[i>>24&255]+Le[255&n]+Le[n>>8&255]+Le[n>>16&255]+Le[n>>24&255]).toUpperCase()},clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*Pe.DEG2RAD},radToDeg:function(t){return t*Pe.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function Re(t,e){this.x=t||0,this.y=e||0}function Ce(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}Object.defineProperties(Re.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(Re.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*i-o*n+t.x,this.y=r*n+o*i+t.y,this}}),Object.assign(Ce,{slerp:function(t,e,i,n){return i.copy(t).slerp(e,n)},slerpFlat:function(t,e,i,n,r,o,a){var s=i[n+0],l=i[n+1],h=i[n+2],c=i[n+3],u=r[o+0],q=r[o+1],p=r[o+2],d=r[o+3];if(c!==d||s!==u||l!==q||h!==p){var m=1-a,f=s*u+l*q+h*p+c*d,v=f>=0?1:-1,g=1-f*f;if(g>Number.EPSILON){var y=Math.sqrt(g),x=Math.atan2(y,f*v);m=Math.sin(m*x)/y,a=Math.sin(a*x)/y}var w=a*v;if(s=s*m+u*w,l=l*m+q*w,h=h*m+p*w,c=c*m+d*w,m===1-a){var b=1/Math.sqrt(s*s+l*l+h*h+c*c);s*=b,l*=b,h*=b,c*=b}}t[e]=s,t[e+1]=l,t[e+2]=h,t[e+3]=c}}),Object.defineProperties(Ce.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this._onChangeCallback()}}}),Object.assign(Ce.prototype,{isQuaternion:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,n=t._y,r=t._z,o=t.order,a=Math.cos,s=Math.sin,l=a(i/2),h=a(n/2),c=a(r/2),u=s(i/2),q=s(n/2),p=s(r/2);return"XYZ"===o?(this._x=u*h*c+l*q*p,this._y=l*q*c-u*h*p,this._z=l*h*p+u*q*c,this._w=l*h*c-u*q*p):"YXZ"===o?(this._x=u*h*c+l*q*p,this._y=l*q*c-u*h*p,this._z=l*h*p-u*q*c,this._w=l*h*c+u*q*p):"ZXY"===o?(this._x=u*h*c-l*q*p,this._y=l*q*c+u*h*p,this._z=l*h*p+u*q*c,this._w=l*h*c-u*q*p):"ZYX"===o?(this._x=u*h*c-l*q*p,this._y=l*q*c+u*h*p,this._z=l*h*p-u*q*c,this._w=l*h*c+u*q*p):"YZX"===o?(this._x=u*h*c+l*q*p,this._y=l*q*c+u*h*p,this._z=l*h*p-u*q*c,this._w=l*h*c-u*q*p):"XZY"===o&&(this._x=u*h*c-l*q*p,this._y=l*q*c-u*h*p,this._z=l*h*p+u*q*c,this._w=l*h*c+u*q*p),!1!==e&&this._onChangeCallback(),this},setFromAxisAngle:function(t,e){var i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this},setFromRotationMatrix:function(t){var e,i=t.elements,n=i[0],r=i[4],o=i[8],a=i[1],s=i[5],l=i[9],h=i[2],c=i[6],u=i[10],q=n+s+u;return q>0?(e=.5/Math.sqrt(q+1),this._w=.25/e,this._x=(c-l)*e,this._y=(o-h)*e,this._z=(a-r)*e):n>s&&n>u?(e=2*Math.sqrt(1+n-s-u),this._w=(c-l)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(o+h)/e):s>u?(e=2*Math.sqrt(1+s-n-u),this._w=(o-h)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(l+c)/e):(e=2*Math.sqrt(1+u-n-s),this._w=(a-r)/e,this._x=(o+h)/e,this._y=(l+c)/e,this._z=.25*e),this._onChangeCallback(),this},setFromUnitVectors:function(t,e){var i=t.dot(e)+1;return i<1e-6?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(Pe.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var i=this.angleTo(t);if(0===i)return this;var n=Math.min(1,e/i);return this.slerp(t,n),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var i=t._x,n=t._y,r=t._z,o=t._w,a=e._x,s=e._y,l=e._z,h=e._w;return this._x=i*h+o*a+n*l-r*s,this._y=n*h+o*s+r*a-i*l,this._z=r*h+o*l+i*s-n*a,this._w=o*h-i*a-n*s-r*l,this._onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,o=this._w,a=o*t._w+i*t._x+n*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=n,this._z=r,this;var s=1-a*a;if(s<=Number.EPSILON){var l=1-e;return this._w=l*o+e*this._w,this._x=l*i+e*this._x,this._y=l*n+e*this._y,this._z=l*r+e*this._z,this.normalize(),this._onChangeCallback(),this}var h=Math.sqrt(s),c=Math.atan2(h,a),u=Math.sin((1-e)*c)/h,q=Math.sin(e*c)/h;return this._w=o*u+this._w*q,this._x=i*u+this._x*q,this._y=n*u+this._y*q,this._z=r*u+this._z*q,this._onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}});var Ie=new Oe,Ne=new Ce;function Oe(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}Object.assign(Oe.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ne.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(Ne.setFromAxisAngle(t,e))},applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements,o=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*o,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*o,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*o,this},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,r=t.x,o=t.y,a=t.z,s=t.w,l=s*e+o*n-a*i,h=s*i+a*e-r*n,c=s*n+r*i-o*e,u=-r*e-o*i-a*n;return this.x=l*s+u*-r+h*-a-c*-o,this.y=h*s+u*-o+c*-r-l*-a,this.z=c*s+u*-a+l*-o-h*-r,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var i=t.x,n=t.y,r=t.z,o=e.x,a=e.y,s=e.z;return this.x=n*s-r*a,this.y=r*o-i*s,this.z=i*a-n*o,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(t){return Ie.copy(this).projectOnVector(t),this.sub(Ie)},reflect:function(t){return this.sub(Ie.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){var e=Math.sqrt(this.lengthSq()*t.lengthSq());0===e&&console.error("THREE.Vector3: angleTo() can't handle zero length vectors.");var i=this.dot(t)/e;return Math.acos(Pe.clamp(i,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,i){var n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}});var Be,De=new Oe;function Fe(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Fe.prototype,{isMatrix3:!0,set:function(t,e,i,n,r,o,a,s,l){var h=this.elements;return h[0]=t,h[1]=n,h[2]=a,h[3]=e,h[4]=r,h[5]=s,h[6]=i,h[7]=o,h[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(t){for(var e=0,i=t.count;e<i;e++)De.x=t.getX(e),De.y=t.getY(e),De.z=t.getZ(e),De.applyMatrix3(this),t.setXYZ(e,De.x,De.y,De.z);return t},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,o=i[0],a=i[3],s=i[6],l=i[1],h=i[4],c=i[7],u=i[2],q=i[5],p=i[8],d=n[0],m=n[3],f=n[6],v=n[1],g=n[4],y=n[7],x=n[2],w=n[5],b=n[8];return r[0]=o*d+a*v+s*x,r[3]=o*m+a*g+s*w,r[6]=o*f+a*y+s*b,r[1]=l*d+h*v+c*x,r[4]=l*m+h*g+c*w,r[7]=l*f+h*y+c*b,r[2]=u*d+q*v+p*x,r[5]=u*m+q*g+p*w,r[8]=u*f+q*y+p*b,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],o=t[4],a=t[5],s=t[6],l=t[7],h=t[8];return e*o*h-e*a*l-i*r*h+i*a*s+n*r*l-n*o*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var i=t.elements,n=this.elements,r=i[0],o=i[1],a=i[2],s=i[3],l=i[4],h=i[5],c=i[6],u=i[7],q=i[8],p=q*l-h*u,d=h*c-q*s,m=u*s-l*c,f=r*p+o*d+a*m;if(0===f){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var g=1/f;return n[0]=p*g,n[1]=(a*u-q*o)*g,n[2]=(h*o-a*l)*g,n[3]=d*g,n[4]=(q*r-a*c)*g,n[5]=(a*s-h*r)*g,n[6]=m*g,n[7]=(o*c-u*r)*g,n[8]=(l*r-o*s)*g,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,i,n,r,o,a){var s=Math.cos(r),l=Math.sin(r);this.set(i*s,i*l,-i*(s*o+l*a)+o+t,-n*l,n*s,-n*(-l*o+s*a)+a+e,0,0,1)},scale:function(t,e){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this},rotate:function(t){var e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],o=n[3],a=n[6],s=n[1],l=n[4],h=n[7];return n[0]=e*r+i*s,n[3]=e*o+i*l,n[6]=e*a+i*h,n[1]=-i*r+e*s,n[4]=-i*o+e*l,n[7]=-i*a+e*h,this},translate:function(t,e){var i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}});var Ve={getDataURL:function(t){var e;if("undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Be&&(Be=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Be.width=t.width,Be.height=t.height;var i=Be.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Be}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}},Ue=0;function je(t,e,i,n,r,o,a,s,l,h){Object.defineProperty(this,"id",{value:Ue++}),this.uuid=Pe.generateUUID(),this.name="",this.image=void 0!==t?t:je.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:je.DEFAULT_MAPPING,this.wrapS=void 0!==i?i:lt,this.wrapT=void 0!==n?n:lt,this.magFilter=void 0!==r?r:pt,this.minFilter=void 0!==o?o:mt,this.anisotropy=void 0!==l?l:1,this.format=void 0!==a?a:zt,this.type=void 0!==s?s:ft,this.offset=new Re(0,0),this.repeat=new Re(1,1),this.center=new Re(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Fe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==h?h:qe,this.version=0,this.onUpdate=null}function Ge(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}function He(t,e,i){this.width=t,this.height=e,this.scissor=new Ge(0,0,t,e),this.scissorTest=!1,this.viewport=new Ge(0,0,t,e),i=i||{},this.texture=new je(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:pt,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function ke(t,e,i){He.call(this,t,e,i),this.samples=4}je.DEFAULT_IMAGE=void 0,je.DEFAULT_MAPPING=300,je.prototype=Object.assign(Object.create(Ae.prototype),{constructor:je,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var n=this.image;if(void 0===n.uuid&&(n.uuid=Pe.generateUUID()),!e&&void 0===t.images[n.uuid]){var r;if(Array.isArray(n)){r=[];for(var o=0,a=n.length;o<a;o++)r.push(Ve.getDataURL(n[o]))}else r=Ve.getDataURL(n);t.images[n.uuid]={uuid:n.uuid,url:r}}i.image=n.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case st:t.x=t.x-Math.floor(t.x);break;case lt:t.x=t.x<0?0:1;break;case ht:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case st:t.y=t.y-Math.floor(t.y);break;case lt:t.y=t.y<0?0:1;break;case ht:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(je.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.defineProperties(Ge.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign(Ge.prototype,{isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*n+o[12]*r,this.y=o[1]*e+o[5]*i+o[9]*n+o[13]*r,this.z=o[2]*e+o[6]*i+o[10]*n+o[14]*r,this.w=o[3]*e+o[7]*i+o[11]*n+o[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,i,n,r,o=.01,a=.1,s=t.elements,l=s[0],h=s[4],c=s[8],u=s[1],q=s[5],p=s[9],d=s[2],m=s[6],f=s[10];if(Math.abs(h-u)<o&&Math.abs(c-d)<o&&Math.abs(p-m)<o){if(Math.abs(h+u)<a&&Math.abs(c+d)<a&&Math.abs(p+m)<a&&Math.abs(l+q+f-3)<a)return this.set(1,0,0,0),this;e=Math.PI;var v=(l+1)/2,g=(q+1)/2,y=(f+1)/2,x=(h+u)/4,w=(c+d)/4,b=(p+m)/4;return v>g&&v>y?v<o?(i=0,n=.707106781,r=.707106781):(n=x/(i=Math.sqrt(v)),r=w/i):g>y?g<o?(i=.707106781,n=0,r=.707106781):(i=x/(n=Math.sqrt(g)),r=b/n):y<o?(i=.707106781,n=.707106781,r=0):(i=w/(r=Math.sqrt(y)),n=b/r),this.set(i,n,r,e),this}var _=Math.sqrt((m-p)*(m-p)+(c-d)*(c-d)+(u-h)*(u-h));return Math.abs(_)<.001&&(_=1),this.x=(m-p)/_,this.y=(c-d)/_,this.z=(u-h)/_,this.w=Math.acos((l+q+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),He.prototype=Object.assign(Object.create(Ae.prototype),{constructor:He,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),ke.prototype=Object.assign(Object.create(He.prototype),{constructor:ke,isWebGLMultisampleRenderTarget:!0,copy:function(t){return He.prototype.copy.call(this,t),this.samples=t.samples,this}});var We=new Oe,Xe=new $e,Ye=new Oe(0,0,0),Ze=new Oe(1,1,1),Je=new Oe,Qe=new Oe,Ke=new Oe;function $e(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign($e.prototype,{isMatrix4:!0,set:function(t,e,i,n,r,o,a,s,l,h,c,u,q,p,d,m){var f=this.elements;return f[0]=t,f[4]=e,f[8]=i,f[12]=n,f[1]=r,f[5]=o,f[9]=a,f[13]=s,f[2]=l,f[6]=h,f[10]=c,f[14]=u,f[3]=q,f[7]=p,f[11]=d,f[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new $e).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(t){var e=this.elements,i=t.elements,n=1/We.setFromMatrixColumn(t,0).length(),r=1/We.setFromMatrixColumn(t,1).length(),o=1/We.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,n=t.y,r=t.z,o=Math.cos(i),a=Math.sin(i),s=Math.cos(n),l=Math.sin(n),h=Math.cos(r),c=Math.sin(r);if("XYZ"===t.order){var u=o*h,q=o*c,p=a*h,d=a*c;e[0]=s*h,e[4]=-s*c,e[8]=l,e[1]=q+p*l,e[5]=u-d*l,e[9]=-a*s,e[2]=d-u*l,e[6]=p+q*l,e[10]=o*s}else if("YXZ"===t.order){var m=s*h,f=s*c,v=l*h,g=l*c;e[0]=m+g*a,e[4]=v*a-f,e[8]=o*l,e[1]=o*c,e[5]=o*h,e[9]=-a,e[2]=f*a-v,e[6]=g+m*a,e[10]=o*s}else if("ZXY"===t.order)m=s*h,f=s*c,v=l*h,g=l*c,e[0]=m-g*a,e[4]=-o*c,e[8]=v+f*a,e[1]=f+v*a,e[5]=o*h,e[9]=g-m*a,e[2]=-o*l,e[6]=a,e[10]=o*s;else if("ZYX"===t.order)u=o*h,q=o*c,p=a*h,d=a*c,e[0]=s*h,e[4]=p*l-q,e[8]=u*l+d,e[1]=s*c,e[5]=d*l+u,e[9]=q*l-p,e[2]=-l,e[6]=a*s,e[10]=o*s;else if("YZX"===t.order){var y=o*s,x=o*l,w=a*s,b=a*l;e[0]=s*h,e[4]=b-y*c,e[8]=w*c+x,e[1]=c,e[5]=o*h,e[9]=-a*h,e[2]=-l*h,e[6]=x*c+w,e[10]=y-b*c}else"XZY"===t.order&&(y=o*s,x=o*l,w=a*s,b=a*l,e[0]=s*h,e[4]=-c,e[8]=l*h,e[1]=y*c+b,e[5]=o*h,e[9]=x*c-w,e[2]=w*c-x,e[6]=a*h,e[10]=b*c+y);return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(Ye,t,Ze)},lookAt:function(t,e,i){var n=this.elements;return Ke.subVectors(t,e),0===Ke.lengthSq()&&(Ke.z=1),Ke.normalize(),Je.crossVectors(i,Ke),0===Je.lengthSq()&&(1===Math.abs(i.z)?Ke.x+=1e-4:Ke.z+=1e-4,Ke.normalize(),Je.crossVectors(i,Ke)),Je.normalize(),Qe.crossVectors(Ke,Je),n[0]=Je.x,n[4]=Qe.x,n[8]=Ke.x,n[1]=Je.y,n[5]=Qe.y,n[9]=Ke.y,n[2]=Je.z,n[6]=Qe.z,n[10]=Ke.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,o=i[0],a=i[4],s=i[8],l=i[12],h=i[1],c=i[5],u=i[9],q=i[13],p=i[2],d=i[6],m=i[10],f=i[14],v=i[3],g=i[7],y=i[11],x=i[15],w=n[0],b=n[4],_=n[8],M=n[12],S=n[1],E=n[5],T=n[9],A=n[13],L=n[2],z=n[6],P=n[10],R=n[14],C=n[3],I=n[7],N=n[11],O=n[15];return r[0]=o*w+a*S+s*L+l*C,r[4]=o*b+a*E+s*z+l*I,r[8]=o*_+a*T+s*P+l*N,r[12]=o*M+a*A+s*R+l*O,r[1]=h*w+c*S+u*L+q*C,r[5]=h*b+c*E+u*z+q*I,r[9]=h*_+c*T+u*P+q*N,r[13]=h*M+c*A+u*R+q*O,r[2]=p*w+d*S+m*L+f*C,r[6]=p*b+d*E+m*z+f*I,r[10]=p*_+d*T+m*P+f*N,r[14]=p*M+d*A+m*R+f*O,r[3]=v*w+g*S+y*L+x*C,r[7]=v*b+g*E+y*z+x*I,r[11]=v*_+g*T+y*P+x*N,r[15]=v*M+g*A+y*R+x*O,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(t){for(var e=0,i=t.count;e<i;e++)We.x=t.getX(e),We.y=t.getY(e),We.z=t.getZ(e),We.applyMatrix4(this),t.setXYZ(e,We.x,We.y,We.z);return t},determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],o=t[1],a=t[5],s=t[9],l=t[13],h=t[2],c=t[6],u=t[10],q=t[14];return t[3]*(+r*s*c-n*l*c-r*a*u+i*l*u+n*a*q-i*s*q)+t[7]*(+e*s*q-e*l*u+r*o*u-n*o*q+n*l*h-r*s*h)+t[11]*(+e*l*c-e*a*q-r*o*c+i*o*q+r*a*h-i*l*h)+t[15]*(-n*a*h-e*s*c+e*a*u+n*o*c-i*o*u+i*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t,e,i){var n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this},getInverse:function(t,e){var i=this.elements,n=t.elements,r=n[0],o=n[1],a=n[2],s=n[3],l=n[4],h=n[5],c=n[6],u=n[7],q=n[8],p=n[9],d=n[10],m=n[11],f=n[12],v=n[13],g=n[14],y=n[15],x=p*g*u-v*d*u+v*c*m-h*g*m-p*c*y+h*d*y,w=f*d*u-q*g*u-f*c*m+l*g*m+q*c*y-l*d*y,b=q*v*u-f*p*u+f*h*m-l*v*m-q*h*y+l*p*y,_=f*p*c-q*v*c-f*h*d+l*v*d+q*h*g-l*p*g,M=r*x+o*w+a*b+s*_;if(0===M){var S="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(S);return console.warn(S),this.identity()}var E=1/M;return i[0]=x*E,i[1]=(v*d*s-p*g*s-v*a*m+o*g*m+p*a*y-o*d*y)*E,i[2]=(h*g*s-v*c*s+v*a*u-o*g*u-h*a*y+o*c*y)*E,i[3]=(p*c*s-h*d*s-p*a*u+o*d*u+h*a*m-o*c*m)*E,i[4]=w*E,i[5]=(q*g*s-f*d*s+f*a*m-r*g*m-q*a*y+r*d*y)*E,i[6]=(f*c*s-l*g*s-f*a*u+r*g*u+l*a*y-r*c*y)*E,i[7]=(l*d*s-q*c*s+q*a*u-r*d*u-l*a*m+r*c*m)*E,i[8]=b*E,i[9]=(f*p*s-q*v*s-f*o*m+r*v*m+q*o*y-r*p*y)*E,i[10]=(l*v*s-f*h*s+f*o*u-r*v*u-l*o*y+r*h*y)*E,i[11]=(q*h*s-l*p*s-q*o*u+r*p*u+l*o*m-r*h*m)*E,i[12]=_*E,i[13]=(q*v*a-f*p*a+f*o*d-r*v*d-q*o*g+r*p*g)*E,i[14]=(f*h*a-l*v*a-f*o*c+r*v*c+l*o*g-r*h*g)*E,i[15]=(l*p*a-q*h*a+q*o*c-r*p*c-l*o*d+r*h*d)*E,this},scale:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=1-i,o=t.x,a=t.y,s=t.z,l=r*o,h=r*a;return this.set(l*o+i,l*a-n*s,l*s+n*a,0,l*a+n*s,h*a+i,h*s-n*o,0,l*s-n*a,h*s+n*o,r*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){var n=this.elements,r=e._x,o=e._y,a=e._z,s=e._w,l=r+r,h=o+o,c=a+a,u=r*l,q=r*h,p=r*c,d=o*h,m=o*c,f=a*c,v=s*l,g=s*h,y=s*c,x=i.x,w=i.y,b=i.z;return n[0]=(1-(d+f))*x,n[1]=(q+y)*x,n[2]=(p-g)*x,n[3]=0,n[4]=(q-y)*w,n[5]=(1-(u+f))*w,n[6]=(m+v)*w,n[7]=0,n[8]=(p+g)*b,n[9]=(m-v)*b,n[10]=(1-(u+d))*b,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this},decompose:function(t,e,i){var n=this.elements,r=We.set(n[0],n[1],n[2]).length(),o=We.set(n[4],n[5],n[6]).length(),a=We.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],Xe.copy(this);var s=1/r,l=1/o,h=1/a;return Xe.elements[0]*=s,Xe.elements[1]*=s,Xe.elements[2]*=s,Xe.elements[4]*=l,Xe.elements[5]*=l,Xe.elements[6]*=l,Xe.elements[8]*=h,Xe.elements[9]*=h,Xe.elements[10]*=h,e.setFromRotationMatrix(Xe),i.x=r,i.y=o,i.z=a,this},makePerspective:function(t,e,i,n,r,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var a=this.elements,s=2*r/(e-t),l=2*r/(i-n),h=(e+t)/(e-t),c=(i+n)/(i-n),u=-(o+r)/(o-r),q=-2*o*r/(o-r);return a[0]=s,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=q,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(t,e,i,n,r,o){var a=this.elements,s=1/(e-t),l=1/(i-n),h=1/(o-r),c=(e+t)*s,u=(i+n)*l,q=(o+r)*h;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-q,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}});var ti=new $e,ei=new Ce;function ii(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||ii.DefaultOrder}function ni(){this.mask=1}ii.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ii.DefaultOrder="XYZ",Object.defineProperties(ii.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}}),Object.assign(ii.prototype,{isEuler:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=Pe.clamp,r=t.elements,o=r[0],a=r[4],s=r[8],l=r[1],h=r[5],c=r[9],u=r[2],q=r[6],p=r[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(q,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,p),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-u,o),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(q,-1,1)),Math.abs(q)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,o))):"ZYX"===e?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(q,p),this._z=Math.atan2(l,o)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===e?(this._z=Math.asin(n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===e?(this._z=Math.asin(-n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(q,h),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-c,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==i&&this._onChangeCallback(),this},setFromQuaternion:function(t,e,i){return ti.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ti,e,i)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(t){return ei.setFromEuler(this),this.setFromQuaternion(ei,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new Oe(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}}),Object.assign(ni.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}});var ri=0,oi=new Oe,ai=new Ce,si=new $e,li=new Oe,hi=new Oe,ci=new Oe,ui=new Ce,qi=new Oe(1,0,0),pi=new Oe(0,1,0),di=new Oe(0,0,1),mi={type:"added"},fi={type:"removed"};function vi(){Object.defineProperty(this,"id",{value:ri++}),this.uuid=Pe.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=vi.DefaultUp.clone();var t=new Oe,e=new ii,i=new Ce,n=new Oe(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new $e},normalMatrix:{value:new Fe}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=vi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ni,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function gi(){vi.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}vi.DefaultUp=new Oe(0,1,0),vi.DefaultMatrixAutoUpdate=!0,vi.prototype=Object.assign(Object.create(Ae.prototype),{constructor:vi,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return ai.setFromAxisAngle(t,e),this.quaternion.multiply(ai),this},rotateOnWorldAxis:function(t,e){return ai.setFromAxisAngle(t,e),this.quaternion.premultiply(ai),this},rotateX:function(t){return this.rotateOnAxis(qi,t)},rotateY:function(t){return this.rotateOnAxis(pi,t)},rotateZ:function(t){return this.rotateOnAxis(di,t)},translateOnAxis:function(t,e){return oi.copy(t).applyQuaternion(this.quaternion),this.position.add(oi.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(qi,t)},translateY:function(t){return this.translateOnAxis(pi,t)},translateZ:function(t){return this.translateOnAxis(di,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(si.getInverse(this.matrixWorld))},lookAt:function(t,e,i){t.isVector3?li.copy(t):li.set(t,e,i);var n=this.parent;this.updateWorldMatrix(!0,!1),hi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?si.lookAt(hi,li,this.up):si.lookAt(li,hi,this.up),this.quaternion.setFromRotationMatrix(si),n&&(si.extractRotation(n.matrixWorld),ai.setFromRotationMatrix(si),this.quaternion.premultiply(ai.inverse()))},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(mi)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var i=this.children.indexOf(t);return-1!==i&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(fi)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),si.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),si.multiply(t.parent.matrixWorld)),t.applyMatrix(si),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new Oe),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new Ce),this.updateMatrixWorld(!0),this.matrixWorld.decompose(hi,t,ci),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new Oe),this.updateMatrixWorld(!0),this.matrixWorld.decompose(hi,ui,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new Oe),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var n=this.children,r=0,o=n.length;r<o;r++)n[r].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isMesh&&this.drawMode!==ue&&(n.drawMode=this.drawMode),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var a=o.shapes;if(Array.isArray(a))for(var s=0,l=a.length;s<l;s++){var h=a[s];r(t.shapes,h)}else r(t.shapes,a)}}if(void 0!==this.material)if(Array.isArray(this.material)){var c=[];for(s=0,l=this.material.length;s<l;s++)c.push(r(t.materials,this.material[s]));n.material=c}else n.material=r(t.materials,this.material);if(this.children.length>0)for(n.children=[],s=0;s<this.children.length;s++)n.children.push(this.children[s].toJSON(t).object);if(e){var u=m(t.geometries),q=m(t.materials),p=m(t.textures),d=m(t.images);a=m(t.shapes),u.length>0&&(i.geometries=u),q.length>0&&(i.materials=q),p.length>0&&(i.textures=p),d.length>0&&(i.images=d),a.length>0&&(i.shapes=a)}return i.object=n,i;function m(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var i=0;i<t.children.length;i++){var n=t.children[i];this.add(n.clone())}return this}}),gi.prototype=Object.assign(Object.create(vi.prototype),{constructor:gi,isScene:!0,copy:function(t,e){return vi.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});var yi=[new Oe,new Oe,new Oe,new Oe,new Oe,new Oe,new Oe,new Oe],xi=new Oe,wi=new Oe,bi=new Oe,_i=new Oe,Mi=new Oe,Si=new Oe,Ei=new Oe,Ti=new Oe,Ai=new Oe,Li=new Oe,zi=new Oe;function Pi(t,e){this.min=void 0!==t?t:new Oe(1/0,1/0,1/0),this.max=void 0!==e?e:new Oe(-1/0,-1/0,-1/0)}function Ri(t,e,i,n,r){var o,a;for(o=0,a=t.length-3;o<=a;o+=3){zi.fromArray(t,o);var s=r.x*Math.abs(zi.x)+r.y*Math.abs(zi.y)+r.z*Math.abs(zi.z),l=e.dot(zi),h=i.dot(zi),c=n.dot(zi);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>s)return!1}return!0}Object.assign(Pi.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,o=-1/0,a=-1/0,s=0,l=t.length;s<l;s+=3){var h=t[s],c=t[s+1],u=t[s+2];h<e&&(e=h),c<i&&(i=c),u<n&&(n=u),h>r&&(r=h),c>o&&(o=c),u>a&&(a=u)}return this.min.set(e,i,n),this.max.set(r,o,a),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,o=-1/0,a=-1/0,s=0,l=t.count;s<l;s++){var h=t.getX(s),c=t.getY(s),u=t.getZ(s);h<e&&(e=h),c<i&&(i=c),u<n&&(n=u),h>r&&(r=h),c>o&&(o=c),u>a&&(a=u)}return this.min.set(e,i,n),this.max.set(r,o,a),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var i=xi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new Oe),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new Oe),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){var e,i;t.updateWorldMatrix(!1,!1);var n=t.geometry;if(void 0!==n)if(n.isGeometry){var r=n.vertices;for(e=0,i=r.length;e<i;e++)xi.copy(r[e]),xi.applyMatrix4(t.matrixWorld),this.expandByPoint(xi)}else if(n.isBufferGeometry){var o=n.attributes.position;if(void 0!==o)for(e=0,i=o.count;e<i;e++)xi.fromBufferAttribute(o,e).applyMatrix4(t.matrixWorld),this.expandByPoint(xi)}var a=t.children;for(e=0,i=a.length;e<i;e++)this.expandByObject(a[e]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new Oe),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,xi),xi.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(Ti),Ai.subVectors(this.max,Ti),wi.subVectors(t.a,Ti),bi.subVectors(t.b,Ti),_i.subVectors(t.c,Ti),Mi.subVectors(bi,wi),Si.subVectors(_i,bi),Ei.subVectors(wi,_i);var e=[0,-Mi.z,Mi.y,0,-Si.z,Si.y,0,-Ei.z,Ei.y,Mi.z,0,-Mi.x,Si.z,0,-Si.x,Ei.z,0,-Ei.x,-Mi.y,Mi.x,0,-Si.y,Si.x,0,-Ei.y,Ei.x,0];return!!Ri(e,wi,bi,_i,Ai)&&!!Ri(e=[1,0,0,0,1,0,0,0,1],wi,bi,_i,Ai)&&(Li.crossVectors(Mi,Si),Ri(e=[Li.x,Li.y,Li.z],wi,bi,_i,Ai))},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new Oe),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return xi.copy(t).clamp(this.min,this.max).sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(xi).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()||(yi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),yi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),yi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),yi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),yi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),yi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),yi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),yi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(yi)),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var Ci=new Pi;function Ii(t,e){this.center=void 0!==t?t:new Oe,this.radius=void 0!==e?e:0}Object.assign(Ii.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){var i=this.center;void 0!==e?i.copy(e):Ci.setFromPoints(t).getCenter(i);for(var n=0,r=0,o=t.length;r<o;r++)n=Math.max(n,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new Oe),e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new Pi),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});var Ni=new Oe,Oi=new Oe,Bi=new Oe,Di=new Oe,Fi=new Oe,Vi=new Oe,Ui=new Oe;function ji(t,e){this.origin=void 0!==t?t:new Oe,this.direction=void 0!==e?e:new Oe}Object.assign(ji.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new Oe),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,Ni)),this},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new Oe),e.subVectors(t,this.origin);var i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){var e=Ni.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ni.copy(this.direction).multiplyScalar(e).add(this.origin),Ni.distanceToSquared(t))},distanceSqToSegment:function(t,e,i,n){Oi.copy(t).add(e).multiplyScalar(.5),Bi.copy(e).sub(t).normalize(),Di.copy(this.origin).sub(Oi);var r,o,a,s,l=.5*t.distanceTo(e),h=-this.direction.dot(Bi),c=Di.dot(this.direction),u=-Di.dot(Bi),q=Di.lengthSq(),p=Math.abs(1-h*h);if(p>0)if(o=h*c-u,s=l*p,(r=h*u-c)>=0)if(o>=-s)if(o<=s){var d=1/p;a=(r*=d)*(r+h*(o*=d)+2*c)+o*(h*r+o+2*u)+q}else o=l,a=-(r=Math.max(0,-(h*o+c)))*r+o*(o+2*u)+q;else o=-l,a=-(r=Math.max(0,-(h*o+c)))*r+o*(o+2*u)+q;else o<=-s?a=-(r=Math.max(0,-(-h*l+c)))*r+(o=r>0?-l:Math.min(Math.max(-l,-u),l))*(o+2*u)+q:o<=s?(r=0,a=(o=Math.min(Math.max(-l,-u),l))*(o+2*u)+q):a=-(r=Math.max(0,-(h*l+c)))*r+(o=r>0?l:Math.min(Math.max(-l,-u),l))*(o+2*u)+q;else o=h>0?-l:l,a=-(r=Math.max(0,-(h*o+c)))*r+o*(o+2*u)+q;return i&&i.copy(this.direction).multiplyScalar(r).add(this.origin),n&&n.copy(Bi).multiplyScalar(o).add(Oi),a},intersectSphere:function(t,e){Ni.subVectors(t.center,this.origin);var i=Ni.dot(this.direction),n=Ni.dot(Ni)-i*i,r=t.radius*t.radius;if(n>r)return null;var o=Math.sqrt(r-n),a=i-o,s=i+o;return a<0&&s<0?null:a<0?this.at(s,e):this.at(a,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var i,n,r,o,a,s,l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return l>=0?(i=(t.min.x-u.x)*l,n=(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,n=(t.min.x-u.x)*l),h>=0?(r=(t.min.y-u.y)*h,o=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,o=(t.min.y-u.y)*h),i>o||r>n?null:((r>i||i!=i)&&(i=r),(o<n||n!=n)&&(n=o),c>=0?(a=(t.min.z-u.z)*c,s=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,s=(t.min.z-u.z)*c),i>s||a>n?null:((a>i||i!=i)&&(i=a),(s<n||n!=n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))},intersectsBox:function(t){return null!==this.intersectBox(t,Ni)},intersectTriangle:function(t,e,i,n,r){Fi.subVectors(e,t),Vi.subVectors(i,t),Ui.crossVectors(Fi,Vi);var o,a=this.direction.dot(Ui);if(a>0){if(n)return null;o=1}else{if(!(a<0))return null;o=-1,a=-a}Di.subVectors(this.origin,t);var s=o*this.direction.dot(Vi.crossVectors(Di,Vi));if(s<0)return null;var l=o*this.direction.dot(Fi.cross(Di));if(l<0)return null;if(s+l>a)return null;var h=-o*Di.dot(Ui);return h<0?null:this.at(h/a,r)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});var Gi=new Oe,Hi=new Oe,ki=new Fe;function Wi(t,e){this.normal=void 0!==t?t:new Oe(1,0,0),this.constant=void 0!==e?e:0}Object.assign(Wi.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,i){var n=Gi.subVectors(i,e).cross(Hi.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new Oe),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new Oe);var i=t.delta(Gi),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;var r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?void 0:e.copy(i).multiplyScalar(r).add(t.start)},intersectsLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new Oe),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){var i=e||ki.getNormalMatrix(t),n=this.coplanarPoint(Gi).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});var Xi=new Oe,Yi=new Oe,Zi=new Oe,Ji=new Oe,Qi=new Oe,Ki=new Oe,$i=new Oe,tn=new Oe,en=new Oe,nn=new Oe;function rn(t,e,i){this.a=void 0!==t?t:new Oe,this.b=void 0!==e?e:new Oe,this.c=void 0!==i?i:new Oe}Object.assign(rn,{getNormal:function(t,e,i,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new Oe),n.subVectors(i,e),Xi.subVectors(t,e),n.cross(Xi);var r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)},getBarycoord:function(t,e,i,n,r){Xi.subVectors(n,e),Yi.subVectors(i,e),Zi.subVectors(t,e);var o=Xi.dot(Xi),a=Xi.dot(Yi),s=Xi.dot(Zi),l=Yi.dot(Yi),h=Yi.dot(Zi),c=o*l-a*a;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new Oe),0===c)return r.set(-2,-1,-1);var u=1/c,q=(l*s-a*h)*u,p=(o*h-a*s)*u;return r.set(1-q-p,p,q)},containsPoint:function(t,e,i,n){return rn.getBarycoord(t,e,i,n,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1},getUV:function(t,e,i,n,r,o,a,s){return this.getBarycoord(t,e,i,n,Ji),s.set(0,0),s.addScaledVector(r,Ji.x),s.addScaledVector(o,Ji.y),s.addScaledVector(a,Ji.z),s},isFrontFacing:function(t,e,i,n){return Xi.subVectors(i,e),Yi.subVectors(t,e),Xi.cross(Yi).dot(n)<0}}),Object.assign(rn.prototype,{set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return Xi.subVectors(this.c,this.b),Yi.subVectors(this.a,this.b),.5*Xi.cross(Yi).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new Oe),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return rn.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Wi),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return rn.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,i,n,r){return rn.getUV(t,this.a,this.b,this.c,e,i,n,r)},containsPoint:function(t){return rn.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return rn.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new Oe);var i,n,r=this.a,o=this.b,a=this.c;Qi.subVectors(o,r),Ki.subVectors(a,r),tn.subVectors(t,r);var s=Qi.dot(tn),l=Ki.dot(tn);if(s<=0&&l<=0)return e.copy(r);en.subVectors(t,o);var h=Qi.dot(en),c=Ki.dot(en);if(h>=0&&c<=h)return e.copy(o);var u=s*c-h*l;if(u<=0&&s>=0&&h<=0)return i=s/(s-h),e.copy(r).addScaledVector(Qi,i);nn.subVectors(t,a);var q=Qi.dot(nn),p=Ki.dot(nn);if(p>=0&&q<=p)return e.copy(a);var d=q*l-s*p;if(d<=0&&l>=0&&p<=0)return n=l/(l-p),e.copy(r).addScaledVector(Ki,n);var m=h*p-q*c;if(m<=0&&c-h>=0&&q-p>=0)return $i.subVectors(a,o),n=(c-h)/(c-h+(q-p)),e.copy(o).addScaledVector($i,n);var f=1/(m+d+u);return i=d*f,n=u*f,e.copy(r).addScaledVector(Qi,i).addScaledVector(Ki,n)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});var on={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},an={h:0,s:0,l:0},sn={h:0,s:0,l:0};function ln(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}function hn(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function cn(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function un(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}function qn(t,e,i,n,r,o){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new Oe,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new ln,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==o?o:0}Object.assign(ln.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(t,e,i){if(t=Pe.euclideanModulo(t,1),e=Pe.clamp(e,0,1),i=Pe.clamp(i,0,1),0===e)this.r=this.g=this.b=i;else{var n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=hn(r,n,t+1/3),this.g=hn(r,n,t),this.b=hn(r,n,t-1/3)}return this},setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var n,r=i[1],o=i[2];switch(r){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var a=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,l=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(a,s,l)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){var h=i[1],c=h.length;if(3===c)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===c)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this},setColorName:function(t){var e=on[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=cn(t.r),this.g=cn(t.g),this.b=cn(t.b),this},copyLinearToSRGB:function(t){return this.r=un(t.r),this.g=un(t.g),this.b=un(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e,i,n=this.r,r=this.g,o=this.b,a=Math.max(n,r,o),s=Math.min(n,r,o),l=(s+a)/2;if(s===a)e=0,i=0;else{var h=a-s;switch(i=l<=.5?h/(a+s):h/(2-a-s),a){case n:e=(r-o)/h+(r<o?6:0);break;case r:e=(o-n)/h+2;break;case o:e=(n-r)/h+4}e/=6}return t.h=e,t.s=i,t.l=l,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){return this.getHSL(an),an.h+=t,an.s+=e,an.l+=i,this.setHSL(an.h,an.s,an.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(an),t.getHSL(sn);var i=Pe.lerp(an.h,sn.h,e),n=Pe.lerp(an.s,sn.s,e),r=Pe.lerp(an.l,sn.l,e);return this.setHSL(i,n,r),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}}),ln.NAMES=on,Object.assign(qn.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var pn=0;function dn(){Object.defineProperty(this,"id",{value:pn++}),this.uuid=Pe.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=f,this.side=c,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=p,this.opacity=1,this.transparent=!1,this.blendSrc=z,this.blendDst=P,this.blendEquation=w,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=V,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Se,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Me,this.stencilZFail=Me,this.stencilZPass=Me,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.needsUpdate=!0}function mn(t){dn.call(this),this.type="MeshBasicMaterial",this.color=new ln(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=k,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}function fn(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=Ee,this.updateRange={offset:0,count:-1},this.version=0}function vn(t,e,i){fn.call(this,new Int8Array(t),e,i)}function gn(t,e,i){fn.call(this,new Uint8Array(t),e,i)}function yn(t,e,i){fn.call(this,new Uint8ClampedArray(t),e,i)}function xn(t,e,i){fn.call(this,new Int16Array(t),e,i)}function wn(t,e,i){fn.call(this,new Uint16Array(t),e,i)}function bn(t,e,i){fn.call(this,new Int32Array(t),e,i)}function _n(t,e,i){fn.call(this,new Uint32Array(t),e,i)}function Mn(t,e,i){fn.call(this,new Float32Array(t),e,i)}function Sn(t,e,i){fn.call(this,new Float64Array(t),e,i)}function En(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Tn(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}dn.prototype=Object.assign(Object.create(Ae.prototype),{constructor:dn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i)if("shading"!==e){var n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});var i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(i.size=this.size),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==f&&(i.blending=this.blending),!0===this.flatShading&&(i.flatShading=this.flatShading),this.side!==c&&(i.side=this.side),this.vertexColors!==p&&(i.vertexColors=this.vertexColors),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){var r=n(t.textures),o=n(t.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var e=t.clippingPlanes,i=null;if(null!==e){var n=e.length;i=new Array(n);for(var r=0;r!==n;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),mn.prototype=Object.create(dn.prototype),mn.prototype.constructor=mn,mn.prototype.isMeshBasicMaterial=!0,mn.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},Object.defineProperty(fn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(fn.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),o=new ln),e[i++]=o.r,e[i++]=o.g,e[i++]=o.b}return this},copyVector2sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),o=new Re),e[i++]=o.x,e[i++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),o=new Oe),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),o=new Ge),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z,e[i++]=o.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),vn.prototype=Object.create(fn.prototype),vn.prototype.constructor=vn,gn.prototype=Object.create(fn.prototype),gn.prototype.constructor=gn,yn.prototype=Object.create(fn.prototype),yn.prototype.constructor=yn,xn.prototype=Object.create(fn.prototype),xn.prototype.constructor=xn,wn.prototype=Object.create(fn.prototype),wn.prototype.constructor=wn,bn.prototype=Object.create(fn.prototype),bn.prototype.constructor=bn,_n.prototype=Object.create(fn.prototype),_n.prototype.constructor=_n,Mn.prototype=Object.create(fn.prototype),Mn.prototype.constructor=Mn,Sn.prototype=Object.create(fn.prototype),Sn.prototype.constructor=Sn,Object.assign(En.prototype,{computeGroups:function(t){for(var e,i=[],n=void 0,r=t.faces,o=0;o<r.length;o++){var a=r[o];a.materialIndex!==n&&(n=a.materialIndex,void 0!==e&&(e.count=3*o-e.start,i.push(e)),e={start:3*o,materialIndex:n})}void 0!==e&&(e.count=3*o-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,i=t.faces,n=t.vertices,r=t.faceVertexUvs,o=r[0]&&r[0].length>0,a=r[1]&&r[1].length>0,s=t.morphTargets,l=s.length;if(l>0){e=[];for(var h=0;h<l;h++)e[h]={name:s[h].name,data:[]};this.morphTargets.position=e}var c,u=t.morphNormals,q=u.length;if(q>0){for(c=[],h=0;h<q;h++)c[h]={name:u[h].name,data:[]};this.morphTargets.normal=c}var p=t.skinIndices,d=t.skinWeights,m=p.length===n.length,f=d.length===n.length;for(n.length>0&&0===i.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported."),h=0;h<i.length;h++){var v=i[h];this.vertices.push(n[v.a],n[v.b],n[v.c]);var g=v.vertexNormals;if(3===g.length)this.normals.push(g[0],g[1],g[2]);else{var y=v.normal;this.normals.push(y,y,y)}var x,w=v.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var b=v.color;this.colors.push(b,b,b)}!0===o&&(void 0!==(x=r[0][h])?this.uvs.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",h),this.uvs.push(new Re,new Re,new Re))),!0===a&&(void 0!==(x=r[1][h])?this.uvs2.push(x[0],x[1],x[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",h),this.uvs2.push(new Re,new Re,new Re)));for(var _=0;_<l;_++){var M=s[_].vertices;e[_].data.push(M[v.a],M[v.b],M[v.c])}for(_=0;_<q;_++){var S=u[_].vertexNormals[h];c[_].data.push(S.a,S.b,S.c)}m&&this.skinIndices.push(p[v.a],p[v.b],p[v.c]),f&&this.skinWeights.push(d[v.a],d[v.b],d[v.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});var An=1,Ln=new $e,zn=new vi,Pn=new Oe,Rn=new Pi,Cn=new Pi,In=new Oe;function Nn(){Object.defineProperty(this,"id",{value:An+=2}),this.uuid=Pe.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Nn.prototype=Object.assign(Object.create(Ae.prototype),{constructor:Nn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Tn(t)>65535?_n:wn)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;void 0!==i&&((new Fe).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0);var n=this.attributes.tangent;return void 0!==n&&((new Fe).getNormalMatrix(t).applyToBufferAttribute(n),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Ln.makeRotationX(t),this.applyMatrix(Ln),this},rotateY:function(t){return Ln.makeRotationY(t),this.applyMatrix(Ln),this},rotateZ:function(t){return Ln.makeRotationZ(t),this.applyMatrix(Ln),this},translate:function(t,e,i){return Ln.makeTranslation(t,e,i),this.applyMatrix(Ln),this},scale:function(t,e,i){return Ln.makeScale(t,e,i),this.applyMatrix(Ln),this},lookAt:function(t){return zn.lookAt(t),zn.updateMatrix(),this.applyMatrix(zn.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Pn).negate(),this.translate(Pn.x,Pn.y,Pn.z),this},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var i=new Mn(3*e.vertices.length,3),n=new Mn(3*e.colors.length,3);if(this.setAttribute("position",i.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new Mn(e.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Mn(e,3)),this},updateFromObject:function(t){var e,i=t.geometry;if(t.isMesh){var n=i.__directGeometry;if(!0===i.elementsNeedUpdate&&(n=void 0,i.elementsNeedUpdate=!1),void 0===n)return this.fromGeometry(i);n.verticesNeedUpdate=i.verticesNeedUpdate,n.normalsNeedUpdate=i.normalsNeedUpdate,n.colorsNeedUpdate=i.colorsNeedUpdate,n.uvsNeedUpdate=i.uvsNeedUpdate,n.groupsNeedUpdate=i.groupsNeedUpdate,i.verticesNeedUpdate=!1,i.normalsNeedUpdate=!1,i.colorsNeedUpdate=!1,i.uvsNeedUpdate=!1,i.groupsNeedUpdate=!1,i=n}return!0===i.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(i.vertices),e.needsUpdate=!0),i.verticesNeedUpdate=!1),!0===i.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(i.normals),e.needsUpdate=!0),i.normalsNeedUpdate=!1),!0===i.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(i.colors),e.needsUpdate=!0),i.colorsNeedUpdate=!1),i.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(i.uvs),e.needsUpdate=!0),i.uvsNeedUpdate=!1),i.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(i.lineDistances),e.needsUpdate=!0),i.lineDistancesNeedUpdate=!1),i.groupsNeedUpdate&&(i.computeGroups(t.geometry),this.groups=i.groups,i.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new En).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new fn(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.setAttribute("normal",new fn(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.setAttribute("color",new fn(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new fn(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var o=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new fn(o,2).copyVector2sArray(t.uvs2))}for(var a in this.groups=t.groups,t.morphTargets){for(var s=[],l=t.morphTargets[a],h=0,c=l.length;h<c;h++){var u=l[h],q=new Mn(3*u.data.length,3);q.name=u.name,s.push(q.copyVector3sArray(u.data))}this.morphAttributes[a]=s}if(t.skinIndices.length>0){var p=new Mn(4*t.skinIndices.length,4);this.setAttribute("skinIndex",p.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var d=new Mn(4*t.skinWeights.length,4);this.setAttribute("skinWeight",d.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Pi);var t=this.attributes.position,e=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(var i=0,n=e.length;i<n;i++){var r=e[i];Rn.setFromBufferAttribute(r),this.boundingBox.expandByPoint(Rn.min),this.boundingBox.expandByPoint(Rn.max)}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Ii);var t=this.attributes.position,e=this.morphAttributes.position;if(t){var i=this.boundingSphere.center;if(Rn.setFromBufferAttribute(t),e)for(var n=0,r=e.length;n<r;n++){var o=e[n];Cn.setFromBufferAttribute(o),Rn.expandByPoint(Cn.min),Rn.expandByPoint(Cn.max)}Rn.getCenter(i);var a=0;for(n=0,r=t.count;n<r;n++)In.fromBufferAttribute(t,n),a=Math.max(a,i.distanceToSquared(In));if(e)for(n=0,r=e.length;n<r;n++)for(var s=0,l=(o=e[n]).count;s<l;s++)In.fromBufferAttribute(o,s),a=Math.max(a,i.distanceToSquared(In));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var i=e.position.array;if(void 0===e.normal)this.setAttribute("normal",new fn(new Float32Array(i.length),3));else for(var n=e.normal.array,r=0,o=n.length;r<o;r++)n[r]=0;var a,s,l,h=e.normal.array,c=new Oe,u=new Oe,q=new Oe,p=new Oe,d=new Oe;if(t){var m=t.array;for(r=0,o=t.count;r<o;r+=3)a=3*m[r+0],s=3*m[r+1],l=3*m[r+2],c.fromArray(i,a),u.fromArray(i,s),q.fromArray(i,l),p.subVectors(q,u),d.subVectors(c,u),p.cross(d),h[a]+=p.x,h[a+1]+=p.y,h[a+2]+=p.z,h[s]+=p.x,h[s+1]+=p.y,h[s+2]+=p.z,h[l]+=p.x,h[l+1]+=p.y,h[l+2]+=p.z}else for(r=0,o=i.length;r<o;r+=9)c.fromArray(i,r),u.fromArray(i,r+3),q.fromArray(i,r+6),p.subVectors(q,u),d.subVectors(c,u),p.cross(d),h[r]=p.x,h[r+1]=p.y,h[r+2]=p.z,h[r+3]=p.x,h[r+4]=p.y,h[r+5]=p.z,h[r+6]=p.x,h[r+7]=p.y,h[r+8]=p.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var i=this.attributes;for(var n in i)if(void 0!==t.attributes[n])for(var r=i[n].array,o=t.attributes[n],a=o.array,s=o.itemSize*e,l=Math.min(a.length,r.length-s),h=0,c=s;h<l;h++,c++)r[c]=a[h];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){for(var t=this.attributes.normal,e=0,i=t.count;e<i;e++)In.x=t.getX(e),In.y=t.getY(e),In.z=t.getZ(e),In.normalize(),t.setXYZ(e,In.x,In.y,In.z)},toNonIndexed:function(){function t(t,e){for(var i=t.array,n=t.itemSize,r=new i.constructor(e.length*n),o=0,a=0,s=0,l=e.length;s<l;s++){o=e[s]*n;for(var h=0;h<n;h++)r[a++]=i[o++]}return new fn(r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new Nn,i=this.index.array,n=this.attributes;for(var r in n){var o=t(n[r],i);e.setAttribute(r,o)}var a=this.morphAttributes;for(r in a){for(var s=[],l=a[r],h=0,c=l.length;h<c;h++)o=t(l[h],i),s.push(o);e.morphAttributes[r]=s}for(var u=this.groups,q=(h=0,u.length);h<q;h++){var p=u[h];e.addGroup(p.start,p.count,p.materialIndex)}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;null!==n&&(t.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});var r=this.attributes;for(var i in r){var o=(q=r[i]).toJSON();""!==q.name&&(o.name=q.name),t.data.attributes[i]=o}var a={},s=!1;for(var i in this.morphAttributes){for(var l=this.morphAttributes[i],h=[],c=0,u=l.length;c<u;c++){var q;o=(q=l[c]).toJSON(),""!==q.name&&(o.name=q.name),h.push(o)}h.length>0&&(a[i]=h,s=!0)}s&&(t.data.morphAttributes=a);var p=this.groups;p.length>0&&(t.data.groups=JSON.parse(JSON.stringify(p)));var d=this.boundingSphere;return null!==d&&(t.data.boundingSphere={center:d.center.toArray(),radius:d.radius}),t},clone:function(){return(new Nn).copy(this)},copy:function(t){var e,i,n;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;null!==r&&this.setIndex(r.clone());var o=t.attributes;for(e in o){var a=o[e];this.setAttribute(e,a.clone())}var s=t.morphAttributes;for(e in s){var l=[],h=s[e];for(i=0,n=h.length;i<n;i++)l.push(h[i].clone());this.morphAttributes[e]=l}var c=t.groups;for(i=0,n=c.length;i<n;i++){var u=c[i];this.addGroup(u.start,u.count,u.materialIndex)}var q=t.boundingBox;null!==q&&(this.boundingBox=q.clone());var p=t.boundingSphere;return null!==p&&(this.boundingSphere=p.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var On=new $e,Bn=new ji,Dn=new Ii,Fn=new Oe,Vn=new Oe,Un=new Oe,jn=new Oe,Gn=new Oe,Hn=new Oe,kn=new Oe,Wn=new Oe,Xn=new Oe,Yn=new Re,Zn=new Re,Jn=new Re,Qn=new Oe,Kn=new Oe;function $n(t,e){vi.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new Nn,this.material=void 0!==e?e:new mn({color:16777215*Math.random()}),this.drawMode=ue,this.updateMorphTargets()}function tr(t,e,i,n,r,o,a,s){if(null===(e.side===u?n.intersectTriangle(a,o,r,!0,s):n.intersectTriangle(r,o,a,e.side!==q,s)))return null;Kn.copy(s),Kn.applyMatrix4(t.matrixWorld);var l=i.ray.origin.distanceTo(Kn);return l<i.near||l>i.far?null:{distance:l,point:Kn.clone(),object:t}}function er(t,e,i,n,r,o,a,s,l,h,c){Fn.fromBufferAttribute(r,l),Vn.fromBufferAttribute(r,h),Un.fromBufferAttribute(r,c);var u=t.morphTargetInfluences;if(e.morphTargets&&o&&u){kn.set(0,0,0),Wn.set(0,0,0),Xn.set(0,0,0);for(var q=0,p=o.length;q<p;q++){var d=u[q],m=o[q];0!==d&&(jn.fromBufferAttribute(m,l),Gn.fromBufferAttribute(m,h),Hn.fromBufferAttribute(m,c),kn.addScaledVector(jn.sub(Fn),d),Wn.addScaledVector(Gn.sub(Vn),d),Xn.addScaledVector(Hn.sub(Un),d))}Fn.add(kn),Vn.add(Wn),Un.add(Xn)}var f=tr(t,e,i,n,Fn,Vn,Un,Qn);if(f){a&&(Yn.fromBufferAttribute(a,l),Zn.fromBufferAttribute(a,h),Jn.fromBufferAttribute(a,c),f.uv=rn.getUV(Qn,Fn,Vn,Un,Yn,Zn,Jn,new Re)),s&&(Yn.fromBufferAttribute(s,l),Zn.fromBufferAttribute(s,h),Jn.fromBufferAttribute(s,c),f.uv2=rn.getUV(Qn,Fn,Vn,Un,Yn,Zn,Jn,new Re));var v=new qn(l,h,c);rn.getNormal(Fn,Vn,Un,v.normal),f.face=v}return f}$n.prototype=Object.assign(Object.create(vi.prototype),{constructor:$n,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return vi.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,o=Object.keys(r);if(o.length>0){var a=r[o[0]];if(void 0!==a)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=a.length;t<e;t++)i=a[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){var i,n=this.geometry,r=this.material,o=this.matrixWorld;if(void 0!==r&&(null===n.boundingSphere&&n.computeBoundingSphere(),Dn.copy(n.boundingSphere),Dn.applyMatrix4(o),!1!==t.ray.intersectsSphere(Dn)&&(On.getInverse(o),Bn.copy(t.ray).applyMatrix4(On),null===n.boundingBox||!1!==Bn.intersectsBox(n.boundingBox))))if(this.drawMode===ue){if(n.isBufferGeometry){var a,s,l,h,c,u,q,p,d,m=n.index,f=n.attributes.position,v=n.morphAttributes.position,g=n.attributes.uv,y=n.attributes.uv2,x=n.groups,w=n.drawRange;if(null!==m)if(Array.isArray(r))for(h=0,u=x.length;h<u;h++)for(d=r[(p=x[h]).materialIndex],c=Math.max(p.start,w.start),q=Math.min(p.start+p.count,w.start+w.count);c<q;c+=3)a=m.getX(c),s=m.getX(c+1),l=m.getX(c+2),(i=er(this,d,t,Bn,f,v,g,y,a,s,l))&&(i.faceIndex=Math.floor(c/3),i.face.materialIndex=p.materialIndex,e.push(i));else for(h=Math.max(0,w.start),u=Math.min(m.count,w.start+w.count);h<u;h+=3)a=m.getX(h),s=m.getX(h+1),l=m.getX(h+2),(i=er(this,r,t,Bn,f,v,g,y,a,s,l))&&(i.faceIndex=Math.floor(h/3),e.push(i));else if(void 0!==f)if(Array.isArray(r))for(h=0,u=x.length;h<u;h++)for(d=r[(p=x[h]).materialIndex],c=Math.max(p.start,w.start),q=Math.min(p.start+p.count,w.start+w.count);c<q;c+=3)(i=er(this,d,t,Bn,f,v,g,y,a=c,s=c+1,l=c+2))&&(i.faceIndex=Math.floor(c/3),i.face.materialIndex=p.materialIndex,e.push(i));else for(h=Math.max(0,w.start),u=Math.min(f.count,w.start+w.count);h<u;h+=3)(i=er(this,r,t,Bn,f,v,g,y,a=h,s=h+1,l=h+2))&&(i.faceIndex=Math.floor(h/3),e.push(i))}else if(n.isGeometry){var b,_,M,S,E=Array.isArray(r),T=n.vertices,A=n.faces,L=n.faceVertexUvs[0];L.length>0&&(S=L);for(var z=0,P=A.length;z<P;z++){var R=A[z],C=E?r[R.materialIndex]:r;if(void 0!==C&&(b=T[R.a],_=T[R.b],M=T[R.c],i=tr(this,C,t,Bn,b,_,M,Qn))){if(S&&S[z]){var I=S[z];Yn.copy(I[0]),Zn.copy(I[1]),Jn.copy(I[2]),i.uv=rn.getUV(Qn,b,_,M,Yn,Zn,Jn,new Re)}i.face=R,i.faceIndex=z,e.push(i)}}}}else console.warn("THREE.Mesh: TriangleStripDrawMode and TriangleFanDrawMode are not supported by .raycast().")},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ir=0,nr=new $e,rr=new vi,or=new Oe;function ar(){Object.defineProperty(this,"id",{value:ir+=2}),this.uuid=Pe.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}ar.prototype=Object.assign(Object.create(Ae.prototype),{constructor:ar,isGeometry:!0,applyMatrix:function(t){for(var e=(new Fe).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++)this.vertices[i].applyMatrix4(t);for(i=0,n=this.faces.length;i<n;i++){var r=this.faces[i];r.normal.applyMatrix3(e).normalize();for(var o=0,a=r.vertexNormals.length;o<a;o++)r.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return nr.makeRotationX(t),this.applyMatrix(nr),this},rotateY:function(t){return nr.makeRotationY(t),this.applyMatrix(nr),this},rotateZ:function(t){return nr.makeRotationZ(t),this.applyMatrix(nr),this},translate:function(t,e,i){return nr.makeTranslation(t,e,i),this.applyMatrix(nr),this},scale:function(t,e,i){return nr.makeScale(t,e,i),this.applyMatrix(nr),this},lookAt:function(t){return rr.lookAt(t),rr.updateMatrix(),this.applyMatrix(rr.matrix),this},fromBufferGeometry:function(t){var e=this,i=null!==t.index?t.index.array:void 0,n=t.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var r=n.position.array,o=void 0!==n.normal?n.normal.array:void 0,a=void 0!==n.color?n.color.array:void 0,s=void 0!==n.uv?n.uv.array:void 0,l=void 0!==n.uv2?n.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var h=0;h<r.length;h+=3)e.vertices.push((new Oe).fromArray(r,h)),void 0!==a&&e.colors.push((new ln).fromArray(a,h));function c(t,i,n,r){var h=void 0===a?[]:[e.colors[t].clone(),e.colors[i].clone(),e.colors[n].clone()],c=new qn(t,i,n,void 0===o?[]:[(new Oe).fromArray(o,3*t),(new Oe).fromArray(o,3*i),(new Oe).fromArray(o,3*n)],h,r);e.faces.push(c),void 0!==s&&e.faceVertexUvs[0].push([(new Re).fromArray(s,2*t),(new Re).fromArray(s,2*i),(new Re).fromArray(s,2*n)]),void 0!==l&&e.faceVertexUvs[1].push([(new Re).fromArray(l,2*t),(new Re).fromArray(l,2*i),(new Re).fromArray(l,2*n)])}var u=t.groups;if(u.length>0)for(h=0;h<u.length;h++)for(var q=u[h],p=q.start,d=p,m=p+q.count;d<m;d+=3)void 0!==i?c(i[d],i[d+1],i[d+2],q.materialIndex):c(d,d+1,d+2,q.materialIndex);else if(void 0!==i)for(h=0;h<i.length;h+=3)c(i[h],i[h+1],i[h+2]);else for(h=0;h<r.length/3;h+=3)c(h,h+1,h+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(or).negate(),this.translate(or.x,or.y,or.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,n=new $e;return n.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var t=new Oe,e=new Oe,i=0,n=this.faces.length;i<n;i++){var r=this.faces[i],o=this.vertices[r.a],a=this.vertices[r.b],s=this.vertices[r.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){var e,i,n,r,o,a;for(void 0===t&&(t=!0),a=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)a[e]=new Oe;if(t){var s,l,h,c=new Oe,u=new Oe;for(n=0,r=this.faces.length;n<r;n++)o=this.faces[n],s=this.vertices[o.a],l=this.vertices[o.b],h=this.vertices[o.c],c.subVectors(h,l),u.subVectors(s,l),c.cross(u),a[o.a].add(c),a[o.b].add(c),a[o.c].add(c)}else for(this.computeFaceNormals(),n=0,r=this.faces.length;n<r;n++)a[(o=this.faces[n]).a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(e=0,i=this.vertices.length;e<i;e++)a[e].normalize();for(n=0,r=this.faces.length;n<r;n++){var q=(o=this.faces[n]).vertexNormals;3===q.length?(q[0].copy(a[o.a]),q[1].copy(a[o.b]),q[2].copy(a[o.c])):(q[0]=a[o.a].clone(),q[1]=a[o.b].clone(),q[2]=a[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var n=(i=this.faces[t]).vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,n,r;for(i=0,n=this.faces.length;i<n;i++)for((r=this.faces[i]).__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var o=new ar;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)l=new Oe,h={a:new Oe,b:new Oe,c:new Oe},a.push(l),s.push(h)}var l,h,c=this.morphNormals[t];for(o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,n=this.faces.length;i<n;i++)r=this.faces[i],l=c.faceNormals[i],h=c.vertexNormals[i],l.copy(r.normal),h.a.copy(r.vertexNormals[0]),h.b.copy(r.vertexNormals[1]),h.c.copy(r.vertexNormals[2])}for(i=0,n=this.faces.length;i<n;i++)(r=this.faces[i]).normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Pi),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Ii),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t&&t.isGeometry){var n,r=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,l=t.faces,h=this.colors,c=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new Fe).getNormalMatrix(e));for(var u=0,q=a.length;u<q;u++){var p=a[u].clone();void 0!==e&&p.applyMatrix4(e),o.push(p)}for(u=0,q=c.length;u<q;u++)h.push(c[u].clone());for(u=0,q=l.length;u<q;u++){var d,m,f,v=l[u],g=v.vertexNormals,y=v.vertexColors;(d=new qn(v.a+r,v.b+r,v.c+r)).normal.copy(v.normal),void 0!==n&&d.normal.applyMatrix3(n).normalize();for(var x=0,w=g.length;x<w;x++)m=g[x].clone(),void 0!==n&&m.applyMatrix3(n).normalize(),d.vertexNormals.push(m);for(d.color.copy(v.color),x=0,w=y.length;x<w;x++)f=y[x],d.vertexColors.push(f.clone());d.materialIndex=v.materialIndex+i,s.push(d)}for(u=0,q=t.faceVertexUvs.length;u<q;u++){var b=t.faceVertexUvs[u];for(void 0===this.faceVertexUvs[u]&&(this.faceVertexUvs[u]=[]),x=0,w=b.length;x<w;x++){for(var _=b[x],M=[],S=0,E=_.length;S<E;S++)M.push(_[S].clone());this.faceVertexUvs[u].push(M)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,i,n,r,o,a,s,l={},h=[],c=[],u=Math.pow(10,4);for(i=0,n=this.vertices.length;i<n;i++)t=this.vertices[i],void 0===l[e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u)]?(l[e]=i,h.push(this.vertices[i]),c[i]=h.length-1):c[i]=c[l[e]];var q=[];for(i=0,n=this.faces.length;i<n;i++){(r=this.faces[i]).a=c[r.a],r.b=c[r.b],r.c=c[r.c],o=[r.a,r.b,r.c];for(var p=0;p<3;p++)if(o[p]===o[(p+1)%3]){q.push(i);break}}for(i=q.length-1;i>=0;i--){var d=q[i];for(this.faces.splice(d,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(d,1)}var m=this.vertices.length-h.length;return this.vertices=h,m},setFromPoints:function(t){this.vertices=[];for(var e=0,i=t.length;e<i;e++){var n=t[e];this.vertices.push(new Oe(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,i=0;i<e;i++)t[i]._id=i;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));var n,r,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];for(o&&o.length===e&&(n=[]),a&&a.length===e&&(r=[]),i=0;i<e;i++){var s=t[i]._id;n&&n.push(o[s]),r&&r.push(a[s])}n&&(this.faceVertexUvs[0]=n),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}for(var n=[],r=0;r<this.vertices.length;r++){var o=this.vertices[r];n.push(o.x,o.y,o.z)}var a=[],s=[],l={},h=[],c={},u=[],q={};for(r=0;r<this.faces.length;r++){var p=this.faces[r],d=void 0!==this.faceVertexUvs[0][r],m=p.normal.length()>0,f=p.vertexNormals.length>0,v=1!==p.color.r||1!==p.color.g||1!==p.color.b,g=p.vertexColors.length>0,y=0;if(y=_(y,0,0),y=_(y,1,!0),y=_(y,2,!1),y=_(y,3,d),y=_(y,4,m),y=_(y,5,f),y=_(y,6,v),y=_(y,7,g),a.push(y),a.push(p.a,p.b,p.c),a.push(p.materialIndex),d){var x=this.faceVertexUvs[0][r];a.push(E(x[0]),E(x[1]),E(x[2]))}if(m&&a.push(M(p.normal)),f){var w=p.vertexNormals;a.push(M(w[0]),M(w[1]),M(w[2]))}if(v&&a.push(S(p.color)),g){var b=p.vertexColors;a.push(S(b[0]),S(b[1]),S(b[2]))}}function _(t,e,i){return i?t|1<<e:t&~(1<<e)}function M(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==l[e]||(l[e]=s.length/3,s.push(t.x,t.y,t.z)),l[e]}function S(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==c[e]||(c[e]=h.length,h.push(t.getHex())),c[e]}function E(t){var e=t.x.toString()+t.y.toString();return void 0!==q[e]||(q[e]=u.length/2,u.push(t.x,t.y)),q[e]}return t.data={},t.data.vertices=n,t.data.normals=s,h.length>0&&(t.data.colors=h),u.length>0&&(t.data.uvs=[u]),t.data.faces=a,t},clone:function(){return(new ar).copy(this)},copy:function(t){var e,i,n,r,o,a;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());var l=t.colors;for(e=0,i=l.length;e<i;e++)this.colors.push(l[e].clone());var h=t.faces;for(e=0,i=h.length;e<i;e++)this.faces.push(h[e].clone());for(e=0,i=t.faceVertexUvs.length;e<i;e++){var c=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,r=c.length;n<r;n++){var u=c[n],q=[];for(o=0,a=u.length;o<a;o++){var p=u[o];q.push(p.clone())}this.faceVertexUvs[e].push(q)}}var d=t.morphTargets;for(e=0,i=d.length;e<i;e++){var m={};if(m.name=d[e].name,void 0!==d[e].vertices)for(m.vertices=[],n=0,r=d[e].vertices.length;n<r;n++)m.vertices.push(d[e].vertices[n].clone());if(void 0!==d[e].normals)for(m.normals=[],n=0,r=d[e].normals.length;n<r;n++)m.normals.push(d[e].normals[n].clone());this.morphTargets.push(m)}var f=t.morphNormals;for(e=0,i=f.length;e<i;e++){var v={};if(void 0!==f[e].vertexNormals)for(v.vertexNormals=[],n=0,r=f[e].vertexNormals.length;n<r;n++){var g=f[e].vertexNormals[n],y={};y.a=g.a.clone(),y.b=g.b.clone(),y.c=g.c.clone(),v.vertexNormals.push(y)}if(void 0!==f[e].faceNormals)for(v.faceNormals=[],n=0,r=f[e].faceNormals.length;n<r;n++)v.faceNormals.push(f[e].faceNormals[n].clone());this.morphNormals.push(v)}var x=t.skinWeights;for(e=0,i=x.length;e<i;e++)this.skinWeights.push(x[e].clone());var w=t.skinIndices;for(e=0,i=w.length;e<i;e++)this.skinIndices.push(w[e].clone());var b=t.lineDistances;for(e=0,i=b.length;e<i;e++)this.lineDistances.push(b[e]);var _=t.boundingBox;null!==_&&(this.boundingBox=_.clone());var M=t.boundingSphere;return null!==M&&(this.boundingSphere=M.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class sr extends Nn{constructor(t,e,i,n,r,o){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};var a=this;t=t||1,e=e||1,i=i||1,n=Math.floor(n)||1,r=Math.floor(r)||1,o=Math.floor(o)||1;var s=[],l=[],h=[],c=[],u=0,q=0;function p(t,e,i,n,r,o,p,d,m,f,v){var g,y,x=o/m,w=p/f,b=o/2,_=p/2,M=d/2,S=m+1,E=f+1,T=0,A=0,L=new Oe;for(y=0;y<E;y++){var z=y*w-_;for(g=0;g<S;g++){var P=g*x-b;L[t]=P*n,L[e]=z*r,L[i]=M,l.push(L.x,L.y,L.z),L[t]=0,L[e]=0,L[i]=d>0?1:-1,h.push(L.x,L.y,L.z),c.push(g/m),c.push(1-y/f),T+=1}}for(y=0;y<f;y++)for(g=0;g<m;g++){var R=u+g+S*y,C=u+g+S*(y+1),I=u+(g+1)+S*(y+1),N=u+(g+1)+S*y;s.push(R,C,N),s.push(C,I,N),A+=6}a.addGroup(q,A,v),q+=A,u+=T}p("z","y","x",-1,-1,i,e,t,o,r,0),p("z","y","x",1,-1,i,e,-t,o,r,1),p("x","z","y",1,1,t,i,e,n,o,2),p("x","z","y",1,-1,t,i,-e,n,o,3),p("x","y","z",1,-1,t,e,i,n,r,4),p("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(s),this.setAttribute("position",new Mn(l,3)),this.setAttribute("normal",new Mn(h,3)),this.setAttribute("uv",new Mn(c,2))}}function lr(t){var e={};for(var i in t)for(var n in e[i]={},t[i]){var r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}return e}function hr(t){for(var e={},i=0;i<t.length;i++){var n=lr(t[i]);for(var r in n)e[r]=n[r]}return e}var cr="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",ur="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function qr(t){dn.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=cr,this.fragmentShader=ur,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function pr(){vi.call(this),this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e}function dr(t,e,i,n){pr.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}qr.prototype=Object.create(dn.prototype),qr.prototype.constructor=qr,qr.prototype.isShaderMaterial=!0,qr.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=lr(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},qr.prototype.toJSON=function(t){var e=dn.prototype.toJSON.call(this,t);for(var i in e.uniforms={},this.uniforms){var n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var r={};for(var o in this.extensions)!0===this.extensions[o]&&(r[o]=!0);return Object.keys(r).length>0&&(e.extensions=r),e},pr.prototype=Object.assign(Object.create(vi.prototype),{constructor:pr,isCamera:!0,copy:function(t,e){return vi.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new Oe),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){vi.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),dr.prototype=Object.assign(Object.create(pr.prototype),{constructor:dr,isPerspectiveCamera:!0,copy:function(t,e){return pr.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*Pe.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*Pe.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Pe.RAD2DEG*Math.atan(Math.tan(.5*Pe.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,n,r,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*Pe.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n,o=this.view;if(null!==this.view&&this.view.enabled){var a=o.fullWidth,s=o.fullHeight;r+=o.offsetX*n/a,e-=o.offsetY*i/s,n*=o.width/a,i*=o.height/s}var l=this.filmOffset;0!==l&&(r+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});var mr=90;function fr(t,e,i,n){vi.call(this),this.type="CubeCamera";var r=new dr(mr,1,t,e);r.up.set(0,-1,0),r.lookAt(new Oe(1,0,0)),this.add(r);var o=new dr(mr,1,t,e);o.up.set(0,-1,0),o.lookAt(new Oe(-1,0,0)),this.add(o);var a=new dr(mr,1,t,e);a.up.set(0,0,1),a.lookAt(new Oe(0,1,0)),this.add(a);var s=new dr(mr,1,t,e);s.up.set(0,0,-1),s.lookAt(new Oe(0,-1,0)),this.add(s);var l=new dr(mr,1,t,e);l.up.set(0,-1,0),l.lookAt(new Oe(0,0,1)),this.add(l);var h=new dr(mr,1,t,e);h.up.set(0,-1,0),h.lookAt(new Oe(0,0,-1)),this.add(h),n=n||{format:Lt,magFilter:pt,minFilter:pt},this.renderTarget=new vr(i,i,n),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=t.getRenderTarget(),n=this.renderTarget,c=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,o),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=c,t.setRenderTarget(n,5),t.render(e,h),t.setRenderTarget(i)},this.clear=function(t,e,i,n){for(var r=t.getRenderTarget(),o=this.renderTarget,a=0;a<6;a++)t.setRenderTarget(o,a),t.clear(e,i,n);t.setRenderTarget(r)}}function vr(t,e,i){He.call(this,t,e,i)}function gr(t,e,i,n,r,o,a,s,l,h,c,u){je.call(this,null,o,a,s,l,h,n,r,c,u),this.image={data:t||null,width:e||1,height:i||1},this.magFilter=void 0!==l?l:ct,this.minFilter=void 0!==h?h:ct,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}fr.prototype=Object.create(vi.prototype),fr.prototype.constructor=fr,vr.prototype=Object.create(He.prototype),vr.prototype.constructor=vr,vr.prototype.isWebGLRenderTargetCube=!0,vr.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=e.format,this.texture.encoding=e.encoding;var i=new gi,n={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV;","\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},r=new qr({type:"CubemapFromEquirect",uniforms:lr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:u,blending:m});r.uniforms.tEquirect.value=e;var o=new $n(new sr(5,5,5),r);i.add(o);var a=new fr(1,10,1);return a.renderTarget=this,a.renderTarget.texture.name="CubeCameraTexture",a.update(t,i),o.geometry.dispose(),o.material.dispose(),this},gr.prototype=Object.create(je.prototype),gr.prototype.constructor=gr,gr.prototype.isDataTexture=!0;var yr=new Ii,xr=new Oe;function wr(t,e,i,n,r,o){this.planes=[void 0!==t?t:new Wi,void 0!==e?e:new Wi,void 0!==i?i:new Wi,void 0!==n?n:new Wi,void 0!==r?r:new Wi,void 0!==o?o:new Wi]}Object.assign(wr.prototype,{set:function(t,e,i,n,r,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,n=i[0],r=i[1],o=i[2],a=i[3],s=i[4],l=i[5],h=i[6],c=i[7],u=i[8],q=i[9],p=i[10],d=i[11],m=i[12],f=i[13],v=i[14],g=i[15];return e[0].setComponents(a-n,c-s,d-u,g-m).normalize(),e[1].setComponents(a+n,c+s,d+u,g+m).normalize(),e[2].setComponents(a+r,c+l,d+q,g+f).normalize(),e[3].setComponents(a-r,c-l,d-q,g-f).normalize(),e[4].setComponents(a-o,c-h,d-p,g-v).normalize(),e[5].setComponents(a+o,c+h,d+p,g+v).normalize(),this},intersectsObject:function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),yr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(yr)},intersectsSprite:function(t){return yr.center.set(0,0,0),yr.radius=.7071067811865476,yr.applyMatrix4(t.matrixWorld),this.intersectsSphere(yr)},intersectsSphere:function(t){for(var e=this.planes,i=t.center,n=-t.radius,r=0;r<6;r++)if(e[r].distanceToPoint(i)<n)return!1;return!0},intersectsBox:function(t){for(var e=this.planes,i=0;i<6;i++){var n=e[i];if(xr.x=n.normal.x>0?t.max.x:t.min.x,xr.y=n.normal.y>0?t.max.y:t.min.y,xr.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(xr)<0)return!1}return!0},containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}});var br={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = saturate( clearcoat );\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy *= normalScale;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tbool frontFacing = dot( cross( S, T ), N ) > 0.0;\n\t\t\tmapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = clearcoatNormalScale * mapN.xy;\n\t\tclearcoatNormal = normalize( vTBN * mapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\n\t#endif\n#endif",clearcoat_normalmap_pars_fragment:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 encodeHalfRGBA ( vec2 v ) {\n\tvec4 encoded = vec4( 0.0 );\n\tconst vec2 offset = vec2( 1.0 / 255.0, 0.0 );\n\tencoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\n\tencoded.xy = encoded.xy - ( encoded.yy * offset );\n\tencoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\n\tencoded.zw = encoded.zw - ( encoded.ww * offset );\n\treturn encoded;\n}\nvec2 decodeHalfRGBA( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn decodeHalfRGBA( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},_r={common:{diffuse:{value:new ln(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Fe},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Re(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ln(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new ln(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Fe}},sprite:{diffuse:{value:new ln(15658734)},opacity:{value:1},center:{value:new Re(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Fe}}},Mr={basic:{uniforms:hr([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.fog]),vertexShader:br.meshbasic_vert,fragmentShader:br.meshbasic_frag},lambert:{uniforms:hr([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.fog,_r.lights,{emissive:{value:new ln(0)}}]),vertexShader:br.meshlambert_vert,fragmentShader:br.meshlambert_frag},phong:{uniforms:hr([_r.common,_r.specularmap,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.gradientmap,_r.fog,_r.lights,{emissive:{value:new ln(0)},specular:{value:new ln(1118481)},shininess:{value:30}}]),vertexShader:br.meshphong_vert,fragmentShader:br.meshphong_frag},standard:{uniforms:hr([_r.common,_r.envmap,_r.aomap,_r.lightmap,_r.emissivemap,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.roughnessmap,_r.metalnessmap,_r.fog,_r.lights,{emissive:{value:new ln(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:br.meshphysical_vert,fragmentShader:br.meshphysical_frag},matcap:{uniforms:hr([_r.common,_r.bumpmap,_r.normalmap,_r.displacementmap,_r.fog,{matcap:{value:null}}]),vertexShader:br.meshmatcap_vert,fragmentShader:br.meshmatcap_frag},points:{uniforms:hr([_r.points,_r.fog]),vertexShader:br.points_vert,fragmentShader:br.points_frag},dashed:{uniforms:hr([_r.common,_r.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:br.linedashed_vert,fragmentShader:br.linedashed_frag},depth:{uniforms:hr([_r.common,_r.displacementmap]),vertexShader:br.depth_vert,fragmentShader:br.depth_frag},normal:{uniforms:hr([_r.common,_r.bumpmap,_r.normalmap,_r.displacementmap,{opacity:{value:1}}]),vertexShader:br.normal_vert,fragmentShader:br.normal_frag},sprite:{uniforms:hr([_r.sprite,_r.fog]),vertexShader:br.sprite_vert,fragmentShader:br.sprite_frag},background:{uniforms:{uvTransform:{value:new Fe},t2D:{value:null}},vertexShader:br.background_vert,fragmentShader:br.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:br.cube_vert,fragmentShader:br.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:br.equirect_vert,fragmentShader:br.equirect_frag},distanceRGBA:{uniforms:hr([_r.common,_r.displacementmap,{referencePosition:{value:new Oe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:br.distanceRGBA_vert,fragmentShader:br.distanceRGBA_frag},shadow:{uniforms:hr([_r.lights,_r.fog,{color:{value:new ln(0)},opacity:{value:1}}]),vertexShader:br.shadow_vert,fragmentShader:br.shadow_frag}};function Sr(){var t=null,e=!1,i=null;function n(r,o){!1!==e&&(i(r,o),t.requestAnimationFrame(n))}return{start:function(){!0!==e&&null!==i&&(t.requestAnimationFrame(n),e=!0)},stop:function(){e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function Er(t){var e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);var n=e.get(i);n&&(t.deleteBuffer(n.buffer),e.delete(i))},update:function(i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=e.get(i);void 0===r?e.set(i,function(e,i){var n=e.array,r=e.usage,o=t.createBuffer();t.bindBuffer(i,o),t.bufferData(i,n,r),e.onUploadCallback();var a=5126;return n instanceof Float32Array?a=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?a=5123:n instanceof Int16Array?a=5122:n instanceof Uint32Array?a=5125:n instanceof Int32Array?a=5124:n instanceof Int8Array?a=5120:n instanceof Uint8Array&&(a=5121),{buffer:o,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(i,n)):r.version<i.version&&(function(e,i,n){var r=i.array,o=i.updateRange;t.bindBuffer(n,e),-1===o.count?t.bufferSubData(n,0,r):(t.bufferSubData(n,o.offset*r.BYTES_PER_ELEMENT,r.subarray(o.offset,o.offset+o.count)),o.count=-1)}(r.buffer,i,n),r.version=i.version)}}}function Tr(t,e,i,n){ar.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new Ar(t,e,i,n)),this.mergeVertices()}function Ar(t,e,i,n){Nn.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r,o,a=(t=t||1)/2,s=(e=e||1)/2,l=Math.floor(i)||1,h=Math.floor(n)||1,c=l+1,u=h+1,q=t/l,p=e/h,d=[],m=[],f=[],v=[];for(o=0;o<u;o++){var g=o*p-s;for(r=0;r<c;r++){var y=r*q-a;m.push(y,-g,0),f.push(0,0,1),v.push(r/l),v.push(1-o/h)}}for(o=0;o<h;o++)for(r=0;r<l;r++){var x=r+c*o,w=r+c*(o+1),b=r+1+c*(o+1),_=r+1+c*o;d.push(x,w,_),d.push(w,b,_)}this.setIndex(d),this.setAttribute("position",new Mn(m,3)),this.setAttribute("normal",new Mn(f,3)),this.setAttribute("uv",new Mn(v,2))}function Lr(t,e,i,n){var r,o,a=new ln(0),s=0,l=null,h=0;function q(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,n)}return{getClearColor:function(){return a},setClearColor:function(t,e){a.set(t),q(a,s=void 0!==e?e:1)},getClearAlpha:function(){return s},setClearAlpha:function(t){q(a,s=t)},render:function(e,n,p,d){var m=n.background,f=t.vr,v=f.getSession&&f.getSession();if(v&&"additive"===v.environmentBlendMode&&(m=null),null===m?(q(a,s),l=null,h=0):m&&m.isColor&&(q(m,1),d=!0,l=null,h=0),(t.autoClear||d)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLRenderTargetCube)){void 0===o&&((o=new $n(new sr(1,1,1),new qr({type:"BackgroundCubeMaterial",uniforms:lr(Mr.cube.uniforms),vertexShader:Mr.cube.vertexShader,fragmentShader:Mr.cube.fragmentShader,side:u,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.tCube.value}}),i.update(o));var g=m.isWebGLRenderTargetCube?m.texture:m;o.material.uniforms.tCube.value=g,o.material.uniforms.tFlip.value=m.isWebGLRenderTargetCube?1:-1,l===m&&h===g.version||(o.material.needsUpdate=!0,l=m,h=g.version),e.unshift(o,o.geometry,o.material,0,0,null)}else m&&m.isTexture&&(void 0===r&&((r=new $n(new Ar(2,2),new qr({type:"BackgroundMaterial",uniforms:lr(Mr.background.uniforms),vertexShader:Mr.background.vertexShader,fragmentShader:Mr.background.fragmentShader,side:c,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(r.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(r)),r.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),r.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&h===m.version||(r.material.needsUpdate=!0,l=m,h=m.version),e.unshift(r,r.geometry,r.material,0,0,null))}}}function zr(t,e,i,n){var r,o=n.isWebGL2;this.setMode=function(t){r=t},this.render=function(e,n){t.drawArrays(r,e,n),i.update(n,r)},this.renderInstances=function(n,a,s,l){if(0!==l){var h,c;if(o)h=t,c="drawArraysInstanced";else if(c="drawArraysInstancedANGLE",null===(h=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[c](r,a,s,l),i.update(s,r,l)}}}function Pr(t,e,i){var n;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext,a=void 0!==i.precision?i.precision:"highp",s=r(a);s!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",s,"instead."),a=s);var l=!0===i.logarithmicDepthBuffer,h=t.getParameter(34930),c=t.getParameter(35660),u=t.getParameter(3379),q=t.getParameter(34076),p=t.getParameter(34921),d=t.getParameter(36347),m=t.getParameter(36348),f=t.getParameter(36349),v=c>0,g=o||!!e.get("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==n)return n;var i=e.get("EXT_texture_filter_anisotropic");return n=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:q,maxAttributes:p,maxVertexUniforms:d,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:v,floatFragmentTextures:g,floatVertexTextures:v&&g,maxSamples:o?t.getParameter(36183):0}}function Rr(){var t=this,e=null,i=0,n=!1,r=!1,o=new Wi,a=new Fe,s={value:null,needsUpdate:!1};function l(){s.value!==e&&(s.value=e,s.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(e,i,n,r){var l=null!==e?e.length:0,h=null;if(0!==l){if(h=s.value,!0!==r||null===h){var c=n+4*l,u=i.matrixWorldInverse;a.getNormalMatrix(u),(null===h||h.length<c)&&(h=new Float32Array(c));for(var q=0,p=n;q!==l;++q,p+=4)o.copy(e[q]).applyMatrix4(u,a),o.normal.toArray(h,p),h[p+3]=o.constant}s.value=h,s.needsUpdate=!0}return t.numPlanes=l,h}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(t,r,o){var a=0!==t.length||r||0!==i||n;return n=r,e=h(t,o,0),i=t.length,a},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,l()},this.setState=function(t,o,a,c,u,q){if(!n||null===t||0===t.length||r&&!a)r?h(null):l();else{var p=r?0:i,d=4*p,m=u.clippingState||null;s.value=m,m=h(t,c,d,q);for(var f=0;f!==d;++f)m[f]=e[f];u.clippingState=m,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=p}}}function Cr(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=n,n}}}function Ir(t,e,i){var n=new WeakMap,r=new WeakMap;function o(t){var a=t.target,s=n.get(a);for(var l in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[l]);a.removeEventListener("dispose",o),n.delete(a);var h=r.get(s);h&&(e.remove(h),r.delete(s)),i.memory.geometries--}function a(t){var i=[],n=t.index,o=t.attributes.position,a=0;if(null!==n){var s=n.array;a=n.version;for(var l=0,h=s.length;l<h;l+=3){var c=s[l+0],u=s[l+1],q=s[l+2];i.push(c,u,u,q,q,c)}}else for(s=o.array,a=o.version,l=0,h=s.length/3-1;l<h;l+=3)c=l+0,u=l+1,q=l+2,i.push(c,u,u,q,q,c);var p=new(Tn(i)>65535?_n:wn)(i,1);p.version=a,e.update(p,34963);var d=r.get(t);d&&e.remove(d),r.set(t,p)}return{get:function(t,e){var r=n.get(e);return r||(e.addEventListener("dispose",o),e.isBufferGeometry?r=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new Nn).setFromObject(t)),r=e._bufferGeometry),n.set(e,r),i.memory.geometries++,r)},update:function(t){var i=t.index,n=t.attributes;for(var r in null!==i&&e.update(i,34963),n)e.update(n[r],34962);var o=t.morphAttributes;for(var r in o)for(var a=o[r],s=0,l=a.length;s<l;s++)e.update(a[s],34962)},getWireframeAttribute:function(t){var e=r.get(t);if(e){var i=t.index;null!==i&&e.version<i.version&&a(t)}else a(t);return r.get(t)}}}function Nr(t,e,i,n){var r,o,a,s=n.isWebGL2;this.setMode=function(t){r=t},this.setIndex=function(t){o=t.type,a=t.bytesPerElement},this.render=function(e,n){t.drawElements(r,n,o,e*a),i.update(n,r)},this.renderInstances=function(n,l,h,c){if(0!==c){var u,q;if(s)u=t,q="drawElementsInstanced";else if(q="drawElementsInstancedANGLE",null===(u=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[q](r,h,o,l*a,c),i.update(h,r,c)}}}function Or(t){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(n=n||1,e.calls++,i){case 4:e.triangles+=n*(t/3);break;case 5:case 6:e.triangles+=n*(t-2);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Br(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Dr(t){var e={},i=new Float32Array(8);return{update:function(n,r,o,a){var s=n.morphTargetInfluences,l=s.length,h=e[r.id];if(void 0===h){h=[];for(var c=0;c<l;c++)h[c]=[c,0];e[r.id]=h}var u=o.morphTargets&&r.morphAttributes.position,q=o.morphNormals&&r.morphAttributes.normal;for(c=0;c<l;c++)0!==(p=h[c])[1]&&(u&&r.deleteAttribute("morphTarget"+c),q&&r.deleteAttribute("morphNormal"+c));for(c=0;c<l;c++)(p=h[c])[0]=c,p[1]=s[c];for(h.sort(Br),c=0;c<8;c++){var p;if(p=h[c]){var d=p[0],m=p[1];if(m){u&&r.setAttribute("morphTarget"+c,u[d]),q&&r.setAttribute("morphNormal"+c,q[d]),i[c]=m;continue}}i[c]=0}a.getUniforms().setValue(t,"morphTargetInfluences",i)}}}function Fr(t,e,i,n){var r={};return{update:function(t){var o=n.render.frame,a=t.geometry,s=e.get(t,a);return r[s.id]!==o&&(a.isGeometry&&s.updateFromObject(t),e.update(s),r[s.id]=o),t.isInstancedMesh&&i.update(t.instanceMatrix,34962),s},dispose:function(){r={}}}}function Vr(t,e,i,n,r,o,a,s,l,h){t=void 0!==t?t:[],e=void 0!==e?e:tt,a=void 0!==a?a:Lt,je.call(this,t,e,i,n,r,o,a,s,l,h),this.flipY=!1}function Ur(t,e,i,n){je.call(this,null),this.image={data:t||null,width:e||1,height:i||1,depth:n||1},this.magFilter=ct,this.minFilter=ct,this.wrapR=lt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function jr(t,e,i,n){je.call(this,null),this.image={data:t||null,width:e||1,height:i||1,depth:n||1},this.magFilter=ct,this.minFilter=ct,this.wrapR=lt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Mr.physical={uniforms:hr([Mr.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new ln(0)},clearcoatNormalScale:{value:new Re(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:br.meshphysical_vert,fragmentShader:br.meshphysical_frag},Tr.prototype=Object.create(ar.prototype),Tr.prototype.constructor=Tr,Ar.prototype=Object.create(Nn.prototype),Ar.prototype.constructor=Ar,Vr.prototype=Object.create(je.prototype),Vr.prototype.constructor=Vr,Vr.prototype.isCubeTexture=!0,Object.defineProperty(Vr.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),Ur.prototype=Object.create(je.prototype),Ur.prototype.constructor=Ur,Ur.prototype.isDataTexture2DArray=!0,jr.prototype=Object.create(je.prototype),jr.prototype.constructor=jr,jr.prototype.isDataTexture3D=!0;var Gr=new je,Hr=new Ur,kr=new jr,Wr=new Vr,Xr=[],Yr=[],Zr=new Float32Array(16),Jr=new Float32Array(9),Qr=new Float32Array(4);function Kr(t,e,i){var n=t[0];if(n<=0||n>0)return t;var r=e*i,o=Xr[r];if(void 0===o&&(o=new Float32Array(r),Xr[r]=o),0!==e){n.toArray(o,0);for(var a=1,s=0;a!==e;++a)s+=i,t[a].toArray(o,s)}return o}function $r(t,e){if(t.length!==e.length)return!1;for(var i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function to(t,e){for(var i=0,n=e.length;i<n;i++)t[i]=e[i]}function eo(t,e){var i=Yr[e];void 0===i&&(i=new Int32Array(e),Yr[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function io(t,e){var i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function no(t,e){var i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if($r(i,e))return;t.uniform2fv(this.addr,e),to(i,e)}}function ro(t,e){var i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if($r(i,e))return;t.uniform3fv(this.addr,e),to(i,e)}}function oo(t,e){var i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if($r(i,e))return;t.uniform4fv(this.addr,e),to(i,e)}}function ao(t,e){var i=this.cache,n=e.elements;if(void 0===n){if($r(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),to(i,e)}else{if($r(i,n))return;Qr.set(n),t.uniformMatrix2fv(this.addr,!1,Qr),to(i,n)}}function so(t,e){var i=this.cache,n=e.elements;if(void 0===n){if($r(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),to(i,e)}else{if($r(i,n))return;Jr.set(n),t.uniformMatrix3fv(this.addr,!1,Jr),to(i,n)}}function lo(t,e){var i=this.cache,n=e.elements;if(void 0===n){if($r(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),to(i,e)}else{if($r(i,n))return;Zr.set(n),t.uniformMatrix4fv(this.addr,!1,Zr),to(i,n)}}function ho(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(e||Gr,r)}function co(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||Hr,r)}function uo(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||kr,r)}function qo(t,e,i){var n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(e||Wr,r)}function po(t,e){var i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function mo(t,e){var i=this.cache;$r(i,e)||(t.uniform2iv(this.addr,e),to(i,e))}function fo(t,e){var i=this.cache;$r(i,e)||(t.uniform3iv(this.addr,e),to(i,e))}function vo(t,e){var i=this.cache;$r(i,e)||(t.uniform4iv(this.addr,e),to(i,e))}function go(t,e){t.uniform1fv(this.addr,e)}function yo(t,e){t.uniform1iv(this.addr,e)}function xo(t,e){t.uniform2iv(this.addr,e)}function wo(t,e){t.uniform3iv(this.addr,e)}function bo(t,e){t.uniform4iv(this.addr,e)}function _o(t,e){var i=Kr(e,this.size,2);t.uniform2fv(this.addr,i)}function Mo(t,e){var i=Kr(e,this.size,3);t.uniform3fv(this.addr,i)}function So(t,e){var i=Kr(e,this.size,4);t.uniform4fv(this.addr,i)}function Eo(t,e){var i=Kr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function To(t,e){var i=Kr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Ao(t,e){var i=Kr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function Lo(t,e,i){var n=e.length,r=eo(i,n);t.uniform1iv(this.addr,r);for(var o=0;o!==n;++o)i.safeSetTexture2D(e[o]||Gr,r[o])}function zo(t,e,i){var n=e.length,r=eo(i,n);t.uniform1iv(this.addr,r);for(var o=0;o!==n;++o)i.safeSetTextureCube(e[o]||Wr,r[o])}function Po(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return io;case 35664:return no;case 35665:return ro;case 35666:return oo;case 35674:return ao;case 35675:return so;case 35676:return lo;case 35678:case 36198:return ho;case 35679:return uo;case 35680:return qo;case 36289:return co;case 5124:case 35670:return po;case 35667:case 35671:return mo;case 35668:case 35672:return fo;case 35669:case 35673:return vo}}(e.type)}function Ro(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return go;case 35664:return _o;case 35665:return Mo;case 35666:return So;case 35674:return Eo;case 35675:return To;case 35676:return Ao;case 35678:return Lo;case 35680:return zo;case 5124:case 35670:return yo;case 35667:case 35671:return xo;case 35668:case 35672:return wo;case 35669:case 35673:return bo}}(e.type)}function Co(t){this.id=t,this.seq=[],this.map={}}Ro.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),to(e,t)},Co.prototype.setValue=function(t,e,i){for(var n=this.seq,r=0,o=n.length;r!==o;++r){var a=n[r];a.setValue(t,e[a.id],i)}};var Io=/([\w\d_]+)(\])?(\[|\.)?/g;function No(t,e){t.seq.push(e),t.map[e.id]=e}function Oo(t,e,i){var n=t.name,r=n.length;for(Io.lastIndex=0;;){var o=Io.exec(n),a=Io.lastIndex,s=o[1],l="]"===o[2],h=o[3];if(l&&(s|=0),void 0===h||"["===h&&a+2===r){No(i,void 0===h?new Po(s,t,e):new Ro(s,t,e));break}var c=i.map[s];void 0===c&&No(i,c=new Co(s)),i=c}}function Bo(t,e){this.seq=[],this.map={};for(var i=t.getProgramParameter(e,35718),n=0;n<i;++n){var r=t.getActiveUniform(e,n);Oo(r,t.getUniformLocation(e,r.name),this)}}function Do(t,e,i){var n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}Bo.prototype.setValue=function(t,e,i,n){var r=this.map[e];void 0!==r&&r.setValue(t,i,n)},Bo.prototype.setOptional=function(t,e,i){var n=e[i];void 0!==n&&this.setValue(t,i,n)},Bo.upload=function(t,e,i,n){for(var r=0,o=e.length;r!==o;++r){var a=e[r],s=i[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,n)}},Bo.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var o=t[n];o.id in e&&i.push(o)}return i};var Fo=0;function Vo(t){switch(t){case qe:return["Linear","( value )"];case pe:return["sRGB","( value )"];case me:return["RGBE","( value )"];case ve:return["RGBM","( value, 7.0 )"];case ge:return["RGBM","( value, 16.0 )"];case ye:return["RGBD","( value, 256.0 )"];case de:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case fe:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+t)}}function Uo(t,e,i){var n=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return n&&""===r?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+r+function(t){for(var e=t.split("\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(t.getShaderSource(e))}function jo(t,e){var i=Vo(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function Go(t,e){var i;switch(e){case Z:i="Linear";break;case J:i="Reinhard";break;case Q:i="Uncharted2";break;case K:i="OptimizedCineon";break;case $:i="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function Ho(t){return""!==t}function ko(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Wo(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var Xo=/^[ \t]*#include +<([\w\d./]+)>/gm;function Yo(t){return t.replace(Xo,Zo)}function Zo(t,e){var i=br[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return Yo(i)}var Jo=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function Qo(t){return t.replace(Jo,Ko)}function Ko(t,e,i,n){for(var r="",o=parseInt(e);o<parseInt(i);o++)r+=n.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return r}function $o(t){var e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ta(t,e,i,n,r,o){var a,c,u,q,p=t.getContext(),d=n.defines,m=r.vertexShader,f=r.fragmentShader,v=function(t){var e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===s?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===l?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===h&&(e="SHADOWMAP_TYPE_VSM"),e}(o),g=function(t){var e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case tt:case et:e="ENVMAP_TYPE_CUBE";break;case ot:case at:e="ENVMAP_TYPE_CUBE_UV";break;case it:case nt:e="ENVMAP_TYPE_EQUIREC";break;case rt:e="ENVMAP_TYPE_SPHERE"}return e}(o),y=function(t){var e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case et:case nt:e="ENVMAP_MODE_REFRACTION"}return e}(o),x=function(t){var e="ENVMAP_BLENDING_MULTIPLY";if(t.envMap)switch(t.combine){case k:e="ENVMAP_BLENDING_MULTIPLY";break;case W:e="ENVMAP_BLENDING_MIX";break;case X:e="ENVMAP_BLENDING_ADD"}return e}(o),w=t.gammaFactor>0?t.gammaFactor:1,b=o.isWebGL2?"":function(t,e,i){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ho).join("\n")}(n.extensions,o,e),_=function(t){var e=[];for(var i in t){var n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(d),M=p.createProgram(),S=o.numMultiviewViews;if(n.isRawShaderMaterial?((a=[_].filter(Ho).join("\n")).length>0&&(a+="\n"),(c=[b,_].filter(Ho).join("\n")).length>0&&(c+="\n")):(a=[$o(o),"#define SHADER_NAME "+r.name,_,o.instancing?"#define USE_INSTANCING":"",o.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+w,"#define MAX_BONES "+o.maxBones,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+y:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.normalMap&&o.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",o.normalMap&&o.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",o.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",o.displacementMap&&o.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexTangents?"#define USE_TANGENT":"",o.vertexColors?"#define USE_COLOR":"",o.vertexUvs?"#define USE_UV":"",o.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",o.flatShading?"#define FLAT_SHADED":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals&&!1===o.flatShading?"#define USE_MORPHNORMALS":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ho).join("\n"),c=[b,$o(o),"#define SHADER_NAME "+r.name,_,o.alphaTest?"#define ALPHATEST "+o.alphaTest+(o.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+w,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.matcap?"#define USE_MATCAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+g:"",o.envMap?"#define "+y:"",o.envMap?"#define "+x:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.normalMap&&o.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",o.normalMap&&o.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",o.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.sheen?"#define USE_SHEEN":"",o.vertexTangents?"#define USE_TANGENT":"",o.vertexColors?"#define USE_COLOR":"",o.vertexUvs?"#define USE_UV":"",o.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",o.gradientMap?"#define USE_GRADIENTMAP":"",o.flatShading?"#define FLAT_SHADED":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",o.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensions&&n.extensions.shaderTextureLOD||o.envMap)&&(o.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",o.toneMapping!==Y?"#define TONE_MAPPING":"",o.toneMapping!==Y?br.tonemapping_pars_fragment:"",o.toneMapping!==Y?Go("toneMapping",o.toneMapping):"",o.dithering?"#define DITHERING":"",o.outputEncoding||o.mapEncoding||o.matcapEncoding||o.envMapEncoding||o.emissiveMapEncoding?br.encodings_pars_fragment:"",o.mapEncoding?jo("mapTexelToLinear",o.mapEncoding):"",o.matcapEncoding?jo("matcapTexelToLinear",o.matcapEncoding):"",o.envMapEncoding?jo("envMapTexelToLinear",o.envMapEncoding):"",o.emissiveMapEncoding?jo("emissiveMapTexelToLinear",o.emissiveMapEncoding):"",o.outputEncoding?("linearToOutputTexel",u=o.outputEncoding,q=Vo(u),"vec4 linearToOutputTexel( vec4 value ) { return LinearTo"+q[0]+q[1]+"; }"):"",o.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ho).join("\n")),m=Wo(m=ko(m=Yo(m),o),o),f=Wo(f=ko(f=Yo(f),o),o),m=Qo(m),f=Qo(f),o.isWebGL2&&!n.isRawShaderMaterial){var E=!1,T=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&null!==m.match(T)&&null!==f.match(T)&&(E=!0,m=m.replace(T,""),f=f.replace(T,"")),a=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+a,c=["#version 300 es\n","#define varying in",E?"":"out highp vec4 pc_fragColor;",E?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+c,S>0&&(a=(a=a.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","layout(num_views = "+S+") in;","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace(["uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;"].join("\n"),["uniform mat4 modelViewMatrices["+S+"];","uniform mat4 projectionMatrices["+S+"];","uniform mat4 viewMatrices["+S+"];","uniform mat3 normalMatrices["+S+"];","#define modelViewMatrix modelViewMatrices[VIEW_ID]","#define projectionMatrix projectionMatrices[VIEW_ID]","#define viewMatrix viewMatrices[VIEW_ID]","#define normalMatrix normalMatrices[VIEW_ID]"].join("\n")),c=(c=c.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace("uniform mat4 viewMatrix;",["uniform mat4 viewMatrices["+S+"];","#define viewMatrix viewMatrices[VIEW_ID]"].join("\n")))}var A,L,z=c+f,P=Do(p,35633,a+m),R=Do(p,35632,z);if(p.attachShader(M,P),p.attachShader(M,R),void 0!==n.index0AttributeName?p.bindAttribLocation(M,0,n.index0AttributeName):!0===o.morphTargets&&p.bindAttribLocation(M,0,"position"),p.linkProgram(M),t.debug.checkShaderErrors){var C=p.getProgramInfoLog(M).trim(),I=p.getShaderInfoLog(P).trim(),N=p.getShaderInfoLog(R).trim(),O=!0,B=!0;if(!1===p.getProgramParameter(M,35714)){O=!1;var D=Uo(p,P,"vertex"),F=Uo(p,R,"fragment");console.error("THREE.WebGLProgram: shader error: ",p.getError(),"35715",p.getProgramParameter(M,35715),"gl.getProgramInfoLog",C,D,F)}else""!==C?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",C):""!==I&&""!==N||(B=!1);B&&(this.diagnostics={runnable:O,material:n,programLog:C,vertexShader:{log:I,prefix:a},fragmentShader:{log:N,prefix:c}})}return p.deleteShader(P),p.deleteShader(R),this.getUniforms=function(){return void 0===A&&(A=new Bo(p,M)),A},this.getAttributes=function(){return void 0===L&&(L=function(t,e){for(var i={},n=t.getProgramParameter(e,35721),r=0;r<n;r++){var o=t.getActiveAttrib(e,r).name;i[o]=t.getAttribLocation(e,o)}return i}(p,M)),L},this.destroy=function(){p.deleteProgram(M),this.program=void 0},this.name=r.name,this.id=Fo++,this.cacheKey=i,this.usedTimes=1,this.program=M,this.vertexShader=P,this.fragmentShader=R,this.numMultiviewViews=S,this}function ea(t,e,i){var n=[],r=i.isWebGL2,o=i.logarithmicDepthBuffer,a=i.floatVertexTextures,s=i.precision,l=i.maxVertexUniforms,h=i.vertexTextures,c={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","numMultiviewViews","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function d(t,e){var i;return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=t.texture.encoding):i=qe,i===qe&&e&&(i=de),i}this.getParameters=function(e,n,p,m,f,v,g){var y=c[e.type],x=g.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(a)return 1024;var i=l,n=Math.floor((i-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}(g):0;null!==e.precision&&(s=i.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",s,"instead.");var w=t.getRenderTarget(),b=w&&w.isWebGLMultiviewRenderTarget?w.numViews:0;return{isWebGL2:r,shaderID:y,precision:s,instancing:!0===g.isInstancedMesh,supportsVertexTextures:h,numMultiviewViews:b,outputEncoding:d(w?w.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:d(e.map,t.gammaInput),matcap:!!e.matcap,matcapEncoding:d(e.matcap,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:d(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===ot||e.envMap.mapping===at),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:d(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===_e,tangentSpaceNormalMap:e.normalMapType===be,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.displacementMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||!e.displacementMap),fog:!!m,useFog:e.fog,fogExp2:m&&m.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:o,skinning:e.skinning&&x>0,maxBones:x,useVertexTexture:a,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:n.directional.length,numPointLights:n.point.length,numSpotLights:n.spot.length,numRectAreaLights:n.rectArea.length,numHemiLights:n.hemi.length,numDirLightShadows:n.directionalShadowMap.length,numPointLightShadows:n.pointShadowMap.length,numSpotLightShadows:n.spotShadowMap.length,numClippingPlanes:f,numClipIntersection:v,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&p.length>0,shadowMapType:t.shadowMap.type,toneMapping:e.toneMapped?t.toneMapping:Y,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===q,flipSided:e.side===u,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCacheKey=function(e,i){var n=[];if(i.shaderID?n.push(i.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var o=0;o<p.length;o++)n.push(i[p[o]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.push(t.gammaFactor),n.join()},this.acquireProgram=function(i,r,o,a){for(var s,l=0,h=n.length;l<h;l++){var c=n[l];if(c.cacheKey===a){++(s=c).usedTimes;break}}return void 0===s&&(s=new ta(t,e,a,i,r,o),n.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=n.indexOf(t);n[e]=n[n.length-1],n.pop(),t.destroy()}},this.programs=n}function ia(){var t=new WeakMap;return{get:function(e){var i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function na(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ra(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function oa(){var t=[],e=0,i=[],n=[],r={id:-1};function o(i,n,o,a,s,l){var h=t[e];return void 0===h?(h={id:i.id,object:i,geometry:n,material:o,program:o.program||r,groupOrder:a,renderOrder:i.renderOrder,z:s,group:l},t[e]=h):(h.id=i.id,h.object=i,h.geometry=n,h.material=o,h.program=o.program||r,h.groupOrder=a,h.renderOrder=i.renderOrder,h.z=s,h.group=l),e++,h}return{opaque:i,transparent:n,init:function(){e=0,i.length=0,n.length=0},push:function(t,e,r,a,s,l){var h=o(t,e,r,a,s,l);(!0===r.transparent?n:i).push(h)},unshift:function(t,e,r,a,s,l){var h=o(t,e,r,a,s,l);(!0===r.transparent?n:i).unshift(h)},sort:function(){i.length>1&&i.sort(na),n.length>1&&n.sort(ra)}}}function aa(){var t=new WeakMap;function e(i){var n=i.target;n.removeEventListener("dispose",e),t.delete(n)}return{get:function(i,n){var r,o=t.get(i);return void 0===o?(r=new oa,t.set(i,new WeakMap),t.get(i).set(n,r),i.addEventListener("dispose",e)):void 0===(r=o.get(n))&&(r=new oa,o.set(n,r)),r},dispose:function(){t=new WeakMap}}}function sa(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var i;switch(e.type){case"DirectionalLight":i={direction:new Oe,color:new ln,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"SpotLight":i={position:new Oe,direction:new Oe,color:new ln,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"PointLight":i={position:new Oe,color:new ln,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Re,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":i={direction:new Oe,skyColor:new ln,groundColor:new ln};break;case"RectAreaLight":i={color:new ln,position:new Oe,halfWidth:new Oe,halfHeight:new Oe}}return t[e.id]=i,i}}}var la=0;function ha(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function ca(){for(var t=new sa,e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},i=0;i<9;i++)e.probe.push(new Oe);var n=new Oe,r=new $e,o=new $e;return{setup:function(i,a,s){for(var l=0,h=0,c=0,u=0;u<9;u++)e.probe[u].set(0,0,0);var q=0,p=0,d=0,m=0,f=0,v=0,g=0,y=0,x=s.matrixWorldInverse;i.sort(ha),u=0;for(var w=i.length;u<w;u++){var b=i[u],_=b.color,M=b.intensity,S=b.distance,E=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)l+=_.r*M,h+=_.g*M,c+=_.b*M;else if(b.isLightProbe)for(var T=0;T<9;T++)e.probe[T].addScaledVector(b.sh.coefficients[T],M);else if(b.isDirectionalLight){if((L=t.get(b)).color.copy(b.color).multiplyScalar(b.intensity),L.direction.setFromMatrixPosition(b.matrixWorld),n.setFromMatrixPosition(b.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(x),L.shadow=b.castShadow,b.castShadow){var A=b.shadow;L.shadowBias=A.bias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,e.directionalShadowMap[q]=E,e.directionalShadowMatrix[q]=b.shadow.matrix,v++}e.directional[q]=L,q++}else if(b.isSpotLight)(L=t.get(b)).position.setFromMatrixPosition(b.matrixWorld),L.position.applyMatrix4(x),L.color.copy(_).multiplyScalar(M),L.distance=S,L.direction.setFromMatrixPosition(b.matrixWorld),n.setFromMatrixPosition(b.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(x),L.coneCos=Math.cos(b.angle),L.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),L.decay=b.decay,L.shadow=b.castShadow,b.castShadow&&(A=b.shadow,L.shadowBias=A.bias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,e.spotShadowMap[d]=E,e.spotShadowMatrix[d]=b.shadow.matrix,y++),e.spot[d]=L,d++;else if(b.isRectAreaLight)(L=t.get(b)).color.copy(_).multiplyScalar(M),L.position.setFromMatrixPosition(b.matrixWorld),L.position.applyMatrix4(x),o.identity(),r.copy(b.matrixWorld),r.premultiply(x),o.extractRotation(r),L.halfWidth.set(.5*b.width,0,0),L.halfHeight.set(0,.5*b.height,0),L.halfWidth.applyMatrix4(o),L.halfHeight.applyMatrix4(o),e.rectArea[m]=L,m++;else if(b.isPointLight)(L=t.get(b)).position.setFromMatrixPosition(b.matrixWorld),L.position.applyMatrix4(x),L.color.copy(b.color).multiplyScalar(b.intensity),L.distance=b.distance,L.decay=b.decay,L.shadow=b.castShadow,b.castShadow&&(A=b.shadow,L.shadowBias=A.bias,L.shadowRadius=A.radius,L.shadowMapSize=A.mapSize,L.shadowCameraNear=A.camera.near,L.shadowCameraFar=A.camera.far,e.pointShadowMap[p]=E,e.pointShadowMatrix[p]=b.shadow.matrix,g++),e.point[p]=L,p++;else if(b.isHemisphereLight){var L;(L=t.get(b)).direction.setFromMatrixPosition(b.matrixWorld),L.direction.transformDirection(x),L.direction.normalize(),L.skyColor.copy(b.color).multiplyScalar(M),L.groundColor.copy(b.groundColor).multiplyScalar(M),e.hemi[f]=L,f++}}e.ambient[0]=l,e.ambient[1]=h,e.ambient[2]=c;var z=e.hash;z.directionalLength===q&&z.pointLength===p&&z.spotLength===d&&z.rectAreaLength===m&&z.hemiLength===f&&z.numDirectionalShadows===v&&z.numPointShadows===g&&z.numSpotShadows===y||(e.directional.length=q,e.spot.length=d,e.rectArea.length=m,e.point.length=p,e.hemi.length=f,e.directionalShadowMap.length=v,e.pointShadowMap.length=g,e.spotShadowMap.length=y,e.directionalShadowMatrix.length=v,e.pointShadowMatrix.length=g,e.spotShadowMatrix.length=y,z.directionalLength=q,z.pointLength=p,z.spotLength=d,z.rectAreaLength=m,z.hemiLength=f,z.numDirectionalShadows=v,z.numPointShadows=g,z.numSpotShadows=y,e.version=la++)},state:e}}function ua(){var t=new ca,e=[],i=[];return{init:function(){e.length=0,i.length=0},state:{lightsArray:e,shadowsArray:i,lights:t},setupLights:function(n){t.setup(e,i,n)},pushLight:function(t){e.push(t)},pushShadow:function(t){i.push(t)}}}function qa(){var t=new WeakMap;function e(i){var n=i.target;n.removeEventListener("dispose",e),t.delete(n)}return{get:function(i,n){var r;return!1===t.has(i)?(r=new ua,t.set(i,new WeakMap),t.get(i).set(n,r),i.addEventListener("dispose",e)):!1===t.get(i).has(n)?(r=new ua,t.get(i).set(n,r)):r=t.get(i).get(n),r},dispose:function(){t=new WeakMap}}}function pa(t){dn.call(this),this.type="MeshDepthMaterial",this.depthPacking=xe,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function da(t){dn.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Oe,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}pa.prototype=Object.create(dn.prototype),pa.prototype.constructor=pa,pa.prototype.isMeshDepthMaterial=!0,pa.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},da.prototype=Object.create(dn.prototype),da.prototype.constructor=da,da.prototype.isMeshDistanceMaterial=!0,da.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var ma="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n  \n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\n}",fa="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function va(t,e,i){var n=new wr,r=new Re,o=new Re,a=new Ge,l=[],p=[],d={},f={0:u,1:c,2:q},v=new qr({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Re},radius:{value:4}},vertexShader:fa,fragmentShader:ma}),g=v.clone();g.defines.HORIZONAL_PASS=1;var y=new Nn;y.setAttribute("position",new fn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var x=new $n(y,v),w=this;function b(i,n){var r=e.update(x);v.uniforms.shadow_pass.value=i.map.texture,v.uniforms.resolution.value=i.mapSize,v.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,r,v,x,null),g.uniforms.shadow_pass.value=i.mapPass.texture,g.uniforms.resolution.value=i.mapSize,g.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,r,g,x,null)}function _(t,e,i){var n=t<<0|e<<1|i<<2,r=l[n];return void 0===r&&(r=new pa({depthPacking:we,morphTargets:t,skinning:e}),l[n]=r),r}function M(t,e,i){var n=t<<0|e<<1|i<<2,r=p[n];return void 0===r&&(r=new da({morphTargets:t,skinning:e}),p[n]=r),r}function S(e,i,n,r,o,a){var s=e.geometry,l=null,c=_,u=e.customDepthMaterial;if(!0===n.isPointLight&&(c=M,u=e.customDistanceMaterial),void 0===u){var q=!1;!0===i.morphTargets&&(!0===s.isBufferGeometry?q=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:!0===s.isGeometry&&(q=s.morphTargets&&s.morphTargets.length>0));var p=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?p=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),l=c(q,p,!0===e.isInstancedMesh)}else l=u;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){var m=l.uuid,v=i.uuid,g=d[m];void 0===g&&(g={},d[m]=g);var y=g[v];void 0===y&&(y=l.clone(),g[v]=y),l=y}return l.visible=i.visible,l.wireframe=i.wireframe,l.side=a===h?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:f[i.side],l.clipShadows=i.clipShadows,l.clippingPlanes=i.clippingPlanes,l.clipIntersection=i.clipIntersection,l.wireframeLinewidth=i.wireframeLinewidth,l.linewidth=i.linewidth,!0===n.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(n.matrixWorld),l.nearDistance=r,l.farDistance=o),l}function E(i,r,o,a,s){if(!1!==i.visible){if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&s===h)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,i.matrixWorld);var l=e.update(i),c=i.material;if(Array.isArray(c))for(var u=l.groups,q=0,p=u.length;q<p;q++){var d=u[q],m=c[d.materialIndex];if(m&&m.visible){var f=S(i,m,a,o.near,o.far,s);t.renderBufferDirect(o,null,l,f,i,d)}}else c.visible&&(f=S(i,c,a,o.near,o.far,s),t.renderBufferDirect(o,null,l,f,i,null))}for(var v=i.children,g=0,y=v.length;g<y;g++)E(v[g],r,o,a,s)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=s,this.render=function(e,s,l){if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)&&0!==e.length){var c=t.getRenderTarget(),u=t.getActiveCubeFace(),q=t.getActiveMipmapLevel(),p=t.state;p.setBlending(m),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(var d=0,f=e.length;d<f;d++){var v=e[d],g=v.shadow;if(void 0!==g){r.copy(g.mapSize);var y=g.getFrameExtents();if(r.multiply(y),o.copy(g.mapSize),(r.x>i||r.y>i)&&(console.warn("THREE.WebGLShadowMap:",v,"has shadow exceeding max texture size, reducing"),r.x>i&&(o.x=Math.floor(i/y.x),r.x=o.x*y.x,g.mapSize.x=o.x),r.y>i&&(o.y=Math.floor(i/y.y),r.y=o.y*y.y,g.mapSize.y=o.y)),null===g.map&&!g.isPointLightShadow&&this.type===h){var x={minFilter:pt,magFilter:pt,format:zt};g.map=new He(r.x,r.y,x),g.map.texture.name=v.name+".shadowMap",g.mapPass=new He(r.x,r.y,x),g.camera.updateProjectionMatrix()}null===g.map&&(x={minFilter:ct,magFilter:ct,format:zt},g.map=new He(r.x,r.y,x),g.map.texture.name=v.name+".shadowMap",g.camera.updateProjectionMatrix()),t.setRenderTarget(g.map),t.clear();for(var _=g.getViewportCount(),M=0;M<_;M++){var S=g.getViewport(M);a.set(o.x*S.x,o.y*S.y,o.x*S.z,o.y*S.w),p.viewport(a),g.updateMatrices(v,M),n=g.getFrustum(),E(s,l,g.camera,v,this.type)}g.isPointLightShadow||this.type!==h||b(g,l)}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}w.needsUpdate=!1,t.setRenderTarget(c,u,q)}}}function ga(t,e,i){var n=i.isWebGL2,s=new function(){var e=!1,i=new Ge,n=null,r=new Ge(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,o,a,s){!0===s&&(e*=a,n*=a,o*=a),i.set(e,n,o,a),!1===r.equals(i)&&(t.clearColor(e,n,o,a),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},l=new function(){var e=!1,i=null,n=null,r=null;return{setTest:function(t){t?yt(2929):xt(2929)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case B:t.depthFunc(512);break;case D:t.depthFunc(519);break;case F:t.depthFunc(513);break;case V:t.depthFunc(515);break;case U:t.depthFunc(514);break;case j:t.depthFunc(518);break;case G:t.depthFunc(516);break;case H:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,n=null,r=null}}},h=new function(){var e=!1,i=null,n=null,r=null,o=null,a=null,s=null,l=null,h=null;return{setTest:function(t){e||(t?yt(2960):xt(2960))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,a){n===e&&r===i&&o===a||(t.stencilFunc(e,i,a),n=e,r=i,o=a)},setOp:function(e,i,n){a===e&&s===i&&l===n||(t.stencilOp(e,i,n),a=e,s=i,l=n)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,i=null,n=null,r=null,o=null,a=null,s=null,l=null,h=null}}},c=t.getParameter(34921),p=new Uint8Array(c),d=new Uint8Array(c),k=new Uint8Array(c),W={},X=null,Y=null,Z=null,J=null,Q=null,K=null,$=null,tt=null,et=null,it=!1,nt=null,rt=null,ot=null,at=null,st=null,lt=t.getParameter(35661),ht=!1,ct=0,ut=t.getParameter(7938);-1!==ut.indexOf("WebGL")?(ct=parseFloat(/^WebGL\ ([0-9])/.exec(ut)[1]),ht=ct>=1):-1!==ut.indexOf("OpenGL ES")&&(ct=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ut)[1]),ht=ct>=2);var qt=null,pt={},dt=new Ge,mt=new Ge;function ft(e,i,n){var r=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(var a=0;a<n;a++)t.texImage2D(i+a,0,6408,1,1,0,6408,5121,r);return o}var vt={};function gt(i,r){p[i]=1,0===d[i]&&(t.enableVertexAttribArray(i),d[i]=1),k[i]!==r&&((n?t:e.get("ANGLE_instanced_arrays"))[n?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),k[i]=r)}function yt(e){!0!==W[e]&&(t.enable(e),W[e]=!0)}function xt(e){!1!==W[e]&&(t.disable(e),W[e]=!1)}vt[3553]=ft(3553,3553,1),vt[34067]=ft(34067,34069,6),s.setClear(0,0,0,1),l.setClear(1),h.setClear(0),yt(2929),l.setFunc(V),St(!1),Et(o),yt(2884),Mt(m);var wt={[w]:32774,[b]:32778,[_]:32779};if(n)wt[M]=32775,wt[S]=32776;else{var bt=e.get("EXT_blend_minmax");null!==bt&&(wt[M]=bt.MIN_EXT,wt[S]=bt.MIN_EXT)}var _t={[E]:0,[T]:1,[A]:768,[z]:770,[O]:776,[I]:774,[R]:772,[L]:769,[P]:771,[N]:775,[C]:773};function Mt(e,i,n,r,o,a,s,l){if(e!==m){if(Y||(yt(3042),Y=!0),e===x)o=o||i,a=a||n,s=s||r,i===J&&o===$||(t.blendEquationSeparate(wt[i],wt[o]),J=i,$=o),n===Q&&r===K&&a===tt&&s===et||(t.blendFuncSeparate(_t[n],_t[r],_t[a],_t[s]),Q=n,K=r,tt=a,et=s),Z=e,it=null;else if(e!==Z||l!==it){if(J===w&&$===w||(t.blendEquation(32774),J=w,$=w),l)switch(e){case f:t.blendFuncSeparate(1,771,1,771);break;case v:t.blendFunc(1,1);break;case g:t.blendFuncSeparate(0,0,769,771);break;case y:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case f:t.blendFuncSeparate(770,771,1,771);break;case v:t.blendFunc(770,1);break;case g:t.blendFunc(0,769);break;case y:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}Q=null,K=null,tt=null,et=null,Z=e,it=l}}else Y&&(xt(3042),Y=!1)}function St(e){nt!==e&&(e?t.frontFace(2304):t.frontFace(2305),nt=e)}function Et(e){e!==r?(yt(2884),e!==rt&&(e===o?t.cullFace(1029):e===a?t.cullFace(1028):t.cullFace(1032))):xt(2884),rt=e}function Tt(e,i,n){e?(yt(32823),at===i&&st===n||(t.polygonOffset(i,n),at=i,st=n)):xt(32823)}function At(e){void 0===e&&(e=33984+lt-1),qt!==e&&(t.activeTexture(e),qt=e)}return{buffers:{color:s,depth:l,stencil:h},initAttributes:function(){for(var t=0,e=p.length;t<e;t++)p[t]=0},enableAttribute:function(t){gt(t,0)},enableAttributeAndDivisor:gt,disableUnusedAttributes:function(){for(var e=0,i=d.length;e!==i;++e)d[e]!==p[e]&&(t.disableVertexAttribArray(e),d[e]=0)},enable:yt,disable:xt,useProgram:function(e){return X!==e&&(t.useProgram(e),X=e,!0)},setBlending:Mt,setMaterial:function(t,e){t.side===q?xt(2884):yt(2884);var i=t.side===u;e&&(i=!i),St(i),t.blending===f&&!1===t.transparent?Mt(m):Mt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),l.setFunc(t.depthFunc),l.setTest(t.depthTest),l.setMask(t.depthWrite),s.setMask(t.colorWrite);var n=t.stencilWrite;h.setTest(n),n&&(h.setMask(t.stencilWriteMask),h.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),h.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Tt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:St,setCullFace:Et,setLineWidth:function(e){e!==ot&&(ht&&t.lineWidth(e),ot=e)},setPolygonOffset:Tt,setScissorTest:function(t){t?yt(3089):xt(3089)},activeTexture:At,bindTexture:function(e,i){null===qt&&At();var n=pt[qt];void 0===n&&(n={type:void 0,texture:void 0},pt[qt]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||vt[e]),n.type=e,n.texture=i)},unbindTexture:function(){var e=pt[qt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===dt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),dt.copy(e))},viewport:function(e){!1===mt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),mt.copy(e))},reset:function(){for(var e=0;e<d.length;e++)1===d[e]&&(t.disableVertexAttribArray(e),d[e]=0);W={},qt=null,pt={},X=null,Z=null,nt=null,rt=null,s.reset(),l.reset(),h.reset()}}}function ya(t,e,i,n,r,o,a){var s,l=r.isWebGL2,h=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,q=r.maxSamples,p=new WeakMap,d="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d");function m(t,e){return d?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function f(t,e,i,n){var r=1;if((t.width>n||t.height>n)&&(r=n/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){var o=e?Pe.floorPowerOfTwo:Math.floor,a=o(r*t.width),l=o(r*t.height);void 0===s&&(s=m(a,l));var h=i?m(a,l):s;return h.width=a,h.height=l,h.getContext("2d").drawImage(t,0,0,a,l),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+l+")."),h}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function v(t){return Pe.isPowerOfTwo(t.width)&&Pe.isPowerOfTwo(t.height)}function g(t,e){return t.generateMipmaps&&e&&t.minFilter!==ct&&t.minFilter!==pt}function y(e,i,r,o){t.generateMipmap(e),n.get(i).__maxMipLevel=Math.log(Math.max(r,o))*Math.LOG2E}function x(t,i){if(!1===l)return t;var n=t;return 6403===t&&(5126===i&&(n=33326),5131===i&&(n=33325),5121===i&&(n=33321)),6407===t&&(5126===i&&(n=34837),5131===i&&(n=34843),5121===i&&(n=32849)),6408===t&&(5126===i&&(n=34836),5131===i&&(n=34842),5121===i&&(n=32856)),33325===n||33326===n||34842===n||34836===n?e.get("EXT_color_buffer_float"):34843!==n&&34837!==n||console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),n}function w(t){return t===ct||t===ut||t===qt?9728:9729}function b(e){var i=e.target;i.removeEventListener("dispose",b),function(e){var i=n.get(e);void 0!==i.__webglInit&&(t.deleteTexture(i.__webglTexture),n.remove(e))}(i),i.isVideoTexture&&p.delete(i),a.memory.textures--}function _(e){var i=e.target;i.removeEventListener("dispose",_),function(e){var i=n.get(e),r=n.get(e.texture);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLRenderTargetCube)for(var o=0;o<6;o++)t.deleteFramebuffer(i.__webglFramebuffer[o]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[o]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);if(e.isWebGLMultiviewRenderTarget){t.deleteTexture(i.__webglColorTexture),t.deleteTexture(i.__webglDepthStencilTexture),a.memory.textures-=2,o=0;for(var s=i.__webglViewFramebuffers.length;o<s;o++)t.deleteFramebuffer(i.__webglViewFramebuffers[o])}n.remove(e.texture),n.remove(e)}}(i),a.memory.textures--}var M=0;function S(t,e){var r=n.get(t);if(t.isVideoTexture&&function(t){var e=a.render.frame;p.get(t)!==e&&(p.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){var o=t.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==o.complete)return void R(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,r.__webglTexture)}function E(e,r){if(6===e.image.length){var a=n.get(e);if(e.version>0&&a.__version!==e.version){P(a,e),i.activeTexture(33984+r),i.bindTexture(34067,a.__webglTexture),t.pixelStorei(37440,e.flipY);for(var s=e&&e.isCompressedTexture,h=e.image[0]&&e.image[0].isDataTexture,u=[],q=0;q<6;q++)u[q]=s||h?h?e.image[q].image:e.image[q]:f(e.image[q],!1,!0,c);var p,d=u[0],m=v(d)||l,w=o.convert(e.format),b=o.convert(e.type),_=x(w,b);if(z(34067,e,m),s){for(q=0;q<6;q++){p=u[q].mipmaps;for(var M=0;M<p.length;M++){var S=p[M];e.format!==zt&&e.format!==Lt?null!==w?i.compressedTexImage2D(34069+q,M,_,S.width,S.height,0,S.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+q,M,_,S.width,S.height,0,w,b,S.data)}}a.__maxMipLevel=p.length-1}else{for(p=e.mipmaps,q=0;q<6;q++)if(h)for(i.texImage2D(34069+q,0,_,u[q].width,u[q].height,0,w,b,u[q].data),M=0;M<p.length;M++){var E=(S=p[M]).image[q].image;i.texImage2D(34069+q,M+1,_,E.width,E.height,0,w,b,E.data)}else for(i.texImage2D(34069+q,0,_,w,b,u[q]),M=0;M<p.length;M++)S=p[M],i.texImage2D(34069+q,M+1,_,w,b,S.image[q]);a.__maxMipLevel=p.length}g(e,m)&&y(34067,e,d.width,d.height),a.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(33984+r),i.bindTexture(34067,a.__webglTexture)}}function T(t,e){i.activeTexture(33984+e),i.bindTexture(34067,n.get(t).__webglTexture)}var A={[st]:10497,[lt]:33071,[ht]:33648},L={[ct]:9728,[ut]:9984,[qt]:9986,[pt]:9729,[dt]:9985,[mt]:9987};function z(i,o,a){a?(t.texParameteri(i,10242,A[o.wrapS]),t.texParameteri(i,10243,A[o.wrapT]),32879!==i&&35866!==i||t.texParameteri(i,32882,A[o.wrapR]),t.texParameteri(i,10240,L[o.magFilter]),t.texParameteri(i,10241,L[o.minFilter])):(t.texParameteri(i,10242,33071),t.texParameteri(i,10243,33071),32879!==i&&35866!==i||t.texParameteri(i,32882,33071),o.wrapS===lt&&o.wrapT===lt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(i,10240,w(o.magFilter)),t.texParameteri(i,10241,w(o.minFilter)),o.minFilter!==ct&&o.minFilter!==pt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var s=e.get("EXT_texture_filter_anisotropic");if(s){if(o.type===bt&&null===e.get("OES_texture_float_linear"))return;if(o.type===_t&&null===(l||e.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function P(e,i){void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",b),e.__webglTexture=t.createTexture(),a.memory.textures++)}function R(e,n,r){var a=3553;n.isDataTexture2DArray&&(a=35866),n.isDataTexture3D&&(a=32879),P(e,n),i.activeTexture(33984+r),i.bindTexture(a,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment);var s=function(t){return!l&&(t.wrapS!==lt||t.wrapT!==lt||t.minFilter!==ct&&t.minFilter!==pt)}(n)&&!1===v(n.image),h=f(n.image,s,!1,u),c=v(h)||l,q=o.convert(n.format),p=o.convert(n.type),d=x(q,p);z(a,n,c);var m,w=n.mipmaps;if(n.isDepthTexture){if(d=6402,n.type===bt){if(!1===l)throw new Error("Float Depth Texture only supported in WebGL2.0");d=36012}else l&&(d=33189);n.format===Ct&&6402===d&&n.type!==yt&&n.type!==wt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=yt,p=o.convert(n.type)),n.format===It&&(d=34041,n.type!==Tt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Tt,p=o.convert(n.type))),i.texImage2D(3553,0,d,h.width,h.height,0,q,p,null)}else if(n.isDataTexture)if(w.length>0&&c){for(var b=0,_=w.length;b<_;b++)m=w[b],i.texImage2D(3553,b,d,m.width,m.height,0,q,p,m.data);n.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else i.texImage2D(3553,0,d,h.width,h.height,0,q,p,h.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(b=0,_=w.length;b<_;b++)m=w[b],n.format!==zt&&n.format!==Lt?null!==q?i.compressedTexImage2D(3553,b,d,m.width,m.height,0,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,b,d,m.width,m.height,0,q,p,m.data);e.__maxMipLevel=w.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,d,h.width,h.height,h.depth,0,q,p,h.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,d,h.width,h.height,h.depth,0,q,p,h.data),e.__maxMipLevel=0;else if(w.length>0&&c){for(b=0,_=w.length;b<_;b++)m=w[b],i.texImage2D(3553,b,d,q,p,m);n.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else i.texImage2D(3553,0,d,q,p,h),e.__maxMipLevel=0;g(n,c)&&y(3553,n,h.width,h.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function C(e,r,a,s){var l=o.convert(r.texture.format),h=o.convert(r.texture.type),c=x(l,h);i.texImage2D(s,0,c,r.width,r.height,0,l,h,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,a,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function I(e,i,n){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){if(n){var r=N(i);t.renderbufferStorageMultisample(36161,r,33189,i.width,i.height)}else t.renderbufferStorage(36161,33189,i.width,i.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer)n?(r=N(i),t.renderbufferStorageMultisample(36161,r,35056,i.width,i.height)):t.renderbufferStorage(36161,34041,i.width,i.height),t.framebufferRenderbuffer(36160,33306,36161,e);else{var a=x(o.convert(i.texture.format),o.convert(i.texture.type));n?(r=N(i),t.renderbufferStorageMultisample(36161,r,a,i.width,i.height)):t.renderbufferStorage(36161,a,i.width,i.height)}t.bindRenderbuffer(36161,null)}function N(t){return l&&t.isWebGLMultisampleRenderTarget?Math.min(q,t.samples):0}var O=!1,B=!1;this.allocateTextureUnit=function(){var t=M;return t>=h&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+h),M+=1,t},this.resetTextureUnits=function(){M=0},this.setTexture2D=S,this.setTexture2DArray=function(t,e){var r=n.get(t);t.version>0&&r.__version!==t.version?R(r,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){var r=n.get(t);t.version>0&&r.__version!==t.version?R(r,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=E,this.setTextureCubeDynamic=T,this.setupRenderTarget=function(r){var s=n.get(r),h=n.get(r.texture);r.addEventListener("dispose",_),h.__webglTexture=t.createTexture(),a.memory.textures++;var c=!0===r.isWebGLRenderTargetCube,u=!0===r.isWebGLMultisampleRenderTarget,q=!0===r.isWebGLMultiviewRenderTarget,p=v(r)||l;if(c){s.__webglFramebuffer=[];for(var d=0;d<6;d++)s.__webglFramebuffer[d]=t.createFramebuffer()}else if(s.__webglFramebuffer=t.createFramebuffer(),u)if(l){s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var m=x(o.convert(r.texture.format),o.convert(r.texture.type)),f=N(r);t.renderbufferStorageMultisample(36161,f,m,r.width,r.height),t.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),r.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),I(s.__webglDepthRenderbuffer,r,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");else if(q){var w=r.width,b=r.height,M=r.numViews;t.bindFramebuffer(36160,s.__webglFramebuffer);var E=e.get("OVR_multiview2");a.memory.textures+=2;var T=t.createTexture();t.bindTexture(35866,T),t.texParameteri(35866,10240,9728),t.texParameteri(35866,10241,9728),t.texImage3D(35866,0,32856,w,b,M,0,6408,5121,null),E.framebufferTextureMultiviewOVR(36160,36064,T,0,0,M);var A=t.createTexture();t.bindTexture(35866,A),t.texParameteri(35866,10240,9728),t.texParameteri(35866,10241,9728),t.texImage3D(35866,0,35056,w,b,M,0,34041,34042,null),E.framebufferTextureMultiviewOVR(36160,33306,A,0,0,M);var L=new Array(M);for(d=0;d<M;++d)L[d]=t.createFramebuffer(),t.bindFramebuffer(36160,L[d]),t.framebufferTextureLayer(36160,36064,T,0,d);s.__webglColorTexture=T,s.__webglDepthStencilTexture=A,s.__webglViewFramebuffers=L,t.bindFramebuffer(36160,null),t.bindTexture(35866,null)}if(c){for(i.bindTexture(34067,h.__webglTexture),z(34067,r.texture,p),d=0;d<6;d++)C(s.__webglFramebuffer[d],r,36064,34069+d);g(r.texture,p)&&y(34067,r.texture,r.width,r.height),i.bindTexture(34067,null)}else q||(i.bindTexture(3553,h.__webglTexture),z(3553,r.texture,p),C(s.__webglFramebuffer,r,36064,3553),g(r.texture,p)&&y(3553,r.texture,r.width,r.height),i.bindTexture(3553,null));r.depthBuffer&&function(e){var i=n.get(e),r=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),S(i.depthTexture,0);var r=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Ct)t.framebufferTexture2D(36160,36096,3553,r,0);else{if(i.depthTexture.format!==It)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,r,0)}}(i.__webglFramebuffer,e)}else if(r){i.__webglDepthbuffer=[];for(var o=0;o<6;o++)t.bindFramebuffer(36160,i.__webglFramebuffer[o]),i.__webglDepthbuffer[o]=t.createRenderbuffer(),I(i.__webglDepthbuffer[o],e)}else t.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),I(i.__webglDepthbuffer,e);t.bindFramebuffer(36160,null)}(r)},this.updateRenderTargetMipmap=function(t){var e=t.texture;if(g(e,v(t)||l)){var r=t.isWebGLRenderTargetCube?34067:3553,o=n.get(e).__webglTexture;i.bindTexture(r,o),y(r,e,t.width,t.height),i.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(l){var i=n.get(e);t.bindFramebuffer(36008,i.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,i.__webglFramebuffer);var r=e.width,o=e.height,a=16384;e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024),t.blitFramebuffer(0,0,r,o,0,0,r,o,a,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),t=t.texture),S(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLRenderTargetCube&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),B=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?E(t,e):T(t,e)}}function xa(t,e,i){var n=i.isWebGL2;return{convert:function(t){var i;if(t===ft)return 5121;if(t===Mt)return 32819;if(t===St)return 32820;if(t===Et)return 33635;if(t===vt)return 5120;if(t===gt)return 5122;if(t===yt)return 5123;if(t===xt)return 5124;if(t===wt)return 5125;if(t===bt)return 5126;if(t===_t)return n?5131:null!==(i=e.get("OES_texture_half_float"))?i.HALF_FLOAT_OES:null;if(t===At)return 6406;if(t===Lt)return 6407;if(t===zt)return 6408;if(t===Pt)return 6409;if(t===Rt)return 6410;if(t===Ct)return 6402;if(t===It)return 34041;if(t===Nt)return 6403;if(t===Ot||t===Bt||t===Dt||t===Ft){if(null===(i=e.get("WEBGL_compressed_texture_s3tc")))return null;if(t===Ot)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Bt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Dt)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Ft)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===Vt||t===Ut||t===jt||t===Gt){if(null===(i=e.get("WEBGL_compressed_texture_pvrtc")))return null;if(t===Vt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===Ut)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===jt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Gt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}return t===Ht?null!==(i=e.get("WEBGL_compressed_texture_etc1"))?i.COMPRESSED_RGB_ETC1_WEBGL:null:t===kt||t===Wt||t===Xt||t===Yt||t===Zt||t===Jt||t===Qt||t===Kt||t===$t||t===te||t===ee||t===ie||t===ne||t===re?null!==(i=e.get("WEBGL_compressed_texture_astc"))?t:null:t===Tt?n?34042:null!==(i=e.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}function wa(t,e,i,n){He.call(this,t,e,n),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=i}function ba(t,e){var i,n,r,o,a,s,l,h=t.extensions,c=t.properties,u=0;function q(t){return t.isArrayCamera?t.cameras:(a[0]=t,a)}this.isAvailable=function(){if(void 0===l){var t=h.get("OVR_multiview2");if(l=null!==t&&!1===e.getContextAttributes().antialias){u=e.getParameter(t.MAX_VIEWS_OVR),i=new wa(0,0,2),s=new Re,o=[],r=[],a=[];for(var n=0;n<u;n++)o[n]=new $e,r[n]=new Fe}}return l},this.attachCamera=function(e){!1!==function(t){if(void 0===t.isArrayCamera)return!0;var e=t.cameras;if(e.length>u)return!1;for(var i=1,n=e.length;i<n;i++)if(e[0].viewport.z!==e[i].viewport.z||e[0].viewport.w!==e[i].viewport.w)return!1;return!0}(e)&&(n=t.getRenderTarget(),function(e){if(n?s.set(n.width,n.height):t.getDrawingBufferSize(s),e.isArrayCamera){var r=e.cameras[0].viewport;i.setSize(r.z,r.w),i.setNumViews(e.cameras.length)}else i.setSize(s.x,s.y),i.setNumViews(2)}(e),t.setRenderTarget(i))},this.detachCamera=function(r){i===t.getRenderTarget()&&(t.setRenderTarget(n),function(t){var n=i,r=n.numViews,o=c.get(n).__webglViewFramebuffers,a=n.width,l=n.height;if(t.isArrayCamera)for(var h=0;h<r;h++){var u=t.cameras[h].viewport,q=u.x,p=u.y,d=q+u.z,m=p+u.w;e.bindFramebuffer(36008,o[h]),e.blitFramebuffer(0,0,a,l,q,p,d,m,16384,9728)}else e.bindFramebuffer(36008,o[0]),e.blitFramebuffer(0,0,a,l,0,0,s.x,s.y,16384,9728)}(r))},this.updateCameraProjectionMatricesUniform=function(t,i){for(var n=q(t),r=0;r<n.length;r++)o[r].copy(n[r].projectionMatrix);i.setValue(e,"projectionMatrices",o)},this.updateCameraViewMatricesUniform=function(t,i){for(var n=q(t),r=0;r<n.length;r++)o[r].copy(n[r].matrixWorldInverse);i.setValue(e,"viewMatrices",o)},this.updateObjectMatricesUniforms=function(t,i,n){for(var a=q(i),s=0;s<a.length;s++)o[s].multiplyMatrices(a[s].matrixWorldInverse,t.matrixWorld),r[s].getNormalMatrix(o[s]);n.setValue(e,"modelViewMatrices",o),n.setValue(e,"normalMatrices",r)}}function _a(){vi.call(this),this.type="Group"}function Ma(t){dr.call(this),this.cameras=t||[]}wa.prototype=Object.assign(Object.create(He.prototype),{constructor:wa,isWebGLMultiviewRenderTarget:!0,copy:function(t){return He.prototype.copy.call(this,t),this.numViews=t.numViews,this},setNumViews:function(t){return this.numViews!==t&&(this.numViews=t,this.dispose()),this}}),_a.prototype=Object.assign(Object.create(vi.prototype),{constructor:_a,isGroup:!0}),Ma.prototype=Object.assign(Object.create(dr.prototype),{constructor:Ma,isArrayCamera:!0});var Sa,Ea=new Oe,Ta=new Oe;function Aa(t,e,i){Ea.setFromMatrixPosition(e.matrixWorld),Ta.setFromMatrixPosition(i.matrixWorld);var n=Ea.distanceTo(Ta),r=e.projectionMatrix.elements,o=i.projectionMatrix.elements,a=r[14]/(r[10]-1),s=r[14]/(r[10]+1),l=(r[9]+1)/r[5],h=(r[9]-1)/r[5],c=(r[8]-1)/r[0],u=(o[8]+1)/o[0],q=a*c,p=a*u,d=n/(-c+u),m=d*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(d),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);var f=a+d,v=s+d,g=q-m,y=p+(n-m),x=l*s/v*f,w=h*s/v*f;t.projectionMatrix.makePerspective(g,y,x,w,f,v)}function La(t){var e,i,n=this,r=null,o=null,a=null,s=[],l=new $e,h=new $e,c=1,u="local-floor";"undefined"!=typeof window&&"VRFrameData"in window&&(o=new window.VRFrameData,window.addEventListener("vrdisplaypresentchange",w,!1));var q=new $e,p=new Ce,d=new Oe,m=new dr;m.viewport=new Ge,m.layers.enable(1);var f=new dr;f.viewport=new Ge,f.layers.enable(2);var v=new Ma([m,f]);function g(){return null!==r&&!0===r.isPresenting}v.layers.enable(1),v.layers.enable(2);var y,x=new Re;function w(){if(g()){var o=r.getEyeParameters("left");e=2*o.renderWidth*c,i=o.renderHeight*c,y=t.getPixelRatio(),t.getSize(x),t.setDrawingBufferSize(e,i,1),m.viewport.set(0,0,e/2,i),f.viewport.set(e/2,0,e/2,i),S.start(),n.dispatchEvent({type:"sessionstart"})}else n.enabled&&t.setDrawingBufferSize(x.width,x.height,y),S.stop(),n.dispatchEvent({type:"sessionend"})}var b=[];function _(t){for(var e=navigator.getGamepads&&navigator.getGamepads(),i=0,n=e.length;i<n;i++){var r=e[i];if(r&&("Daydream Controller"===r.id||"Gear VR Controller"===r.id||"Oculus Go Controller"===r.id||"OpenVR Gamepad"===r.id||r.id.startsWith("Oculus Touch")||r.id.startsWith("HTC Vive Focus")||r.id.startsWith("Spatial Controller"))){var o=r.hand;if(0===t&&(""===o||"right"===o))return r;if(1===t&&"left"===o)return r}}}function M(t,n){null!==n&&4===n.length&&t.set(n[0]*e,n[1]*i,n[2]*e,n[3]*i)}this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new _a).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.getDevice=function(){return r},this.setDevice=function(t){void 0!==t&&(r=t),S.setContext(t)},this.setFramebufferScaleFactor=function(t){c=t},this.setReferenceSpaceType=function(t){u=t},this.setPoseTarget=function(t){void 0!==t&&(a=t)},this.getCamera=function(t){var e="local-floor"===u?1.6:0;if(!1===g())return t.position.set(0,e,0),t.rotation.set(0,0,0),t;if(r.depthNear=t.near,r.depthFar=t.far,r.getFrameData(o),"local-floor"===u){var i=r.stageParameters;i?l.fromArray(i.sittingToStandingTransform):l.makeTranslation(0,e,0)}var n=o.pose,c=null!==a?a:t;c.matrix.copy(l),c.matrix.decompose(c.position,c.quaternion,c.scale),null!==n.orientation&&(p.fromArray(n.orientation),c.quaternion.multiply(p)),null!==n.position&&(p.setFromRotationMatrix(l),d.fromArray(n.position),d.applyQuaternion(p),c.position.add(d)),c.updateMatrixWorld(),m.near=t.near,f.near=t.near,m.far=t.far,f.far=t.far,m.matrixWorldInverse.fromArray(o.leftViewMatrix),f.matrixWorldInverse.fromArray(o.rightViewMatrix),h.getInverse(l),"local-floor"===u&&(m.matrixWorldInverse.multiply(h),f.matrixWorldInverse.multiply(h));var y=c.parent;null!==y&&(q.getInverse(y.matrixWorld),m.matrixWorldInverse.multiply(q),f.matrixWorldInverse.multiply(q)),m.matrixWorld.getInverse(m.matrixWorldInverse),f.matrixWorld.getInverse(f.matrixWorldInverse),m.projectionMatrix.fromArray(o.leftProjectionMatrix),f.projectionMatrix.fromArray(o.rightProjectionMatrix),Aa(v,m,f);var x=r.getLayers();if(x.length){var w=x[0];M(m.viewport,w.leftBounds),M(f.viewport,w.rightBounds)}return function(){for(var t=0;t<s.length;t++){var e=s[t],i=_(t);if(void 0!==i&&void 0!==i.pose){if(null===i.pose)return;var n=i.pose;!1===n.hasPosition&&e.position.set(.2,-.6,-.05),null!==n.position&&e.position.fromArray(n.position),null!==n.orientation&&e.quaternion.fromArray(n.orientation),e.matrix.compose(e.position,e.quaternion,e.scale),e.matrix.premultiply(l),e.matrix.decompose(e.position,e.quaternion,e.scale),e.matrixWorldNeedsUpdate=!0,e.visible=!0;var r="Daydream Controller"===i.id?0:1;void 0===b[t]&&(b[t]=!1),b[t]!==i.buttons[r].pressed&&(b[t]=i.buttons[r].pressed,!0===b[t]?e.dispatchEvent({type:"selectstart"}):(e.dispatchEvent({type:"selectend"}),e.dispatchEvent({type:"select"})))}else e.visible=!1}}(),v},this.getStandingMatrix=function(){return l},this.isPresenting=g;var S=new Sr;this.setAnimationLoop=function(t){S.setAnimationLoop(t),g()&&S.start()},this.submitFrame=function(){g()&&r.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",w)},this.setFrameOfReferenceType=function(){console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.")}}function za(t,e){var i=this,n=null,r=null,o="local-floor",a=null,s=[],l=[];function h(){return null!==n&&null!==r}var c=new dr;c.layers.enable(1),c.viewport=new Ge;var u=new dr;u.layers.enable(2),u.viewport=new Ge;var q=new Ma([c,u]);function p(t){for(var e=0;e<s.length;e++)l[e]===t.inputSource&&s[e].dispatchEvent({type:t.type})}function d(){t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),x.stop(),i.dispatchEvent({type:"sessionend"})}function m(t){r=t,x.setContext(n),x.start(),i.dispatchEvent({type:"sessionstart"})}function f(){for(var t=0;t<s.length;t++)l[t]=v(t)}function v(t){for(var e=n.inputSources,i=0;i<e.length;i++){var r=e[i],o=r.handedness;if(0===t&&("none"===o||"right"===o))return r;if(1===t&&"left"===o)return r}}function g(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}q.layers.enable(1),q.layers.enable(2),this.enabled=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new _a).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.setFramebufferScaleFactor=function(){},this.setReferenceSpaceType=function(t){o=t},this.getSession=function(){return n},this.setSession=function(t){null!==(n=t)&&(n.addEventListener("select",p),n.addEventListener("selectstart",p),n.addEventListener("selectend",p),n.addEventListener("end",d),n.updateRenderState({baseLayer:new XRWebGLLayer(n,e)}),n.requestReferenceSpace(o).then(m),n.addEventListener("inputsourceschange",f),f())},this.getCamera=function(t){if(h()){var e=t.parent,i=q.cameras;g(q,e);for(var n=0;n<i.length;n++)g(i[n],e);t.matrixWorld.copy(q.matrixWorld);for(var r=t.children,o=(n=0,r.length);n<o;n++)r[n].updateMatrixWorld(!0);return Aa(q,c,u),q}return t},this.isPresenting=h;var y=null,x=new Sr;x.setAnimationLoop((function(e,i){if(null!==(a=i.getViewerPose(r))){var o=a.views,h=n.renderState.baseLayer;t.setFramebuffer(h.framebuffer);for(var c=0;c<o.length;c++){var u=o[c],p=h.getViewport(u),d=u.transform.inverse.matrix,m=q.cameras[c];m.matrix.fromArray(d).getInverse(m.matrix),m.projectionMatrix.fromArray(u.projectionMatrix),m.viewport.set(p.x,p.y,p.width,p.height),0===c&&q.matrix.copy(m.matrix)}}for(c=0;c<s.length;c++){var f=s[c],v=l[c];if(v){var g=i.getPose(v.targetRaySpace,r);if(null!==g){f.matrix.fromArray(g.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.visible=!0;continue}}f.visible=!1}y&&y(e)})),this.setAnimationLoop=function(t){y=t},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),new $e},this.getDevice=function(){console.warn("THREE.WebXRManager: getDevice() has been deprecated.")},this.setDevice=function(){console.warn("THREE.WebXRManager: setDevice() has been deprecated.")},this.setFrameOfReferenceType=function(){console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.")},this.submitFrame=function(){}}function Pa(t){var e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),i=void 0!==t.context?t.context:null,n=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,h=void 0!==t.powerPreference?t.powerPreference:"default",c=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat,q=null,p=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Z,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var d,m,f,v,g,y,x,w,b,_,M,S,E,T,A,L,z,P,R=this,C=!1,I=null,N=0,O=0,B=null,D=null,F=-1,V={geometry:null,program:null,wireframe:!1},U=null,j=null,G=new Ge,H=new Ge,k=null,W=e.width,X=e.height,Y=1,J=new Ge(0,0,W,X),Q=new Ge(0,0,W,X),K=!1,$=new wr,tt=new Rr,et=!1,it=!1,nt=new $e,rt=new Oe;function ot(){return null===B?Y:1}try{var at={alpha:n,depth:r,stencil:o,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:c,xrCompatible:!0};if(e.addEventListener("webglcontextlost",ut,!1),e.addEventListener("webglcontextrestored",qt,!1),null===(d=i||e.getContext("webgl",at)||e.getContext("experimental-webgl",at)))throw null!==e.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===d.getShaderPrecisionFormat&&(d.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function st(){m=new Cr(d),!1===(f=new Pr(d,m,t)).isWebGL2&&(m.get("WEBGL_depth_texture"),m.get("OES_texture_float"),m.get("OES_texture_half_float"),m.get("OES_texture_half_float_linear"),m.get("OES_standard_derivatives"),m.get("OES_element_index_uint"),m.get("ANGLE_instanced_arrays")),m.get("OES_texture_float_linear"),P=new xa(d,m,f),(v=new ga(d,m,f)).scissor(H.copy(Q).multiplyScalar(Y).floor()),v.viewport(G.copy(J).multiplyScalar(Y).floor()),g=new Or(d),y=new ia,x=new ya(d,m,v,y,f,P,g),w=new Er(d),b=new Ir(d,w,g),_=new Fr(d,b,w,g),A=new Dr(d),M=new ea(R,m,f),S=new aa,E=new qa,T=new Lr(R,v,_,s),L=new zr(d,m,g,f),z=new Nr(d,m,g,f),g.programs=M.programs,R.capabilities=f,R.extensions=m,R.properties=y,R.renderLists=S,R.state=v,R.info=g}st();var lt="undefined"!=typeof navigator&&"xr"in navigator&&"isSessionSupported"in navigator.xr?new za(R,d):new La(R);this.vr=lt;var ht=new ba(R,d),ct=new va(R,_,f.maxTextureSize);function ut(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function qt(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1,st()}function pt(t){var e=t.target;e.removeEventListener("dispose",pt),function(t){dt(t),y.remove(t)}(e)}function dt(t){var e=y.get(t).program;t.program=void 0,void 0!==e&&M.releaseProgram(e)}this.shadowMap=ct,this.getContext=function(){return d},this.getContextAttributes=function(){return d.getContextAttributes()},this.forceContextLoss=function(){var t=m.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=m.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(t){void 0!==t&&(Y=t,this.setSize(W,X,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Re),t.set(W,X)},this.setSize=function(t,i,n){lt.isPresenting()?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(W=t,X=i,e.width=Math.floor(t*Y),e.height=Math.floor(i*Y),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Re),t.set(W*Y,X*Y).floor()},this.setDrawingBufferSize=function(t,i,n){W=t,X=i,Y=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new Ge),t.copy(G)},this.getViewport=function(t){return t.copy(J)},this.setViewport=function(t,e,i,n){t.isVector4?J.set(t.x,t.y,t.z,t.w):J.set(t,e,i,n),v.viewport(G.copy(J).multiplyScalar(Y).floor())},this.getScissor=function(t){return t.copy(Q)},this.setScissor=function(t,e,i,n){t.isVector4?Q.set(t.x,t.y,t.z,t.w):Q.set(t,e,i,n),v.scissor(H.copy(Q).multiplyScalar(Y).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(t){v.setScissorTest(K=t)},this.getClearColor=function(){return T.getClearColor()},this.setClearColor=function(){T.setClearColor.apply(T,arguments)},this.getClearAlpha=function(){return T.getClearAlpha()},this.setClearAlpha=function(){T.setClearAlpha.apply(T,arguments)},this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=16384),(void 0===e||e)&&(n|=256),(void 0===i||i)&&(n|=1024),d.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ut,!1),e.removeEventListener("webglcontextrestored",qt,!1),S.dispose(),E.dispose(),y.dispose(),_.dispose(),lt.dispose(),vt.stop()},this.renderBufferImmediate=function(t,e){v.initAttributes();var i=y.get(t);t.hasPositions&&!i.position&&(i.position=d.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=d.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=d.createBuffer()),t.hasColors&&!i.color&&(i.color=d.createBuffer());var n=e.getAttributes();t.hasPositions&&(d.bindBuffer(34962,i.position),d.bufferData(34962,t.positionArray,35048),v.enableAttribute(n.position),d.vertexAttribPointer(n.position,3,5126,!1,0,0)),t.hasNormals&&(d.bindBuffer(34962,i.normal),d.bufferData(34962,t.normalArray,35048),v.enableAttribute(n.normal),d.vertexAttribPointer(n.normal,3,5126,!1,0,0)),t.hasUvs&&(d.bindBuffer(34962,i.uv),d.bufferData(34962,t.uvArray,35048),v.enableAttribute(n.uv),d.vertexAttribPointer(n.uv,2,5126,!1,0,0)),t.hasColors&&(d.bindBuffer(34962,i.color),d.bufferData(34962,t.colorArray,35048),v.enableAttribute(n.color),d.vertexAttribPointer(n.color,3,5126,!1,0,0)),v.disableUnusedAttributes(),d.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,n,r,o){var a=r.isMesh&&r.matrixWorld.determinant()<0;v.setMaterial(n,a);var s=Mt(t,e,n,r),l=!1;V.geometry===i.id&&V.program===s.id&&V.wireframe===(!0===n.wireframe)||(V.geometry=i.id,V.program=s.id,V.wireframe=!0===n.wireframe,l=!0),r.morphTargetInfluences&&(A.update(r,i,n,s),l=!0);var h,c=i.index,u=i.attributes.position,q=1;!0===n.wireframe&&(c=b.getWireframeAttribute(i),q=2);var p=L;null!==c&&(h=w.get(c),(p=z).setIndex(h)),l&&(function(t,e,i,n){if(!1!==f.isWebGL2||!t.isInstancedMesh&&!e.isInstancedBufferGeometry||null!==m.get("ANGLE_instanced_arrays")){v.initAttributes();var r=e.attributes,o=n.getAttributes(),a=i.defaultAttributeValues;for(var s in o){var l=o[s];if(l>=0){var h=r[s];if(void 0!==h){var c=h.normalized,u=h.itemSize;if(void 0===(_=w.get(h)))continue;var q=_.buffer,p=_.type,g=_.bytesPerElement;if(h.isInterleavedBufferAttribute){var y=h.data,x=y.stride,b=h.offset;y&&y.isInstancedInterleavedBuffer?(v.enableAttributeAndDivisor(l,y.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=y.meshPerAttribute*y.count)):v.enableAttribute(l),d.bindBuffer(34962,q),d.vertexAttribPointer(l,u,p,c,x*g,b*g)}else h.isInstancedBufferAttribute?(v.enableAttributeAndDivisor(l,h.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=h.meshPerAttribute*h.count)):v.enableAttribute(l),d.bindBuffer(34962,q),d.vertexAttribPointer(l,u,p,c,0,0)}else if("instanceMatrix"===s){var _;if(void 0===(_=w.get(t.instanceMatrix)))continue;q=_.buffer,p=_.type,v.enableAttributeAndDivisor(l+0,1),v.enableAttributeAndDivisor(l+1,1),v.enableAttributeAndDivisor(l+2,1),v.enableAttributeAndDivisor(l+3,1),d.bindBuffer(34962,q),d.vertexAttribPointer(l+0,4,p,!1,64,0),d.vertexAttribPointer(l+1,4,p,!1,64,16),d.vertexAttribPointer(l+2,4,p,!1,64,32),d.vertexAttribPointer(l+3,4,p,!1,64,48)}else if(void 0!==a){var M=a[s];if(void 0!==M)switch(M.length){case 2:d.vertexAttrib2fv(l,M);break;case 3:d.vertexAttrib3fv(l,M);break;case 4:d.vertexAttrib4fv(l,M);break;default:d.vertexAttrib1fv(l,M)}}}}v.disableUnusedAttributes()}}(r,i,n,s),null!==c&&d.bindBuffer(34963,h.buffer));var g=1/0;null!==c?g=c.count:void 0!==u&&(g=u.count);var y=i.drawRange.start*q,x=i.drawRange.count*q,_=null!==o?o.start*q:0,M=null!==o?o.count*q:1/0,S=Math.max(y,_),E=Math.min(g,y+x,_+M)-1,T=Math.max(0,E-S+1);if(0!==T){if(r.isMesh)if(!0===n.wireframe)v.setLineWidth(n.wireframeLinewidth*ot()),p.setMode(1);else switch(r.drawMode){case ue:p.setMode(4);break;case 1:p.setMode(5);break;case 2:p.setMode(6)}else if(r.isLine){var P=n.linewidth;void 0===P&&(P=1),v.setLineWidth(P*ot()),r.isLineSegments?p.setMode(1):r.isLineLoop?p.setMode(2):p.setMode(3)}else r.isPoints?p.setMode(0):r.isSprite&&p.setMode(4);r.isInstancedMesh?p.renderInstances(i,S,T,r.count):i.isInstancedBufferGeometry?p.renderInstances(i,S,T,i.maxInstancedCount):p.render(S,T)}},this.compile=function(t,e){(p=E.get(t,e)).init(),t.traverse((function(t){t.isLight&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(e),t.traverse((function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)wt(e.material[i],t.fog,e);else wt(e.material,t.fog,e)}))};var mt=null,vt=new Sr;function gt(t,e,i,n){if(!1!==t.visible){if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||$.intersectsSprite(t)){n&&rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(nt);var r=_.update(t);(o=t.material).visible&&q.push(t,r,o,i,rt.z,null)}}else if(t.isImmediateRenderObject)n&&rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(nt),q.push(t,null,t.material,i,rt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==g.render.frame&&(t.skeleton.update(),t.skeleton.frame=g.render.frame),!t.frustumCulled||$.intersectsObject(t))){n&&rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(nt),r=_.update(t);var o=t.material;if(Array.isArray(o))for(var a=r.groups,s=0,l=a.length;s<l;s++){var h=a[s],c=o[h.materialIndex];c&&c.visible&&q.push(t,r,c,i,rt.z,h)}else o.visible&&q.push(t,r,o,i,rt.z,null)}var u=t.children;for(s=0,l=u.length;s<l;s++)gt(u[s],e,i,n)}}function yt(t,e,i,n){for(var r=0,o=t.length;r<o;r++){var a=t[r],s=a.object,l=a.geometry,h=void 0===n?a.material:n,c=a.group;if(i.isArrayCamera)if(j=i,lt.enabled&&ht.isAvailable())xt(s,e,i,l,h,c);else for(var u=i.cameras,q=0,d=u.length;q<d;q++){var m=u[q];s.layers.test(m.layers)&&(v.viewport(G.copy(m.viewport)),p.setupLights(m),xt(s,e,m,l,h,c))}else j=null,xt(s,e,i,l,h,c)}}function xt(t,e,i,n,r,o){if(t.onBeforeRender(R,e,i,n,r,o),p=E.get(e,j||i),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){v.setMaterial(r);var a=Mt(i,e.fog,r,t);V.geometry=null,V.program=null,V.wireframe=!1,function(t,e){t.render((function(t){R.renderBufferImmediate(t,e)}))}(t,a)}else R.renderBufferDirect(i,e.fog,n,r,t,o);t.onAfterRender(R,e,i,n,r,o),p=E.get(e,j||i)}function wt(t,e,i){var n=y.get(t),r=p.state.lights,o=p.state.shadowsArray,a=r.state.version,s=M.getParameters(t,r.state,o,e,tt.numPlanes,tt.numIntersection,i),l=M.getProgramCacheKey(t,s),h=n.program,c=!0;if(void 0===h)t.addEventListener("dispose",pt);else if(h.cacheKey!==l)dt(t);else if(n.lightsStateVersion!==a)n.lightsStateVersion=a,c=!1;else{if(void 0!==s.shaderID)return;c=!1}if(c){if(s.shaderID){var u=Mr[s.shaderID];n.shader={name:t.type,uniforms:lr(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}}else n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(n.shader,R),l=M.getProgramCacheKey(t,s),h=M.acquireProgram(t,n.shader,s,l),n.program=h,t.program=h}var q=h.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var d=0;d<R.maxMorphTargets;d++)q["morphTarget"+d]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals)for(t.numSupportedMorphNormals=0,d=0;d<R.maxMorphNormals;d++)q["morphNormal"+d]>=0&&t.numSupportedMorphNormals++;var m=n.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=tt.numPlanes,n.numIntersection=tt.numIntersection,m.clippingPlanes=tt.uniform),n.fog=e,n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=a,n.needsLights&&(m.ambientLightColor.value=r.state.ambient,m.lightProbe.value=r.state.probe,m.directionalLights.value=r.state.directional,m.spotLights.value=r.state.spot,m.rectAreaLights.value=r.state.rectArea,m.pointLights.value=r.state.point,m.hemisphereLights.value=r.state.hemi,m.directionalShadowMap.value=r.state.directionalShadowMap,m.directionalShadowMatrix.value=r.state.directionalShadowMatrix,m.spotShadowMap.value=r.state.spotShadowMap,m.spotShadowMatrix.value=r.state.spotShadowMatrix,m.pointShadowMap.value=r.state.pointShadowMap,m.pointShadowMatrix.value=r.state.pointShadowMatrix);var f=n.program.getUniforms(),v=Bo.seqWithValue(f.seq,m);n.uniformsList=v}function Mt(t,e,i,n){x.resetTextureUnits();var r=y.get(i),o=p.state.lights;if(et&&(it||t!==U)){var a=t===U&&i.id===F;tt.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,a)}!1===i.needsUpdate&&(void 0===r.program||i.fog&&r.fog!==e||r.needsLights&&r.lightsStateVersion!==o.state.version?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===tt.numPlanes&&r.numIntersection===tt.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(wt(i,e,n),i.needsUpdate=!1);var s,l,h=!1,c=!1,q=!1,m=r.program,g=m.getUniforms(),w=r.shader.uniforms;if(v.useProgram(m.program)&&(h=!0,c=!0,q=!0),i.id!==F&&(F=i.id,c=!0),h||U!==t){if(m.numMultiviewViews>0?ht.updateCameraProjectionMatricesUniform(t,g):g.setValue(d,"projectionMatrix",t.projectionMatrix),f.logarithmicDepthBuffer&&g.setValue(d,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),U!==t&&(U=t,c=!0,q=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var b=g.map.cameraPosition;void 0!==b&&b.setValue(d,rt.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&g.setValue(d,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&(m.numMultiviewViews>0?ht.updateCameraViewMatricesUniform(t,g):g.setValue(d,"viewMatrix",t.matrixWorldInverse))}if(i.skinning){g.setOptional(d,n,"bindMatrix"),g.setOptional(d,n,"bindMatrixInverse");var _=n.skeleton;if(_){var M=_.bones;if(f.floatVertexTextures){if(void 0===_.boneTexture){var S=Math.sqrt(4*M.length);S=Pe.ceilPowerOfTwo(S),S=Math.max(S,4);var E=new Float32Array(S*S*4);E.set(_.boneMatrices);var T=new gr(E,S,S,zt,bt);_.boneMatrices=E,_.boneTexture=T,_.boneTextureSize=S}g.setValue(d,"boneTexture",_.boneTexture,x),g.setValue(d,"boneTextureSize",_.boneTextureSize)}else g.setOptional(d,_,"boneMatrices")}}return(c||r.receiveShadow!==n.receiveShadow)&&(r.receiveShadow=n.receiveShadow,g.setValue(d,"receiveShadow",n.receiveShadow)),c&&(g.setValue(d,"toneMappingExposure",R.toneMappingExposure),g.setValue(d,"toneMappingWhitePoint",R.toneMappingWhitePoint),r.needsLights&&(l=q,(s=w).ambientLightColor.needsUpdate=l,s.lightProbe.needsUpdate=l,s.directionalLights.needsUpdate=l,s.pointLights.needsUpdate=l,s.spotLights.needsUpdate=l,s.rectAreaLights.needsUpdate=l,s.hemisphereLights.needsUpdate=l),e&&i.fog&&function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(w,e),i.isMeshBasicMaterial?St(w,i):i.isMeshLambertMaterial?(St(w,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(w,i)):i.isMeshPhongMaterial?(St(w,i),i.isMeshToonMaterial?function(t,e){Et(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(w,i):Et(w,i)):i.isMeshStandardMaterial?(St(w,i),i.isMeshPhysicalMaterial?function(t,e){Tt(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===u&&t.clearcoatNormalScale.value.negate()),t.transparency.value=e.transparency}(w,i):Tt(w,i)):i.isMeshMatcapMaterial?(St(w,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===u&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===u&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,i)):i.isMeshDepthMaterial?(St(w,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,i)):i.isMeshDistanceMaterial?(St(w,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(w,i)):i.isMeshNormalMaterial?(St(w,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===u&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===u&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(w,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(w,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(w,i)):i.isPointsMaterial?function(t,e){var i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*Y,t.scale.value=.5*X,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(w,i):i.isSpriteMaterial?function(t,e){var i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(w,i):i.isShadowMaterial&&(w.color.value.copy(i.color),w.opacity.value=i.opacity),void 0!==w.ltc_1&&(w.ltc_1.value=_r.LTC_1),void 0!==w.ltc_2&&(w.ltc_2.value=_r.LTC_2),Bo.upload(d,r.uniformsList,w,x),i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Bo.upload(d,r.uniformsList,w,x),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&g.setValue(d,"center",n.center),m.numMultiviewViews>0?ht.updateObjectMatricesUniforms(n,t,g):(g.setValue(d,"modelViewMatrix",n.modelViewMatrix),g.setValue(d,"normalMatrix",n.normalMatrix)),g.setValue(d,"modelMatrix",n.matrixWorld),m}function St(t,e){var i;t.opacity.value=e.opacity,e.color&&t.diffuse.value.copy(e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.maxMipLevel.value=y.get(e.envMap).__maxMipLevel),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}function Et(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===u&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===u&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function Tt(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===u&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===u&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}vt.setAnimationLoop((function(t){lt.isPresenting()||mt&&mt(t)})),"undefined"!=typeof window&&vt.setContext(window),this.setAnimationLoop=function(t){mt=t,lt.setAnimationLoop(t),vt.start()},this.render=function(t,e){var i,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),i=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),e&&e.isCamera){if(!C){V.geometry=null,V.program=null,V.wireframe=!1,F=-1,U=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),lt.enabled&&(e=lt.getCamera(e)),(p=E.get(t,e)).init(),t.onBeforeRender(R,t,e,i||B),nt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),$.setFromMatrix(nt),it=this.localClippingEnabled,et=tt.init(this.clippingPlanes,it,e),(q=S.get(t,e)).init(),gt(t,e,0,R.sortObjects),!0===R.sortObjects&&q.sort(),et&&tt.beginShadows();var r=p.state.shadowsArray;ct.render(r,t,e),p.setupLights(e),et&&tt.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),lt.enabled&&ht.isAvailable()&&ht.attachCamera(e),T.render(q,t,e,n);var o=q.opaque,a=q.transparent;if(t.overrideMaterial){var s=t.overrideMaterial;o.length&&yt(o,t,e,s),a.length&&yt(a,t,e,s)}else o.length&&yt(o,t,e),a.length&&yt(a,t,e);t.onAfterRender(R,t,e),null!==B&&(x.updateRenderTargetMipmap(B),x.updateMultisampleRenderTarget(B)),v.buffers.depth.setTest(!0),v.buffers.depth.setMask(!0),v.buffers.color.setMask(!0),v.setPolygonOffset(!1),lt.enabled&&(ht.isAvailable()&&ht.detachCamera(e),lt.submitFrame()),q=null,p=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFramebuffer=function(t){I!==t&&null===B&&d.bindFramebuffer(36160,t),I=t},this.getActiveCubeFace=function(){return N},this.getActiveMipmapLevel=function(){return O},this.getRenderTarget=function(){return B},this.setRenderTarget=function(t,e,i){B=t,N=e,O=i,t&&void 0===y.get(t).__webglFramebuffer&&x.setupRenderTarget(t);var n=I,r=!1;if(t){var o=y.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(n=o[e||0],r=!0):n=t.isWebGLMultisampleRenderTarget?y.get(t).__webglMultisampledFramebuffer:o,G.copy(t.viewport),H.copy(t.scissor),k=t.scissorTest}else G.copy(J).multiplyScalar(Y).floor(),H.copy(Q).multiplyScalar(Y).floor(),k=K;if(D!==n&&(d.bindFramebuffer(36160,n),D=n),v.viewport(G),v.scissor(H),v.setScissorTest(k),r){var a=y.get(t.texture);d.framebufferTexture2D(36160,36064,34069+(e||0),a.__webglTexture,i||0)}},this.readRenderTargetPixels=function(t,e,i,n,r,o,a){if(t&&t.isWebGLRenderTarget){var s=y.get(t).__webglFramebuffer;if(t.isWebGLRenderTargetCube&&void 0!==a&&(s=s[a]),s){var l=!1;s!==D&&(d.bindFramebuffer(36160,s),l=!0);try{var h=t.texture,c=h.format,u=h.type;if(c!==zt&&P.convert(c)!==d.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(u===ft||P.convert(u)===d.getParameter(35738)||u===bt&&(f.isWebGL2||m.get("OES_texture_float")||m.get("WEBGL_color_buffer_float"))||u===_t&&(f.isWebGL2?m.get("EXT_color_buffer_float"):m.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===d.checkFramebufferStatus(36160)?e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&d.readPixels(e,i,n,r,P.convert(c),P.convert(u),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{l&&d.bindFramebuffer(36160,D)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(t,e,i){void 0===i&&(i=0);var n=Math.pow(2,-i),r=Math.floor(e.image.width*n),o=Math.floor(e.image.height*n),a=P.convert(e.format);x.setTexture2D(e,0),d.copyTexImage2D(3553,i,a,t.x,t.y,r,o,0),v.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n){var r=e.image.width,o=e.image.height,a=P.convert(i.format),s=P.convert(i.type);x.setTexture2D(i,0),e.isDataTexture?d.texSubImage2D(3553,n||0,t.x,t.y,r,o,a,s,e.image.data):d.texSubImage2D(3553,n||0,t.x,t.y,a,s,e.image),v.unbindTexture()},this.initTexture=function(t){x.setTexture2D(t,0),v.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Ra(t,e){this.name="",this.color=new ln(t),this.density=void 0!==e?e:25e-5}function Ca(t,e,i){this.name="",this.color=new ln(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}function Ia(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Ee,this.updateRange={offset:0,count:-1},this.version=0}function Na(t,e,i,n){this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}function Oa(t){dn.call(this),this.type="SpriteMaterial",this.color=new ln(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}Object.assign(La.prototype,Ae.prototype),Object.assign(za.prototype,Ae.prototype),Object.assign(Ra.prototype,{isFogExp2:!0,clone:function(){return new Ra(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(Ca.prototype,{isFog:!0,clone:function(){return new Ca(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(Ia.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Ia.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),Object.defineProperties(Na.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Na.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}}),Oa.prototype=Object.create(dn.prototype),Oa.prototype.constructor=Oa,Oa.prototype.isSpriteMaterial=!0,Oa.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var Ba=new Oe,Da=new Oe,Fa=new Oe,Va=new Re,Ua=new Re,ja=new $e,Ga=new Oe,Ha=new Oe,ka=new Oe,Wa=new Re,Xa=new Re,Ya=new Re;function Za(t){if(vi.call(this),this.type="Sprite",void 0===Sa){Sa=new Nn;var e=new Ia(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Sa.setIndex([0,1,2,0,2,3]),Sa.setAttribute("position",new Na(e,3,0,!1)),Sa.setAttribute("uv",new Na(e,2,3,!1))}this.geometry=Sa,this.material=void 0!==t?t:new Oa,this.center=new Re(.5,.5)}function Ja(t,e,i,n,r,o){Va.subVectors(t,i).addScalar(.5).multiply(n),void 0!==r?(Ua.x=o*Va.x-r*Va.y,Ua.y=r*Va.x+o*Va.y):Ua.copy(Va),t.copy(e),t.x+=Ua.x,t.y+=Ua.y,t.applyMatrix4(ja)}Za.prototype=Object.assign(Object.create(vi.prototype),{constructor:Za,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Da.setFromMatrixScale(this.matrixWorld),ja.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Fa.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Da.multiplyScalar(-Fa.z);var i,n,r=this.material.rotation;0!==r&&(n=Math.cos(r),i=Math.sin(r));var o=this.center;Ja(Ga.set(-.5,-.5,0),Fa,o,Da,i,n),Ja(Ha.set(.5,-.5,0),Fa,o,Da,i,n),Ja(ka.set(.5,.5,0),Fa,o,Da,i,n),Wa.set(0,0),Xa.set(1,0),Ya.set(1,1);var a=t.ray.intersectTriangle(Ga,Ha,ka,!1,Ba);if(null!==a||(Ja(Ha.set(-.5,.5,0),Fa,o,Da,i,n),Xa.set(0,1),null!==(a=t.ray.intersectTriangle(Ga,ka,Ha,!1,Ba)))){var s=t.ray.origin.distanceTo(Ba);s<t.near||s>t.far||e.push({distance:s,point:Ba.clone(),uv:rn.getUV(Ba,Ga,Ha,ka,Wa,Xa,Ya,new Re),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return vi.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this}});var Qa=new Oe,Ka=new Oe;function $a(){vi.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function ts(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),$n.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $e,this.bindMatrixInverse=new $e}$a.prototype=Object.assign(Object.create(vi.prototype),{constructor:$a,isLOD:!0,copy:function(t){vi.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,n=e.length;i<n;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,n=0;n<i.length&&!(e<i[n].distance);n++);return i.splice(n,0,{distance:e,object:t}),this.add(t),this},getObjectForDistance:function(t){for(var e=this.levels,i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(t,e){Qa.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(Qa);this.getObjectForDistance(i).raycast(t,e)},update:function(t){var e=this.levels;if(e.length>1){Qa.setFromMatrixPosition(t.matrixWorld),Ka.setFromMatrixPosition(this.matrixWorld);var i=Qa.distanceTo(Ka);e[0].object.visible=!0;for(var n=1,r=e.length;n<r&&i>=e[n].distance;n++)e[n-1].object.visible=!1,e[n].object.visible=!0;for(;n<r;n++)e[n].object.visible=!1}},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,n=0,r=i.length;n<r;n++){var o=i[n];e.object.levels.push({object:o.object.uuid,distance:o.distance})}return e}}),ts.prototype=Object.assign(Object.create($n.prototype),{constructor:ts,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new Ge,e=this.geometry.attributes.skinWeight,i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);var r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){$n.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var es=new $e,is=new $e;function ns(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new $e)}}function rs(){vi.call(this),this.type="Bone"}function os(t,e,i){$n.call(this,t,e),this.instanceMatrix=new fn(new Float32Array(16*i),16),this.count=i}function as(t){dn.call(this),this.type="LineBasicMaterial",this.color=new ln(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}Object.assign(ns.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var i=new $e;this.bones[t]&&i.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(i)}},pose:function(){var t,e,i;for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){for(var t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture,r=0,o=t.length;r<o;r++){var a=t[r]?t[r].matrixWorld:is;es.multiplyMatrices(a,e[r]),es.toArray(i,16*r)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new ns(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,i=this.bones.length;e<i;e++){var n=this.bones[e];if(n.name===t)return n}}}),rs.prototype=Object.assign(Object.create(vi.prototype),{constructor:rs,isBone:!0}),os.prototype=Object.assign(Object.create($n.prototype),{constructor:os,isInstancedMesh:!0,raycast:function(){},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}}),as.prototype=Object.create(dn.prototype),as.prototype.constructor=as,as.prototype.isLineBasicMaterial=!0,as.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};var ss=new Oe,ls=new Oe,hs=new $e,cs=new ji,us=new Ii;function qs(t,e,i){1===i&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),vi.call(this),this.type="Line",this.geometry=void 0!==t?t:new Nn,this.material=void 0!==e?e:new as({color:16777215*Math.random()})}qs.prototype=Object.assign(Object.create(vi.prototype),{constructor:qs,isLine:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,i=[0],n=1,r=e.count;n<r;n++)ss.fromBufferAttribute(e,n-1),ls.fromBufferAttribute(e,n),i[n]=i[n-1],i[n]+=ss.distanceTo(ls);t.setAttribute("lineDistance",new Mn(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var o=t.vertices;for((i=t.lineDistances)[0]=0,n=1,r=o.length;n<r;n++)i[n]=i[n-1],i[n]+=o[n-1].distanceTo(o[n])}return this},raycast:function(t,e){var i=t.linePrecision,n=this.geometry,r=this.matrixWorld;if(null===n.boundingSphere&&n.computeBoundingSphere(),us.copy(n.boundingSphere),us.applyMatrix4(r),us.radius+=i,!1!==t.ray.intersectsSphere(us)){hs.getInverse(r),cs.copy(t.ray).applyMatrix4(hs);var o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,s=new Oe,l=new Oe,h=new Oe,c=new Oe,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){var q=n.index,p=n.attributes.position.array;if(null!==q)for(var d=q.array,m=0,f=d.length-1;m<f;m+=u){var v=d[m],g=d[m+1];s.fromArray(p,3*v),l.fromArray(p,3*g),cs.distanceSqToSegment(s,l,c,h)>a||(c.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(c))<t.near||w>t.far||e.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}else for(m=0,f=p.length/3-1;m<f;m+=u)s.fromArray(p,3*m),l.fromArray(p,3*m+3),cs.distanceSqToSegment(s,l,c,h)>a||(c.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(c))<t.near||w>t.far||e.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}else if(n.isGeometry){var y=n.vertices,x=y.length;for(m=0;m<x-1;m+=u){var w;cs.distanceSqToSegment(y[m],y[m+1],c,h)>a||(c.applyMatrix4(this.matrixWorld),(w=t.ray.origin.distanceTo(c))<t.near||w>t.far||e.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var ps=new Oe,ds=new Oe;function ms(t,e){qs.call(this,t,e),this.type="LineSegments"}function fs(t,e){qs.call(this,t,e),this.type="LineLoop"}function vs(t){dn.call(this),this.type="PointsMaterial",this.color=new ln(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}ms.prototype=Object.assign(Object.create(qs.prototype),{constructor:ms,isLineSegments:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,i=[],n=0,r=e.count;n<r;n+=2)ps.fromBufferAttribute(e,n),ds.fromBufferAttribute(e,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+ps.distanceTo(ds);t.setAttribute("lineDistance",new Mn(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var o=t.vertices;for(i=t.lineDistances,n=0,r=o.length;n<r;n+=2)ps.copy(o[n]),ds.copy(o[n+1]),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+ps.distanceTo(ds)}return this}}),fs.prototype=Object.assign(Object.create(qs.prototype),{constructor:fs,isLineLoop:!0}),vs.prototype=Object.create(dn.prototype),vs.prototype.constructor=vs,vs.prototype.isPointsMaterial=!0,vs.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};var gs=new $e,ys=new ji,xs=new Ii,ws=new Oe;function bs(t,e){vi.call(this),this.type="Points",this.geometry=void 0!==t?t:new Nn,this.material=void 0!==e?e:new vs({color:16777215*Math.random()}),this.updateMorphTargets()}function _s(t,e,i,n,r,o,a){var s=ys.distanceSqToPoint(t);if(s<i){var l=new Oe;ys.closestPointToPoint(t,l),l.applyMatrix4(n);var h=r.ray.origin.distanceTo(l);if(h<r.near||h>r.far)return;o.push({distance:h,distanceToRay:Math.sqrt(s),point:l,index:e,face:null,object:a})}}function Ms(t,e,i,n,r,o,a,s,l){je.call(this,t,e,i,n,r,o,a,s,l),this.format=void 0!==a?a:Lt,this.minFilter=void 0!==o?o:pt,this.magFilter=void 0!==r?r:pt,this.generateMipmaps=!1}function Ss(t,e,i,n,r,o,a,s,l,h,c,u){je.call(this,null,o,a,s,l,h,n,r,c,u),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function Es(t,e,i,n,r,o,a,s,l){je.call(this,t,e,i,n,r,o,a,s,l),this.needsUpdate=!0}function Ts(t,e,i,n,r,o,a,s,l,h){if((h=void 0!==h?h:Ct)!==Ct&&h!==It)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===Ct&&(i=yt),void 0===i&&h===It&&(i=Tt),je.call(this,null,n,r,o,a,s,h,i,l),this.image={width:t,height:e},this.magFilter=void 0!==a?a:ct,this.minFilter=void 0!==s?s:ct,this.flipY=!1,this.generateMipmaps=!1}function As(t){Nn.call(this),this.type="WireframeGeometry";var e,i,n,r,o,a,s,l,h,c,u=[],q=[0,0],p={},d=["a","b","c"];if(t&&t.isGeometry){var m=t.faces;for(e=0,n=m.length;e<n;e++){var f=m[e];for(i=0;i<3;i++)s=f[d[i]],l=f[d[(i+1)%3]],q[0]=Math.min(s,l),q[1]=Math.max(s,l),void 0===p[h=q[0]+","+q[1]]&&(p[h]={index1:q[0],index2:q[1]})}for(h in p)a=p[h],c=t.vertices[a.index1],u.push(c.x,c.y,c.z),c=t.vertices[a.index2],u.push(c.x,c.y,c.z)}else if(t&&t.isBufferGeometry){var v,g,y,x,w,b,_;if(c=new Oe,null!==t.index){for(v=t.attributes.position,g=t.index,0===(y=t.groups).length&&(y=[{start:0,count:g.count,materialIndex:0}]),r=0,o=y.length;r<o;++r)for(e=w=(x=y[r]).start,n=w+x.count;e<n;e+=3)for(i=0;i<3;i++)s=g.getX(e+i),l=g.getX(e+(i+1)%3),q[0]=Math.min(s,l),q[1]=Math.max(s,l),void 0===p[h=q[0]+","+q[1]]&&(p[h]={index1:q[0],index2:q[1]});for(h in p)a=p[h],c.fromBufferAttribute(v,a.index1),u.push(c.x,c.y,c.z),c.fromBufferAttribute(v,a.index2),u.push(c.x,c.y,c.z)}else for(e=0,n=(v=t.attributes.position).count/3;e<n;e++)for(i=0;i<3;i++)b=3*e+i,c.fromBufferAttribute(v,b),u.push(c.x,c.y,c.z),_=3*e+(i+1)%3,c.fromBufferAttribute(v,_),u.push(c.x,c.y,c.z)}this.setAttribute("position",new Mn(u,3))}function Ls(t,e,i){ar.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new zs(t,e,i)),this.mergeVertices()}function zs(t,e,i){Nn.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};var n,r,o=[],a=[],s=[],l=[],h=1e-5,c=new Oe,u=new Oe,q=new Oe,p=new Oe,d=new Oe;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var m=e+1;for(n=0;n<=i;n++){var f=n/i;for(r=0;r<=e;r++){var v=r/e;t(v,f,u),a.push(u.x,u.y,u.z),v-h>=0?(t(v-h,f,q),p.subVectors(u,q)):(t(v+h,f,q),p.subVectors(q,u)),f-h>=0?(t(v,f-h,q),d.subVectors(u,q)):(t(v,f+h,q),d.subVectors(q,u)),c.crossVectors(p,d).normalize(),s.push(c.x,c.y,c.z),l.push(v,f)}}for(n=0;n<i;n++)for(r=0;r<e;r++){var g=n*m+r,y=n*m+r+1,x=(n+1)*m+r+1,w=(n+1)*m+r;o.push(g,y,w),o.push(y,x,w)}this.setIndex(o),this.setAttribute("position",new Mn(a,3)),this.setAttribute("normal",new Mn(s,3)),this.setAttribute("uv",new Mn(l,2))}function Ps(t,e,i,n){ar.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},this.fromBufferGeometry(new Rs(t,e,i,n)),this.mergeVertices()}function Rs(t,e,i,n){Nn.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},i=i||1;var r=[],o=[];function a(t,e,i,n){var r,o,a=Math.pow(2,n),l=[];for(r=0;r<=a;r++){l[r]=[];var h=t.clone().lerp(i,r/a),c=e.clone().lerp(i,r/a),u=a-r;for(o=0;o<=u;o++)l[r][o]=0===o&&r===a?h:h.clone().lerp(c,o/u)}for(r=0;r<a;r++)for(o=0;o<2*(a-r)-1;o++){var q=Math.floor(o/2);o%2==0?(s(l[r][q+1]),s(l[r+1][q]),s(l[r][q])):(s(l[r][q+1]),s(l[r+1][q+1]),s(l[r+1][q]))}}function s(t){r.push(t.x,t.y,t.z)}function l(e,i){var n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function h(t,e,i,n){n<0&&1===t.x&&(o[e]=t.x-1),0===i.x&&0===i.z&&(o[e]=n/2/Math.PI+.5)}function c(t){return Math.atan2(t.z,-t.x)}!function(t){for(var i=new Oe,n=new Oe,r=new Oe,o=0;o<e.length;o+=3)l(e[o+0],i),l(e[o+1],n),l(e[o+2],r),a(i,n,r,t)}(n=n||0),function(t){for(var e=new Oe,i=0;i<r.length;i+=3)e.x=r[i+0],e.y=r[i+1],e.z=r[i+2],e.normalize().multiplyScalar(t),r[i+0]=e.x,r[i+1]=e.y,r[i+2]=e.z}(i),function(){for(var t=new Oe,e=0;e<r.length;e+=3){t.x=r[e+0],t.y=r[e+1],t.z=r[e+2];var i=c(t)/2/Math.PI+.5,n=(a=t,Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5);o.push(i,1-n)}var a;(function(){for(var t=new Oe,e=new Oe,i=new Oe,n=new Oe,a=new Re,s=new Re,l=new Re,u=0,q=0;u<r.length;u+=9,q+=6){t.set(r[u+0],r[u+1],r[u+2]),e.set(r[u+3],r[u+4],r[u+5]),i.set(r[u+6],r[u+7],r[u+8]),a.set(o[q+0],o[q+1]),s.set(o[q+2],o[q+3]),l.set(o[q+4],o[q+5]),n.copy(t).add(e).add(i).divideScalar(3);var p=c(n);h(a,q+0,t,p),h(s,q+2,e,p),h(l,q+4,i,p)}})(),function(){for(var t=0;t<o.length;t+=6){var e=o[t+0],i=o[t+2],n=o[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);r>.9&&a<.1&&(e<.2&&(o[t+0]+=1),i<.2&&(o[t+2]+=1),n<.2&&(o[t+4]+=1))}}()}(),this.setAttribute("position",new Mn(r,3)),this.setAttribute("normal",new Mn(r.slice(),3)),this.setAttribute("uv",new Mn(o,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function Cs(t,e){ar.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Is(t,e)),this.mergeVertices()}function Is(t,e){Rs.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ns(t,e){ar.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Os(t,e)),this.mergeVertices()}function Os(t,e){Rs.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Bs(t,e){ar.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ds(t,e)),this.mergeVertices()}function Ds(t,e){var i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1];Rs.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Fs(t,e){ar.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Vs(t,e)),this.mergeVertices()}function Vs(t,e){var i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n];Rs.call(this,r,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Us(t,e,i,n,r,o){ar.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");var a=new js(t,e,i,n,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}function js(t,e,i,n,r){Nn.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},e=e||64,i=i||1,n=n||8,r=r||!1;var o=t.computeFrenetFrames(e,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;var a,s,l=new Oe,h=new Oe,c=new Re,u=new Oe,q=[],p=[],d=[],m=[];function f(r){u=t.getPointAt(r/e,u);var a=o.normals[r],c=o.binormals[r];for(s=0;s<=n;s++){var d=s/n*Math.PI*2,m=Math.sin(d),f=-Math.cos(d);h.x=f*a.x+m*c.x,h.y=f*a.y+m*c.y,h.z=f*a.z+m*c.z,h.normalize(),p.push(h.x,h.y,h.z),l.x=u.x+i*h.x,l.y=u.y+i*h.y,l.z=u.z+i*h.z,q.push(l.x,l.y,l.z)}}!function(){for(a=0;a<e;a++)f(a);f(!1===r?e:0),function(){for(a=0;a<=e;a++)for(s=0;s<=n;s++)c.x=a/e,c.y=s/n,d.push(c.x,c.y)}(),function(){for(s=1;s<=e;s++)for(a=1;a<=n;a++){var t=(n+1)*(s-1)+(a-1),i=(n+1)*s+(a-1),r=(n+1)*s+a,o=(n+1)*(s-1)+a;m.push(t,i,o),m.push(i,r,o)}}()}(),this.setIndex(m),this.setAttribute("position",new Mn(q,3)),this.setAttribute("normal",new Mn(p,3)),this.setAttribute("uv",new Mn(d,2))}function Gs(t,e,i,n,r,o,a){ar.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Hs(t,e,i,n,r,o)),this.mergeVertices()}function Hs(t,e,i,n,r,o){Nn.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:o},t=t||1,e=e||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,o=o||3;var a,s,l=[],h=[],c=[],u=[],q=new Oe,p=new Oe,d=new Oe,m=new Oe,f=new Oe,v=new Oe,g=new Oe;for(a=0;a<=i;++a){var y=a/i*r*Math.PI*2;for(T(y,r,o,t,d),T(y+.01,r,o,t,m),v.subVectors(m,d),g.addVectors(m,d),f.crossVectors(v,g),g.crossVectors(f,v),f.normalize(),g.normalize(),s=0;s<=n;++s){var x=s/n*Math.PI*2,w=-e*Math.cos(x),b=e*Math.sin(x);q.x=d.x+(w*g.x+b*f.x),q.y=d.y+(w*g.y+b*f.y),q.z=d.z+(w*g.z+b*f.z),h.push(q.x,q.y,q.z),p.subVectors(q,d).normalize(),c.push(p.x,p.y,p.z),u.push(a/i),u.push(s/n)}}for(s=1;s<=i;s++)for(a=1;a<=n;a++){var _=(n+1)*(s-1)+(a-1),M=(n+1)*s+(a-1),S=(n+1)*s+a,E=(n+1)*(s-1)+a;l.push(_,M,E),l.push(M,S,E)}function T(t,e,i,n,r){var o=Math.cos(t),a=Math.sin(t),s=i/e*t,l=Math.cos(s);r.x=n*(2+l)*.5*o,r.y=n*(2+l)*a*.5,r.z=n*Math.sin(s)*.5}this.setIndex(l),this.setAttribute("position",new Mn(h,3)),this.setAttribute("normal",new Mn(c,3)),this.setAttribute("uv",new Mn(u,2))}function ks(t,e,i,n,r){ar.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new Ws(t,e,i,n,r)),this.mergeVertices()}function Ws(t,e,i,n,r){Nn.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},t=t||1,e=e||.4,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;var o,a,s=[],l=[],h=[],c=[],u=new Oe,q=new Oe,p=new Oe;for(o=0;o<=i;o++)for(a=0;a<=n;a++){var d=a/n*r,m=o/i*Math.PI*2;q.x=(t+e*Math.cos(m))*Math.cos(d),q.y=(t+e*Math.cos(m))*Math.sin(d),q.z=e*Math.sin(m),l.push(q.x,q.y,q.z),u.x=t*Math.cos(d),u.y=t*Math.sin(d),p.subVectors(q,u).normalize(),h.push(p.x,p.y,p.z),c.push(a/n),c.push(o/i)}for(o=1;o<=i;o++)for(a=1;a<=n;a++){var f=(n+1)*o+a-1,v=(n+1)*(o-1)+a-1,g=(n+1)*(o-1)+a,y=(n+1)*o+a;s.push(f,v,y),s.push(v,g,y)}this.setIndex(s),this.setAttribute("position",new Mn(l,3)),this.setAttribute("normal",new Mn(h,3)),this.setAttribute("uv",new Mn(c,2))}bs.prototype=Object.assign(Object.create(vi.prototype),{constructor:bs,isPoints:!0,raycast:function(t,e){var i=this.geometry,n=this.matrixWorld,r=t.params.Points.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),xs.copy(i.boundingSphere),xs.applyMatrix4(n),xs.radius+=r,!1!==t.ray.intersectsSphere(xs)){gs.getInverse(n),ys.copy(t.ray).applyMatrix4(gs);var o=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o;if(i.isBufferGeometry){var s=i.index,l=i.attributes.position.array;if(null!==s)for(var h=s.array,c=0,u=h.length;c<u;c++){var q=h[c];ws.fromArray(l,3*q),_s(ws,q,a,n,t,e,this)}else{c=0;for(var p=l.length/3;c<p;c++)ws.fromArray(l,3*c),_s(ws,c,a,n,t,e,this)}}else{var d=i.vertices;for(c=0,p=d.length;c<p;c++)_s(d[c],c,a,n,t,e,this)}}},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,o=Object.keys(r);if(o.length>0){var a=r[o[0]];if(void 0!==a)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=a.length;t<e;t++)i=a[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ms.prototype=Object.assign(Object.create(je.prototype),{constructor:Ms,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Ss.prototype=Object.create(je.prototype),Ss.prototype.constructor=Ss,Ss.prototype.isCompressedTexture=!0,Es.prototype=Object.create(je.prototype),Es.prototype.constructor=Es,Es.prototype.isCanvasTexture=!0,Ts.prototype=Object.create(je.prototype),Ts.prototype.constructor=Ts,Ts.prototype.isDepthTexture=!0,As.prototype=Object.create(Nn.prototype),As.prototype.constructor=As,Ls.prototype=Object.create(ar.prototype),Ls.prototype.constructor=Ls,zs.prototype=Object.create(Nn.prototype),zs.prototype.constructor=zs,Ps.prototype=Object.create(ar.prototype),Ps.prototype.constructor=Ps,Rs.prototype=Object.create(Nn.prototype),Rs.prototype.constructor=Rs,Cs.prototype=Object.create(ar.prototype),Cs.prototype.constructor=Cs,Is.prototype=Object.create(Rs.prototype),Is.prototype.constructor=Is,Ns.prototype=Object.create(ar.prototype),Ns.prototype.constructor=Ns,Os.prototype=Object.create(Rs.prototype),Os.prototype.constructor=Os,Bs.prototype=Object.create(ar.prototype),Bs.prototype.constructor=Bs,Ds.prototype=Object.create(Rs.prototype),Ds.prototype.constructor=Ds,Fs.prototype=Object.create(ar.prototype),Fs.prototype.constructor=Fs,Vs.prototype=Object.create(Rs.prototype),Vs.prototype.constructor=Vs,Us.prototype=Object.create(ar.prototype),Us.prototype.constructor=Us,js.prototype=Object.create(Nn.prototype),js.prototype.constructor=js,js.prototype.toJSON=function(){var t=Nn.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t},Gs.prototype=Object.create(ar.prototype),Gs.prototype.constructor=Gs,Hs.prototype=Object.create(Nn.prototype),Hs.prototype.constructor=Hs,ks.prototype=Object.create(ar.prototype),ks.prototype.constructor=ks,Ws.prototype=Object.create(Nn.prototype),Ws.prototype.constructor=Ws;function Xs(t,e,i,n,r){var o,a;if(r===function(t,e,i,n){for(var r=0,o=e,a=i-n;o<i;o+=n)r+=(t[a]-t[o])*(t[o+1]+t[a+1]),a=o;return r}(t,e,i,n)>0)for(o=e;o<i;o+=n)a=ul(o,t[o],t[o+1],a);else for(o=i-n;o>=e;o-=n)a=ul(o,t[o],t[o+1],a);return a&&sl(a,a.next)&&(ql(a),a=a.next),a}function Ys(t,e){if(!t)return t;e||(e=t);var i,n=t;do{if(i=!1,n.steiner||!sl(n,n.next)&&0!==al(n.prev,n,n.next))n=n.next;else{if(ql(n),(n=e=n.prev)===n.next)break;i=!0}}while(i||n!==e);return e}function Zs(t,e,i,n,r,o,a){if(t){!a&&o&&function(t,e,i,n){var r=t;do{null===r.z&&(r.z=il(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){var e,i,n,r,o,a,s,l,h=1;do{for(i=t,t=null,o=null,a=0;i;){for(a++,n=i,s=0,e=0;e<h&&(s++,n=n.nextZ);e++);for(l=h;s>0||l>0&&n;)0!==s&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,s--):(r=n,n=n.nextZ,l--),o?o.nextZ=r:t=r,r.prevZ=o,o=r;i=n}o.nextZ=null,h*=2}while(a>1)}(r)}(t,n,r,o);for(var s,l,h=t;t.prev!==t.next;)if(s=t.prev,l=t.next,o?Qs(t,n,r,o):Js(t))e.push(s.i/i),e.push(t.i/i),e.push(l.i/i),ql(t),t=l.next,h=l.next;else if((t=l)===h){a?1===a?Zs(t=Ks(t,e,i),e,i,n,r,o,2):2===a&&$s(t,e,i,n,r,o):Zs(Ys(t),e,i,n,r,o,1);break}}}function Js(t){var e=t.prev,i=t,n=t.next;if(al(e,i,n)>=0)return!1;for(var r=t.next.next;r!==t.prev;){if(rl(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&al(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Qs(t,e,i,n){var r=t.prev,o=t,a=t.next;if(al(r,o,a)>=0)return!1;for(var s=r.x<o.x?r.x<a.x?r.x:a.x:o.x<a.x?o.x:a.x,l=r.y<o.y?r.y<a.y?r.y:a.y:o.y<a.y?o.y:a.y,h=r.x>o.x?r.x>a.x?r.x:a.x:o.x>a.x?o.x:a.x,c=r.y>o.y?r.y>a.y?r.y:a.y:o.y>a.y?o.y:a.y,u=il(s,l,e,i,n),q=il(h,c,e,i,n),p=t.prevZ,d=t.nextZ;p&&p.z>=u&&d&&d.z<=q;){if(p!==t.prev&&p!==t.next&&rl(r.x,r.y,o.x,o.y,a.x,a.y,p.x,p.y)&&al(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,d!==t.prev&&d!==t.next&&rl(r.x,r.y,o.x,o.y,a.x,a.y,d.x,d.y)&&al(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&rl(r.x,r.y,o.x,o.y,a.x,a.y,p.x,p.y)&&al(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;d&&d.z<=q;){if(d!==t.prev&&d!==t.next&&rl(r.x,r.y,o.x,o.y,a.x,a.y,d.x,d.y)&&al(d.prev,d,d.next)>=0)return!1;d=d.nextZ}return!0}function Ks(t,e,i){var n=t;do{var r=n.prev,o=n.next.next;!sl(r,o)&&ll(r,n,n.next,o)&&hl(r,o)&&hl(o,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(o.i/i),ql(n),ql(n.next),n=t=o),n=n.next}while(n!==t);return n}function $s(t,e,i,n,r,o){var a=t;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&ol(a,s)){var l=cl(a,s);return a=Ys(a,a.next),l=Ys(l,l.next),Zs(a,e,i,n,r,o),void Zs(l,e,i,n,r,o)}s=s.next}a=a.next}while(a!==t)}function tl(t,e){return t.x-e.x}function el(t,e){if(e=function(t,e){var i,n=e,r=t.x,o=t.y,a=-1/0;do{if(o<=n.y&&o>=n.next.y&&n.next.y!==n.y){var s=n.x+(o-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=r&&s>a){if(a=s,s===r){if(o===n.y)return n;if(o===n.next.y)return n.next}i=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!i)return null;if(r===a)return i.prev;var l,h=i,c=i.x,u=i.y,q=1/0;for(n=i.next;n!==h;)r>=n.x&&n.x>=c&&r!==n.x&&rl(o<u?r:a,o,c,u,o<u?a:r,o,n.x,n.y)&&((l=Math.abs(o-n.y)/(r-n.x))<q||l===q&&n.x>i.x)&&hl(n,t)&&(i=n,q=l),n=n.next;return i}(t,e),e){var i=cl(e,t);Ys(i,i.next)}}function il(t,e,i,n,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function nl(t){var e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function rl(t,e,i,n,r,o,a,s){return(r-a)*(e-s)-(t-a)*(o-s)>=0&&(t-a)*(n-s)-(i-a)*(e-s)>=0&&(i-a)*(o-s)-(r-a)*(n-s)>=0}function ol(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&ll(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&hl(t,e)&&hl(e,t)&&function(t,e){var i=t,n=!1,r=(t.x+e.x)/2,o=(t.y+e.y)/2;do{i.y>o!=i.next.y>o&&i.next.y!==i.y&&r<(i.next.x-i.x)*(o-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)}function al(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function sl(t,e){return t.x===e.x&&t.y===e.y}function ll(t,e,i,n){return!!(sl(t,i)&&sl(e,n)||sl(t,n)&&sl(i,e))||al(t,e,i)>0!=al(t,e,n)>0&&al(i,n,t)>0!=al(i,n,e)>0}function hl(t,e){return al(t.prev,t,t.next)<0?al(t,e,t.next)>=0&&al(t,t.prev,e)>=0:al(t,e,t.prev)<0||al(t,t.next,e)<0}function cl(t,e){var i=new pl(t.i,t.x,t.y),n=new pl(e.i,e.x,e.y),r=t.next,o=e.prev;return t.next=e,e.prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,o.next=n,n.prev=o,n}function ul(t,e,i,n){var r=new pl(t,e,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function ql(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function pl(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var dl={area:function(t){for(var e=t.length,i=0,n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i},isClockWise:function(t){return dl.area(t)<0},triangulateShape:function(t,e){var i=[],n=[],r=[];ml(t),fl(i,t);var o=t.length;e.forEach(ml);for(var a=0;a<e.length;a++)n.push(o),o+=e[a].length,fl(i,e[a]);var s=function(t,e,i){i=i||2;var n,r,o,a,s,l,h,c=e&&e.length,u=c?e[0]*i:t.length,q=Xs(t,0,u,i,!0),p=[];if(!q||q.next===q.prev)return p;if(c&&(q=function(t,e,i,n){var r,o,a,s=[];for(r=0,o=e.length;r<o;r++)(a=Xs(t,e[r]*n,r<o-1?e[r+1]*n:t.length,n,!1))===a.next&&(a.steiner=!0),s.push(nl(a));for(s.sort(tl),r=0;r<s.length;r++)el(s[r],i),i=Ys(i,i.next);return i}(t,e,q,i)),t.length>80*i){n=o=t[0],r=a=t[1];for(var d=i;d<u;d+=i)(s=t[d])<n&&(n=s),(l=t[d+1])<r&&(r=l),s>o&&(o=s),l>a&&(a=l);h=0!==(h=Math.max(o-n,a-r))?1/h:0}return Zs(q,p,i,n,r,h),p}(i,n);for(a=0;a<s.length;a+=3)r.push(s.slice(a,a+3));return r}};function ml(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function fl(t,e){for(var i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}function vl(t,e){ar.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new gl(t,e)),this.mergeVertices()}function gl(t,e){Nn.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];for(var i=this,n=[],r=[],o=0,a=t.length;o<a;o++)s(t[o]);function s(t){var o=[],a=void 0!==e.curveSegments?e.curveSegments:12,s=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:100,h=void 0===e.bevelEnabled||e.bevelEnabled,c=void 0!==e.bevelThickness?e.bevelThickness:6,u=void 0!==e.bevelSize?e.bevelSize:c-2,q=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3,d=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:yl;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);var f,v,g,y,x,w,b,_,M=!1;d&&(f=d.getSpacedPoints(s),M=!0,h=!1,v=d.computeFrenetFrames(s,!1),g=new Oe,y=new Oe,x=new Oe),h||(p=0,c=0,u=0,q=0);var S=t.extractPoints(a),E=S.shape,T=S.holes;if(!dl.isClockWise(E))for(E=E.reverse(),b=0,_=T.length;b<_;b++)w=T[b],dl.isClockWise(w)&&(T[b]=w.reverse());var A=dl.triangulateShape(E,T),L=E;for(b=0,_=T.length;b<_;b++)w=T[b],E=E.concat(w);function z(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}var P,R,C,I,N,O,B=E.length,D=A.length;function F(t,e,i){var n,r,o,a=t.x-e.x,s=t.y-e.y,l=i.x-t.x,h=i.y-t.y,c=a*a+s*s,u=a*h-s*l;if(Math.abs(u)>Number.EPSILON){var q=Math.sqrt(c),p=Math.sqrt(l*l+h*h),d=e.x-s/q,m=e.y+a/q,f=((i.x-h/p-d)*h-(i.y+l/p-m)*l)/(a*h-s*l),v=(n=d+a*f-t.x)*n+(r=m+s*f-t.y)*r;if(v<=2)return new Re(n,r);o=Math.sqrt(v/2)}else{var g=!1;a>Number.EPSILON?l>Number.EPSILON&&(g=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(g=!0):Math.sign(s)===Math.sign(h)&&(g=!0),g?(n=-s,r=a,o=Math.sqrt(c)):(n=a,r=s,o=Math.sqrt(c/2))}return new Re(n/o,r/o)}for(var V=[],U=0,j=L.length,G=j-1,H=U+1;U<j;U++,G++,H++)G===j&&(G=0),H===j&&(H=0),V[U]=F(L[U],L[G],L[H]);var k,W,X=[],Y=V.concat();for(b=0,_=T.length;b<_;b++){for(w=T[b],k=[],U=0,G=(j=w.length)-1,H=U+1;U<j;U++,G++,H++)G===j&&(G=0),H===j&&(H=0),k[U]=F(w[U],w[G],w[H]);X.push(k),Y=Y.concat(k)}for(P=0;P<p;P++){for(C=P/p,I=c*Math.cos(C*Math.PI/2),R=u*Math.sin(C*Math.PI/2)+q,U=0,j=L.length;U<j;U++)J((N=z(L[U],V[U],R)).x,N.y,-I);for(b=0,_=T.length;b<_;b++)for(w=T[b],k=X[b],U=0,j=w.length;U<j;U++)J((N=z(w[U],k[U],R)).x,N.y,-I)}for(R=u+q,U=0;U<B;U++)N=h?z(E[U],Y[U],R):E[U],M?(y.copy(v.normals[0]).multiplyScalar(N.x),g.copy(v.binormals[0]).multiplyScalar(N.y),x.copy(f[0]).add(y).add(g),J(x.x,x.y,x.z)):J(N.x,N.y,0);for(W=1;W<=s;W++)for(U=0;U<B;U++)N=h?z(E[U],Y[U],R):E[U],M?(y.copy(v.normals[W]).multiplyScalar(N.x),g.copy(v.binormals[W]).multiplyScalar(N.y),x.copy(f[W]).add(y).add(g),J(x.x,x.y,x.z)):J(N.x,N.y,l/s*W);for(P=p-1;P>=0;P--){for(C=P/p,I=c*Math.cos(C*Math.PI/2),R=u*Math.sin(C*Math.PI/2)+q,U=0,j=L.length;U<j;U++)J((N=z(L[U],V[U],R)).x,N.y,l+I);for(b=0,_=T.length;b<_;b++)for(w=T[b],k=X[b],U=0,j=w.length;U<j;U++)N=z(w[U],k[U],R),M?J(N.x,N.y+f[s-1].y,f[s-1].x+I):J(N.x,N.y,l+I)}function Z(t,e){var i,n;for(U=t.length;--U>=0;){i=U,(n=U-1)<0&&(n=t.length-1);var r=0,o=s+2*p;for(r=0;r<o;r++){var a=B*r,l=B*(r+1);K(e+i+a,e+n+a,e+n+l,e+i+l)}}}function J(t,e,i){o.push(t),o.push(e),o.push(i)}function Q(t,e,r){$(t),$(e),$(r);var o=n.length/3,a=m.generateTopUV(i,n,o-3,o-2,o-1);tt(a[0]),tt(a[1]),tt(a[2])}function K(t,e,r,o){$(t),$(e),$(o),$(e),$(r),$(o);var a=n.length/3,s=m.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);tt(s[0]),tt(s[1]),tt(s[3]),tt(s[1]),tt(s[2]),tt(s[3])}function $(t){n.push(o[3*t+0]),n.push(o[3*t+1]),n.push(o[3*t+2])}function tt(t){r.push(t.x),r.push(t.y)}!function(){var t=n.length/3;if(h){var e=0,r=B*e;for(U=0;U<D;U++)Q((O=A[U])[2]+r,O[1]+r,O[0]+r);for(r=B*(e=s+2*p),U=0;U<D;U++)Q((O=A[U])[0]+r,O[1]+r,O[2]+r)}else{for(U=0;U<D;U++)Q((O=A[U])[2],O[1],O[0]);for(U=0;U<D;U++)Q((O=A[U])[0]+B*s,O[1]+B*s,O[2]+B*s)}i.addGroup(t,n.length/3-t,0)}(),function(){var t=n.length/3,e=0;for(Z(L,e),e+=L.length,b=0,_=T.length;b<_;b++)Z(w=T[b],e),e+=w.length;i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new Mn(n,3)),this.setAttribute("uv",new Mn(r,2)),this.computeVertexNormals()}vl.prototype=Object.create(ar.prototype),vl.prototype.constructor=vl,vl.prototype.toJSON=function(){var t=ar.prototype.toJSON.call(this);return xl(this.parameters.shapes,this.parameters.options,t)},gl.prototype=Object.create(Nn.prototype),gl.prototype.constructor=gl,gl.prototype.toJSON=function(){var t=Nn.prototype.toJSON.call(this);return xl(this.parameters.shapes,this.parameters.options,t)};var yl={generateTopUV:function(t,e,i,n,r){var o=e[3*i],a=e[3*i+1],s=e[3*n],l=e[3*n+1],h=e[3*r],c=e[3*r+1];return[new Re(o,a),new Re(s,l),new Re(h,c)]},generateSideWallUV:function(t,e,i,n,r,o){var a=e[3*i],s=e[3*i+1],l=e[3*i+2],h=e[3*n],c=e[3*n+1],u=e[3*n+2],q=e[3*r],p=e[3*r+1],d=e[3*r+2],m=e[3*o],f=e[3*o+1],v=e[3*o+2];return Math.abs(s-c)<.01?[new Re(a,1-l),new Re(h,1-u),new Re(q,1-d),new Re(m,1-v)]:[new Re(s,1-l),new Re(c,1-u),new Re(p,1-d),new Re(f,1-v)]}};function xl(t,e,i){if(i.shapes=[],Array.isArray(t))for(var n=0,r=t.length;n<r;n++){var o=t[n];i.shapes.push(o.uuid)}else i.shapes.push(t.uuid);return void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}function wl(t,e){ar.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new bl(t,e)),this.mergeVertices()}function bl(t,e){var i=(e=e||{}).font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ar;var n=i.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),gl.call(this,n,e),this.type="TextBufferGeometry"}function _l(t,e,i,n,r,o,a){ar.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Ml(t,e,i,n,r,o,a)),this.mergeVertices()}function Ml(t,e,i,n,r,o,a){Nn.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},t=t||1,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,l,h=Math.min(o+a,Math.PI),c=0,u=[],q=new Oe,p=new Oe,d=[],m=[],f=[],v=[];for(l=0;l<=i;l++){var g=[],y=l/i,x=0;for(0==l&&0==o?x=.5/e:l==i&&h==Math.PI&&(x=-.5/e),s=0;s<=e;s++){var w=s/e;q.x=-t*Math.cos(n+w*r)*Math.sin(o+y*a),q.y=t*Math.cos(o+y*a),q.z=t*Math.sin(n+w*r)*Math.sin(o+y*a),m.push(q.x,q.y,q.z),p.copy(q).normalize(),f.push(p.x,p.y,p.z),v.push(w+x,1-y),g.push(c++)}u.push(g)}for(l=0;l<i;l++)for(s=0;s<e;s++){var b=u[l][s+1],_=u[l][s],M=u[l+1][s],S=u[l+1][s+1];(0!==l||o>0)&&d.push(b,_,S),(l!==i-1||h<Math.PI)&&d.push(_,M,S)}this.setIndex(d),this.setAttribute("position",new Mn(m,3)),this.setAttribute("normal",new Mn(f,3)),this.setAttribute("uv",new Mn(v,2))}function Sl(t,e,i,n,r,o){ar.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},this.fromBufferGeometry(new El(t,e,i,n,r,o)),this.mergeVertices()}function El(t,e,i,n,r,o){Nn.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},t=t||.5,e=e||1,r=void 0!==r?r:0,o=void 0!==o?o:2*Math.PI,i=void 0!==i?Math.max(3,i):8;var a,s,l,h=[],c=[],u=[],q=[],p=t,d=(e-t)/(n=void 0!==n?Math.max(1,n):1),m=new Oe,f=new Re;for(s=0;s<=n;s++){for(l=0;l<=i;l++)a=r+l/i*o,m.x=p*Math.cos(a),m.y=p*Math.sin(a),c.push(m.x,m.y,m.z),u.push(0,0,1),f.x=(m.x/e+1)/2,f.y=(m.y/e+1)/2,q.push(f.x,f.y);p+=d}for(s=0;s<n;s++){var v=s*(i+1);for(l=0;l<i;l++){var g=a=l+v,y=a+i+1,x=a+i+2,w=a+1;h.push(g,y,w),h.push(y,x,w)}}this.setIndex(h),this.setAttribute("position",new Mn(c,3)),this.setAttribute("normal",new Mn(u,3)),this.setAttribute("uv",new Mn(q,2))}function Tl(t,e,i,n){ar.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},this.fromBufferGeometry(new Al(t,e,i,n)),this.mergeVertices()}function Al(t,e,i,n){Nn.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e)||12,i=i||0,n=n||2*Math.PI,n=Pe.clamp(n,0,2*Math.PI);var r,o,a,s=[],l=[],h=[],c=1/e,u=new Oe,q=new Re;for(o=0;o<=e;o++){var p=i+o*c*n,d=Math.sin(p),m=Math.cos(p);for(a=0;a<=t.length-1;a++)u.x=t[a].x*d,u.y=t[a].y,u.z=t[a].x*m,l.push(u.x,u.y,u.z),q.x=o/e,q.y=a/(t.length-1),h.push(q.x,q.y)}for(o=0;o<e;o++)for(a=0;a<t.length-1;a++){var f=r=a+o*t.length,v=r+t.length,g=r+t.length+1,y=r+1;s.push(f,v,y),s.push(v,g,y)}if(this.setIndex(s),this.setAttribute("position",new Mn(l,3)),this.setAttribute("uv",new Mn(h,2)),this.computeVertexNormals(),n===2*Math.PI){var x=this.attributes.normal.array,w=new Oe,b=new Oe,_=new Oe;for(r=e*t.length*3,o=0,a=0;o<t.length;o++,a+=3)w.x=x[a+0],w.y=x[a+1],w.z=x[a+2],b.x=x[r+a+0],b.y=x[r+a+1],b.z=x[r+a+2],_.addVectors(w,b).normalize(),x[a+0]=x[r+a+0]=_.x,x[a+1]=x[r+a+1]=_.y,x[a+2]=x[r+a+2]=_.z}}function Ll(t,e){ar.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new zl(t,e)),this.mergeVertices()}function zl(t,e){Nn.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var i=[],n=[],r=[],o=[],a=0,s=0;if(!1===Array.isArray(t))h(t);else for(var l=0;l<t.length;l++)h(t[l]),this.addGroup(a,s,l),a+=s,s=0;function h(t){var a,l,h,c=n.length/3,u=t.extractPoints(e),q=u.shape,p=u.holes;for(!1===dl.isClockWise(q)&&(q=q.reverse()),a=0,l=p.length;a<l;a++)h=p[a],!0===dl.isClockWise(h)&&(p[a]=h.reverse());var d=dl.triangulateShape(q,p);for(a=0,l=p.length;a<l;a++)h=p[a],q=q.concat(h);for(a=0,l=q.length;a<l;a++){var m=q[a];n.push(m.x,m.y,0),r.push(0,0,1),o.push(m.x,m.y)}for(a=0,l=d.length;a<l;a++){var f=d[a],v=f[0]+c,g=f[1]+c,y=f[2]+c;i.push(v,g,y),s+=3}}this.setIndex(i),this.setAttribute("position",new Mn(n,3)),this.setAttribute("normal",new Mn(r,3)),this.setAttribute("uv",new Mn(o,2))}function Pl(t,e){if(e.shapes=[],Array.isArray(t))for(var i=0,n=t.length;i<n;i++){var r=t[i];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}function Rl(t,e){Nn.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var i,n,r,o,a=[],s=Math.cos(Pe.DEG2RAD*e),l=[0,0],h={},c=["a","b","c"];t.isBufferGeometry?(o=new ar).fromBufferGeometry(t):o=t.clone(),o.mergeVertices(),o.computeFaceNormals();for(var u=o.vertices,q=o.faces,p=0,d=q.length;p<d;p++)for(var m=q[p],f=0;f<3;f++)i=m[c[f]],n=m[c[(f+1)%3]],l[0]=Math.min(i,n),l[1]=Math.max(i,n),void 0===h[r=l[0]+","+l[1]]?h[r]={index1:l[0],index2:l[1],face1:p,face2:void 0}:h[r].face2=p;for(r in h){var v=h[r];if(void 0===v.face2||q[v.face1].normal.dot(q[v.face2].normal)<=s){var g=u[v.index1];a.push(g.x,g.y,g.z),g=u[v.index2],a.push(g.x,g.y,g.z)}}this.setAttribute("position",new Mn(a,3))}function Cl(t,e,i,n,r,o,a,s){ar.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new Il(t,e,i,n,r,o,a,s)),this.mergeVertices()}function Il(t,e,i,n,r,o,a,s){Nn.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:s};var l=this;t=void 0!==t?t:1,e=void 0!==e?e:1,i=i||1,n=Math.floor(n)||8,r=Math.floor(r)||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var h=[],c=[],u=[],q=[],p=0,d=[],m=i/2,f=0;function v(i){var r,o,d,v=new Re,g=new Oe,y=0,x=!0===i?t:e,w=!0===i?1:-1;for(o=p,r=1;r<=n;r++)c.push(0,m*w,0),u.push(0,w,0),q.push(.5,.5),p++;for(d=p,r=0;r<=n;r++){var b=r/n*s+a,_=Math.cos(b),M=Math.sin(b);g.x=x*M,g.y=m*w,g.z=x*_,c.push(g.x,g.y,g.z),u.push(0,w,0),v.x=.5*_+.5,v.y=.5*M*w+.5,q.push(v.x,v.y),p++}for(r=0;r<n;r++){var S=o+r,E=d+r;!0===i?h.push(E,E+1,S):h.push(E+1,E,S),y+=3}l.addGroup(f,y,!0===i?1:2),f+=y}!function(){var o,v,g=new Oe,y=new Oe,x=0,w=(e-t)/i;for(v=0;v<=r;v++){var b=[],_=v/r,M=_*(e-t)+t;for(o=0;o<=n;o++){var S=o/n,E=S*s+a,T=Math.sin(E),A=Math.cos(E);y.x=M*T,y.y=-_*i+m,y.z=M*A,c.push(y.x,y.y,y.z),g.set(T,w,A).normalize(),u.push(g.x,g.y,g.z),q.push(S,1-_),b.push(p++)}d.push(b)}for(o=0;o<n;o++)for(v=0;v<r;v++){var L=d[v][o],z=d[v+1][o],P=d[v+1][o+1],R=d[v][o+1];h.push(L,z,R),h.push(z,P,R),x+=6}l.addGroup(f,x,0),f+=x}(),!1===o&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new Mn(c,3)),this.setAttribute("normal",new Mn(u,3)),this.setAttribute("uv",new Mn(q,2))}function Nl(t,e,i,n,r,o,a){Cl.call(this,0,t,e,i,n,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}function Ol(t,e,i,n,r,o,a){Il.call(this,0,t,e,i,n,r,o,a),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}function Bl(t,e,i,n){ar.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new Dl(t,e,i,n)),this.mergeVertices()}function Dl(t,e,i,n){Nn.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},t=t||1,e=void 0!==e?Math.max(3,e):8,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;var r,o,a=[],s=[],l=[],h=[],c=new Oe,u=new Re;for(s.push(0,0,0),l.push(0,0,1),h.push(.5,.5),o=0,r=3;o<=e;o++,r+=3){var q=i+o/e*n;c.x=t*Math.cos(q),c.y=t*Math.sin(q),s.push(c.x,c.y,c.z),l.push(0,0,1),u.x=(s[r]/t+1)/2,u.y=(s[r+1]/t+1)/2,h.push(u.x,u.y)}for(r=1;r<=e;r++)a.push(r,r+1,0);this.setIndex(a),this.setAttribute("position",new Mn(s,3)),this.setAttribute("normal",new Mn(l,3)),this.setAttribute("uv",new Mn(h,2))}wl.prototype=Object.create(ar.prototype),wl.prototype.constructor=wl,bl.prototype=Object.create(gl.prototype),bl.prototype.constructor=bl,_l.prototype=Object.create(ar.prototype),_l.prototype.constructor=_l,Ml.prototype=Object.create(Nn.prototype),Ml.prototype.constructor=Ml,Sl.prototype=Object.create(ar.prototype),Sl.prototype.constructor=Sl,El.prototype=Object.create(Nn.prototype),El.prototype.constructor=El,Tl.prototype=Object.create(ar.prototype),Tl.prototype.constructor=Tl,Al.prototype=Object.create(Nn.prototype),Al.prototype.constructor=Al,Ll.prototype=Object.create(ar.prototype),Ll.prototype.constructor=Ll,Ll.prototype.toJSON=function(){var t=ar.prototype.toJSON.call(this);return Pl(this.parameters.shapes,t)},zl.prototype=Object.create(Nn.prototype),zl.prototype.constructor=zl,zl.prototype.toJSON=function(){var t=Nn.prototype.toJSON.call(this);return Pl(this.parameters.shapes,t)},Rl.prototype=Object.create(Nn.prototype),Rl.prototype.constructor=Rl,Cl.prototype=Object.create(ar.prototype),Cl.prototype.constructor=Cl,Il.prototype=Object.create(Nn.prototype),Il.prototype.constructor=Il,Nl.prototype=Object.create(Cl.prototype),Nl.prototype.constructor=Nl,Ol.prototype=Object.create(Il.prototype),Ol.prototype.constructor=Ol,Bl.prototype=Object.create(ar.prototype),Bl.prototype.constructor=Bl,Dl.prototype=Object.create(Nn.prototype),Dl.prototype.constructor=Dl;var Fl=Object.freeze({__proto__:null,WireframeGeometry:As,ParametricGeometry:Ls,ParametricBufferGeometry:zs,TetrahedronGeometry:Cs,TetrahedronBufferGeometry:Is,OctahedronGeometry:Ns,OctahedronBufferGeometry:Os,IcosahedronGeometry:Bs,IcosahedronBufferGeometry:Ds,DodecahedronGeometry:Fs,DodecahedronBufferGeometry:Vs,PolyhedronGeometry:Ps,PolyhedronBufferGeometry:Rs,TubeGeometry:Us,TubeBufferGeometry:js,TorusKnotGeometry:Gs,TorusKnotBufferGeometry:Hs,TorusGeometry:ks,TorusBufferGeometry:Ws,TextGeometry:wl,TextBufferGeometry:bl,SphereGeometry:_l,SphereBufferGeometry:Ml,RingGeometry:Sl,RingBufferGeometry:El,PlaneGeometry:Tr,PlaneBufferGeometry:Ar,LatheGeometry:Tl,LatheBufferGeometry:Al,ShapeGeometry:Ll,ShapeBufferGeometry:zl,ExtrudeGeometry:vl,ExtrudeBufferGeometry:gl,EdgesGeometry:Rl,ConeGeometry:Nl,ConeBufferGeometry:Ol,CylinderGeometry:Cl,CylinderBufferGeometry:Il,CircleGeometry:Bl,CircleBufferGeometry:Dl,BoxGeometry:class extends ar{constructor(t,e,i,n,r,o){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:o},this.fromBufferGeometry(new sr(t,e,i,n,r,o)),this.mergeVertices()}},BoxBufferGeometry:sr});function Vl(t){dn.call(this),this.type="ShadowMaterial",this.color=new ln(0),this.transparent=!0,this.setValues(t)}function Ul(t){qr.call(this,t),this.type="RawShaderMaterial"}function jl(t){dn.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ln(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ln(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Gl(t){jl.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new Re(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(t)}function Hl(t){dn.call(this),this.type="MeshPhongMaterial",this.color=new ln(16777215),this.specular=new ln(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ln(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=k,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function kl(t){Hl.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function Wl(t){dn.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Xl(t){dn.call(this),this.type="MeshLambertMaterial",this.color=new ln(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ln(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=k,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Yl(t){dn.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ln(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=be,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Zl(t){as.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Vl.prototype=Object.create(dn.prototype),Vl.prototype.constructor=Vl,Vl.prototype.isShadowMaterial=!0,Vl.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this},Ul.prototype=Object.create(qr.prototype),Ul.prototype.constructor=Ul,Ul.prototype.isRawShaderMaterial=!0,jl.prototype=Object.create(dn.prototype),jl.prototype.constructor=jl,jl.prototype.isMeshStandardMaterial=!0,jl.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Gl.prototype=Object.create(jl.prototype),Gl.prototype.constructor=Gl,Gl.prototype.isMeshPhysicalMaterial=!0,Gl.prototype.copy=function(t){return jl.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearcoat=t.clearcoat,this.clearcoatRoughness=t.clearcoatRoughness,t.sheen?this.sheen=(this.sheen||new ln).copy(t.sheen):this.sheen=null,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.transparency=t.transparency,this},Hl.prototype=Object.create(dn.prototype),Hl.prototype.constructor=Hl,Hl.prototype.isMeshPhongMaterial=!0,Hl.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},kl.prototype=Object.create(Hl.prototype),kl.prototype.constructor=kl,kl.prototype.isMeshToonMaterial=!0,kl.prototype.copy=function(t){return Hl.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},Wl.prototype=Object.create(dn.prototype),Wl.prototype.constructor=Wl,Wl.prototype.isMeshNormalMaterial=!0,Wl.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Xl.prototype=Object.create(dn.prototype),Xl.prototype.constructor=Xl,Xl.prototype.isMeshLambertMaterial=!0,Xl.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Yl.prototype=Object.create(dn.prototype),Yl.prototype.constructor=Yl,Yl.prototype.isMeshMatcapMaterial=!0,Yl.prototype.copy=function(t){return dn.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Zl.prototype=Object.create(as.prototype),Zl.prototype.constructor=Zl,Zl.prototype.isLineDashedMaterial=!0,Zl.prototype.copy=function(t){return as.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Jl=Object.freeze({__proto__:null,ShadowMaterial:Vl,SpriteMaterial:Oa,RawShaderMaterial:Ul,ShaderMaterial:qr,PointsMaterial:vs,MeshPhysicalMaterial:Gl,MeshStandardMaterial:jl,MeshPhongMaterial:Hl,MeshToonMaterial:kl,MeshNormalMaterial:Wl,MeshLambertMaterial:Xl,MeshDepthMaterial:pa,MeshDistanceMaterial:da,MeshBasicMaterial:mn,MeshMatcapMaterial:Yl,LineDashedMaterial:Zl,LineBasicMaterial:as,Material:dn}),Ql={arraySlice:function(t,e,i){return Ql.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,i=new Array(e),n=0;n!==e;++n)i[n]=n;return i.sort((function(e,i){return t[e]-t[i]})),i},sortedArray:function(t,e,i){for(var n=t.length,r=new t.constructor(n),o=0,a=0;a!==n;++o)for(var s=i[o]*e,l=0;l!==e;++l)r[a++]=t[s+l];return r},flattenJSON:function(t,e,i,n){for(var r=1,o=t[0];void 0!==o&&void 0===o[n];)o=t[r++];if(void 0!==o){var a=o[n];if(void 0!==a)if(Array.isArray(a))do{void 0!==(a=o[n])&&(e.push(o.time),i.push.apply(i,a)),o=t[r++]}while(void 0!==o);else if(void 0!==a.toArray)do{void 0!==(a=o[n])&&(e.push(o.time),a.toArray(i,i.length)),o=t[r++]}while(void 0!==o);else do{void 0!==(a=o[n])&&(e.push(o.time),i.push(a)),o=t[r++]}while(void 0!==o)}},subclip:function(t,e,i,n,r){r=r||30;var o=t.clone();o.name=e;for(var a=[],s=0;s<o.tracks.length;++s){for(var l=o.tracks[s],h=l.getValueSize(),c=[],u=[],q=0;q<l.times.length;++q){var p=l.times[q]*r;if(!(p<i||p>=n)){c.push(l.times[q]);for(var d=0;d<h;++d)u.push(l.values[q*h+d])}}0!==c.length&&(l.times=Ql.convertArray(c,l.times.constructor),l.values=Ql.convertArray(u,l.values.constructor),a.push(l))}o.tracks=a;var m=1/0;for(s=0;s<o.tracks.length;++s)m>o.tracks[s].times[0]&&(m=o.tracks[s].times[0]);for(s=0;s<o.tracks.length;++s)o.tracks[s].shift(-1*m);return o.resetDuration(),o}};function Kl(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}function $l(t,e,i,n){Kl.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function th(t,e,i,n){Kl.call(this,t,e,i,n)}function eh(t,e,i,n){Kl.call(this,t,e,i,n)}function ih(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ql.convertArray(e,this.TimeBufferType),this.values=Ql.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function nh(t,e,i){ih.call(this,t,e,i)}function rh(t,e,i,n){ih.call(this,t,e,i,n)}function oh(t,e,i,n){ih.call(this,t,e,i,n)}function ah(t,e,i,n){Kl.call(this,t,e,i,n)}function sh(t,e,i,n){ih.call(this,t,e,i,n)}function lh(t,e,i,n){ih.call(this,t,e,i,n)}function hh(t,e,i,n){ih.call(this,t,e,i,n)}function ch(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=Pe.generateUUID(),this.duration<0&&this.resetDuration()}function uh(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return oh;case"vector":case"vector2":case"vector3":case"vector4":return hh;case"color":return rh;case"quaternion":return sh;case"bool":case"boolean":return nh;case"string":return lh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){var i=[],n=[];Ql.flattenJSON(t.keys,i,n,"value"),t.times=i,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Kl.prototype,{evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{var o;i:{n:if(!(t<n)){for(var a=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===a)break;if(r=n,t<(n=e[++i]))break e}o=e.length;break i}if(t>=r)break t;var s=e[1];for(t<s&&(i=2,r=s),a=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===a)break;if(n=r,t>=(r=e[--i-1]))break e}o=i,i=0}for(;i<o;){var l=i+o>>>1;t<e[l]?o=l:i=l+1}if(n=e[i],void 0===(r=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n,o=0;o!==n;++o)e[o]=i[r+o];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Kl.prototype,{beforeStart_:Kl.prototype.copySampleValue_,afterEnd_:Kl.prototype.copySampleValue_}),$l.prototype=Object.assign(Object.create(Kl.prototype),{constructor:$l,DefaultSettings_:{endingStart:le,endingEnd:le},intervalChanged_:function(t,e,i){var n=this.parameterPositions,r=t-2,o=t+1,a=n[r],s=n[o];if(void 0===a)switch(this.getSettings_().endingStart){case he:r=t,a=2*e-i;break;case ce:a=e+n[r=n.length-2]-n[r+1];break;default:r=t,a=i}if(void 0===s)switch(this.getSettings_().endingEnd){case he:o=t,s=2*i-e;break;case ce:o=1,s=i+n[1]-n[0];break;default:o=t-1,s=e}var l=.5*(i-e),h=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(s-i),this._offsetPrev=r*h,this._offsetNext=o*h},interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,l=s-a,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,q=this._weightNext,p=(i-e)/(n-e),d=p*p,m=d*p,f=-u*m+2*u*d-u*p,v=(1+u)*m+(-1.5-2*u)*d+(-.5+u)*p+1,g=(-1-q)*m+(1.5+q)*d+.5*p,y=q*m-q*d,x=0;x!==a;++x)r[x]=f*o[h+x]+v*o[l+x]+g*o[s+x]+y*o[c+x];return r}}),th.prototype=Object.assign(Object.create(Kl.prototype),{constructor:th,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,l=s-a,h=(i-e)/(n-e),c=1-h,u=0;u!==a;++u)r[u]=o[l+u]*c+o[s+u]*h;return r}}),eh.prototype=Object.assign(Object.create(Kl.prototype),{constructor:eh,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(ih,{toJSON:function(t){var e,i=t.constructor;if(void 0!==i.toJSON)e=i.toJSON(t);else{e={name:t.name,times:Ql.convertArray(t.times,Array),values:Ql.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}return e.type=t.ValueTypeName,e}}),Object.assign(ih.prototype,{constructor:ih,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:ae,InterpolantFactoryMethodDiscrete:function(t){return new eh(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new th(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new $l(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case oe:e=this.InterpolantFactoryMethodDiscrete;break;case ae:e=this.InterpolantFactoryMethodLinear;break;case se:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return oe;case this.InterpolantFactoryMethodLinear:return ae;case this.InterpolantFactoryMethodSmooth:return se}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]*=t;return this},trim:function(t,e){for(var i=this.times,n=i.length,r=0,o=n-1;r!==n&&i[r]<t;)++r;for(;-1!==o&&i[o]>e;)--o;if(++o,0!==r||o!==n){r>=o&&(r=(o=Math.max(o,1))-1);var a=this.getValueSize();this.times=Ql.arraySlice(i,r,o),this.values=Ql.arraySlice(this.values,r*a,o*a)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var o=null,a=0;a!==r;a++){var s=i[a];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,s),t=!1;break}if(null!==o&&o>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,s,o),t=!1;break}o=s}if(void 0!==n&&Ql.isTypedArray(n)){a=0;for(var l=n.length;a!==l;++a){var h=n[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),n=this.getInterpolation()===se,r=1,o=t.length-1,a=1;a<o;++a){var s=!1,l=t[a];if(l!==t[a+1]&&(1!==a||l!==l[0]))if(n)s=!0;else for(var h=a*i,c=h-i,u=h+i,q=0;q!==i;++q){var p=e[h+q];if(p!==e[c+q]||p!==e[u+q]){s=!0;break}}if(s){if(a!==r){t[r]=t[a];var d=a*i,m=r*i;for(q=0;q!==i;++q)e[m+q]=e[d+q]}++r}}if(o>0){for(t[r]=t[o],d=o*i,m=r*i,q=0;q!==i;++q)e[m+q]=e[d+q];++r}return r!==t.length&&(this.times=Ql.arraySlice(t,0,r),this.values=Ql.arraySlice(e,0,r*i)),this},clone:function(){var t=Ql.arraySlice(this.times,0),e=Ql.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}),nh.prototype=Object.assign(Object.create(ih.prototype),{constructor:nh,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:oe,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),rh.prototype=Object.assign(Object.create(ih.prototype),{constructor:rh,ValueTypeName:"color"}),oh.prototype=Object.assign(Object.create(ih.prototype),{constructor:oh,ValueTypeName:"number"}),ah.prototype=Object.assign(Object.create(Kl.prototype),{constructor:ah,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,l=(i-e)/(n-e),h=s+a;s!==h;s+=4)Ce.slerpFlat(r,0,o,s-a,o,s,l);return r}}),sh.prototype=Object.assign(Object.create(ih.prototype),{constructor:sh,ValueTypeName:"quaternion",DefaultInterpolation:ae,InterpolantFactoryMethodLinear:function(t){return new ah(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),lh.prototype=Object.assign(Object.create(ih.prototype),{constructor:lh,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:oe,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),hh.prototype=Object.assign(Object.create(ih.prototype),{constructor:hh,ValueTypeName:"vector"}),Object.assign(ch,{parse:function(t){for(var e=[],i=t.tracks,n=1/(t.fps||1),r=0,o=i.length;r!==o;++r)e.push(uh(i[r]).scale(n));return new ch(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},r=0,o=i.length;r!==o;++r)e.push(ih.toJSON(i[r]));return n},CreateFromMorphTargetSequence:function(t,e,i,n){for(var r=e.length,o=[],a=0;a<r;a++){var s=[],l=[];s.push((a+r-1)%r,a,(a+1)%r),l.push(0,1,0);var h=Ql.getKeyframeOrder(s);s=Ql.sortedArray(s,1,h),l=Ql.sortedArray(l,1,h),n||0!==s[0]||(s.push(r),l.push(l[0])),o.push(new oh(".morphTargetInfluences["+e[a].name+"]",s,l).scale(1/i))}return new ch(t,-1,o)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var n=t;i=n.geometry&&n.geometry.animations||n.animations}for(var r=0;r<i.length;r++)if(i[r].name===e)return i[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){for(var n={},r=/^([\w-]*?)([\d]+)$/,o=0,a=t.length;o<a;o++){var s=t[o],l=s.name.match(r);if(l&&l.length>1){var h=n[u=l[1]];h||(n[u]=h=[]),h.push(s)}}var c=[];for(var u in n)c.push(ch.CreateFromMorphTargetSequence(u,n[u],e,i));return c},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var i=function(t,e,i,n,r){if(0!==i.length){var o=[],a=[];Ql.flattenJSON(i,o,a,n),0!==o.length&&r.push(new t(e,o,a))}},n=[],r=t.name||"default",o=t.length||-1,a=t.fps||30,s=t.hierarchy||[],l=0;l<s.length;l++){var h=s[l].keys;if(h&&0!==h.length)if(h[0].morphTargets){for(var c={},u=0;u<h.length;u++)if(h[u].morphTargets)for(var q=0;q<h[u].morphTargets.length;q++)c[h[u].morphTargets[q]]=-1;for(var p in c){var d=[],m=[];for(q=0;q!==h[u].morphTargets.length;++q){var f=h[u];d.push(f.time),m.push(f.morphTarget===p?1:0)}n.push(new oh(".morphTargetInfluence["+p+"]",d,m))}o=c.length*(a||1)}else{var v=".bones["+e[l].name+"]";i(hh,v+".position",h,"pos",n),i(sh,v+".quaternion",h,"rot",n),i(hh,v+".scale",h,"scl",n)}}return 0===n.length?null:new ch(r,o,n)}}),Object.assign(ch.prototype,{resetDuration:function(){for(var t=0,e=0,i=this.tracks.length;e!==i;++e){var n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){for(var t=[],e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new ch(this.name,this.duration,t)}});var qh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function ph(t,e,i){var n=this,r=!1,o=0,a=0,s=void 0,l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){a++,!1===r&&void 0!==n.onStart&&n.onStart(t,o,a),r=!0},this.itemEnd=function(t){o++,void 0!==n.onProgress&&n.onProgress(t,o,a),o===a&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){var e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(var e=0,i=l.length;e<i;e+=2){var n=l[e],r=l[e+1];if(n.test(t))return r}return null}}var dh=new ph;function mh(t){this.manager=void 0!==t?t:dh,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(mh.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this}});var fh={};function vh(t){mh.call(this,t)}function gh(t){mh.call(this,t)}function yh(t){mh.call(this,t)}function xh(t){mh.call(this,t)}function wh(t){mh.call(this,t)}function bh(t){mh.call(this,t)}function _h(t){mh.call(this,t)}function Mh(){this.type="Curve",this.arcLengthDivisions=200}function Sh(t,e,i,n,r,o,a,s){Mh.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=a||!1,this.aRotation=s||0}function Eh(t,e,i,n,r,o){Sh.call(this,t,e,i,i,n,r,o),this.type="ArcCurve"}function Th(){var t=0,e=0,i=0,n=0;function r(r,o,a,s){t=r,e=a,i=-3*r+3*o-2*a-s,n=2*r-2*o+a+s}return{initCatmullRom:function(t,e,i,n,o){r(e,i,o*(i-t),o*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,o,a,s){var l=(e-t)/o-(i-t)/(o+a)+(i-e)/a,h=(i-e)/a-(n-e)/(a+s)+(n-i)/s;r(e,i,l*=a,h*=a)},calc:function(r){var o=r*r;return t+e*r+i*o+n*(o*r)}}}vh.prototype=Object.assign(Object.create(mh.prototype),{constructor:vh,load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,o=qh.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;if(void 0===fh[t]){var a=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(a){var s=a[1],l=!!a[2],h=a[3];h=decodeURIComponent(h),l&&(h=atob(h));try{var c,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":for(var q=new Uint8Array(h.length),p=0;p<h.length;p++)q[p]=h.charCodeAt(p);c="blob"===u?new Blob([q.buffer],{type:s}):q.buffer;break;case"document":var d=new DOMParser;c=d.parseFromString(h,s);break;case"json":c=JSON.parse(h);break;default:c=h}setTimeout((function(){e&&e(c),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{fh[t]=[],fh[t].push({onLoad:e,onProgress:i,onError:n});var m=new XMLHttpRequest;for(var f in m.open("GET",t,!0),m.addEventListener("load",(function(e){var i=this.response,n=fh[t];if(delete fh[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),qh.add(t,i);for(var o=0,a=n.length;o<a;o++)(s=n[o]).onLoad&&s.onLoad(i);r.manager.itemEnd(t)}else{for(o=0,a=n.length;o<a;o++){var s;(s=n[o]).onError&&s.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),m.addEventListener("progress",(function(e){for(var i=fh[t],n=0,r=i.length;n<r;n++){var o=i[n];o.onProgress&&o.onProgress(e)}}),!1),m.addEventListener("error",(function(e){var i=fh[t];delete fh[t];for(var n=0,o=i.length;n<o;n++){var a=i[n];a.onError&&a.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),m.addEventListener("abort",(function(e){var i=fh[t];delete fh[t];for(var n=0,o=i.length;n<o;n++){var a=i[n];a.onError&&a.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)m.setRequestHeader(f,this.requestHeader[f]);m.send(null)}return r.manager.itemStart(t),m}fh[t].push({onLoad:e,onProgress:i,onError:n})},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),gh.prototype=Object.assign(Object.create(mh.prototype),{constructor:gh,load:function(t,e,i,n){var r=this,o=new vh(r.manager);o.setPath(r.path),o.load(t,(function(t){e(r.parse(JSON.parse(t)))}),i,n)},parse:function(t){for(var e=[],i=0;i<t.length;i++){var n=ch.parse(t[i]);e.push(n)}return e}}),yh.prototype=Object.assign(Object.create(mh.prototype),{constructor:yh,load:function(t,e,i,n){var r=this,o=[],a=new Ss;a.image=o;var s=new vh(this.manager);function l(l){s.load(t[l],(function(t){var i=r.parse(t,!0);o[l]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(h+=1)&&(1===i.mipmapCount&&(a.minFilter=pt),a.format=i.format,a.needsUpdate=!0,e&&e(a))}),i,n)}if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,c=0,u=t.length;c<u;++c)l(c);else s.load(t,(function(t){var i=r.parse(t,!0);if(i.isCubemap)for(var n=i.mipmaps.length/i.mipmapCount,s=0;s<n;s++){o[s]={mipmaps:[]};for(var l=0;l<i.mipmapCount;l++)o[s].mipmaps.push(i.mipmaps[s*i.mipmapCount+l]),o[s].format=i.format,o[s].width=i.width,o[s].height=i.height}else a.image.width=i.width,a.image.height=i.height,a.mipmaps=i.mipmaps;1===i.mipmapCount&&(a.minFilter=pt),a.format=i.format,a.needsUpdate=!0,e&&e(a)}),i,n);return a}}),xh.prototype=Object.assign(Object.create(mh.prototype),{constructor:xh,load:function(t,e,i,n){var r=this,o=new gr,a=new vh(this.manager);return a.setResponseType("arraybuffer"),a.setPath(this.path),a.load(t,(function(t){var i=r.parse(t);i&&(void 0!==i.image?o.image=i.image:void 0!==i.data&&(o.image.width=i.width,o.image.height=i.height,o.image.data=i.data),o.wrapS=void 0!==i.wrapS?i.wrapS:lt,o.wrapT=void 0!==i.wrapT?i.wrapT:lt,o.magFilter=void 0!==i.magFilter?i.magFilter:pt,o.minFilter=void 0!==i.minFilter?i.minFilter:pt,o.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(o.format=i.format),void 0!==i.type&&(o.type=i.type),void 0!==i.mipmaps&&(o.mipmaps=i.mipmaps,o.minFilter=mt),1===i.mipmapCount&&(o.minFilter=pt),o.needsUpdate=!0,e&&e(o,i))}),i,n),o}}),wh.prototype=Object.assign(Object.create(mh.prototype),{constructor:wh,load:function(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,o=qh.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;var a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){a.removeEventListener("load",s,!1),a.removeEventListener("error",l,!1),qh.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){a.removeEventListener("load",s,!1),a.removeEventListener("error",l,!1),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}return a.addEventListener("load",s,!1),a.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}),bh.prototype=Object.assign(Object.create(mh.prototype),{constructor:bh,load:function(t,e,i,n){var r=new Vr,o=new wh(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);var a=0;function s(i){o.load(t[i],(function(t){r.images[i]=t,6==++a&&(r.needsUpdate=!0,e&&e(r))}),void 0,n)}for(var l=0;l<t.length;++l)s(l);return r}}),_h.prototype=Object.assign(Object.create(mh.prototype),{constructor:_h,load:function(t,e,i,n){var r=new je,o=new wh(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,(function(i){r.image=i;var n=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=n?Lt:zt,r.needsUpdate=!0,void 0!==e&&e(r)}),i,n),r}}),Object.assign(Mh.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var i=this.getUtoTmapping(t);return this.getPoint(i,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,n=[],r=this.getPoint(0),o=0;for(n.push(0),i=1;i<=t;i++)o+=(e=this.getPoint(i/t)).distanceTo(r),n.push(o),r=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var i,n=this.getLengths(),r=0,o=n.length;i=e||t*n[o-1];for(var a,s=0,l=o-1;s<=l;)if((a=n[r=Math.floor(s+(l-s)/2)]-i)<0)s=r+1;else{if(!(a>0)){l=r;break}l=r-1}if(n[r=l]===i)return r/(o-1);var h=n[r];return(r+(i-h)/(n[r+1]-h))/(o-1)},getTangent:function(t){var e=1e-4,i=t-e,n=t+e;i<0&&(i=0),n>1&&(n=1);var r=this.getPoint(i);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var i,n,r,o=new Oe,a=[],s=[],l=[],h=new Oe,c=new $e;for(i=0;i<=t;i++)n=i/t,a[i]=this.getTangentAt(n),a[i].normalize();s[0]=new Oe,l[0]=new Oe;var u=Number.MAX_VALUE,q=Math.abs(a[0].x),p=Math.abs(a[0].y),d=Math.abs(a[0].z);for(q<=u&&(u=q,o.set(1,0,0)),p<=u&&(u=p,o.set(0,1,0)),d<=u&&o.set(0,0,1),h.crossVectors(a[0],o).normalize(),s[0].crossVectors(a[0],h),l[0].crossVectors(a[0],s[0]),i=1;i<=t;i++)s[i]=s[i-1].clone(),l[i]=l[i-1].clone(),h.crossVectors(a[i-1],a[i]),h.length()>Number.EPSILON&&(h.normalize(),r=Math.acos(Pe.clamp(a[i-1].dot(a[i]),-1,1)),s[i].applyMatrix4(c.makeRotationAxis(h,r))),l[i].crossVectors(a[i],s[i]);if(!0===e)for(r=Math.acos(Pe.clamp(s[0].dot(s[t]),-1,1)),r/=t,a[0].dot(h.crossVectors(s[0],s[t]))>0&&(r=-r),i=1;i<=t;i++)s[i].applyMatrix4(c.makeRotationAxis(a[i],r*i)),l[i].crossVectors(a[i],s[i]);return{tangents:a,normals:s,binormals:l}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Sh.prototype=Object.create(Mh.prototype),Sh.prototype.constructor=Sh,Sh.prototype.isEllipseCurve=!0,Sh.prototype.getPoint=function(t,e){for(var i=e||new Re,n=2*Math.PI,r=this.aEndAngle-this.aStartAngle,o=Math.abs(r)<Number.EPSILON;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=o?0:n),!0!==this.aClockwise||o||(r===n?r=-n:r-=n);var a=this.aStartAngle+t*r,s=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){var h=Math.cos(this.aRotation),c=Math.sin(this.aRotation),u=s-this.aX,q=l-this.aY;s=u*h-q*c+this.aX,l=u*c+q*h+this.aY}return i.set(s,l)},Sh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Sh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Sh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Eh.prototype=Object.create(Sh.prototype),Eh.prototype.constructor=Eh,Eh.prototype.isArcCurve=!0;var Ah=new Oe,Lh=new Th,zh=new Th,Ph=new Th;function Rh(t,e,i,n){Mh.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=i||"centripetal",this.tension=n||.5}function Ch(t,e,i,n,r){var o=.5*(n-e),a=.5*(r-i),s=t*t;return(2*i-2*n+o+a)*(t*s)+(-3*i+3*n-2*o-a)*s+o*t+i}function Ih(t,e,i,n){return function(t,e){var i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function Nh(t,e,i,n,r){return function(t,e){var i=1-t;return i*i*i*e}(t,e)+function(t,e){var i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}function Oh(t,e,i,n){Mh.call(this),this.type="CubicBezierCurve",this.v0=t||new Re,this.v1=e||new Re,this.v2=i||new Re,this.v3=n||new Re}function Bh(t,e,i,n){Mh.call(this),this.type="CubicBezierCurve3",this.v0=t||new Oe,this.v1=e||new Oe,this.v2=i||new Oe,this.v3=n||new Oe}function Dh(t,e){Mh.call(this),this.type="LineCurve",this.v1=t||new Re,this.v2=e||new Re}function Fh(t,e){Mh.call(this),this.type="LineCurve3",this.v1=t||new Oe,this.v2=e||new Oe}function Vh(t,e,i){Mh.call(this),this.type="QuadraticBezierCurve",this.v0=t||new Re,this.v1=e||new Re,this.v2=i||new Re}function Uh(t,e,i){Mh.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new Oe,this.v1=e||new Oe,this.v2=i||new Oe}function jh(t){Mh.call(this),this.type="SplineCurve",this.points=t||[]}Rh.prototype=Object.create(Mh.prototype),Rh.prototype.constructor=Rh,Rh.prototype.isCatmullRomCurve3=!0,Rh.prototype.getPoint=function(t,e){var i,n,r,o,a=e||new Oe,s=this.points,l=s.length,h=(l-(this.closed?0:1))*t,c=Math.floor(h),u=h-c;if(this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/l)+1)*l:0===u&&c===l-1&&(c=l-2,u=1),this.closed||c>0?i=s[(c-1)%l]:(Ah.subVectors(s[0],s[1]).add(s[0]),i=Ah),n=s[c%l],r=s[(c+1)%l],this.closed||c+2<l?o=s[(c+2)%l]:(Ah.subVectors(s[l-1],s[l-2]).add(s[l-1]),o=Ah),"centripetal"===this.curveType||"chordal"===this.curveType){var q="chordal"===this.curveType?.5:.25,p=Math.pow(i.distanceToSquared(n),q),d=Math.pow(n.distanceToSquared(r),q),m=Math.pow(r.distanceToSquared(o),q);d<1e-4&&(d=1),p<1e-4&&(p=d),m<1e-4&&(m=d),Lh.initNonuniformCatmullRom(i.x,n.x,r.x,o.x,p,d,m),zh.initNonuniformCatmullRom(i.y,n.y,r.y,o.y,p,d,m),Ph.initNonuniformCatmullRom(i.z,n.z,r.z,o.z,p,d,m)}else"catmullrom"===this.curveType&&(Lh.initCatmullRom(i.x,n.x,r.x,o.x,this.tension),zh.initCatmullRom(i.y,n.y,r.y,o.y,this.tension),Ph.initCatmullRom(i.z,n.z,r.z,o.z,this.tension));return a.set(Lh.calc(u),zh.calc(u),Ph.calc(u)),a},Rh.prototype.copy=function(t){Mh.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Rh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);t.points=[];for(var e=0,i=this.points.length;e<i;e++){var n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},Rh.prototype.fromJSON=function(t){Mh.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push((new Oe).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Oh.prototype=Object.create(Mh.prototype),Oh.prototype.constructor=Oh,Oh.prototype.isCubicBezierCurve=!0,Oh.prototype.getPoint=function(t,e){var i=e||new Re,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Nh(t,n.x,r.x,o.x,a.x),Nh(t,n.y,r.y,o.y,a.y)),i},Oh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Oh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Oh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Bh.prototype=Object.create(Mh.prototype),Bh.prototype.constructor=Bh,Bh.prototype.isCubicBezierCurve3=!0,Bh.prototype.getPoint=function(t,e){var i=e||new Oe,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Nh(t,n.x,r.x,o.x,a.x),Nh(t,n.y,r.y,o.y,a.y),Nh(t,n.z,r.z,o.z,a.z)),i},Bh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Bh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Bh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Dh.prototype=Object.create(Mh.prototype),Dh.prototype.constructor=Dh,Dh.prototype.isLineCurve=!0,Dh.prototype.getPoint=function(t,e){var i=e||new Re;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},Dh.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Dh.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Dh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Dh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Dh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Fh.prototype=Object.create(Mh.prototype),Fh.prototype.constructor=Fh,Fh.prototype.isLineCurve3=!0,Fh.prototype.getPoint=function(t,e){var i=e||new Oe;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},Fh.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Fh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Fh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Fh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Vh.prototype=Object.create(Mh.prototype),Vh.prototype.constructor=Vh,Vh.prototype.isQuadraticBezierCurve=!0,Vh.prototype.getPoint=function(t,e){var i=e||new Re,n=this.v0,r=this.v1,o=this.v2;return i.set(Ih(t,n.x,r.x,o.x),Ih(t,n.y,r.y,o.y)),i},Vh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Vh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Vh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Uh.prototype=Object.create(Mh.prototype),Uh.prototype.constructor=Uh,Uh.prototype.isQuadraticBezierCurve3=!0,Uh.prototype.getPoint=function(t,e){var i=e||new Oe,n=this.v0,r=this.v1,o=this.v2;return i.set(Ih(t,n.x,r.x,o.x),Ih(t,n.y,r.y,o.y),Ih(t,n.z,r.z,o.z)),i},Uh.prototype.copy=function(t){return Mh.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Uh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Uh.prototype.fromJSON=function(t){return Mh.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},jh.prototype=Object.create(Mh.prototype),jh.prototype.constructor=jh,jh.prototype.isSplineCurve=!0,jh.prototype.getPoint=function(t,e){var i=e||new Re,n=this.points,r=(n.length-1)*t,o=Math.floor(r),a=r-o,s=n[0===o?o:o-1],l=n[o],h=n[o>n.length-2?n.length-1:o+1],c=n[o>n.length-3?n.length-1:o+2];return i.set(Ch(a,s.x,l.x,h.x,c.x),Ch(a,s.y,l.y,h.y,c.y)),i},jh.prototype.copy=function(t){Mh.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this},jh.prototype.toJSON=function(){var t=Mh.prototype.toJSON.call(this);t.points=[];for(var e=0,i=this.points.length;e<i;e++){var n=this.points[e];t.points.push(n.toArray())}return t},jh.prototype.fromJSON=function(t){Mh.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push((new Re).fromArray(n))}return this};var Gh=Object.freeze({__proto__:null,ArcCurve:Eh,CatmullRomCurve3:Rh,CubicBezierCurve:Oh,CubicBezierCurve3:Bh,EllipseCurve:Sh,LineCurve:Dh,LineCurve3:Fh,QuadraticBezierCurve:Vh,QuadraticBezierCurve3:Uh,SplineCurve:jh});function Hh(){Mh.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function kh(t){Hh.call(this),this.type="Path",this.currentPoint=new Re,t&&this.setFromPoints(t)}function Wh(t){kh.call(this,t),this.uuid=Pe.generateUUID(),this.type="Shape",this.holes=[]}function Xh(t,e){vi.call(this),this.type="Light",this.color=new ln(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Yh(t,e,i){Xh.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(vi.DefaultUp),this.updateMatrix(),this.groundColor=new ln(e)}function Zh(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new Re(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this._frustum=new wr,this._frameExtents=new Re(1,1),this._viewportCount=1,this._viewports=[new Ge(0,0,1,1)]}function Jh(){Zh.call(this,new dr(50,1,.5,500))}function Qh(t,e,i,n,r,o){Xh.call(this,t,e),this.type="SpotLight",this.position.copy(vi.DefaultUp),this.updateMatrix(),this.target=new vi,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==o?o:1,this.shadow=new Jh}function Kh(){Zh.call(this,new dr(90,1,.5,500)),this._frameExtents=new Re(4,2),this._viewportCount=6,this._viewports=[new Ge(2,1,1,1),new Ge(0,1,1,1),new Ge(3,1,1,1),new Ge(1,1,1,1),new Ge(3,0,1,1),new Ge(1,0,1,1)],this._cubeDirections=[new Oe(1,0,0),new Oe(-1,0,0),new Oe(0,0,1),new Oe(0,0,-1),new Oe(0,1,0),new Oe(0,-1,0)],this._cubeUps=[new Oe(0,1,0),new Oe(0,1,0),new Oe(0,1,0),new Oe(0,1,0),new Oe(0,0,1),new Oe(0,0,-1)]}function $h(t,e,i,n){Xh.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new Kh}function tc(t,e,i,n,r,o){pr.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==i?i:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==r?r:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function ec(){Zh.call(this,new tc(-5,5,5,-5,.5,500))}function ic(t,e){Xh.call(this,t,e),this.type="DirectionalLight",this.position.copy(vi.DefaultUp),this.updateMatrix(),this.target=new vi,this.shadow=new ec}function nc(t,e){Xh.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function rc(t,e,i,n){Xh.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}function oc(t){mh.call(this,t),this.textures={}}Hh.prototype=Object.assign(Object.create(Mh.prototype),{constructor:Hh,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Dh(e,t))},getPoint:function(t){for(var e=t*this.getLength(),i=this.getCurveLengths(),n=0;n<i.length;){if(i[n]>=e){var r=i[n]-e,o=this.curves[n],a=o.getLength(),s=0===a?0:1-r/a;return o.getPointAt(s)}n++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],n=0,r=this.curves;n<r.length;n++)for(var o=r[n],a=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,s=o.getPoints(a),l=0;l<s.length;l++){var h=s[l];e&&e.equals(h)||(i.push(h),e=h)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},copy:function(t){Mh.prototype.copy.call(this,t),this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=Mh.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,i=this.curves.length;e<i;e++){var n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){Mh.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push((new Gh[n.type]).fromJSON(n))}return this}}),kh.prototype=Object.assign(Object.create(Hh.prototype),{constructor:kh,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){var i=new Dh(this.currentPoint.clone(),new Re(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,i,n){var r=new Vh(this.currentPoint.clone(),new Re(t,e),new Re(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this},bezierCurveTo:function(t,e,i,n,r,o){var a=new Oh(this.currentPoint.clone(),new Re(t,e),new Re(i,n),new Re(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this},splineThru:function(t){var e=new jh([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,i,n,r,o){var a=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(t+a,e+s,i,n,r,o),this},absarc:function(t,e,i,n,r,o){return this.absellipse(t,e,i,i,n,r,o),this},ellipse:function(t,e,i,n,r,o,a,s){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+l,e+h,i,n,r,o,a,s),this},absellipse:function(t,e,i,n,r,o,a,s){var l=new Sh(t,e,i,n,r,o,a,s);if(this.curves.length>0){var h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);var c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(t){return Hh.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=Hh.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Hh.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),Wh.prototype=Object.assign(Object.create(kh.prototype),{constructor:Wh,getPointsHoles:function(t){for(var e=[],i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){kh.prototype.copy.call(this,t),this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){var t=kh.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,i=this.holes.length;e<i;e++){var n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){kh.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push((new kh).fromJSON(n))}return this}}),Xh.prototype=Object.assign(Object.create(vi.prototype),{constructor:Xh,isLight:!0,copy:function(t){return vi.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Yh.prototype=Object.assign(Object.create(Xh.prototype),{constructor:Yh,isHemisphereLight:!0,copy:function(t){return Xh.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Zh.prototype,{_projScreenMatrix:new $e,_lightPositionWorld:new Oe,_lookTarget:new Oe,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){var e=this.camera,i=this.matrix,n=this._projScreenMatrix,r=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(t.matrixWorld),e.position.copy(o),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),n.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromMatrix(n),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Jh.prototype=Object.assign(Object.create(Zh.prototype),{constructor:Jh,isSpotLightShadow:!0,updateMatrices:function(t){var e=this.camera,i=2*Pe.RAD2DEG*t.angle,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix()),Zh.prototype.updateMatrices.call(this,t)}}),Qh.prototype=Object.assign(Object.create(Xh.prototype),{constructor:Qh,isSpotLight:!0,copy:function(t){return Xh.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Kh.prototype=Object.assign(Object.create(Zh.prototype),{constructor:Kh,isPointLightShadow:!0,updateMatrices:function(t,e){void 0===e&&(e=0);var i=this.camera,n=this.matrix,r=this._lightPositionWorld,o=this._lookTarget,a=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),i.position.copy(r),o.copy(i.position),o.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(o),i.updateMatrixWorld(),n.makeTranslation(-r.x,-r.y,-r.z),a.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromMatrix(a)}}),$h.prototype=Object.assign(Object.create(Xh.prototype),{constructor:$h,isPointLight:!0,copy:function(t){return Xh.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),tc.prototype=Object.assign(Object.create(pr.prototype),{constructor:tc,isOrthographicCamera:!0,copy:function(t,e){return pr.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-t,o=i+t,a=n+e,s=n-e;if(null!==this.view&&this.view.enabled){var l=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),c=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;o=(r+=c*(this.view.offsetX/l))+c*(this.view.width/l),s=(a-=u*(this.view.offsetY/h))-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(r,o,a,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=vi.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),ec.prototype=Object.assign(Object.create(Zh.prototype),{constructor:ec,isDirectionalLightShadow:!0,updateMatrices:function(t){Zh.prototype.updateMatrices.call(this,t)}}),ic.prototype=Object.assign(Object.create(Xh.prototype),{constructor:ic,isDirectionalLight:!0,copy:function(t){return Xh.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),nc.prototype=Object.assign(Object.create(Xh.prototype),{constructor:nc,isAmbientLight:!0}),rc.prototype=Object.assign(Object.create(Xh.prototype),{constructor:rc,isRectAreaLight:!0,copy:function(t){return Xh.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=Xh.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),oc.prototype=Object.assign(Object.create(mh.prototype),{constructor:oc,load:function(t,e,i,n){var r=this,o=new vh(r.manager);o.setPath(r.path),o.load(t,(function(t){e(r.parse(JSON.parse(t)))}),i,n)},parse:function(t){var e=this.textures;function i(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}var n=new Jl[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=(new ln).setHex(t.sheen)),void 0!==t.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.vertexColors&&(n.vertexColors=t.vertexColors),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(n.skinning=t.skinning),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(n.morphNormals=t.morphNormals),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.uniforms)for(var r in t.uniforms){var o=t.uniforms[r];switch(n.uniforms[r]={},o.type){case"t":n.uniforms[r].value=i(o.value);break;case"c":n.uniforms[r].value=(new ln).setHex(o.value);break;case"v2":n.uniforms[r].value=(new Re).fromArray(o.value);break;case"v3":n.uniforms[r].value=(new Oe).fromArray(o.value);break;case"v4":n.uniforms[r].value=(new Ge).fromArray(o.value);break;case"m3":n.uniforms[r].value=(new Fe).fromArray(o.value);case"m4":n.uniforms[r].value=(new $e).fromArray(o.value);break;default:n.uniforms[r].value=o.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(var a in t.extensions)n.extensions[a]=t.extensions[a];if(void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=i(t.map)),void 0!==t.matcap&&(n.matcap=i(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=i(t.alphaMap),n.transparent=!0),void 0!==t.bumpMap&&(n.bumpMap=i(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=i(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){var s=t.normalScale;!1===Array.isArray(s)&&(s=[s,s]),n.normalScale=(new Re).fromArray(s)}return void 0!==t.displacementMap&&(n.displacementMap=i(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=i(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=i(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=i(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=i(t.specularMap)),void 0!==t.envMap&&(n.envMap=i(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=i(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=i(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=i(t.gradientMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=i(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Re).fromArray(t.clearcoatNormalScale)),n},setTextures:function(t){return this.textures=t,this}});var ac=function(t){var e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)};function sc(){Nn.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function lc(t,e,i,n){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),fn.call(this,t,e,i),this.meshPerAttribute=n||1}function hc(t){mh.call(this,t)}sc.prototype=Object.assign(Object.create(Nn.prototype),{constructor:sc,isInstancedBufferGeometry:!0,copy:function(t){return Nn.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t=Nn.prototype.toJSON.call(this);return t.maxInstancedCount=this.maxInstancedCount,t.isInstancedBufferGeometry=!0,t}}),lc.prototype=Object.assign(Object.create(fn.prototype),{constructor:lc,isInstancedBufferAttribute:!0,copy:function(t){return fn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){var t=fn.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),hc.prototype=Object.assign(Object.create(mh.prototype),{constructor:hc,load:function(t,e,i,n){var r=this,o=new vh(r.manager);o.setPath(r.path),o.load(t,(function(t){e(r.parse(JSON.parse(t)))}),i,n)},parse:function(t){var e=t.isInstancedBufferGeometry?new sc:new Nn,i=t.data.index;if(void 0!==i){var n=new cc[i.type](i.array);e.setIndex(new fn(n,1))}var r=t.data.attributes;for(var o in r){var a=r[o],s=(n=new cc[a.type](a.array),new(a.isInstancedBufferAttribute?lc:fn)(n,a.itemSize,a.normalized));void 0!==a.name&&(s.name=a.name),e.setAttribute(o,s)}var l=t.data.morphAttributes;if(l)for(var o in l){for(var h=l[o],c=[],u=0,q=h.length;u<q;u++)a=h[u],s=new fn(n=new cc[a.type](a.array),a.itemSize,a.normalized),void 0!==a.name&&(s.name=a.name),c.push(s);e.morphAttributes[o]=c}var p=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==p){u=0;for(var d=p.length;u!==d;++u){var m=p[u];e.addGroup(m.start,m.count,m.materialIndex)}}var f=t.data.boundingSphere;if(void 0!==f){var v=new Oe;void 0!==f.center&&v.fromArray(f.center),e.boundingSphere=new Ii(v,f.radius)}return t.name&&(e.name=t.name),t.userData&&(e.userData=t.userData),e}});var cc={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function uc(t){mh.call(this,t)}uc.prototype=Object.assign(Object.create(mh.prototype),{constructor:uc,load:function(t,e,i,n){var r=this,o=""===this.path?ac(t):this.path;this.resourcePath=this.resourcePath||o;var a=new vh(r.manager);a.setPath(this.path),a.load(t,(function(i){var o=null;try{o=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}var a=o.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?r.parse(o,e):console.error("THREE.ObjectLoader: Can't load "+t)}),i,n)},parse:function(t,e){var i=this.parseShape(t.shapes),n=this.parseGeometries(t.geometries,i),r=this.parseImages(t.images,(function(){void 0!==e&&e(s)})),o=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,o),s=this.parseObject(t.object,n,a);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var i=0,n=t.length;i<n;i++){var r=(new Wh).fromJSON(t[i]);e[r.uuid]=r}return e},parseGeometries:function(t,e){var i={};if(void 0!==t)for(var n=new hc,r=0,o=t.length;r<o;r++){var a,s=t[r];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new Fl[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new Fl[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new Fl[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new Fl[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new Fl[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new Fl[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new Fl[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new Fl[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new Fl[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new Fl[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new Fl[s.type]((new Gh[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new Fl[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new Fl[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var l=[],h=0,c=s.shapes.length;h<c;h++){var u=e[s.shapes[h]];l.push(u)}a=new Fl[s.type](l,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(l=[],h=0,c=s.shapes.length;h<c;h++)u=e[s.shapes[h]],l.push(u);var q=s.options.extrudePath;void 0!==q&&(s.options.extrudePath=(new Gh[q.type]).fromJSON(q)),a=new Fl[s.type](l,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(s);break;case"Geometry":"THREE"in window&&"LegacyJSONLoader"in THREE?a=(new THREE.LegacyJSONLoader).parse(s,this.resourcePath).geometry:console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),!0===a.isBufferGeometry&&void 0!==s.userData&&(a.userData=s.userData),i[s.uuid]=a}return i},parseMaterials:function(t,e){var i={},n={};if(void 0!==t){var r=new oc;r.setTextures(e);for(var o=0,a=t.length;o<a;o++){var s=t[o];if("MultiMaterial"===s.type){for(var l=[],h=0;h<s.materials.length;h++){var c=s.materials[h];void 0===i[c.uuid]&&(i[c.uuid]=r.parse(c)),l.push(i[c.uuid])}n[s.uuid]=l}else void 0===i[s.uuid]&&(i[s.uuid]=r.parse(s)),n[s.uuid]=i[s.uuid]}}return n},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var n=t[i],r=ch.parse(n);void 0!==n.uuid&&(r.uuid=n.uuid),e.push(r)}return e},parseImages:function(t,e){var i=this,n={};function r(t){return i.manager.itemStart(t),o.load(t,(function(){i.manager.itemEnd(t)}),void 0,(function(){i.manager.itemError(t),i.manager.itemEnd(t)}))}if(void 0!==t&&t.length>0){var o=new wh(new ph(e));o.setCrossOrigin(this.crossOrigin);for(var a=0,s=t.length;a<s;a++){var l=t[a],h=l.url;if(Array.isArray(h)){n[l.uuid]=[];for(var c=0,u=h.length;c<u;c++){var q=h[c],p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(q)?q:i.resourcePath+q;n[l.uuid].push(r(p))}}else p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:i.resourcePath+l.url,n[l.uuid]=r(p)}}return n},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var n={};if(void 0!==t)for(var r=0,o=t.length;r<o;r++){var a,s=t[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),(a=Array.isArray(e[s.image])?new Vr(e[s.image]):new je(e[s.image])).needsUpdate=!0,a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),void 0!==s.mapping&&(a.mapping=i(s.mapping,pc)),void 0!==s.offset&&a.offset.fromArray(s.offset),void 0!==s.repeat&&a.repeat.fromArray(s.repeat),void 0!==s.center&&a.center.fromArray(s.center),void 0!==s.rotation&&(a.rotation=s.rotation),void 0!==s.wrap&&(a.wrapS=i(s.wrap[0],dc),a.wrapT=i(s.wrap[1],dc)),void 0!==s.format&&(a.format=s.format),void 0!==s.type&&(a.type=s.type),void 0!==s.encoding&&(a.encoding=s.encoding),void 0!==s.minFilter&&(a.minFilter=i(s.minFilter,mc)),void 0!==s.magFilter&&(a.magFilter=i(s.magFilter,mc)),void 0!==s.anisotropy&&(a.anisotropy=s.anisotropy),void 0!==s.flipY&&(a.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(a.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(a.unpackAlignment=s.unpackAlignment),n[s.uuid]=a}return n},parseObject:function(t,e,i){var n;function r(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function o(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],n=0,r=t.length;n<r;n++){var o=t[n];void 0===i[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),e.push(i[o])}return e}return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}}switch(t.type){case"Scene":n=new gi,void 0!==t.background&&Number.isInteger(t.background)&&(n.background=new ln(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?n.fog=new Ca(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(n.fog=new Ra(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":n=new dr(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(n.focus=t.focus),void 0!==t.zoom&&(n.zoom=t.zoom),void 0!==t.filmGauge&&(n.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(n.filmOffset=t.filmOffset),void 0!==t.view&&(n.view=Object.assign({},t.view));break;case"OrthographicCamera":n=new tc(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(n.zoom=t.zoom),void 0!==t.view&&(n.view=Object.assign({},t.view));break;case"AmbientLight":n=new nc(t.color,t.intensity);break;case"DirectionalLight":n=new ic(t.color,t.intensity);break;case"PointLight":n=new $h(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":n=new rc(t.color,t.intensity,t.width,t.height);break;case"SpotLight":n=new Qh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":n=new Yh(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var a=r(t.geometry),s=o(t.material);n=a.bones&&a.bones.length>0?new ts(a,s):new $n(a,s);break;case"InstancedMesh":a=r(t.geometry),s=o(t.material);var l=t.count,h=t.instanceMatrix;(n=new os(a,s,l)).instanceMatrix=new fn(new Float32Array(h.array),16);break;case"LOD":n=new $a;break;case"Line":n=new qs(r(t.geometry),o(t.material),t.mode);break;case"LineLoop":n=new fs(r(t.geometry),o(t.material));break;case"LineSegments":n=new ms(r(t.geometry),o(t.material));break;case"PointCloud":case"Points":n=new bs(r(t.geometry),o(t.material));break;case"Sprite":n=new Za(o(t.material));break;case"Group":n=new _a;break;default:n=new vi}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(n.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(n.matrixAutoUpdate=t.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.quaternion&&n.quaternion.fromArray(t.quaternion),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.castShadow&&(n.castShadow=t.castShadow),void 0!==t.receiveShadow&&(n.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(n.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(n.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&n.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(n.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.frustumCulled&&(n.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(n.renderOrder=t.renderOrder),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.layers&&(n.layers.mask=t.layers),void 0!==t.drawMode&&n.setDrawMode(t.drawMode),void 0!==t.children)for(var c=t.children,u=0;u<c.length;u++)n.add(this.parseObject(c[u],e,i));if("LOD"===t.type)for(var q=t.levels,p=0;p<q.length;p++){var d=q[p],m=n.getObjectByProperty("uuid",d.object);void 0!==m&&n.addLevel(m,d.distance)}return n}});var qc,pc={UVMapping:300,CubeReflectionMapping:tt,CubeRefractionMapping:et,EquirectangularReflectionMapping:it,EquirectangularRefractionMapping:nt,SphericalReflectionMapping:rt,CubeUVReflectionMapping:ot,CubeUVRefractionMapping:at},dc={RepeatWrapping:st,ClampToEdgeWrapping:lt,MirroredRepeatWrapping:ht},mc={NearestFilter:ct,NearestMipmapNearestFilter:ut,NearestMipmapLinearFilter:qt,LinearFilter:pt,LinearMipmapNearestFilter:dt,LinearMipmapLinearFilter:mt};function fc(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),mh.call(this,t),this.options=void 0}function vc(){this.type="ShapePath",this.color=new ln,this.subPaths=[],this.currentPath=null}function gc(t){this.type="Font",this.data=t}function yc(t,e,i,n,r){var o=r.glyphs[t]||r.glyphs["?"];if(o){var a,s,l,h,c,u,q,p,d=new vc;if(o.o)for(var m=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),f=0,v=m.length;f<v;)switch(m[f++]){case"m":a=m[f++]*e+i,s=m[f++]*e+n,d.moveTo(a,s);break;case"l":a=m[f++]*e+i,s=m[f++]*e+n,d.lineTo(a,s);break;case"q":l=m[f++]*e+i,h=m[f++]*e+n,c=m[f++]*e+i,u=m[f++]*e+n,d.quadraticCurveTo(c,u,l,h);break;case"b":l=m[f++]*e+i,h=m[f++]*e+n,c=m[f++]*e+i,u=m[f++]*e+n,q=m[f++]*e+i,p=m[f++]*e+n,d.bezierCurveTo(c,u,q,p,l,h)}return{offsetX:o.ha*e,path:d}}console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".")}function xc(t){mh.call(this,t)}fc.prototype=Object.assign(Object.create(mh.prototype),{constructor:fc,setOptions:function(t){return this.options=t,this},load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,o=qh.get(t);if(void 0!==o)return r.manager.itemStart(t),setTimeout((function(){e&&e(o),r.manager.itemEnd(t)}),0),o;fetch(t).then((function(t){return t.blob()})).then((function(t){return void 0===r.options?createImageBitmap(t):createImageBitmap(t,r.options)})).then((function(i){qh.add(t,i),e&&e(i),r.manager.itemEnd(t)})).catch((function(e){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}),Object.assign(vc.prototype,{moveTo:function(t,e){return this.currentPath=new kh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this},bezierCurveTo:function(t,e,i,n,r,o){return this.currentPath.bezierCurveTo(t,e,i,n,r,o),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function i(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i],o=new Wh;o.curves=r.curves,e.push(o)}return e}function n(t,e){for(var i=e.length,n=!1,r=i-1,o=0;o<i;r=o++){var a=e[r],s=e[o],l=s.x-a.x,h=s.y-a.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(a=e[o],l=-l,s=e[r],h=-h),t.y<a.y||t.y>s.y)continue;if(t.y===a.y){if(t.x===a.x)return!0}else{var c=h*(t.x-a.x)-l*(t.y-a.y);if(0===c)return!0;if(c<0)continue;n=!n}}else{if(t.y!==a.y)continue;if(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x)return!0}}return n}var r=dl.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return i(o);var a,s,l,h=[];if(1===o.length)return s=o[0],(l=new Wh).curves=s.curves,h.push(l),h;var c=!r(o[0].getPoints());c=t?!c:c;var u,q,p=[],d=[],m=[],f=0;d[f]=void 0,m[f]=[];for(var v=0,g=o.length;v<g;v++)a=r(u=(s=o[v]).getPoints()),(a=t?!a:a)?(!c&&d[f]&&f++,d[f]={s:new Wh,p:u},d[f].s.curves=s.curves,c&&f++,m[f]=[]):m[f].push({h:s,p:u[0]});if(!d[0])return i(o);if(d.length>1){for(var y=!1,x=[],w=0,b=d.length;w<b;w++)p[w]=[];for(w=0,b=d.length;w<b;w++)for(var _=m[w],M=0;M<_.length;M++){for(var S=_[M],E=!0,T=0;T<d.length;T++)n(S.p,d[T].p)&&(w!==T&&x.push({froms:w,tos:T,hole:M}),E?(E=!1,p[T].push(S)):y=!0);E&&p[w].push(S)}x.length>0&&(y||(m=p))}v=0;for(var A=d.length;v<A;v++){l=d[v].s,h.push(l);for(var L=0,z=(q=m[v]).length;L<z;L++)l.holes.push(q[L].h)}return h}}),Object.assign(gc.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);for(var i=[],n=function(t,e,i){for(var n=Array.from?Array.from(t):String(t).split(""),r=e/i.resolution,o=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*r,a=[],s=0,l=0,h=0;h<n.length;h++){var c=n[h];if("\n"===c)s=0,l-=o;else{var u=yc(c,r,s,l,i);s+=u.offsetX,a.push(u.path)}}return a}(t,e,this.data),r=0,o=n.length;r<o;r++)Array.prototype.push.apply(i,n[r].toShapes());return i}}),xc.prototype=Object.assign(Object.create(mh.prototype),{constructor:xc,load:function(t,e,i,n){var r=this,o=new vh(this.manager);o.setPath(this.path),o.load(t,(function(t){var i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}var n=r.parse(i);e&&e(n)}),i,n)},parse:function(t){return new gc(t)}});var wc=function(){return void 0===qc&&(qc=new(window.AudioContext||window.webkitAudioContext)),qc};function bc(t){mh.call(this,t)}function _c(){this.coefficients=[];for(var t=0;t<9;t++)this.coefficients.push(new Oe)}function Mc(t,e){Xh.call(this,void 0,e),this.sh=void 0!==t?t:new _c}function Sc(t,e,i){Mc.call(this,void 0,i);var n=(new ln).set(t),r=(new ln).set(e),o=new Oe(n.r,n.g,n.b),a=new Oe(r.r,r.g,r.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(s),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(l)}function Ec(t,e){Mc.call(this,void 0,e);var i=(new ln).set(t);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}bc.prototype=Object.assign(Object.create(mh.prototype),{constructor:bc,load:function(t,e,i,n){var r=new vh(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.load(t,(function(t){var i=t.slice(0);wc().decodeAudioData(i,(function(t){e(t)}))}),i,n)}}),Object.assign(_c.prototype,{isSphericalHarmonics3:!0,set:function(t){for(var e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this},zero:function(){for(var t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this},getAt:function(t,e){var i=t.x,n=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScale(o[1],.488603*n),e.addScale(o[2],.488603*r),e.addScale(o[3],.488603*i),e.addScale(o[4],i*n*1.092548),e.addScale(o[5],n*r*1.092548),e.addScale(o[6],.315392*(3*r*r-1)),e.addScale(o[7],i*r*1.092548),e.addScale(o[8],.546274*(i*i-n*n)),e},getIrradianceAt:function(t,e){var i=t.x,n=t.y,r=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScale(o[1],1.023328*n),e.addScale(o[2],1.023328*r),e.addScale(o[3],1.023328*i),e.addScale(o[4],.858086*i*n),e.addScale(o[5],.858086*n*r),e.addScale(o[6],.743125*r*r-.247708),e.addScale(o[7],.858086*i*r),e.addScale(o[8],.429043*(i*i-n*n)),e},add:function(t){for(var e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this},scale:function(t){for(var e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this},lerp:function(t,e){for(var i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this},equals:function(t){for(var e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0},copy:function(t){return this.set(t.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(t,e){void 0===e&&(e=0);for(var i=this.coefficients,n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);for(var i=this.coefficients,n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}}),Object.assign(_c,{getBasisAt:function(t,e){var i=t.x,n=t.y,r=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*r,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*i*r,e[8]=.546274*(i*i-n*n)}}),Mc.prototype=Object.assign(Object.create(Xh.prototype),{constructor:Mc,isLightProbe:!0,copy:function(t){return Xh.prototype.copy.call(this,t),this.sh.copy(t.sh),this.intensity=t.intensity,this},toJSON:function(t){return Xh.prototype.toJSON.call(this,t)}}),Sc.prototype=Object.assign(Object.create(Mc.prototype),{constructor:Sc,isHemisphereLightProbe:!0,copy:function(t){return Mc.prototype.copy.call(this,t),this},toJSON:function(t){return Mc.prototype.toJSON.call(this,t)}}),Ec.prototype=Object.assign(Object.create(Mc.prototype),{constructor:Ec,isAmbientLightProbe:!0,copy:function(t){return Mc.prototype.copy.call(this,t),this},toJSON:function(t){return Mc.prototype.toJSON.call(this,t)}});var Tc=new $e,Ac=new $e;function Lc(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new dr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new dr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){var e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;var i,n,r=t.projectionMatrix.clone(),o=e.eyeSep/2,a=o*e.near/e.focus,s=e.near*Math.tan(Pe.DEG2RAD*e.fov*.5)/e.zoom;Ac.elements[12]=-o,Tc.elements[12]=o,i=-s*e.aspect+a,n=s*e.aspect+a,r.elements[0]=2*e.near/(n-i),r.elements[8]=(n+i)/(n-i),this.cameraL.projectionMatrix.copy(r),i=-s*e.aspect-a,n=s*e.aspect-a,r.elements[0]=2*e.near/(n-i),r.elements[8]=(n+i)/(n-i),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Ac),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Tc)}}),Object.assign(Lc.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});var zc=new Oe,Pc=new Ce,Rc=new Oe,Cc=new Oe;function Ic(){vi.call(this),this.type="AudioListener",this.context=wc(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Lc}function Nc(t){vi.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}Ic.prototype=Object.assign(Object.create(vi.prototype),{constructor:Ic,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){vi.prototype.updateMatrixWorld.call(this,t);var e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(zc,Pc,Rc),Cc.set(0,0,-1).applyQuaternion(Pc),e.positionX){var n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(zc.x,n),e.positionY.linearRampToValueAtTime(zc.y,n),e.positionZ.linearRampToValueAtTime(zc.z,n),e.forwardX.linearRampToValueAtTime(Cc.x,n),e.forwardY.linearRampToValueAtTime(Cc.y,n),e.forwardZ.linearRampToValueAtTime(Cc.z,n),e.upX.linearRampToValueAtTime(i.x,n),e.upY.linearRampToValueAtTime(i.y,n),e.upZ.linearRampToValueAtTime(i.z,n)}else e.setPosition(zc.x,zc.y,zc.z),e.setOrientation(Cc.x,Cc.y,Cc.z,i.x,i.y,i.z)}}),Nc.prototype=Object.assign(Object.create(vi.prototype),{constructor:Nc,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setMediaStreamSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(t){if(void 0===t&&(t=0),!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+t;var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._pausedAt=(this.context.currentTime-this._startedAt)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(t){return this.loopStart=t,this},setLoopEnd:function(t){return this.loopEnd=t,this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});var Oc=new Oe,Bc=new Ce,Dc=new Oe,Fc=new Oe;function Vc(t){Nc.call(this,t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function Uc(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function jc(t,e,i){this.binding=t,this.valueSize=i;var n,r=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":r=Array,n=this._select;break;default:n=this._lerp}this.buffer=new r(4*i),this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Vc.prototype=Object.assign(Object.create(Nc.prototype),{constructor:Vc,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=i,this},updateMatrixWorld:function(t){if(vi.prototype.updateMatrixWorld.call(this,t),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(Oc,Bc,Dc),Fc.set(0,0,1).applyQuaternion(Bc);var e=this.panner;if(e.positionX){var i=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Oc.x,i),e.positionY.linearRampToValueAtTime(Oc.y,i),e.positionZ.linearRampToValueAtTime(Oc.z,i),e.orientationX.linearRampToValueAtTime(Fc.x,i),e.orientationY.linearRampToValueAtTime(Fc.y,i),e.orientationZ.linearRampToValueAtTime(Fc.z,i)}else e.setPosition(Oc.x,Oc.y,Oc.z),e.setOrientation(Fc.x,Fc.y,Fc.z)}}}),Object.assign(Uc.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Object.assign(jc.prototype,{accumulate:function(t,e){var i=this.buffer,n=this.valueSize,r=t*n+n,o=this.cumulativeWeight;if(0===o){for(var a=0;a!==n;++a)i[r+a]=i[a];o=e}else{var s=e/(o+=e);this._mixBufferRegion(i,r,0,s,n)}this.cumulativeWeight=o},apply:function(t){var e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,r<1){var a=3*e;this._mixBufferRegion(i,n,a,1-r,e)}for(var s=e,l=e+e;s!==l;++s)if(i[s]!==i[s+e]){o.setValue(i,n);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,n=3*i;t.getValue(e,n);for(var r=i,o=n;r!==o;++r)e[r]=e[n+r%i];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,i,n,r){if(n>=.5)for(var o=0;o!==r;++o)t[e+o]=t[i+o]},_slerp:function(t,e,i,n){Ce.slerpFlat(t,e,t,e,t,i,n)},_lerp:function(t,e,i,n,r){for(var o=1-n,a=0;a!==r;++a){var s=e+a;t[s]=t[s]*o+t[i+a]*n}}});var Gc="\\[\\]\\.:\\/",Hc=new RegExp("["+Gc+"]","g"),kc="[^"+Gc+"]",Wc="[^"+Gc.replace("\\.","")+"]",Xc=/((?:WC+[\/:])*)/.source.replace("WC",kc),Yc=/(WCOD+)?/.source.replace("WCOD",Wc),Zc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kc),Jc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kc),Qc=new RegExp("^"+Xc+Yc+Zc+Jc+"$"),Kc=["material","materials","bones"];function $c(t,e,i){var n=i||tu.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}function tu(t,e,i){this.path=e,this.parsedPath=i||tu.parseTrackName(e),this.node=tu.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function eu(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var n=e.tracks,r=n.length,o=new Array(r),a={endingStart:le,endingEnd:le},s=0;s!==r;++s){var l=n[s].createInterpolant(null);o[s]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function iu(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function nu(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function ru(t,e,i){Ia.call(this,t,e),this.meshPerAttribute=i||1}function ou(t,e,i,n){this.ray=new ji(t,e),this.near=i||0,this.far=n||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function au(t,e){return t.distance-e.distance}function su(t,e,i,n){if(!1!==t.visible&&(t.raycast(e,i),!0===n))for(var r=t.children,o=0,a=r.length;o<a;o++)su(r[o],e,i,!0)}Object.assign($c.prototype,{getValue:function(t,e){this.bind();var i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}),Object.assign(tu,{Composite:$c,create:function(t,e,i){return t&&t.isAnimationObjectGroup?new tu.Composite(t,e,i):new tu(t,e,i)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Hc,"")},parseTrackName:function(t){var e=Qc.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);var i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){var r=i.nodeName.substring(n+1);-1!==Kc.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i},findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){var n=function(t){for(var i=0;i<t.length;i++){var r=t[i];if(r.name===e||r.uuid===e)return r;var o=n(r.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(tu.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)t[e++]=i[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,n=e.propertyName,r=e.propertyIndex;if(t||(t=tu.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var o=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var a=0;a<t.length;a++)if(t[a].name===o){o=a;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==o){if(void 0===t[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[o]}}var s=t[n];if(void 0!==s){var l=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);var h=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(a=0;a<this.node.geometry.morphAttributes.position.length;a++)if(t.geometry.morphAttributes.position[a].name===r){r=a;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(a=0;a<this.node.geometry.morphTargets.length;a++)if(t.geometry.morphTargets[a].name===r){r=a;break}}}h=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(h=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][l]}else{var c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(tu.prototype,{_getValue_unbound:tu.prototype.getValue,_setValue_unbound:tu.prototype.setValue}),Object.assign(function(){this.uuid=Pe.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._paths,o=this._parsedPaths,a=this._bindings,s=a.length,l=void 0,h=0,c=arguments.length;h!==c;++h){var u=arguments[h],q=u.uuid,p=n[q];if(void 0===p){p=e++,n[q]=p,t.push(u);for(var d=0,m=s;d!==m;++d)a[d].push(new tu(u,r[d],o[d]))}else if(p<i){l=t[p];var f=--i,v=t[f];for(n[v.uuid]=p,t[p]=v,n[q]=f,t[f]=u,d=0,m=s;d!==m;++d){var g=a[d],y=g[f],x=g[p];g[p]=y,void 0===x&&(x=new tu(u,r[d],o[d])),g[f]=x}}else t[p]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,i=this._indicesByUUID,n=this._bindings,r=n.length,o=0,a=arguments.length;o!==a;++o){var s=arguments[o],l=s.uuid,h=i[l];if(void 0!==h&&h>=e){var c=e++,u=t[c];i[u.uuid]=h,t[h]=u,i[l]=c,t[c]=s;for(var q=0,p=r;q!==p;++q){var d=n[q],m=d[c],f=d[h];d[h]=m,d[c]=f}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,o=r.length,a=0,s=arguments.length;a!==s;++a){var l=arguments[a].uuid,h=n[l];if(void 0!==h)if(delete n[l],h<i){var c=--i,u=t[c],q=t[v=--e];n[u.uuid]=h,t[h]=u,n[q.uuid]=c,t[c]=q,t.pop();for(var p=0,d=o;p!==d;++p){var m=(g=r[p])[c],f=g[v];g[h]=m,g[c]=f,g.pop()}}else{var v;for(n[(q=t[v=--e]).uuid]=h,t[h]=q,t.pop(),p=0,d=o;p!==d;++p){var g;(g=r[p])[h]=g[v],g.pop()}}}this.nCachedObjects_=i},subscribe_:function(t,e){var i=this._bindingsIndicesByPath,n=i[t],r=this._bindings;if(void 0!==n)return r[n];var o=this._paths,a=this._parsedPaths,s=this._objects,l=s.length,h=this.nCachedObjects_,c=new Array(l);n=r.length,i[t]=n,o.push(t),a.push(e),r.push(c);for(var u=h,q=s.length;u!==q;++u){var p=s[u];c[u]=new tu(p,t,e)}return c},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var n=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];e[t[a]]=i,o[i]=s,o.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}}),Object.assign(eu.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var n=this._clip.duration,r=t._clip.duration,o=r/n,a=n/r;t.warp(1,o,e),this.warp(a,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var n=this._mixer,r=n.time,o=this._timeScaleInterpolant,a=this.timeScale;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);var s=o.parameterPositions,l=o.sampleValues;return s[0]=r,s[1]=r+i,l[0]=t/a,l[1]=e/a,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,i,n){if(this.enabled){var r=this._startTime;if(null!==r){var o=(t-r)*i;if(o<0||0===i)return;this._startTime=null,e=i*o}e*=this._updateTimeScale(t);var a=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var l=this._interpolants,h=this._propertyBindings,c=0,u=l.length;c!==u;++c)l[c].evaluate(a),h[c].accumulate(n,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;null!==i&&(e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,i=this._clip.duration,n=this.loop,r=this._loopCount,o=2202===n;if(0===t)return-1===r?e:o&&1==(1&r)?i-e:e;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0)){this.time=e;break t}e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),e>=i||e<0){var a=Math.floor(e/i);e-=i*a,r+=Math.abs(a);var s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){var l=t<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=e;if(o&&1==(1&r))return i-e}return e},_setEndings:function(t,e,i){var n=this._interpolantSettings;i?(n.endingStart=he,n.endingEnd=he):(n.endingStart=t?this.zeroSlopeAtStart?he:le:ce,n.endingEnd=e?this.zeroSlopeAtEnd?he:le:ce)},_scheduleFading:function(t,e,i){var n=this._mixer,r=n.time,o=this._weightInterpolant;null===o&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);var a=o.parameterPositions,s=o.sampleValues;return a[0]=r,s[0]=e,a[1]=r+t,s[1]=i,this}}),iu.prototype=Object.assign(Object.create(Ae.prototype),{constructor:iu,_bindAction:function(t,e){var i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,o=t._propertyBindings,a=t._interpolants,s=i.uuid,l=this._bindingsByRootAndName,h=l[s];void 0===h&&(h={},l[s]=h);for(var c=0;c!==r;++c){var u=n[c],q=u.name,p=h[q];if(void 0!==p)o[c]=p;else{if(void 0!==(p=o[c])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,q));continue}var d=e&&e._propertyBindings[c].binding.parsedPath;++(p=new jc(tu.create(i,q,d),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(p,s,q),o[c]=p}a[c].resultBuffer=p.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}for(var r=t._propertyBindings,o=0,a=r.length;o!==a;++o){var s=r[o];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var n=this._actions,r=this._actionsByClip,o=r[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=o;else{var a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=n.length,n.push(t),o.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,o=this._actionsByClip,a=o[r],s=a.knownActions,l=s[s.length-1],h=t._byClipCacheIndex;l._byClipCacheIndex=h,s[h]=l,s.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete o[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){var e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_addInactiveBinding:function(t,e,i){var n=this._bindingsByRootAndName,r=n[e],o=this._bindings;void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=o.length,o.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,o=this._bindingsByRootAndName,a=o[n],s=e[e.length-1],l=t._cacheIndex;s._cacheIndex=l,e[l]=s,e.pop(),delete a[r],0===Object.keys(a).length&&delete o[n]},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&((i=new th(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?ch.findByName(i,t):t,o=null!==r?r.uuid:t,a=this._actionsByClip[o],s=null;if(void 0!==a){var l=a.actionByRoot[n];if(void 0!==l)return l;s=a.knownActions[0],null===r&&(r=s._clip)}if(null===r)return null;var h=new eu(this,r,e);return this._bindAction(h,s),this._addInactiveAction(h,o,n),h},existingAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?ch.findByName(i,t):t,o=r?r.uuid:t,a=this._actionsByClip[o];return void 0!==a&&a.actionByRoot[n]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(r=0;r!==n;++r)i[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),o=this._accuIndex^=1,a=0;a!==i;++a)e[a]._update(n,t,r,o);var s=this._bindings,l=this._nActiveBindings;for(a=0;a!==l;++a)s[a].apply(o);return this},setTime:function(t){this.time=0;for(var e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){for(var o=r.knownActions,a=0,s=o.length;a!==s;++a){var l=o[a];this._deactivateAction(l);var h=l._cacheIndex,c=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,c._cacheIndex=h,e[h]=c,e.pop(),this._removeInactiveBindingsForAction(l)}delete n[i]}},uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var n in i){var r=i[n].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var o=this._bindingsByRootAndName[e];if(void 0!==o)for(var a in o){var s=o[a];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),nu.prototype.clone=function(){return new nu(void 0===this.value.clone?this.value:this.value.clone())},ru.prototype=Object.assign(Object.create(Ia.prototype),{constructor:ru,isInstancedInterleavedBuffer:!0,copy:function(t){return Ia.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(ou.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,i){var n=i||[];return su(t,this,n,e),n.sort(au),n},intersectObjects:function(t,e,i){var n=i||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var r=0,o=t.length;r<o;r++)su(t[r],this,n,e);return n.sort(au),n}}),Object.assign(function(t,e,i){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}.prototype,{set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){var t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Pe.clamp(e/this.radius,-1,1))),this}}),Object.assign(function(t,e,i){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}.prototype,{set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=e,this}});var lu=new Re;function hu(t,e){this.min=void 0!==t?t:new Re(1/0,1/0),this.max=void 0!==e?e:new Re(-1/0,-1/0)}Object.assign(hu.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var i=lu.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Re),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Re),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Re),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Re),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return lu.copy(t).clamp(this.min,this.max).sub(t).length()},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var cu=new Oe,uu=new Oe;function qu(t,e){this.start=void 0!==t?t:new Oe,this.end=void 0!==e?e:new Oe}function pu(t){vi.call(this),this.material=t,this.render=function(){}}Object.assign(qu.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new Oe),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new Oe),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new Oe),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(t,e){cu.subVectors(t,this.start),uu.subVectors(this.end,this.start);var i=uu.dot(uu),n=uu.dot(cu)/i;return e&&(n=Pe.clamp(n,0,1)),n},closestPointToPoint:function(t,e,i){var n=this.closestPointToPointParameter(t,e);return void 0===i&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new Oe),this.delta(i).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),pu.prototype=Object.create(vi.prototype),pu.prototype.constructor=pu,pu.prototype.isImmediateRenderObject=!0;var du=new Oe,mu=new Oe,fu=new Fe,vu=["a","b","c"];function gu(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16711680,o=void 0!==n?n:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=3*s.faces.length:s&&s.isBufferGeometry&&(a=s.attributes.normal.count);var l=new Nn,h=new Mn(2*a*3,3);l.setAttribute("position",h),ms.call(this,l,new as({color:r,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}gu.prototype=Object.create(ms.prototype),gu.prototype.constructor=gu,gu.prototype.update=function(){this.object.updateMatrixWorld(!0),fu.getNormalMatrix(this.object.matrixWorld);var t=this.object.matrixWorld,e=this.geometry.attributes.position,i=this.object.geometry;if(i&&i.isGeometry)for(var n=i.vertices,r=i.faces,o=0,a=0,s=r.length;a<s;a++)for(var l=r[a],h=0,c=l.vertexNormals.length;h<c;h++){var u=n[l[vu[h]]],q=l.vertexNormals[h];du.copy(u).applyMatrix4(t),mu.copy(q).applyMatrix3(fu).normalize().multiplyScalar(this.size).add(du),e.setXYZ(o,du.x,du.y,du.z),o+=1,e.setXYZ(o,mu.x,mu.y,mu.z),o+=1}else if(i&&i.isBufferGeometry){var p=i.attributes.position,d=i.attributes.normal;for(o=0,h=0,c=p.count;h<c;h++)du.set(p.getX(h),p.getY(h),p.getZ(h)).applyMatrix4(t),mu.set(d.getX(h),d.getY(h),d.getZ(h)),mu.applyMatrix3(fu).normalize().multiplyScalar(this.size).add(du),e.setXYZ(o,du.x,du.y,du.z),o+=1,e.setXYZ(o,mu.x,mu.y,mu.z),o+=1}e.needsUpdate=!0};var yu=new Oe;function xu(t,e){vi.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var i=new Nn,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,o=1;r<32;r++,o++){var a=r/32*Math.PI*2,s=o/32*Math.PI*2;n.push(Math.cos(a),Math.sin(a),1,Math.cos(s),Math.sin(s),1)}i.setAttribute("position",new Mn(n,3));var l=new as({fog:!1});this.cone=new ms(i,l),this.add(this.cone),this.update()}xu.prototype=Object.create(vi.prototype),xu.prototype.constructor=xu,xu.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},xu.prototype.update=function(){this.light.updateMatrixWorld();var t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),yu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(yu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var wu=new Oe,bu=new $e,_u=new $e;function Mu(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,Mu(t.children[i]));return e}function Su(t){for(var e=Mu(t),i=new Nn,n=[],r=[],o=new ln(0,0,1),a=new ln(0,1,0),s=0;s<e.length;s++){var l=e[s];l.parent&&l.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new Mn(n,3)),i.setAttribute("color",new Mn(r,3));var h=new as({vertexColors:d,depthTest:!1,depthWrite:!1,transparent:!0});ms.call(this,i,h),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function Eu(t,e,i){this.light=t,this.light.updateMatrixWorld(),this.color=i;var n=new Ml(e,4,2),r=new mn({wireframe:!0,fog:!1});$n.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function Tu(t,e){this.type="RectAreaLightHelper",this.light=t,this.color=e;var i=new Nn;i.setAttribute("position",new Mn([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere();var n=new as({fog:!1});qs.call(this,i,n);var r=new Nn;r.setAttribute("position",new Mn([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new $n(r,new mn({side:u,fog:!1}))),this.update()}Su.prototype=Object.create(ms.prototype),Su.prototype.constructor=Su,Su.prototype.updateMatrixWorld=function(t){var e=this.bones,i=this.geometry,n=i.getAttribute("position");_u.getInverse(this.root.matrixWorld);for(var r=0,o=0;r<e.length;r++){var a=e[r];a.parent&&a.parent.isBone&&(bu.multiplyMatrices(_u,a.matrixWorld),wu.setFromMatrixPosition(bu),n.setXYZ(o,wu.x,wu.y,wu.z),bu.multiplyMatrices(_u,a.parent.matrixWorld),wu.setFromMatrixPosition(bu),n.setXYZ(o+1,wu.x,wu.y,wu.z),o+=2)}i.getAttribute("position").needsUpdate=!0,vi.prototype.updateMatrixWorld.call(this,t)},Eu.prototype=Object.create($n.prototype),Eu.prototype.constructor=Eu,Eu.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Eu.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},Tu.prototype=Object.create(qs.prototype),Tu.prototype.constructor=Tu,Tu.prototype.update=function(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var t=this.material.color,e=Math.max(t.r,t.g,t.b);e>1&&t.multiplyScalar(1/e),this.children[0].material.color.copy(this.material.color)}},Tu.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()};var Au=new Oe,Lu=new ln,zu=new ln;function Pu(t,e,i){vi.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;var n=new Os(e);n.rotateY(.5*Math.PI),this.material=new mn({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=d);var r=n.getAttribute("position"),o=new Float32Array(3*r.count);n.setAttribute("color",new fn(o,3)),this.add(new $n(n,this.material)),this.update()}function Ru(t,e){this.lightProbe=t,this.size=e;var i=new qr({defines:{GAMMA_OUTPUT:""},uniforms:{sh:{value:this.lightProbe.sh.coefficients},intensity:{value:this.lightProbe.intensity}},vertexShader:["varying vec3 vNormal;","void main() {","\tvNormal = normalize( normalMatrix * normal );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define RECIPROCAL_PI 0.318309886","vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {","\t// matrix is assumed to be orthogonal","\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );","}","vec3 linearToOutput( in vec3 a ) {","\t#ifdef GAMMA_OUTPUT","\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );","\t#else","\t\treturn a;","\t#endif","}","// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf","vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {","\t// normal is assumed to have unit length","\tfloat x = normal.x, y = normal.y, z = normal.z;","\t// band 0","\tvec3 result = shCoefficients[ 0 ] * 0.886227;","\t// band 1","\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;","\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;","\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;","\t// band 2","\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;","\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;","\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );","\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;","\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );","\treturn result;","}","uniform vec3 sh[ 9 ]; // sh coefficients","uniform float intensity; // light probe intensity","varying vec3 vNormal;","void main() {","\tvec3 normal = normalize( vNormal );","\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );","\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );","\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;","\toutgoingLight = linearToOutput( outgoingLight );","\tgl_FragColor = vec4( outgoingLight, 1.0 );","}"].join("\n")}),n=new Ml(1,32,16);$n.call(this,n,i),this.onBeforeRender()}function Cu(t,e,i,n){t=t||10,e=e||10,i=new ln(void 0!==i?i:4473924),n=new ln(void 0!==n?n:8947848);for(var r=e/2,o=t/e,a=t/2,s=[],l=[],h=0,c=0,u=-a;h<=e;h++,u+=o){s.push(-a,0,u,a,0,u),s.push(u,0,-a,u,0,a);var q=h===r?i:n;q.toArray(l,c),c+=3,q.toArray(l,c),c+=3,q.toArray(l,c),c+=3,q.toArray(l,c),c+=3}var p=new Nn;p.setAttribute("position",new Mn(s,3)),p.setAttribute("color",new Mn(l,3));var m=new as({vertexColors:d});ms.call(this,p,m)}function Iu(t,e,i,n,r,o){t=t||10,e=e||16,i=i||8,n=n||64,r=new ln(void 0!==r?r:4473924),o=new ln(void 0!==o?o:8947848);var a,s,l,h,c,u,q,p=[],m=[];for(h=0;h<=e;h++)l=h/e*(2*Math.PI),a=Math.sin(l)*t,s=Math.cos(l)*t,p.push(0,0,0),p.push(a,0,s),q=1&h?r:o,m.push(q.r,q.g,q.b),m.push(q.r,q.g,q.b);for(h=0;h<=i;h++)for(q=1&h?r:o,u=t-t/i*h,c=0;c<n;c++)l=c/n*(2*Math.PI),a=Math.sin(l)*u,s=Math.cos(l)*u,p.push(a,0,s),m.push(q.r,q.g,q.b),l=(c+1)/n*(2*Math.PI),a=Math.sin(l)*u,s=Math.cos(l)*u,p.push(a,0,s),m.push(q.r,q.g,q.b);var f=new Nn;f.setAttribute("position",new Mn(p,3)),f.setAttribute("color",new Mn(m,3));var v=new as({vertexColors:d});ms.call(this,f,v)}function Nu(t,e,i,n){this.audio=t,this.range=e||1,this.divisionsInnerAngle=i||16,this.divisionsOuterAngle=n||2;var r=new Nn,o=this.divisionsInnerAngle+2*this.divisionsOuterAngle,a=new Float32Array(3*(3*o+3));r.setAttribute("position",new fn(a,3));var s=new as({color:65280}),l=new as({color:16776960});qs.call(this,r,[l,s]),this.update()}Pu.prototype=Object.create(vi.prototype),Pu.prototype.constructor=Pu,Pu.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Pu.prototype.update=function(){var t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var e=t.geometry.getAttribute("color");Lu.copy(this.light.color),zu.copy(this.light.groundColor);for(var i=0,n=e.count;i<n;i++){var r=i<n/2?Lu:zu;e.setXYZ(i,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(Au.setFromMatrixPosition(this.light.matrixWorld).negate())},Ru.prototype=Object.create($n.prototype),Ru.prototype.constructor=Ru,Ru.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Ru.prototype.onBeforeRender=function(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity},Cu.prototype=Object.assign(Object.create(ms.prototype),{constructor:Cu,copy:function(t){return ms.prototype.copy.call(this,t),this.geometry.copy(t.geometry),this.material.copy(t.material),this},clone:function(){return(new this.constructor).copy(this)}}),Iu.prototype=Object.create(ms.prototype),Iu.prototype.constructor=Iu,Nu.prototype=Object.create(qs.prototype),Nu.prototype.constructor=Nu,Nu.prototype.update=function(){var t,e,i=this.audio,n=this.range,r=this.divisionsInnerAngle,o=this.divisionsOuterAngle,a=Pe.degToRad(i.panner.coneInnerAngle),s=Pe.degToRad(i.panner.coneOuterAngle),l=a/2,h=s/2,c=0,u=0,q=this.geometry,p=q.attributes.position;function d(i,r,o,a){var s=(r-i)/o;for(p.setXYZ(c,0,0,0),u++,t=i;t<r;t+=s)e=c+u,p.setXYZ(e,Math.sin(t)*n,0,Math.cos(t)*n),p.setXYZ(e+1,Math.sin(Math.min(t+s,r))*n,0,Math.cos(Math.min(t+s,r))*n),p.setXYZ(e+2,0,0,0),u+=3;q.addGroup(c,u,a),c+=u,u=0}q.clearGroups(),d(-h,-l,o,0),d(-l,l,r,1),d(l,h,o,0),p.needsUpdate=!0,a===s&&(this.material[0].visible=!1)},Nu.prototype.dispose=function(){this.geometry.dispose(),this.material[0].dispose(),this.material[1].dispose()};var Ou=new Oe,Bu=new Oe,Du=new Fe;function Fu(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16776960,o=void 0!==n?n:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var l=new Nn,h=new Mn(2*a*3,3);l.setAttribute("position",h),ms.call(this,l,new as({color:r,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}Fu.prototype=Object.create(ms.prototype),Fu.prototype.constructor=Fu,Fu.prototype.update=function(){this.object.updateMatrixWorld(!0),Du.getNormalMatrix(this.object.matrixWorld);for(var t=this.object.matrixWorld,e=this.geometry.attributes.position,i=this.object.geometry,n=i.vertices,r=i.faces,o=0,a=0,s=r.length;a<s;a++){var l=r[a],h=l.normal;Ou.copy(n[l.a]).add(n[l.b]).add(n[l.c]).divideScalar(3).applyMatrix4(t),Bu.copy(h).applyMatrix3(Du).normalize().multiplyScalar(this.size).add(Ou),e.setXYZ(o,Ou.x,Ou.y,Ou.z),o+=1,e.setXYZ(o,Bu.x,Bu.y,Bu.z),o+=1}e.needsUpdate=!0};var Vu=new Oe,Uu=new Oe,ju=new Oe;function Gu(t,e,i){vi.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);var n=new Nn;n.setAttribute("position",new Mn([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new as({fog:!1});this.lightPlane=new qs(n,r),this.add(this.lightPlane),(n=new Nn).setAttribute("position",new Mn([0,0,0,0,0,1],3)),this.targetLine=new qs(n,r),this.add(this.targetLine),this.update()}Gu.prototype=Object.create(vi.prototype),Gu.prototype.constructor=Gu,Gu.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Gu.prototype.update=function(){Vu.setFromMatrixPosition(this.light.matrixWorld),Uu.setFromMatrixPosition(this.light.target.matrixWorld),ju.subVectors(Uu,Vu),this.lightPlane.lookAt(Uu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Uu),this.targetLine.scale.z=ju.length()};var Hu=new Oe,ku=new pr;function Wu(t){var e=new Nn,i=new as({color:16777215,vertexColors:1}),n=[],r=[],o={},a=new ln(16755200),s=new ln(16711680),l=new ln(43775),h=new ln(16777215),c=new ln(3355443);function u(t,e,i){q(t,i),q(e,i)}function q(t,e){n.push(0,0,0),r.push(e.r,e.g,e.b),void 0===o[t]&&(o[t]=[]),o[t].push(n.length/3-1)}u("n1","n2",a),u("n2","n4",a),u("n4","n3",a),u("n3","n1",a),u("f1","f2",a),u("f2","f4",a),u("f4","f3",a),u("f3","f1",a),u("n1","f1",a),u("n2","f2",a),u("n3","f3",a),u("n4","f4",a),u("p","n1",s),u("p","n2",s),u("p","n3",s),u("p","n4",s),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",h),u("p","c",c),u("cn1","cn2",c),u("cn3","cn4",c),u("cf1","cf2",c),u("cf3","cf4",c),e.setAttribute("position",new Mn(n,3)),e.setAttribute("color",new Mn(r,3)),ms.call(this,e,i),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}function Xu(t,e,i,n,r,o,a){Hu.set(r,o,a).unproject(n);var s=e[t];if(void 0!==s)for(var l=i.getAttribute("position"),h=0,c=s.length;h<c;h++)l.setXYZ(s[h],Hu.x,Hu.y,Hu.z)}Wu.prototype=Object.create(ms.prototype),Wu.prototype.constructor=Wu,Wu.prototype.update=function(){var t=this.geometry,e=this.pointMap;ku.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Xu("c",e,t,ku,0,0,-1),Xu("t",e,t,ku,0,0,1),Xu("n1",e,t,ku,-1,-1,-1),Xu("n2",e,t,ku,1,-1,-1),Xu("n3",e,t,ku,-1,1,-1),Xu("n4",e,t,ku,1,1,-1),Xu("f1",e,t,ku,-1,-1,1),Xu("f2",e,t,ku,1,-1,1),Xu("f3",e,t,ku,-1,1,1),Xu("f4",e,t,ku,1,1,1),Xu("u1",e,t,ku,.7,1.1,-1),Xu("u2",e,t,ku,-.7,1.1,-1),Xu("u3",e,t,ku,0,2,-1),Xu("cf1",e,t,ku,-1,0,1),Xu("cf2",e,t,ku,1,0,1),Xu("cf3",e,t,ku,0,-1,1),Xu("cf4",e,t,ku,0,1,1),Xu("cn1",e,t,ku,-1,0,-1),Xu("cn2",e,t,ku,1,0,-1),Xu("cn3",e,t,ku,0,-1,-1),Xu("cn4",e,t,ku,0,1,-1),t.getAttribute("position").needsUpdate=!0};var Yu=new Pi;function Zu(t,e){this.object=t,void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new Nn;r.setIndex(new fn(i,1)),r.setAttribute("position",new fn(n,3)),ms.call(this,r,new as({color:e})),this.matrixAutoUpdate=!1,this.update()}function Ju(t,e){this.type="Box3Helper",this.box=t,e=e||16776960;var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Nn;n.setIndex(new fn(i,1)),n.setAttribute("position",new Mn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),ms.call(this,n,new as({color:e})),this.geometry.computeBoundingSphere()}function Qu(t,e,i){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var n=void 0!==i?i:16776960,r=new Nn;r.setAttribute("position",new Mn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),qs.call(this,r,new as({color:n}));var o=new Nn;o.setAttribute("position",new Mn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new $n(o,new mn({color:n,opacity:.2,transparent:!0,depthWrite:!1})))}Zu.prototype=Object.create(ms.prototype),Zu.prototype.constructor=Zu,Zu.prototype.update=function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Yu.setFromObject(this.object),!Yu.isEmpty()){var e=Yu.min,i=Yu.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=e.x,r[4]=i.y,r[5]=i.z,r[6]=e.x,r[7]=e.y,r[8]=i.z,r[9]=i.x,r[10]=e.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=e.z,r[15]=e.x,r[16]=i.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=i.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}},Zu.prototype.setFromObject=function(t){return this.object=t,this.update(),this},Zu.prototype.copy=function(t){return ms.prototype.copy.call(this,t),this.object=t.object,this},Zu.prototype.clone=function(){return(new this.constructor).copy(this)},Ju.prototype=Object.create(ms.prototype),Ju.prototype.constructor=Ju,Ju.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),vi.prototype.updateMatrixWorld.call(this,t))},Qu.prototype=Object.create(qs.prototype),Qu.prototype.constructor=Qu,Qu.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?u:c,this.lookAt(this.plane.normal),vi.prototype.updateMatrixWorld.call(this,t)};var Ku,$u,tq=new Oe;function eq(t,e,i,n,r,o){vi.call(this),void 0===t&&(t=new Oe(0,0,1)),void 0===e&&(e=new Oe(0,0,0)),void 0===i&&(i=1),void 0===n&&(n=16776960),void 0===r&&(r=.2*i),void 0===o&&(o=.2*r),void 0===Ku&&((Ku=new Nn).setAttribute("position",new Mn([0,0,0,0,1,0],3)),($u=new Il(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new qs(Ku,new as({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new $n($u,new mn({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,o)}function iq(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new Nn;i.setAttribute("position",new Mn(e,3)),i.setAttribute("color",new Mn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new as({vertexColors:d});ms.call(this,i,n)}function nq(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Rh.call(this,t),this.type="catmullrom"}eq.prototype=Object.create(vi.prototype),eq.prototype.constructor=eq,eq.prototype.setDirection=function(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{tq.set(t.z,0,-t.x).normalize();var e=Math.acos(t.y);this.quaternion.setFromAxisAngle(tq,e)}},eq.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},eq.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},eq.prototype.copy=function(t){return vi.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this},eq.prototype.clone=function(){return(new this.constructor).copy(this)},iq.prototype=Object.create(ms.prototype),iq.prototype.constructor=iq,Mh.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Mh.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Hh.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new ar,i=0,n=t.length;i<n;i++){var r=t[i];e.vertices.push(new Oe(r.x,r.y,r.z||0))}return e}}),Object.assign(kh.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Object.create(Rh.prototype),Object.create(Rh.prototype),nq.prototype=Object.create(Rh.prototype),Object.assign(nq.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Cu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Su.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(mh.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ac(t)}}),mh.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(uc.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}),Object.assign(hu.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Pi.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),qu.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(Pe,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Pe.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Pe.ceilPowerOfTwo(t)}}),Object.assign(Fe.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign($e.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Oe).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,i,n,r,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,r,o)}}),Wi.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},Ce.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(ji.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(rn.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(rn,{barycoordFromPoint:function(t,e,i,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),rn.getBarycoord(t,e,i,n,r)},normal:function(t,e,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),rn.getNormal(t,e,i,n)}}),Object.assign(Wh.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new vl(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ll(this,t)}}),Object.assign(Re.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Oe.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Ge.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ar.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}}),Object.assign(vi.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")}}),Object.defineProperties(vi.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties($a.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(ns.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),ts.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Mh.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),dr.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Xh.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(fn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Te},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Te)}}}),Object.assign(fn.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Te:Ee),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Nn.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new fn(arguments[1],arguments[2])))},addDrawCall:function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)}}),Object.defineProperties(Nn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Ia.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Te},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(Ia.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Te:Ee),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(gl.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(nu.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(dn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ln}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Hl.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(qr.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(Pa.prototype,{clearTarget:function(t,e,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,i,n)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Pa.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}}}),Object.defineProperties(va.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(vr.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")}},activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")}}}),Object.defineProperties(He.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(La.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}},userHeight:{set:function(){console.warn("THREE.WebVRManager: .userHeight has been removed.")}}}),Object.defineProperties(Nc.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new bc).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Uc.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},fr.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Ve.crossOrigin=void 0,Ve.loadTexture=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new _h;r.setCrossOrigin(this.crossOrigin);var o=r.load(t,i,void 0,n);return e&&(o.mapping=e),o},Ve.loadTextureCube=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new bh;r.setCrossOrigin(this.crossOrigin);var o=r.load(t,i,void 0,n);return e&&(o.mapping=e),o},Ve.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Ve.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"110"}}));var rq=i(125),oq=i.n(rq),aq=JSON.parse('{"glyphs":{"0":{"ha":810,"x_min":15,"x_max":795,"o":"m 541 281 q 485 332 520 296 q 413 416 443 374 q 353 512 382 457 q 319 581 323 567 q 298 556 298 581 q 320 495 298 538 q 386 391 342 452 q 467 298 431 330 q 521 264 504 264 q 541 281 538 264 m 688 104 q 405 -11 585 -11 q 123 104 225 -11 q 15 437 15 223 q 124 774 15 650 q 405 897 234 897 q 685 774 576 897 q 795 437 795 650 q 688 104 795 224 z "},"1":{"ha":500,"x_min":-33,"x_max":478,"o":"m 119 426 q 190 433 159 426 q 221 456 221 441 q 215 471 221 465 q 125 456 174 456 q 13 502 58 456 q -33 634 -33 548 q -9 745 -33 691 q 124 779 77 755 q 238 888 191 812 l 359 888 q 446 866 418 888 q 478 773 478 840 l 478 53 q 398 4 444 21 q 304 -12 352 -12 q 175 26 224 -12 q 119 151 119 68 l 119 426 z "},"2":{"ha":768,"x_min":15,"x_max":753,"o":"m 751 572 q 686 391 751 463 q 474 281 614 309 q 497 256 474 256 q 597 281 538 256 q 688 342 656 307 q 753 173 753 278 q 692 7 753 67 l 83 7 q 31 179 31 85 q 67 338 31 274 q 309 433 201 364 q 418 578 418 501 q 409 611 418 598 q 383 624 399 624 q 350 589 350 624 q 374 538 350 554 q 271 447 340 488 q 136 387 202 406 q 15 604 15 467 q 123 820 15 740 q 380 895 223 895 q 640 812 537 895 q 751 572 751 722 z "},"3":{"ha":793,"x_min":15,"x_max":779,"o":"m 201 433 l 212 433 q 223 433 214 433 q 287 311 235 355 q 405 267 338 267 q 458 288 458 267 q 454 302 458 297 q 410 299 437 299 q 302 340 346 299 q 258 448 258 380 q 300 556 258 516 q 411 597 342 597 l 423 597 q 438 595 429 597 q 440 604 440 600 q 404 626 440 626 q 295 591 345 626 q 227 490 245 557 q 70 538 125 490 q 23 644 23 578 q 124 827 23 755 q 386 899 224 899 q 653 818 548 899 q 758 609 758 737 q 696 469 758 524 q 644 484 667 484 q 622 465 622 484 q 626 454 622 457 q 724 414 680 454 q 779 275 779 366 q 663 60 779 138 q 392 -12 556 -12 q 121 62 227 -12 q 15 258 15 136 q 63 384 15 334 q 201 433 112 433 z "},"4":{"ha":807,"x_min":1,"x_max":792,"o":"m 336 414 l 409 414 l 409 505 l 394 505 q 336 427 369 457 l 336 414 m 343 112 l 398 112 q 429 116 420 112 q 439 129 439 119 q 436 144 439 138 l 231 144 q 56 215 117 144 q 1 387 1 279 q 11 486 1 444 q 197 682 111 572 q 338 887 245 743 l 511 887 q 649 841 595 887 q 703 716 703 795 l 703 457 l 688 457 q 659 434 659 457 l 659 425 l 768 425 q 792 289 792 366 q 770 196 792 236 q 702 146 747 157 l 702 43 q 518 -12 626 -12 q 343 39 411 -12 l 343 112 z "},"5":{"ha":785,"x_min":15,"x_max":770,"o":"m 89 429 q 54 459 66 437 q 41 507 41 481 q 43 536 41 511 q 74 810 54 678 q 97 871 81 859 q 160 883 113 883 l 680 883 q 715 728 715 824 q 674 576 715 633 q 593 614 632 602 q 464 633 533 633 l 388 633 l 384 603 l 447 603 q 675 530 587 603 q 770 305 770 450 q 663 74 770 160 q 370 -12 556 -12 q 109 59 203 -12 q 15 239 15 131 q 72 374 15 326 q 207 423 130 423 q 337 379 284 423 q 401 243 397 328 q 432 273 432 243 q 373 399 432 345 q 208 454 314 454 q 89 429 143 454 z "},"6":{"ha":801,"x_min":15,"x_max":786,"o":"m 410 350 q 369 342 384 350 q 382 304 369 319 q 418 290 395 290 q 452 318 452 290 q 410 350 452 350 m 717 774 q 703 672 717 722 q 663 589 690 622 q 495 623 589 623 q 386 607 434 623 q 338 570 338 590 q 342 555 338 562 q 495 593 426 593 q 719 507 643 593 q 786 304 786 429 q 674 68 786 157 q 428 -12 572 -12 q 140 97 252 -12 q 15 429 15 216 q 61 658 15 552 q 202 829 108 764 q 445 897 304 897 q 716 814 625 897 q 717 794 717 808 l 717 774 z "},"7":{"ha":669,"x_min":-33,"x_max":661,"o":"m 661 693 q 643 572 661 640 l 452 239 q 407 88 407 159 q 412 34 407 55 q 256 -12 357 -12 q 100 45 156 -12 q 44 186 44 103 q 84 325 44 250 l 193 532 l 300 532 q 330 554 330 532 l 330 559 q 330 564 330 562 l 30 564 q -16 633 1 589 q -33 725 -33 677 q -14 816 -33 773 q 35 883 4 859 l 420 883 q 661 693 661 883 z "},"8":{"ha":812,"x_min":15,"x_max":798,"o":"m 362 591 q 381 575 362 581 q 428 564 399 569 q 439 589 439 575 q 429 610 439 603 q 400 617 418 617 q 362 591 362 617 m 387 327 q 372 301 372 313 q 383 282 372 289 q 412 275 393 275 q 450 300 450 275 q 387 327 450 315 m 173 397 q 193 420 193 397 q 96 480 133 444 q 39 614 39 534 q 137 818 39 737 q 392 898 234 898 q 655 820 551 898 q 760 623 760 742 q 748 557 760 587 q 718 511 737 526 q 703 521 709 515 q 633 549 657 549 q 612 526 612 549 q 747 441 701 496 q 798 286 798 380 q 684 65 798 147 q 406 -12 576 -12 q 126 70 235 -12 q 15 292 15 151 q 33 389 15 351 q 75 448 50 427 q 122 415 89 433 q 173 397 155 397 z "},"9":{"ha":804,"x_min":15,"x_max":789,"o":"m 394 522 q 434 528 416 522 q 421 567 434 552 q 386 582 408 582 q 351 554 351 582 q 394 522 351 522 m 415 247 q 412 258 415 254 q 345 253 387 253 q 188 287 264 253 q 63 390 111 321 q 15 558 15 458 q 117 803 15 709 q 395 898 219 898 q 680 775 570 898 q 789 458 789 653 q 668 119 789 250 q 334 -12 547 -12 q 203 1 271 -12 q 111 26 138 13 q 78 151 78 81 q 90 224 78 189 q 121 286 102 260 q 215 242 152 262 q 346 222 277 222 q 415 247 415 222 z "},"\\r":{"ha":347,"x_min":0,"x_max":0,"o":""},"\\u0000":{"ha":0,"x_min":0,"x_max":0,"o":""}," ":{"ha":326,"x_min":0,"x_max":0,"o":""},"!":{"ha":392,"x_min":0,"x_max":392,"o":"m 297 397 q 235 412 262 412 q 208 387 208 412 l 208 385 q 338 322 285 379 q 392 187 392 266 q 334 50 392 108 q 195 -7 276 -7 q 57 51 115 -7 q 0 188 0 108 q 27 288 0 242 q 100 360 55 334 q 35 522 60 431 q 11 712 11 614 l 11 933 q 85 966 39 954 q 177 979 130 979 q 324 928 279 979 q 369 755 369 877 l 369 712 q 297 397 369 555 z "},"\\"":{"ha":631,"x_min":14,"x_max":618,"o":"m 334 565 l 334 907 q 390 924 349 914 q 466 930 423 930 q 554 921 509 930 q 618 892 598 911 l 595 565 q 464 526 554 526 q 334 565 373 526 m 164 930 q 298 907 250 930 l 298 565 q 163 526 257 526 q 90 536 125 526 q 38 565 56 545 q 14 892 38 565 q 74 920 30 911 q 164 930 117 930 z "},"#":{"ha":918,"x_min":14,"x_max":905,"o":"m 447 54 l 456 109 q 486 127 486 109 q 485 140 486 134 l 423 140 l 410 41 q 251 -7 342 -7 q 142 20 180 -7 q 98 111 98 50 l 103 111 q 137 132 137 111 q 136 140 137 134 l 59 140 q 14 275 14 203 q 24 346 14 315 q 59 412 35 376 l 125 412 q 156 430 156 412 q 155 443 156 437 l 89 443 q 50 578 50 505 q 61 649 50 618 q 96 715 72 680 l 175 715 q 209 736 209 715 q 208 745 209 739 l 180 745 l 193 829 q 273 861 238 850 q 355 871 309 871 q 462 838 425 871 q 498 746 498 804 q 496 715 498 731 l 536 715 q 565 732 565 715 q 564 745 565 739 l 537 745 q 538 753 538 747 l 538 761 q 515 827 538 791 q 683 871 591 871 q 789 838 753 871 q 826 746 826 804 q 824 715 826 731 l 859 715 q 894 648 883 680 q 905 578 905 617 q 859 443 905 507 l 789 443 q 758 426 758 443 q 760 412 758 418 l 831 412 q 871 274 871 345 q 825 140 871 204 l 751 140 l 737 41 q 584 -7 680 -7 q 447 54 487 -7 m 462 488 l 453 488 l 440 401 q 446 386 440 390 q 464 382 452 382 l 473 382 q 486 473 486 465 q 481 484 486 479 q 462 488 476 488 z "},"$":{"ha":767,"x_min":-7,"x_max":787,"o":"m 385 247 q 412 265 412 247 q 399 308 412 283 q 363 354 387 333 q 201 410 302 410 q 115 398 152 410 q 26 472 60 418 q -7 593 -7 526 q 88 796 -7 720 q 301 880 168 860 q 302 887 302 882 q 281 906 302 906 q 242 898 270 906 l 242 971 q 388 1015 304 1015 q 543 971 471 1015 l 543 875 q 714 821 655 854 q 730 720 730 775 q 681 560 730 614 q 599 594 654 579 q 494 609 544 609 q 428 601 445 609 q 410 584 410 593 q 412 572 410 578 q 473 578 436 578 q 689 514 604 578 q 787 292 787 438 q 712 106 787 186 q 499 -1 636 26 q 498 -9 498 -3 q 519 -28 498 -28 q 558 -20 530 -28 l 558 -93 q 413 -136 496 -136 q 257 -93 329 -136 l 257 -4 q 59 60 146 11 q 8 204 8 129 q 60 330 8 279 q 189 380 113 380 q 314 349 265 380 q 385 247 362 317 z "},"%":{"ha":954,"x_min":14,"x_max":941,"o":"m 298 543 q 316 511 298 511 q 334 543 334 511 q 330 630 334 610 q 309 650 326 650 q 298 648 302 650 l 298 543 m 651 241 q 669 210 651 210 q 687 241 687 210 q 683 329 687 309 q 661 349 678 349 q 651 347 654 349 l 651 241 m 14 580 q 92 802 14 716 q 305 888 170 888 q 437 859 378 888 q 533 775 496 829 l 602 876 q 671 888 632 888 q 824 832 752 888 q 910 706 892 778 l 824 577 q 725 604 768 604 q 700 583 700 604 q 701 576 700 578 q 876 486 811 564 q 941 288 941 409 q 864 74 941 154 q 649 -7 787 -7 q 517 23 575 -7 q 420 106 458 52 l 352 5 q 283 -7 322 -7 q 131 50 203 -7 q 44 176 62 104 l 130 304 q 229 278 186 278 q 254 298 254 278 l 254 302 q 254 304 254 302 q 78 388 140 317 q 14 580 14 460 z "},"&":{"ha":876,"x_min":10,"x_max":869,"o":"m 185 538 q 144 597 161 557 q 127 681 127 637 q 195 835 127 777 q 389 893 262 893 q 562 828 498 893 q 618 689 618 772 q 576 621 618 633 l 444 584 q 279 400 279 538 q 330 277 279 327 q 441 231 376 231 q 484 241 465 231 q 502 268 502 250 q 495 283 502 277 q 479 288 489 288 q 441 262 454 288 q 350 306 386 266 q 315 400 315 345 q 349 495 315 455 q 455 556 383 535 l 587 594 q 648 675 648 612 q 722 689 686 689 q 826 646 783 689 q 869 536 869 601 q 832 432 869 471 q 745 379 795 394 l 734 376 l 734 372 q 755 353 734 353 q 774 359 764 353 q 804 269 804 326 q 780 159 804 213 q 707 65 755 105 q 420 -25 602 -25 q 127 60 239 -25 q 10 288 10 146 q 185 538 10 478 z "},"\'":{"ha":334,"x_min":14,"x_max":320,"o":"m 164 526 q 90 536 125 526 q 38 565 56 545 l 14 892 q 74 920 30 911 q 164 930 117 930 q 256 921 212 930 q 320 892 300 911 l 297 565 q 164 526 256 526 z "},"(":{"ha":398,"x_min":0,"x_max":412,"o":"m 327 460 l 327 458 q 352 223 327 340 q 412 18 376 106 q 325 -43 381 -18 q 218 -73 269 -68 q 79 120 140 -4 q 0 457 0 281 q 76 787 0 632 q 218 977 135 907 q 325 948 268 973 q 412 886 381 922 q 327 460 327 672 z "},")":{"ha":398,"x_min":-14,"x_max":398,"o":"m -14 886 q 73 947 17 922 q 180 977 130 973 q 322 787 263 907 q 398 456 398 632 q 319 120 398 280 q 180 -73 259 -3 q 74 -43 128 -68 q -14 18 18 -18 q 46 223 22 106 q 71 458 71 340 l 71 460 q -14 886 71 672 z "},"*":{"ha":492,"x_min":3,"x_max":489,"o":"m 435 585 q 392 515 435 546 q 330 493 362 493 q 246 532 298 493 q 163 493 194 493 q 105 512 132 493 q 67 549 77 530 q 58 588 58 567 q 71 657 58 610 q 3 758 3 705 q 9 789 3 770 q 53 846 24 831 q 138 862 81 861 q 179 939 155 916 q 246 962 203 962 q 313 939 289 962 q 354 862 338 916 q 440 846 411 861 q 484 789 469 831 q 489 758 489 770 q 472 704 489 728 q 422 657 454 681 q 435 585 435 610 z "},"+":{"ha":726,"x_min":7,"x_max":720,"o":"m 360 811 q 494 777 447 811 q 544 665 544 739 l 544 576 l 663 576 q 706 494 692 533 q 720 407 720 456 q 706 320 720 359 q 663 241 692 282 l 490 241 q 488 231 488 237 q 509 210 488 213 l 544 210 l 544 96 q 368 27 482 27 q 234 62 280 27 q 184 174 184 99 l 184 241 l 63 241 q 7 407 7 319 q 21 495 7 456 q 63 576 35 535 l 204 576 q 238 595 238 576 q 237 608 238 602 l 184 608 l 184 742 q 360 811 248 811 z "},",":{"ha":418,"x_min":14,"x_max":412,"o":"m 248 51 q 239 67 248 58 q 165 52 210 52 q 58 95 103 52 q 14 208 14 138 q 68 339 14 292 q 205 387 123 387 q 359 319 302 387 q 412 154 412 254 q 340 -45 412 28 q 185 -111 276 -111 q 86 -86 123 -111 q 50 -12 50 -62 q 70 44 50 20 q 164 21 113 21 q 248 51 248 21 z "},"-":{"ha":489,"x_min":7,"x_max":482,"o":"m 482 414 q 482 390 482 414 q 468 327 482 366 q 425 248 454 289 l 63 248 q 7 414 7 326 q 21 502 7 463 q 63 583 35 542 l 425 583 q 469 501 455 540 q 482 414 482 463 z "},".":{"ha":412,"x_min":14,"x_max":406,"o":"m 71 328 q 209 385 129 385 q 348 328 289 385 q 406 188 406 269 q 348 50 406 108 q 209 -7 290 -7 q 71 51 128 -7 q 14 188 14 108 q 71 328 14 269 z "},"/":{"ha":484,"x_min":27,"x_max":484,"o":"m 312 888 q 417 865 366 888 q 484 811 457 845 l 378 55 q 208 -7 326 -7 q 99 15 147 -7 q 27 72 52 37 l 131 817 q 312 888 189 888 z "},":":{"ha":412,"x_min":14,"x_max":406,"o":"m 245 342 q 269 317 245 317 q 333 339 301 317 q 386 272 367 312 q 406 188 406 233 q 348 51 406 108 q 210 -7 291 -7 q 71 50 129 -7 q 14 188 14 107 q 39 284 14 237 q 111 358 64 331 q 40 429 66 385 q 14 526 14 473 q 72 666 14 608 q 210 724 130 724 q 348 666 290 724 q 406 530 406 607 q 360 402 406 453 q 245 342 315 351 z "},";":{"ha":419,"x_min":14,"x_max":412,"o":"m 248 51 q 239 67 248 58 q 165 52 211 52 q 59 95 104 52 q 14 208 14 138 q 103 363 14 317 q 38 432 62 389 q 14 526 14 475 q 72 666 14 608 q 210 724 130 724 q 348 666 290 724 q 406 530 406 607 q 360 402 406 453 q 245 342 315 351 q 269 317 245 317 q 305 325 286 317 q 336 340 325 332 q 393 262 373 311 q 412 154 412 213 q 341 -45 412 28 q 186 -111 277 -111 q 88 -87 123 -111 q 50 -12 50 -62 q 71 44 50 20 q 165 21 113 21 q 248 51 248 21 z "},"<":{"ha":627,"x_min":3,"x_max":623,"o":"m 473 399 l 557 342 q 623 224 623 297 q 587 118 623 168 q 488 26 559 79 l 55 259 q 3 423 3 340 q 56 598 3 526 l 488 814 q 577 720 545 772 q 610 614 610 667 q 561 491 610 536 q 346 397 500 435 q 374 375 346 375 q 473 399 401 375 z "},"=":{"ha":647,"x_min":3,"x_max":644,"o":"m 644 239 q 592 90 644 160 l 54 90 q 3 239 3 159 q 15 318 3 284 q 54 393 27 353 l 592 393 q 631 318 619 353 q 644 239 644 284 m 644 582 q 644 560 644 582 q 631 503 644 538 q 592 431 619 469 l 54 431 q 3 581 3 502 q 15 660 3 626 q 54 734 27 694 q 592 734 54 734 q 631 660 619 694 q 644 582 644 625 z "},">":{"ha":612,"x_min":3,"x_max":608,"o":"m 147 426 q 38 506 73 458 q 3 608 3 553 q 36 715 3 663 q 125 810 68 768 l 557 593 q 596 514 583 555 q 608 418 608 473 q 557 254 608 334 l 142 28 q 41 123 75 77 q 6 227 6 170 q 28 305 6 271 q 123 378 56 347 q 267 441 123 378 q 249 459 265 459 q 238 459 243 459 q 147 426 234 458 z "},"?":{"ha":730,"x_min":-7,"x_max":730,"o":"m 382 657 q 355 690 382 690 q 328 661 328 690 q 330 646 328 652 q 333 637 332 640 q 294 618 326 631 q 134 507 170 567 q 35 579 76 524 q -7 704 -7 633 q 96 909 -7 828 q 351 991 198 991 q 640 895 538 991 q 730 671 730 808 q 694 523 730 588 q 607 415 659 458 q 504 346 556 371 q 463 375 485 364 q 427 385 440 385 q 408 381 414 385 q 403 363 403 376 q 503 296 465 345 q 541 181 541 246 q 484 49 541 104 q 345 -7 425 -7 q 207 49 264 -7 q 149 181 149 104 q 186 296 149 246 q 142 399 142 340 q 181 513 142 471 q 310 591 214 549 q 366 623 349 608 q 382 657 382 638 z "},"@":{"ha":1178,"x_min":14,"x_max":1164,"o":"m 597 372 q 575 351 575 372 q 601 332 575 332 q 627 341 618 332 q 636 372 636 350 l 597 372 m 570 138 q 655 146 629 138 q 682 172 682 154 q 680 181 682 176 q 567 167 628 167 q 419 210 475 167 q 356 340 356 258 q 408 467 356 422 q 543 511 460 511 q 656 497 604 511 q 657 506 657 504 q 624 531 657 522 q 543 541 591 541 q 382 489 443 541 q 321 340 321 437 q 390 191 321 243 q 570 138 459 138 m 583 -144 q 293 -72 423 -144 q 90 126 163 0 q 14 414 14 255 q 56 652 14 546 q 176 833 99 759 q 357 946 253 907 q 583 984 462 984 q 889 914 758 984 q 1093 719 1021 844 q 1164 431 1164 593 q 1014 7 1164 156 q 583 -144 863 -144 m 417 659 q 587 688 505 688 q 775 630 711 688 q 840 469 840 572 l 840 361 q 859 302 840 321 q 905 283 878 283 q 921 302 921 283 q 886 320 897 307 q 874 360 874 333 l 874 490 q 808 644 874 581 q 587 720 729 720 q 471 706 530 720 q 413 674 413 690 q 417 659 413 665 z "},"A":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 z "},"B":{"ha":831,"x_min":22,"x_max":844,"o":"m 390 265 q 406 263 393 263 q 425 272 418 263 q 432 303 432 281 l 432 316 q 426 352 432 341 q 407 363 420 363 q 389 360 394 363 q 390 349 390 357 l 390 265 m 390 521 q 406 519 393 519 q 425 529 418 519 q 432 562 432 539 l 432 566 q 426 601 432 591 q 407 612 420 612 q 389 609 394 612 q 390 597 390 606 l 390 521 m 22 782 q 47 817 22 798 q 239 882 102 859 q 395 893 310 893 q 703 814 599 893 q 795 633 795 745 q 781 553 795 592 q 740 494 766 514 q 671 513 704 513 q 647 507 655 513 q 639 484 639 500 q 794 412 739 480 q 844 259 844 351 q 725 53 844 117 q 390 -7 614 -7 q 160 2 233 -7 q 54 49 87 12 q 22 160 22 85 l 22 782 z "},"C":{"ha":860,"x_min":15,"x_max":850,"o":"m 461 270 q 473 273 468 270 l 473 335 q 603 386 519 366 q 764 406 686 406 q 824 296 800 369 q 850 164 848 223 q 804 106 836 137 q 726 48 772 75 q 468 -18 614 -18 q 139 103 259 -18 q 15 443 15 226 q 151 785 15 661 q 290 868 210 840 q 456 897 369 897 q 736 814 627 897 q 846 610 846 731 q 789 474 846 518 q 637 431 733 431 q 530 457 584 431 q 467 506 477 483 q 469 593 467 562 q 464 594 467 594 l 459 594 q 443 588 449 594 q 433 564 437 583 q 429 465 429 546 q 461 270 429 270 z "},"D":{"ha":857,"x_min":22,"x_max":842,"o":"m 432 468 q 426 561 432 536 q 404 587 420 587 q 385 580 393 587 q 389 547 387 568 q 392 460 392 527 l 392 416 q 390 349 392 370 q 387 313 388 328 q 385 297 386 305 q 404 290 393 290 q 426 316 420 290 q 432 409 432 341 l 432 468 m 179 -1 q 63 39 104 -1 q 22 160 22 79 l 22 770 q 125 858 22 822 q 356 893 229 893 q 707 785 581 893 q 842 437 842 668 q 711 114 842 229 q 351 -1 580 -1 l 179 -1 z "},"E":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 z "},"F":{"ha":741,"x_min":21,"x_max":764,"o":"m 417 223 l 417 52 q 334 6 386 24 q 208 -12 282 -12 q 80 21 134 -12 q 21 123 21 57 l 21 812 q 327 875 21 875 l 725 875 q 754 794 745 839 q 764 715 764 750 q 627 559 764 559 l 393 559 q 367 538 367 559 l 367 533 q 368 528 367 529 l 668 528 q 703 395 703 469 q 661 251 703 302 l 329 251 q 323 239 323 245 q 340 226 323 228 q 378 224 357 224 q 417 223 399 224 z "},"G":{"ha":911,"x_min":15,"x_max":910,"o":"m 469 565 l 871 565 q 910 428 910 509 q 877 298 910 348 l 849 298 l 849 94 q 496 -22 715 -22 q 259 26 363 -22 q 83 174 146 77 q 15 437 15 281 q 148 781 15 659 q 490 897 274 897 q 691 865 596 897 q 840 785 785 833 q 830 686 840 745 q 806 595 821 627 l 448 595 q 407 529 427 572 q 388 429 388 486 q 427 308 388 352 q 513 268 460 268 q 535 283 535 268 l 535 298 l 528 298 q 453 333 483 298 q 424 433 424 368 q 469 565 424 515 z "},"H":{"ha":871,"x_min":22,"x_max":850,"o":"m 850 719 l 850 45 q 655 -12 774 -12 q 510 25 564 -12 q 454 135 454 63 l 454 269 l 502 269 q 537 276 530 269 q 544 300 544 283 l 331 300 q 337 276 331 283 q 366 269 343 269 l 418 269 l 418 45 q 319 -1 366 11 q 223 -12 272 -12 q 78 25 132 -12 q 22 135 22 63 l 22 810 q 109 867 57 847 q 217 887 161 887 q 356 846 299 887 q 418 719 418 800 l 418 598 l 504 598 q 497 622 504 616 q 477 629 491 629 l 454 629 l 454 810 q 541 867 489 847 q 649 887 593 887 q 788 846 731 887 q 850 719 850 800 z "},"I":{"ha":439,"x_min":22,"x_max":418,"o":"m 418 752 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 z "},"J":{"ha":685,"x_min":15,"x_max":663,"o":"m 663 310 q 572 77 663 167 q 307 -19 476 -19 q 123 31 210 -19 q 22 119 56 69 q 15 194 15 160 q 82 363 15 304 q 216 411 136 411 q 326 379 276 411 q 399 286 376 345 q 421 308 421 286 q 411 338 421 319 q 383 376 401 357 q 267 437 335 426 l 267 828 q 353 870 301 853 q 470 887 404 887 q 589 864 536 887 q 663 762 663 830 l 663 310 z "},"K":{"ha":863,"x_min":22,"x_max":870,"o":"m 418 746 l 418 715 q 376 628 391 659 q 362 585 362 596 q 385 565 362 565 l 518 858 q 646 888 565 888 q 785 844 727 888 q 849 707 849 793 q 800 564 849 634 q 670 442 750 494 q 603 463 633 463 q 573 434 573 463 q 630 417 604 428 q 690 374 655 406 l 870 208 q 650 -12 850 -12 q 524 26 576 -12 q 426 160 461 70 l 363 317 l 359 317 q 337 298 337 317 q 356 239 337 286 q 413 104 375 189 l 413 52 q 206 -12 342 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 234 887 92 887 q 359 856 308 887 q 418 746 418 819 z "},"L":{"ha":724,"x_min":22,"x_max":724,"o":"m 179 -1 q 63 39 104 -1 q 22 160 22 79 l 22 823 q 110 870 58 854 q 217 887 161 887 q 356 846 299 887 q 418 719 418 800 l 418 348 q 343 327 380 345 q 307 290 307 309 q 319 270 307 278 q 519 326 387 326 l 680 326 q 724 165 724 248 q 710 75 724 125 q 672 -1 696 26 l 179 -1 z "},"M":{"ha":989,"x_min":5,"x_max":985,"o":"m 768 -12 q 622 18 675 -12 q 560 109 565 50 l 554 172 q 659 250 616 187 q 671 280 671 267 q 653 298 671 298 l 651 298 q 648 297 650 297 q 494 197 601 197 q 402 221 440 197 q 332 303 363 245 l 328 303 q 309 288 309 303 q 317 263 309 277 q 385 192 345 218 q 452 166 417 170 l 447 38 q 361 0 406 12 q 233 -12 316 -12 q 85 20 150 -12 q 5 132 5 60 q 40 570 5 220 q 71 825 59 753 q 277 888 140 888 q 441 851 376 888 l 478 726 l 454 627 q 452 607 452 616 q 479 583 452 583 l 543 850 q 616 877 571 865 q 713 888 661 888 q 860 854 812 888 q 917 741 908 821 q 923 692 919 726 q 985 67 985 161 q 768 -12 909 -12 z "},"N":{"ha":845,"x_min":22,"x_max":823,"o":"m 22 125 l 22 805 q 78 864 22 840 q 212 887 135 887 q 293 877 255 887 q 352 850 332 866 q 403 778 380 814 q 507 607 426 741 q 520 612 514 607 q 526 626 526 616 q 509 665 526 636 l 436 791 l 436 828 q 520 872 471 857 q 623 888 570 888 q 762 857 709 888 q 823 740 823 819 l 823 98 q 768 13 823 39 q 641 -11 720 -11 q 555 -1 597 -11 q 490 23 513 8 q 394 161 441 85 l 325 277 q 305 256 305 274 q 325 212 305 244 l 410 75 l 410 39 q 232 -12 331 -12 q 78 24 134 -12 q 22 125 22 60 z "},"O":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 460 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 q 149 786 15 661 q 456 897 269 897 q 780 770 661 897 q 899 437 899 644 q 771 87 899 208 q 460 -22 655 -22 z "},"P":{"ha":813,"x_min":22,"x_max":823,"o":"m 401 455 q 416 453 404 453 q 436 463 429 453 q 443 496 443 473 l 443 548 q 437 583 443 572 q 418 593 431 593 q 400 591 405 593 q 401 579 401 587 l 401 455 m 418 149 l 418 45 q 334 4 388 20 q 220 -12 279 -12 q 83 20 136 -12 q 22 128 22 58 l 22 772 q 51 816 22 794 q 133 855 81 838 q 389 893 245 893 q 705 794 587 893 q 823 528 823 695 q 717 268 823 361 q 433 180 614 180 q 344 190 391 180 q 281 207 297 199 q 275 192 275 201 q 418 149 275 157 z "},"Q":{"ha":976,"x_min":15,"x_max":975,"o":"m 389 321 q 399 305 389 309 q 446 337 416 323 q 513 351 475 351 q 631 309 584 351 q 635 305 631 309 q 644 322 644 310 q 611 362 644 343 q 512 383 572 383 q 482 380 496 383 l 482 557 q 462 587 482 587 q 442 557 442 587 l 442 371 q 389 321 389 349 m 444 -1 q 231 44 327 -1 q 79 181 136 88 q 15 443 15 286 q 80 707 15 600 q 238 850 138 803 q 454 897 338 897 q 784 773 664 897 q 903 452 903 650 q 852 239 903 330 l 950 239 q 975 100 975 165 q 920 -59 975 1 q 766 -119 865 -119 q 603 -55 668 -119 q 498 150 538 10 l 494 150 q 473 128 473 150 q 518 3 473 87 q 444 -1 483 -1 z "},"R":{"ha":854,"x_min":22,"x_max":868,"o":"m 401 482 q 416 480 404 480 q 436 490 429 480 q 443 524 443 500 l 443 548 q 437 583 443 572 q 418 593 431 593 q 400 591 405 593 q 401 579 401 587 l 401 482 m 751 328 l 868 208 q 801 45 856 102 q 650 -12 747 -12 q 524 22 578 -12 q 422 161 456 66 l 397 227 q 326 235 369 228 q 320 220 320 229 q 375 198 320 201 l 414 100 l 414 43 q 214 -12 336 -12 q 74 24 126 -12 q 22 128 22 60 l 22 772 q 77 830 22 802 q 220 876 132 859 q 398 893 309 893 q 716 810 602 893 q 837 564 837 722 q 786 408 837 473 q 656 318 734 343 q 683 296 656 296 q 751 328 709 296 z "},"S":{"ha":797,"x_min":1,"x_max":816,"o":"m 387 247 q 409 270 409 251 q 397 312 409 288 q 362 356 385 335 q 199 410 302 410 q 104 393 148 410 q 29 469 57 417 q 1 580 1 520 q 132 821 1 736 q 408 893 243 893 q 613 867 530 893 q 749 800 696 841 q 765 707 765 755 q 752 620 765 659 q 715 557 739 581 q 631 591 692 574 q 522 609 571 609 q 455 603 472 609 q 439 584 439 597 q 441 572 439 578 q 502 578 465 578 q 718 516 634 578 q 816 292 816 441 q 709 74 816 161 q 399 -19 594 -19 q 214 -3 292 -19 q 60 53 135 13 q 9 203 9 127 q 62 330 9 279 q 190 380 114 380 q 315 349 267 380 q 387 247 363 317 z "},"T":{"ha":819,"x_min":5,"x_max":814,"o":"m 608 528 l 608 52 q 524 6 576 24 q 397 -12 472 -12 q 271 21 323 -12 q 212 123 212 57 l 212 559 l 54 559 q 5 712 5 629 q 23 810 5 768 q 67 875 41 852 l 768 875 q 801 801 788 844 q 814 715 814 758 q 779 597 814 635 q 684 559 743 559 l 485 559 q 483 549 483 555 q 497 533 483 537 q 561 528 512 528 l 608 528 z "},"U":{"ha":833,"x_min":22,"x_max":811,"o":"m 610 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 z "},"V":{"ha":859,"x_min":1,"x_max":854,"o":"m 428 747 l 406 317 q 420 315 414 315 q 446 349 443 315 l 475 842 q 553 875 496 861 q 650 887 606 887 q 803 840 752 887 q 854 720 854 793 q 820 534 854 678 q 724 144 787 390 q 620 20 701 58 q 433 -12 549 -12 q 295 4 360 -12 q 191 51 230 20 q 83 375 137 169 q 1 793 28 582 q 204 888 65 888 q 428 747 383 888 z "},"W":{"ha":1219,"x_min":1,"x_max":1214,"o":"m 398 -12 q 288 -1 332 -12 q 199 39 227 12 q 90 334 135 174 q 1 793 26 557 q 85 863 32 838 q 203 888 138 888 q 356 850 300 888 q 412 744 412 813 q 404 593 408 692 q 400 412 400 493 q 405 377 400 390 q 423 365 409 365 q 437 367 429 365 q 436 387 436 373 l 436 411 q 443 638 436 509 q 459 829 450 766 q 604 867 521 867 q 739 844 688 867 q 803 761 800 816 q 790 630 800 694 q 768 481 781 566 q 752 370 755 397 q 766 368 758 368 q 783 374 775 368 q 795 407 790 381 q 829 636 816 515 q 847 846 843 756 q 1019 888 909 888 q 1161 841 1108 888 q 1214 714 1214 793 q 1164 437 1214 661 q 1114 235 1138 319 q 1076 117 1090 151 q 982 19 1044 49 q 824 -12 920 -12 q 735 0 785 -12 q 658 26 684 12 q 627 90 644 47 q 606 154 610 132 q 580 125 580 153 q 601 45 580 104 q 398 -12 530 -12 z "},"X":{"ha":872,"x_min":14,"x_max":886,"o":"m 442 159 l 363 6 q 253 -13 313 -13 q 81 47 148 -13 q 14 208 14 106 q 74 367 14 297 q 245 484 134 437 q 217 507 237 507 q 145 471 197 507 q 56 558 94 497 q 18 699 18 619 q 77 836 18 779 q 239 893 136 893 q 387 860 329 893 l 458 717 l 517 863 q 646 889 574 889 q 810 833 747 889 q 873 674 873 777 q 812 515 873 589 q 656 397 751 441 q 683 378 664 378 q 746 408 703 378 l 886 233 q 831 58 886 123 q 667 -14 772 -14 q 442 159 507 -14 z "},"Y":{"ha":864,"x_min":1,"x_max":859,"o":"m 300 206 q 319 227 319 206 q 90 472 169 327 q 1 792 11 617 q 93 862 32 838 q 218 886 153 886 q 363 853 302 886 q 426 658 401 751 q 393 511 393 511 q 390 492 390 501 q 414 469 390 469 q 452 625 422 495 q 472 718 460 659 q 505 858 485 777 q 647 888 567 888 q 802 841 744 888 q 859 705 859 793 q 786 451 859 574 q 633 269 728 353 l 633 45 q 532 -1 577 10 q 438 -12 488 -12 q 291 23 345 -12 q 237 128 237 58 l 237 248 q 269 221 250 235 q 300 206 288 206 z "},"Z":{"ha":774,"x_min":8,"x_max":773,"o":"m 18 718 q 36 813 18 773 q 79 875 54 854 l 699 875 q 743 798 724 849 q 763 673 763 747 q 759 613 763 631 q 749 583 754 595 q 740 557 745 571 q 559 353 668 456 q 413 336 460 349 q 365 304 365 323 q 372 288 365 296 q 463 312 405 302 q 575 322 521 322 l 728 322 q 773 170 773 241 q 741 60 773 98 q 662 9 709 22 q 576 0 627 0 l 79 0 q 8 229 8 73 q 15 294 8 264 q 156 452 75 366 q 308 606 237 538 q 290 621 305 621 q 264 608 280 621 q 214 558 248 595 l 68 558 q 18 718 18 636 z "},"[":{"ha":418,"x_min":20,"x_max":459,"o":"m 314 210 q 315 201 314 208 l 410 201 q 446 144 432 181 q 459 62 459 107 q 442 -17 459 18 q 406 -67 425 -52 l 168 -67 q 53 -31 85 -67 q 20 81 20 5 l 20 776 q 53 888 20 852 q 168 924 85 924 l 402 924 q 437 867 424 904 q 451 785 451 830 q 434 706 451 741 q 397 656 417 671 l 368 656 l 368 232 l 348 232 q 314 210 314 232 z "},"\\\\":{"ha":513,"x_min":27,"x_max":486,"o":"m 208 888 q 313 865 262 888 q 380 811 353 845 l 486 55 q 315 -7 433 -7 q 205 15 253 -7 q 133 72 157 37 l 27 817 q 208 888 85 888 z "},"]":{"ha":418,"x_min":-41,"x_max":398,"o":"m 71 232 l 51 232 l 51 656 l 21 656 q -16 706 1 671 q -33 785 -33 741 q -19 867 -33 830 q 16 924 -5 904 l 250 924 q 366 888 333 924 q 398 776 398 852 l 398 81 q 366 -31 398 5 q 250 -67 333 -67 l 13 -67 q -24 -17 -7 -52 q -41 62 -41 18 q -27 144 -41 107 q 8 201 -14 181 l 103 201 q 104 210 104 208 q 71 232 104 232 z "},"^":{"ha":636,"x_min":14,"x_max":623,"o":"m 313 593 q 293 588 298 593 q 288 569 288 583 q 308 455 288 556 l 281 354 q 181 334 237 334 q 79 350 125 334 q 14 394 32 366 l 140 857 q 215 879 163 869 q 311 888 266 888 q 407 880 357 888 q 479 861 457 872 l 623 376 q 568 347 606 359 q 488 334 530 334 q 422 338 445 334 q 372 352 399 342 q 360 396 365 375 q 356 414 358 406 q 350 436 354 422 q 336 496 347 450 q 321 556 325 542 q 317 575 317 571 q 313 593 316 579 z "},"_":{"ha":572,"x_min":14,"x_max":559,"o":"m 559 166 q 559 142 559 166 q 545 79 559 117 q 502 0 531 41 l 70 0 q 14 165 14 77 q 28 254 14 214 q 70 335 42 294 l 502 335 q 545 253 532 292 q 559 166 559 214 z "},"`":{"ha":415,"x_min":7,"x_max":408,"o":"m 136 1157 q 217 1135 184 1157 q 290 1063 251 1113 l 408 905 q 387 863 403 882 q 351 836 371 844 l 7 952 l 7 1023 q 35 1114 7 1079 q 136 1157 68 1157 z "},"a":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 z "},"b":{"ha":753,"x_min":25,"x_max":739,"o":"m 355 277 q 372 271 362 271 q 392 292 387 271 q 397 378 397 313 l 397 448 q 393 473 397 466 q 377 481 388 481 q 361 476 366 481 l 361 385 q 355 277 361 345 m 382 833 l 382 772 q 278 755 326 769 q 231 723 231 741 q 241 705 231 712 q 399 742 316 742 q 644 639 549 742 q 739 372 739 536 q 624 71 739 172 q 338 -21 519 -21 q 72 49 157 -21 q 25 149 25 87 l 25 923 q 103 954 58 942 q 196 966 149 966 q 325 936 274 966 q 382 833 382 900 z "},"c":{"ha":728,"x_min":14,"x_max":724,"o":"m 399 -21 q 118 88 223 -21 q 14 380 14 197 q 132 669 14 563 q 397 764 238 764 q 631 695 538 764 q 724 506 724 625 q 672 371 724 423 q 538 319 621 319 q 425 356 470 319 q 372 450 380 392 q 342 429 342 450 q 391 338 342 379 q 531 289 447 289 q 669 325 614 289 q 703 198 703 273 q 629 50 703 111 q 399 -21 543 -21 z "},"d":{"ha":778,"x_min":14,"x_max":783,"o":"m 408 481 q 392 488 401 488 q 372 466 377 488 q 366 380 366 445 l 366 311 q 371 285 366 292 q 387 277 376 277 q 402 282 397 277 l 402 373 q 408 481 402 439 m 359 882 q 439 945 395 924 q 549 966 482 966 q 682 921 631 966 q 734 789 734 872 l 734 342 q 783 210 734 241 q 783 197 783 207 l 783 185 q 725 35 783 89 q 597 -12 673 -12 q 506 10 545 -12 q 442 81 460 36 q 419 58 419 81 q 427 35 419 48 q 448 12 435 22 q 345 -12 408 -12 q 183 27 258 -12 q 64 147 109 67 q 14 369 14 239 q 111 642 14 543 q 359 741 208 741 q 515 707 449 741 q 523 722 523 714 q 475 757 523 743 q 378 771 427 771 q 359 882 378 840 z "},"e":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 z "},"f":{"ha":635,"x_min":8,"x_max":633,"o":"m 289 -9 q 160 20 208 -9 q 106 111 106 51 l 106 429 l 127 429 q 161 451 161 429 q 160 459 161 454 l 47 459 q 8 598 8 515 q 47 741 8 681 l 106 741 q 195 913 123 854 q 386 973 267 973 q 534 949 471 973 q 627 893 597 924 q 633 839 633 871 l 633 826 q 613 703 633 756 q 482 685 566 685 q 407 690 448 685 q 346 699 366 694 q 341 686 341 694 q 374 664 341 674 q 479 654 406 654 q 599 663 552 654 q 608 622 604 652 q 612 562 612 591 q 589 459 612 500 l 464 459 l 464 38 q 289 -9 390 -9 z "},"g":{"ha":766,"x_min":12,"x_max":758,"o":"m 405 486 q 387 511 405 511 q 370 490 370 511 l 370 420 q 386 416 375 416 q 401 424 397 416 q 405 454 405 432 l 405 486 m 430 212 q 356 218 387 212 q 354 206 354 212 q 375 186 354 191 q 430 181 397 181 q 610 212 536 181 q 724 130 684 193 q 758 7 758 77 q 651 -189 758 -119 q 377 -258 545 -258 q 117 -199 209 -258 q 33 -58 33 -144 q 48 6 33 -24 q 84 49 64 37 q 184 3 118 20 q 320 -15 250 -15 q 410 -9 390 -15 q 430 9 430 -4 q 426 23 430 16 q 341 16 392 16 q 136 53 210 16 q 45 188 45 98 q 59 253 45 223 q 101 298 73 283 q 38 368 64 321 q 12 484 12 415 q 109 689 12 614 q 363 764 207 764 q 508 739 438 764 l 508 787 q 614 802 548 802 q 715 780 680 802 q 757 684 757 753 q 749 623 757 646 q 726 575 741 600 q 744 464 744 530 q 659 278 744 344 q 430 212 574 212 z "},"h":{"ha":777,"x_min":25,"x_max":783,"o":"m 733 336 q 744 257 733 287 q 782 210 755 227 q 783 197 783 207 l 783 185 q 729 40 783 92 q 590 -12 675 -12 q 452 36 505 -12 q 390 203 390 91 q 394 287 390 250 q 400 338 399 323 q 404 368 402 354 q 406 408 406 381 q 399 446 406 434 q 379 457 392 457 q 357 452 367 457 l 366 341 q 354 196 354 273 q 389 56 354 119 q 202 -12 322 -12 q 83 24 134 -12 q 25 132 25 64 l 25 923 q 103 954 58 942 q 196 966 149 966 q 325 936 274 966 q 382 833 382 900 l 382 768 q 269 734 323 765 q 222 685 222 707 q 228 672 222 677 q 241 665 233 666 q 321 720 269 698 q 444 743 373 743 q 572 721 515 743 q 686 638 644 694 q 735 468 735 570 l 733 336 z "},"i":{"ha":414,"x_min":5,"x_max":420,"o":"m 370 610 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 l 25 652 q 52 667 37 661 q 81 680 66 672 q 28 732 52 695 q 5 819 5 769 q 61 958 5 904 q 199 1013 117 1013 q 336 957 281 1013 q 391 819 391 902 q 349 701 391 751 q 247 637 307 650 q 267 612 247 612 q 337 639 301 612 q 370 610 364 618 z "},"j":{"ha":421,"x_min":-71,"x_max":397,"o":"m 389 45 q 315 -182 389 -104 q 144 -250 248 -250 q -16 -202 40 -250 q -71 -70 -71 -154 q -63 -11 -71 -39 q -46 31 -55 17 q 45 39 -7 39 q 164 23 98 39 q 180 21 169 21 q 197 44 197 21 q 60 68 115 68 q 31 202 31 119 l 31 652 q 58 667 43 661 q 87 680 72 672 q 35 732 58 695 q 11 819 11 769 q 67 958 11 904 q 205 1013 123 1013 q 342 957 287 1013 q 397 819 397 902 q 355 701 397 751 q 253 637 313 650 q 273 612 253 612 q 343 639 307 612 q 346 637 344 639 q 361 627 349 635 q 389 604 374 619 l 389 45 z "},"k":{"ha":769,"x_min":25,"x_max":781,"o":"m 362 255 l 330 241 q 347 144 330 195 q 389 57 362 95 q 202 -12 321 -12 q 83 24 134 -12 q 25 132 25 64 l 25 923 q 103 954 58 942 q 196 966 149 966 q 325 936 274 966 q 382 833 382 900 l 382 761 q 351 585 382 671 q 329 559 345 576 q 304 529 313 543 q 295 506 295 515 q 311 488 295 496 q 394 595 364 537 q 450 750 425 654 q 470 753 458 751 q 508 760 481 755 q 546 764 535 764 q 709 716 650 764 q 767 585 767 669 q 714 442 767 502 q 587 361 665 389 q 745 309 650 325 q 781 168 781 243 q 734 43 781 93 q 588 -12 681 -12 q 434 59 494 -12 q 362 255 374 131 z "},"l":{"ha":414,"x_min":25,"x_max":420,"o":"m 370 819 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 371 38 420 88 q 231 -12 321 -12 q 88 38 141 -12 q 25 218 25 98 l 25 923 q 188 966 96 966 q 325 927 280 966 q 370 819 370 888 z "},"m":{"ha":1164,"x_min":-9,"x_max":1169,"o":"m 1120 336 q 1131 255 1120 286 q 1168 207 1141 224 q 1169 195 1169 203 l 1169 185 q 1115 40 1169 92 q 975 -12 1061 -12 q 837 35 889 -12 q 775 201 775 89 l 775 415 q 745 460 775 460 q 727 455 734 460 l 739 354 l 739 201 q 770 61 739 109 q 689 7 737 26 q 590 -12 640 -12 q 464 27 509 -12 q 410 177 410 75 l 410 415 q 380 460 410 460 q 361 455 368 460 l 374 354 l 374 174 q 394 57 374 98 q 208 -12 328 -12 q 87 24 136 -12 q 31 136 31 66 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 195 741 q 277 705 243 741 q 247 659 247 677 q 271 638 247 638 q 353 720 300 690 q 496 755 414 755 q 605 728 558 755 q 675 667 652 702 q 759 733 707 711 q 865 755 810 755 q 1056 679 988 755 q 1122 471 1122 603 l 1120 336 z "},"n":{"ha":783,"x_min":-9,"x_max":789,"o":"m 739 336 q 750 257 739 287 q 788 210 761 227 q 789 197 789 207 l 789 185 q 735 40 789 92 q 596 -12 681 -12 q 458 36 511 -12 q 396 203 396 91 q 400 287 396 250 q 407 338 405 323 q 410 368 408 354 q 412 408 412 381 q 405 446 412 434 q 386 457 398 457 q 363 452 373 457 l 372 341 q 360 196 360 273 q 395 56 360 119 q 208 -12 328 -12 q 90 24 140 -12 q 31 132 31 64 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 152 741 q 234 705 200 741 q 204 659 204 677 q 228 638 204 638 q 319 724 258 690 q 458 758 380 758 q 649 700 576 758 q 741 475 741 627 l 739 336 z "},"o":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 125 77 q 14 368 14 184 q 118 657 14 551 q 393 764 223 764 q 669 653 564 764 q 773 365 773 543 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 z "},"p":{"ha":770,"x_min":-9,"x_max":757,"o":"m 378 366 l 378 275 q 394 271 383 271 q 410 278 405 271 q 414 304 414 286 l 414 373 q 409 459 414 438 q 389 481 404 481 q 372 474 379 481 q 378 366 378 407 m 162 659 q 186 638 162 638 q 281 733 227 702 q 414 764 336 764 q 555 739 491 764 q 693 628 642 705 q 757 374 757 531 q 662 99 757 197 q 400 1 568 1 q 254 24 307 1 q 250 12 250 21 q 281 -17 250 -8 q 390 -30 313 -26 l 390 -210 q 237 -241 320 -241 q 88 -205 138 -241 q 31 -87 31 -167 l 31 459 q -9 599 -9 515 q 2 673 -9 633 q 31 741 13 713 l 127 741 q 218 725 186 741 q 162 659 162 684 z "},"q":{"ha":772,"x_min":14,"x_max":865,"o":"m 413 481 q 397 488 406 488 q 376 466 382 488 q 371 380 371 445 l 371 311 q 376 285 371 292 q 391 277 380 277 q 407 282 402 277 l 407 373 q 413 481 407 439 m 741 609 l 741 152 q 703 155 730 155 q 594 123 636 155 q 558 71 558 98 q 581 53 558 53 q 704 121 620 121 q 811 68 768 121 q 865 -27 840 35 l 735 -157 q 638 -232 682 -210 q 537 -254 594 -254 q 445 -239 480 -254 q 395 -205 410 -224 q 374 -1 395 -205 q 121 98 215 8 q 14 372 14 198 q 76 605 14 511 q 227 728 130 687 q 414 764 311 764 q 640 715 538 764 q 714 665 687 692 q 741 609 741 637 z "},"r":{"ha":644,"x_min":-9,"x_max":635,"o":"m 214 -9 q 85 20 133 -9 q 31 111 31 51 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 135 741 q 250 690 215 741 q 220 642 233 671 q 207 600 207 612 q 213 581 207 587 q 232 575 220 575 q 322 713 256 669 q 458 751 377 751 q 615 708 558 751 q 635 575 635 654 q 604 433 635 497 q 541 413 581 421 q 458 404 500 404 q 384 410 417 404 q 336 420 351 416 q 331 405 331 415 q 344 390 331 395 q 389 378 357 385 l 389 38 q 214 -9 315 -9 z "},"s":{"ha":707,"x_min":8,"x_max":706,"o":"m 385 532 q 367 511 367 526 l 367 507 q 368 503 367 504 q 387 504 375 504 l 404 504 q 548 480 481 504 q 659 406 616 457 q 706 258 706 347 q 610 50 706 120 q 355 -21 515 -21 q 104 32 195 -21 q 14 187 14 85 q 30 257 14 225 q 66 301 46 288 q 175 247 104 270 q 325 224 245 224 q 357 242 357 224 q 355 256 357 250 q 343 255 350 255 l 336 255 q 106 312 192 255 q 8 494 8 376 q 96 684 8 611 q 362 764 193 764 q 518 746 446 764 q 642 699 590 728 q 654 617 654 671 q 609 490 654 534 q 525 522 574 509 q 435 534 475 534 q 385 532 395 534 z "},"t":{"ha":602,"x_min":8,"x_max":593,"o":"m 100 429 l 142 429 q 176 451 176 429 q 175 459 176 454 l 23 459 q 8 565 8 507 q 17 661 8 624 q 123 735 56 685 q 173 882 142 781 q 182 908 177 895 q 303 922 235 922 q 437 907 371 922 l 437 741 l 554 741 q 593 601 593 682 q 583 526 593 564 q 554 460 573 487 l 457 460 l 457 357 q 530 271 457 271 l 559 271 q 573 181 573 219 q 514 38 573 87 q 344 -12 456 -12 q 166 50 233 -12 q 100 233 100 112 l 100 429 z "},"u":{"ha":779,"x_min":-9,"x_max":785,"o":"m 385 296 q 403 302 393 296 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 180 741 q 312 702 264 741 q 360 581 360 662 l 360 361 q 385 296 360 296 z "},"v":{"ha":709,"x_min":-39,"x_max":728,"o":"m 331 332 l 331 315 q 332 299 331 304 q 347 296 340 296 q 367 322 367 296 q 383 583 367 391 q 394 705 392 686 q 547 747 458 747 q 685 700 636 747 q 728 587 728 656 q 715 490 728 541 q 590 107 652 247 q 489 8 557 35 q 346 -12 439 -12 q 248 -4 296 -12 q 174 15 199 4 q 12 459 75 216 q -24 518 -9 480 q -39 597 -39 556 q 1 741 -39 681 q 170 741 1 741 q 302 691 259 741 q 345 581 335 653 q 331 332 331 454 z "},"w":{"ha":1061,"x_min":-18,"x_max":1094,"o":"m 345 378 q 349 325 345 338 q 371 303 353 303 l 377 303 q 383 304 379 303 q 381 357 381 323 q 385 471 381 392 q 388 700 388 549 q 542 746 455 746 q 654 720 610 746 q 715 644 699 693 q 711 550 715 621 q 669 292 696 380 q 685 288 677 288 q 699 294 694 288 q 736 455 718 316 q 753 663 750 591 q 755 703 754 689 q 824 734 781 722 q 914 746 867 746 q 1044 702 994 746 q 1094 585 1094 659 q 1072 437 1094 531 q 1013 236 1050 342 q 953 88 976 130 q 875 9 920 30 q 736 -12 830 -12 q 662 -6 707 -12 q 600 7 616 0 q 566 75 585 30 q 538 144 547 119 q 513 121 513 140 q 522 91 513 116 q 534 58 530 66 q 524 36 532 54 q 507 6 516 19 q 356 -12 454 -12 q 187 16 257 -12 q 93 194 133 90 q 26 460 54 298 q -18 600 -18 518 q 22 743 -18 682 l 186 743 q 321 697 283 743 q 350 583 350 662 l 345 378 z "},"x":{"ha":766,"x_min":0,"x_max":766,"o":"m 222 764 q 316 746 263 764 q 324 731 319 741 q 336 707 329 722 q 349 684 344 693 q 363 656 353 675 q 376 631 373 637 q 383 617 379 625 q 389 605 387 609 l 433 747 q 491 759 456 755 q 552 764 526 764 q 701 710 649 764 q 753 574 753 656 q 693 430 753 492 q 560 351 642 377 q 583 328 560 328 q 651 353 603 328 q 699 287 669 328 q 766 197 730 246 q 710 45 763 102 q 577 -12 657 -12 q 446 31 496 -12 q 374 145 396 73 l 320 14 q 202 -13 273 -13 q 59 42 117 -13 q 0 187 0 96 q 118 374 0 299 q 189 410 135 385 q 165 427 183 427 q 103 400 139 427 q 36 470 66 422 q 6 572 6 517 q 68 716 6 664 q 222 764 125 764 z "},"y":{"ha":742,"x_min":-19,"x_max":761,"o":"m 353 342 l 353 327 q 353 311 353 316 q 368 308 360 308 q 388 338 388 308 q 399 545 388 437 q 423 711 410 652 q 570 751 478 751 q 711 715 661 751 q 761 629 761 680 q 736 456 761 608 q 665 129 708 300 q 633 32 656 94 q 585 -72 610 -31 q 385 -231 504 -200 q 273 -245 330 -245 q 104 -191 164 -245 q 50 -70 50 -142 q 92 66 50 3 q 130 69 102 69 q 197 62 157 69 q 312 41 310 41 q 322 40 317 41 q 338 39 328 39 q 354 44 347 39 q 361 66 361 50 l 201 96 q 98 199 142 121 q 26 460 45 295 q -19 600 -19 518 q 22 741 -19 681 l 196 741 q 327 691 283 741 q 368 582 359 654 q 353 342 353 464 z "},"z":{"ha":673,"x_min":-7,"x_max":672,"o":"m 656 568 q 651 514 656 549 q 638 458 646 479 q 487 312 575 372 q 360 294 400 308 q 319 264 319 281 q 327 248 319 253 q 406 272 355 263 q 502 281 456 281 l 633 281 q 661 213 650 251 q 672 147 672 176 q 629 31 672 68 q 536 0 595 0 l 53 0 q -7 197 -7 63 q 10 313 -7 245 q 185 468 72 381 q 235 509 208 486 q 217 525 231 525 q 208 524 214 525 q 125 459 188 517 l 41 459 q 1 600 1 525 q 16 684 1 648 q 53 741 31 721 l 612 741 q 656 568 656 677 z "},"{":{"ha":438,"x_min":-7,"x_max":425,"o":"m 414 -1 q 248 -50 342 -50 q 121 -7 172 -50 q 71 119 71 35 l 71 214 q 58 286 71 262 q 14 309 45 309 q -7 433 -7 348 q 12 563 -7 518 q 81 656 81 564 l 81 755 q 132 881 81 839 q 258 924 182 924 q 425 875 353 924 q 408 705 408 827 l 408 573 q 387 486 408 516 q 331 441 366 456 q 282 455 307 455 q 254 433 257 455 q 354 391 321 420 q 399 277 399 351 q 399 174 399 277 q 414 -1 399 44 z "},"|":{"ha":353,"x_min":24,"x_max":329,"o":"m 184 -131 q 63 -98 102 -131 q 24 -9 24 -65 l 24 987 q 83 1015 45 1002 q 168 1028 122 1028 q 290 998 251 1028 q 329 913 329 967 q 329 -83 329 913 q 269 -116 308 -100 q 184 -131 230 -131 z "},"}":{"ha":438,"x_min":14,"x_max":445,"o":"m 14 875 q 180 924 85 924 q 307 881 256 924 q 357 755 357 839 l 357 656 q 426 563 357 564 q 445 433 445 518 q 425 309 445 348 q 380 286 393 309 q 368 214 368 262 l 368 119 q 317 -7 368 35 q 191 -50 266 -50 q 24 -1 96 -50 q 39 174 39 44 l 39 277 q 84 391 39 351 q 184 433 117 420 q 156 455 181 455 q 107 441 132 455 q 31 573 31 471 l 31 705 q 14 875 31 825 z "},"~":{"ha":679,"x_min":20,"x_max":659,"o":"m 659 369 q 659 331 659 369 q 606 248 659 293 q 464 203 554 203 q 280 235 374 203 q 231 250 262 241 l 39 250 q 20 390 20 314 q 73 511 20 466 q 215 556 125 556 q 393 526 304 556 q 448 509 417 519 l 640 509 q 659 369 659 446 z "}," ":{"ha":326,"x_min":0,"x_max":0,"o":""},"¡":{"ha":460,"x_min":34,"x_max":426,"o":"m 129 576 q 190 560 164 560 q 218 587 218 560 q 87 650 140 593 q 34 786 34 707 q 92 922 34 865 q 230 979 149 979 q 369 922 311 979 q 426 785 426 865 q 398 685 426 730 q 326 612 371 639 q 391 448 366 542 q 415 260 415 354 l 415 39 q 344 6 388 20 q 249 -7 300 -7 q 102 45 148 -7 q 57 217 57 96 l 57 260 q 129 576 57 419 z "},"¢":{"ha":736,"x_min":1,"x_max":710,"o":"m 1 379 q 83 631 1 531 q 281 752 158 722 q 262 776 281 776 q 230 769 251 776 q 193 754 209 762 l 193 823 q 262 870 214 852 q 366 888 311 888 q 503 852 452 888 q 554 747 554 817 l 554 732 q 710 504 710 661 q 659 371 710 423 q 524 319 608 319 q 411 356 456 319 q 358 450 366 392 q 328 429 328 450 q 377 338 328 379 q 517 289 433 289 q 602 302 562 289 q 664 335 641 316 q 703 197 703 275 q 637 58 703 120 q 463 -7 570 -5 l 463 -13 q 490 -36 463 -36 q 554 -24 517 -36 l 554 -74 q 378 -138 497 -138 q 244 -102 296 -138 q 193 3 193 -66 l 193 35 q 53 172 105 82 q 1 379 1 262 z "},"£":{"ha":730,"x_min":15,"x_max":763,"o":"m 38 569 l 106 569 q 149 516 121 516 q 163 522 158 516 q 123 652 123 575 q 214 832 123 769 q 413 888 293 888 q 599 834 532 888 q 666 701 666 780 q 639 625 666 656 q 562 593 612 593 l 540 593 q 493 627 530 627 q 456 615 467 627 q 444 589 444 602 q 450 569 444 576 l 701 569 q 720 468 720 516 q 711 379 720 420 q 690 315 703 339 q 549 345 643 345 q 421 315 484 345 q 380 288 396 302 q 365 261 365 273 q 377 241 365 249 q 439 289 408 273 q 557 315 489 315 q 712 261 654 315 q 763 144 763 213 q 668 -24 763 26 q 596 -6 633 -11 q 503 -2 559 -2 l 75 -2 q 39 148 39 53 q 49 249 39 199 q 111 264 92 252 q 129 289 129 276 l 46 289 q 15 428 15 349 q 38 569 15 507 z "},"¤":{"ha":781,"x_min":7,"x_max":774,"o":"m 368 492 l 368 382 q 373 337 368 347 q 388 326 378 326 q 402 337 398 326 q 406 382 406 349 l 406 492 q 402 536 406 524 q 388 546 398 546 q 373 536 377 546 q 368 492 368 526 m 229 85 l 183 52 q 71 127 120 76 q 7 244 22 179 l 38 274 q 9 436 9 345 q 37 601 9 528 l 7 629 q 73 751 23 699 q 185 829 122 804 l 226 795 q 387 825 302 825 q 549 791 473 825 l 595 829 q 708 751 659 804 q 774 629 758 699 l 733 591 q 760 435 760 519 q 735 281 760 350 l 774 244 q 708 125 758 178 q 597 52 662 76 l 549 87 q 389 58 475 58 q 229 85 302 58 z "},"¥":{"ha":763,"x_min":-33,"x_max":795,"o":"m 565 154 l 565 48 q 389 -14 503 -14 q 255 21 301 -14 q 205 132 205 58 l 205 184 l 68 184 q 41 302 41 235 q 61 423 41 370 l 144 423 q 145 433 145 425 q 139 446 145 441 q 125 453 133 452 q 105 454 118 454 l 78 454 q -33 806 -33 588 q 53 859 0 838 q 177 881 106 881 q 326 845 268 881 q 344 787 336 821 q 370 665 353 753 q 343 541 366 642 q 340 526 342 534 q 337 510 339 518 q 335 491 335 502 q 357 469 335 469 q 420 742 375 527 q 443 836 428 775 q 505 872 463 856 q 598 888 548 888 q 742 842 688 888 q 795 718 795 795 q 708 492 795 615 l 657 423 l 698 423 q 718 302 718 370 q 691 184 718 235 l 498 184 l 498 178 q 507 159 498 164 q 538 154 515 154 l 565 154 z "},"¦":{"ha":359,"x_min":27,"x_max":332,"o":"m 188 -131 q 66 -98 105 -131 q 27 -9 27 -65 l 28 414 q 115 450 62 439 q 27 563 27 473 l 27 987 q 87 1016 50 1003 q 172 1028 125 1028 q 293 998 254 1028 q 332 913 332 967 q 332 488 332 913 q 243 447 298 460 q 332 340 332 424 l 332 -83 q 272 -116 311 -100 q 188 -131 233 -131 z "},"§":{"ha":715,"x_min":1,"x_max":714,"o":"m 714 395 q 695 318 714 356 q 650 260 677 279 q 480 349 594 311 q 378 380 437 363 q 180 445 255 414 q 50 548 87 483 q 30 628 30 582 q 107 804 30 736 q 380 887 200 887 q 650 825 538 887 q 663 752 663 798 q 650 676 663 707 q 620 632 637 645 q 431 677 545 677 q 389 670 402 677 q 375 652 375 663 q 376 645 375 647 q 398 646 385 646 l 421 646 q 622 589 544 646 q 714 395 714 523 m 1 345 q 22 431 1 395 q 65 475 43 467 q 337 354 137 409 q 535 290 456 322 q 666 186 629 250 q 686 105 686 152 q 608 -71 686 -3 q 336 -154 515 -154 q 178 -135 247 -154 q 66 -92 110 -117 q 53 -19 53 -64 q 65 57 53 26 q 96 101 78 88 q 284 56 171 56 q 327 63 313 56 q 340 78 340 70 q 340 88 340 86 q 317 87 331 87 l 294 87 q 94 144 172 87 q 1 345 1 211 z "},"¨":{"ha":484,"x_min":7,"x_max":477,"o":"m 134 1153 q 242 1095 203 1153 q 349 1153 282 1153 q 439 1115 401 1153 q 477 1024 477 1077 q 442 933 477 970 q 350 897 407 897 q 243 950 280 897 q 136 895 208 895 q 43 932 79 895 q 7 1023 7 970 q 44 1115 7 1076 q 134 1153 81 1153 z "},"©":{"ha":888,"x_min":7,"x_max":881,"o":"m 450 -10 q 230 38 331 -10 q 72 182 130 85 q 7 442 7 289 q 68 703 7 595 q 226 852 123 799 q 438 899 321 899 q 760 774 640 899 q 881 445 881 650 q 755 97 881 215 q 450 -10 642 -10 m 347 308 q 460 267 393 267 q 547 284 514 267 q 579 316 579 301 q 564 337 579 332 q 465 298 522 298 q 370 336 407 298 q 330 446 330 376 q 368 554 330 516 q 465 591 406 591 q 561 560 523 591 q 570 576 570 568 q 541 608 570 593 q 462 622 511 622 q 340 576 388 622 q 293 443 293 530 q 347 308 293 355 z "},"ª":{"ha":472,"x_min":5,"x_max":492,"o":"m 458 582 q 492 495 458 515 q 492 489 492 493 l 492 483 q 461 383 492 418 q 368 347 431 347 q 308 362 334 347 q 273 406 282 377 q 253 389 253 406 q 262 361 253 378 q 189 347 232 347 q 56 393 105 347 q 5 517 5 438 q 60 635 5 596 q 191 675 114 675 q 252 668 231 675 q 254 678 254 671 q 240 699 254 692 q 189 705 225 705 q 73 680 121 705 q 41 769 41 714 q 48 822 41 804 q 231 860 134 860 q 401 809 344 860 q 458 663 458 758 l 458 582 m 232 552 q 213 535 213 552 q 235 519 213 519 q 265 552 265 519 l 232 552 z "},"«":{"ha":855,"x_min":10,"x_max":845,"o":"m 526 677 l 674 782 q 793 694 751 759 q 826 576 826 641 q 817 498 826 538 l 678 408 l 678 403 q 683 392 678 397 q 697 387 688 387 q 721 393 707 387 q 763 418 734 399 q 824 354 802 399 q 845 264 845 309 q 784 134 845 191 q 678 68 736 87 l 539 178 q 553 254 553 212 q 416 441 553 362 l 521 517 q 532 625 532 568 q 526 677 532 655 m 10 441 q 35 587 10 521 l 342 825 q 462 736 420 802 q 494 619 494 684 q 486 534 494 573 l 313 414 l 313 410 q 333 394 313 394 q 385 418 345 394 l 412 404 q 489 335 460 376 q 517 253 517 294 q 460 122 517 182 q 359 50 417 77 l 45 288 q 20 356 29 314 q 10 441 10 398 z "},"¬":{"ha":882,"x_min":14,"x_max":854,"o":"m 703 618 q 817 582 781 618 q 853 482 853 545 l 854 153 q 766 112 806 123 q 678 101 725 101 q 544 133 593 101 q 494 230 494 165 l 494 301 l 547 301 q 568 319 568 301 q 563 336 568 331 l 53 336 q 14 475 14 393 q 53 618 14 558 l 703 618 z "},"­":{"ha":503,"x_min":14,"x_max":489,"o":"m 489 414 q 489 390 489 414 q 475 327 489 366 q 432 248 461 289 l 70 248 q 14 414 14 326 q 28 502 14 463 q 70 583 42 542 l 432 583 q 475 501 462 540 q 489 414 489 463 z "},"®":{"ha":505,"x_min":7,"x_max":498,"o":"m 251 722 q 316 673 316 722 q 252 629 316 629 q 206 631 217 629 l 206 717 q 251 722 229 722 m 344 672 q 252 744 344 744 q 207 739 232 744 q 181 730 181 734 l 181 543 q 193 532 181 532 q 206 536 201 532 l 206 609 q 252 608 232 608 l 258 608 q 263 608 261 608 l 304 554 q 330 532 321 532 q 344 536 339 532 q 349 545 349 540 l 288 611 q 344 672 344 622 m 84 436 q 7 631 7 503 q 80 827 7 758 q 254 888 145 888 q 430 818 362 888 q 498 633 498 748 q 427 437 498 503 q 258 377 364 377 q 84 436 151 377 z "},"¯":{"ha":500,"x_min":14,"x_max":487,"o":"m 446 1103 q 487 975 487 1038 q 446 848 487 912 l 55 848 q 14 975 14 909 q 55 1103 14 1041 l 446 1103 z "},"°":{"ha":444,"x_min":7,"x_max":437,"o":"m 237 717 q 222 728 233 728 q 208 718 211 728 q 203 672 203 706 q 208 627 203 637 q 222 616 212 616 q 237 627 233 616 q 240 672 240 640 q 237 717 240 705 m 75 507 q 7 672 7 564 q 75 838 7 779 q 226 888 132 888 q 378 829 320 888 q 437 667 437 770 q 377 511 437 565 q 225 456 318 456 q 75 507 132 456 z "},"±":{"ha":699,"x_min":7,"x_max":692,"o":"m 530 320 l 630 320 q 685 156 685 242 q 630 0 685 70 l 68 0 q 14 158 14 72 q 26 240 14 205 q 68 320 38 276 l 172 320 q 224 226 177 264 q 355 188 271 188 q 530 275 481 188 l 530 320 m 347 887 q 471 849 426 887 q 516 740 516 812 l 516 701 l 637 701 q 680 620 667 655 q 692 538 692 585 q 679 455 692 492 q 637 379 665 418 l 496 379 l 496 285 q 435 235 475 251 q 354 218 395 218 q 244 251 285 218 q 203 353 203 283 q 203 379 203 353 l 61 379 q 20 455 33 418 q 7 538 7 492 q 19 621 7 585 q 61 701 32 657 l 203 701 q 228 706 222 701 q 235 724 235 711 l 235 730 l 184 730 l 184 821 q 347 887 241 887 z "},"²":{"ha":488,"x_min":3,"x_max":484,"o":"m 37 539 q 189 590 123 553 q 268 693 268 636 q 259 716 268 708 q 240 724 251 724 q 220 717 229 724 q 212 695 212 710 q 228 664 212 680 q 175 616 205 633 q 81 576 144 599 q 3 717 3 625 q 66 845 3 796 q 242 894 130 894 q 418 834 354 894 q 482 683 482 774 q 433 567 482 614 q 305 506 385 519 q 304 500 304 505 q 325 482 304 482 q 385 501 345 482 q 444 540 425 519 q 484 433 484 500 q 445 328 484 366 l 47 328 q 13 438 13 378 q 37 539 13 498 z "},"³":{"ha":515,"x_min":0,"x_max":515,"o":"m 104 593 l 120 593 q 136 592 127 592 q 175 515 140 545 q 255 486 210 486 q 283 505 283 486 q 282 515 283 509 q 273 514 275 514 l 265 514 q 195 540 223 514 q 168 607 168 566 q 195 674 168 648 q 265 700 223 700 l 273 700 q 282 699 275 700 q 283 709 283 705 q 255 728 283 728 q 178 702 213 728 q 136 632 144 676 q 50 654 85 632 q 5 739 5 683 q 72 851 5 808 q 255 895 140 895 q 435 844 369 895 q 502 711 502 793 q 470 630 502 662 q 435 642 447 642 q 418 637 422 642 q 413 627 413 633 q 416 613 413 621 q 482 584 453 613 q 515 492 515 549 q 445 357 515 403 q 259 311 375 311 q 71 360 142 311 q 0 490 0 408 q 26 564 0 535 q 104 593 53 593 z "},"´":{"ha":424,"x_min":14,"x_max":410,"o":"m 380 957 q 307 915 356 933 l 71 829 q 35 856 51 836 q 14 898 19 875 l 167 1120 q 279 1157 219 1157 q 375 1120 339 1157 q 410 1035 410 1083 q 380 957 410 987 z "},"µ":{"ha":789,"x_min":1,"x_max":795,"o":"m 87 -185 q 36 -66 36 -148 q 43 19 36 -31 q 56 83 51 69 q 98 58 79 58 q 117 75 117 58 q 116 83 117 78 q 36 272 36 122 l 36 469 q 1 602 1 530 q 11 680 1 640 q 41 751 20 720 l 191 751 q 322 711 275 751 q 370 591 370 671 l 370 361 q 378 310 370 323 q 394 296 385 296 q 413 302 404 296 q 406 372 406 325 l 406 717 q 579 760 478 760 q 679 745 636 760 q 745 705 722 730 l 745 342 q 794 210 745 241 q 795 197 795 207 l 795 185 q 747 37 795 87 q 618 -12 699 -12 q 555 3 576 -12 q 579 26 579 14 q 568 47 579 39 q 500 14 543 28 q 402 0 458 0 q 317 9 347 0 q 312 -7 312 0 q 332 -25 312 -20 q 395 -31 352 -31 l 395 -170 q 230 -221 326 -221 q 87 -185 134 -221 z "},"¶":{"ha":776,"x_min":12,"x_max":747,"o":"m 301 886 l 352 886 l 352 327 l 305 327 q 91 402 170 327 q 12 602 12 477 q 88 807 12 727 q 301 886 164 886 m 389 -100 l 389 888 l 747 888 l 747 -21 q 693 -125 747 -90 q 562 -158 644 -158 q 389 -100 456 -158 z "},"·":{"ha":389,"x_min":34,"x_max":355,"o":"m 81 559 q 194 606 127 606 q 308 559 260 606 q 355 445 355 511 q 308 332 355 379 q 194 286 260 286 q 81 332 127 286 q 34 445 34 379 q 81 559 34 511 z "},"¸":{"ha":417,"x_min":14,"x_max":404,"o":"m 153 -23 q 146 -5 153 -12 q 121 5 140 1 l 90 12 l 90 54 q 119 128 90 100 q 196 155 147 155 q 271 128 244 155 q 298 59 298 101 l 298 43 q 372 -8 348 22 q 404 -103 404 -47 q 340 -228 404 -184 q 201 -267 286 -267 q 65 -230 117 -267 q 14 -130 14 -194 q 64 -35 14 -65 q 114 -45 86 -45 q 153 -23 153 -45 z "},"¹":{"ha":373,"x_min":-27,"x_max":366,"o":"m 85 518 q 140 525 118 518 q 161 545 161 532 q 157 565 161 558 q 90 553 126 553 q 7 587 41 553 q -27 686 -27 621 q -9 768 -27 731 q 7 772 -3 769 q 27 777 18 775 q 43 781 35 779 q 134 826 98 794 q 174 875 155 844 l 278 875 q 345 857 323 875 q 366 789 366 839 l 366 374 q 229 323 317 323 q 123 350 161 323 q 85 432 85 377 l 85 518 z "},"º":{"ha":524,"x_min":7,"x_max":517,"o":"m 252 660 l 252 538 q 262 536 256 536 q 283 551 278 536 q 288 608 288 567 q 281 666 288 649 q 267 675 277 675 q 252 660 252 675 m 87 408 q 7 605 7 477 q 87 802 7 733 q 268 861 157 861 q 448 791 379 861 q 517 600 517 722 q 447 413 517 477 q 266 349 376 349 q 87 408 157 349 z "},"»":{"ha":847,"x_min":10,"x_max":837,"o":"m 534 473 q 507 463 524 473 l 479 448 l 357 534 q 349 619 349 574 q 382 736 349 684 q 500 825 422 802 l 812 583 q 837 437 837 517 q 827 353 837 395 q 802 285 818 311 l 513 56 q 408 122 456 76 q 347 253 347 180 q 460 396 347 333 l 555 449 q 534 473 555 473 m 42 693 q 153 781 80 759 l 318 667 q 312 612 312 652 q 324 519 312 572 l 447 431 q 342 346 372 387 q 312 253 312 305 q 324 186 312 221 l 173 68 q 75 130 121 85 q 18 253 18 183 q 123 381 18 322 q 191 418 123 381 q 170 442 191 442 q 156 438 163 442 l 132 427 l 19 498 q 10 584 10 529 q 42 693 10 639 z "},"¼":{"ha":1008,"x_min":-12,"x_max":993,"o":"m 722 330 l 711 330 q 670 282 699 311 l 671 271 l 722 271 l 722 330 m 935 72 l 935 17 q 797 -20 880 -20 q 714 -11 745 -20 q 656 14 684 -3 l 656 44 l 673 44 q 696 64 696 44 q 693 77 696 70 l 574 77 q 449 165 473 77 q 426 140 426 165 q 452 91 426 115 l 389 -46 q 279 -72 349 -72 q 151 -41 209 -72 q 85 35 93 -9 l 214 315 q 268 310 241 310 q 315 334 315 310 q 313 345 315 340 q 268 342 293 342 q 153 372 194 342 q 112 461 112 401 l 112 556 q 172 564 149 556 q 195 585 195 571 q 190 608 195 602 q 117 595 158 595 q 25 632 62 595 q -12 740 -12 669 q 7 829 -12 787 q 64 844 16 832 q 209 947 157 866 l 322 947 q 394 930 373 947 q 420 854 420 907 l 420 764 l 366 648 q 361 632 361 640 q 386 610 361 613 l 541 935 q 652 962 584 962 q 779 929 720 962 q 845 854 838 897 l 737 626 l 705 626 q 679 602 679 626 l 679 597 q 680 591 679 593 l 802 591 q 892 570 856 591 q 935 492 935 543 l 935 313 q 901 294 901 313 l 901 288 q 903 279 901 286 l 975 279 q 993 171 993 232 q 935 72 993 85 z "},"½":{"ha":1031,"x_min":-12,"x_max":1017,"o":"m 815 185 q 834 170 815 170 q 905 185 865 170 q 973 224 945 200 q 1004 177 991 208 q 1017 119 1017 146 q 975 -7 1017 35 l 538 -7 q 503 117 509 51 l 575 275 q 623 270 595 270 q 739 309 696 270 q 774 378 774 340 q 755 397 774 397 q 745 395 751 397 q 614 300 723 300 q 557 314 583 300 l 389 -46 q 279 -72 349 -72 q 151 -41 209 -72 q 85 35 93 -9 l 214 315 q 268 310 241 310 q 315 334 315 310 q 313 345 315 340 q 268 342 293 342 q 153 372 194 342 q 112 461 112 401 l 112 556 q 172 564 149 556 q 195 585 195 571 q 190 608 195 602 q 117 595 158 595 q 25 632 62 595 q -12 740 -12 669 q 7 829 -12 787 q 64 844 16 832 q 209 947 157 866 l 322 947 q 394 930 373 947 q 420 854 420 907 l 420 764 l 366 648 q 361 632 361 640 q 386 610 361 613 l 541 935 q 652 962 584 962 q 779 929 720 962 q 845 854 838 897 l 740 646 q 675 624 675 646 q 677 611 675 615 q 743 617 708 617 q 942 549 867 617 q 1015 376 1015 481 q 960 252 1015 303 q 817 195 905 200 l 815 185 z "},"¾":{"ha":1069,"x_min":8,"x_max":1055,"o":"m 784 336 l 772 336 q 732 289 761 318 l 732 278 l 784 278 l 784 336 m 311 759 q 286 778 311 778 q 203 747 242 778 q 156 659 165 716 q 137 659 151 659 l 119 659 q 42 691 69 659 q 15 771 15 724 q 88 903 15 852 q 285 955 161 955 q 430 923 362 955 q 517 838 498 890 l 458 715 q 454 699 454 705 q 480 677 454 679 l 602 935 q 714 962 646 962 q 841 929 782 962 q 907 854 899 897 l 799 626 l 767 626 q 741 602 741 626 l 741 597 q 741 591 741 593 l 863 591 q 954 570 918 591 q 997 492 997 543 l 997 313 q 963 294 963 313 l 963 288 q 964 279 963 286 l 1037 279 q 1055 171 1055 232 q 997 72 1055 85 l 997 17 q 859 -20 941 -20 q 776 -11 806 -20 q 718 14 745 -3 l 718 44 l 735 44 q 758 64 758 44 q 755 77 758 70 l 623 77 q 499 165 524 77 q 474 141 474 165 q 484 108 474 127 q 506 80 494 90 l 451 -46 q 340 -72 410 -72 q 213 -41 271 -72 q 146 35 155 -9 l 267 290 q 285 289 276 289 q 349 298 332 289 q 367 320 367 307 q 365 330 367 326 q 285 319 322 319 q 85 372 163 319 q 8 513 8 425 q 37 595 8 564 q 123 626 65 626 l 139 626 q 156 625 146 625 q 202 544 164 575 q 282 513 240 513 q 300 530 300 513 q 298 541 300 535 q 221 571 252 545 q 191 643 191 597 q 226 720 191 689 q 309 749 260 749 l 311 759 z "},"¿":{"ha":680,"x_min":-27,"x_max":707,"o":"m 321 104 q 348 71 321 71 q 376 100 376 71 q 373 116 376 110 q 370 124 371 121 q 409 143 378 130 q 570 254 531 193 q 667 178 627 237 q 707 47 707 119 q 604 -153 707 -77 q 346 -230 500 -230 q 64 -134 163 -230 q -27 90 -27 -46 q 12 243 -27 174 q 95 346 45 303 q 199 415 145 389 q 241 386 218 397 q 276 376 263 376 q 295 380 290 376 q 300 397 300 385 q 201 463 239 414 q 162 580 162 513 q 220 713 162 658 q 358 768 277 768 q 497 712 439 768 q 554 580 554 657 q 517 465 554 513 q 561 361 561 421 q 524 249 561 290 q 393 170 486 209 q 337 137 353 152 q 321 104 321 122 z "},"À":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 351 1157 q 432 1135 398 1157 q 504 1063 465 1113 l 640 882 q 440 918 554 918 q 347 911 395 918 l 221 952 l 221 1023 q 249 1114 221 1079 q 351 1157 282 1157 z "},"Á":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 444 918 q 258 891 347 918 l 416 1120 q 528 1157 468 1157 q 624 1120 588 1157 q 659 1035 659 1083 q 631 960 659 987 q 544 911 604 932 q 444 918 503 918 z "},"Â":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 415 970 q 412 967 415 970 q 410 954 410 964 q 416 918 410 943 q 209 873 302 913 l 286 1110 q 354 1133 312 1124 q 431 1141 395 1141 q 578 1115 527 1141 l 663 871 q 452 918 583 915 q 435 975 443 945 q 415 970 420 975 z "},"Ã":{"ha":915,"x_min":9,"x_max":912,"o":"m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 376 885 245 871 q 534 853 468 853 q 598 866 576 853 q 758 719 733 821 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 632 926 q 535 884 600 884 q 406 907 471 884 q 378 916 388 913 q 263 892 283 900 q 259 936 263 893 q 255 1015 255 979 q 282 1114 255 1078 q 380 1156 314 1156 q 441 1150 420 1156 q 469 1143 463 1145 q 480 1140 475 1141 q 496 1134 485 1138 q 517 1127 508 1130 l 652 1127 q 659 1021 659 1080 q 632 926 659 962 z "},"Ä":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 321 1153 q 429 1095 390 1153 q 536 1153 469 1153 q 627 1115 589 1153 q 665 1028 665 1077 q 640 947 665 979 q 576 902 616 914 q 463 918 518 916 q 431 950 444 930 q 397 916 417 930 q 289 899 339 912 q 220 943 246 909 q 194 1027 194 977 q 231 1115 194 1076 q 321 1153 268 1153 z "},"Å":{"ha":915,"x_min":9,"x_max":912,"o":"m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 270 863 204 841 q 311 819 285 840 q 356 798 337 798 q 375 819 373 798 q 299 882 328 839 q 269 979 269 925 q 320 1103 269 1052 q 444 1154 371 1154 q 567 1103 516 1154 q 618 979 618 1052 q 580 871 618 918 q 696 815 649 852 q 758 719 743 777 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 z "},"Æ":{"ha":1215,"x_min":9,"x_max":1227,"o":"m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 612 852 549 888 q 696 875 654 875 l 1179 875 q 1208 804 1198 842 q 1217 735 1217 766 q 1191 632 1217 667 q 1116 597 1164 597 l 842 597 q 817 578 817 597 q 817 572 817 578 q 819 567 817 568 l 1143 567 q 1164 514 1155 546 q 1172 452 1172 479 q 1142 326 1172 372 l 995 326 q 856 318 892 326 q 810 305 819 311 q 801 290 801 299 q 810 275 801 280 q 884 291 846 286 q 995 296 935 296 l 1185 296 q 1227 155 1227 237 q 1215 67 1227 109 q 1181 -1 1204 25 l 647 -1 q 532 35 574 -1 q 483 125 493 66 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 450 446 q 467 440 455 440 q 486 445 478 440 q 463 567 469 548 q 440 587 455 587 q 424 583 433 587 l 450 446 z "},"Ç":{"ha":853,"x_min":8,"x_max":843,"o":"m 454 270 q 467 273 461 270 l 467 335 q 596 386 513 366 q 758 406 679 406 q 818 296 793 369 q 843 164 842 223 q 775 86 822 123 q 642 12 717 39 q 597 55 621 39 q 555 71 572 71 q 530 50 531 71 q 635 -103 635 9 q 572 -228 635 -184 q 433 -267 518 -267 q 297 -230 349 -267 q 245 -130 245 -194 q 296 -35 245 -65 q 346 -45 318 -45 q 385 -27 385 -45 q 380 -17 385 -21 q 361 -10 376 -13 q 102 137 197 19 q 8 446 8 255 q 144 785 8 661 q 283 868 203 840 q 450 897 362 897 q 730 814 621 897 q 839 610 839 731 q 783 474 839 518 q 630 431 726 431 q 524 457 577 431 q 460 506 470 483 q 462 593 460 562 q 457 594 460 594 l 452 594 q 436 588 442 594 q 426 564 431 583 q 422 465 422 546 q 454 270 422 270 z "},"È":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 294 1157 q 377 1135 341 1157 q 448 1063 412 1112 q 474 1028 449 1062 q 508 981 498 994 q 530 952 518 968 q 551 924 542 936 q 565 905 559 913 l 304 905 l 165 952 l 165 1023 q 193 1114 165 1079 q 294 1157 226 1157 z "},"É":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 231 902 l 382 1120 q 494 1157 434 1157 q 590 1120 554 1157 q 625 1035 625 1083 q 595 957 625 987 q 522 915 571 933 l 495 905 l 311 905 l 250 903 q 231 902 237 903 z "},"Ê":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 170 898 l 239 1110 q 306 1133 264 1124 q 384 1141 348 1141 q 531 1115 479 1141 l 604 905 l 415 905 q 397 964 402 944 q 394 975 395 970 q 374 970 380 975 q 369 953 369 965 q 380 905 369 941 l 319 905 q 170 898 210 905 z "},"Ë":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 298 905 q 270 904 290 905 q 236 903 249 903 q 175 949 197 916 q 153 1023 153 982 q 190 1115 153 1076 q 281 1153 227 1153 q 389 1095 349 1153 q 495 1153 429 1153 q 586 1115 548 1153 q 624 1023 624 1077 q 603 951 624 983 q 545 905 582 919 l 446 905 q 390 950 412 918 q 336 905 370 920 l 298 905 z "},"Ì":{"ha":439,"x_min":-14,"x_max":418,"o":"m 418 752 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 m 115 1157 q 198 1135 162 1157 q 269 1063 233 1112 q 295 1028 270 1062 q 329 981 319 994 q 351 952 339 968 q 372 924 363 936 q 386 905 380 913 q 372 885 382 894 q 225 918 313 918 q 123 905 174 918 l -14 952 l -14 1023 q 14 1114 -14 1079 q 115 1157 47 1157 z "},"Í":{"ha":439,"x_min":22,"x_max":445,"o":"m 418 752 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 m 48 898 l 201 1120 q 314 1157 254 1157 q 409 1120 374 1157 q 445 1035 445 1083 q 414 957 445 987 q 341 915 391 933 l 318 907 q 215 918 261 918 q 54 880 127 918 q 52 885 53 882 q 51 889 51 888 q 48 898 51 890 z "},"Î":{"ha":439,"x_min":14,"x_max":418,"o":"m 418 752 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 m 212 1141 q 346 1115 298 1141 l 418 907 q 407 888 416 899 q 389 872 397 876 q 233 918 333 914 q 216 975 225 941 q 196 970 201 975 q 191 954 191 965 q 197 917 191 943 q 39 872 104 910 q 14 907 22 886 l 81 1110 q 143 1133 106 1124 q 212 1141 180 1141 z "},"Ï":{"ha":439,"x_min":-24,"x_max":446,"o":"m 418 752 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 m 103 1153 q 211 1095 172 1153 q 317 1153 251 1153 q 408 1115 370 1153 q 446 1026 446 1077 q 418 941 446 975 q 342 899 389 907 q 245 917 300 915 q 212 950 226 930 q 176 915 197 928 q 91 896 136 911 q 8 936 41 900 q -24 1024 -24 972 q 13 1115 -24 1076 q 103 1153 50 1153 z "},"Ð":{"ha":946,"x_min":15,"x_max":931,"o":"m 481 262 q 519 296 500 262 q 549 431 549 351 q 519 574 549 511 q 485 603 506 603 q 465 589 474 603 q 499 522 486 564 q 512 430 512 480 q 492 327 512 379 q 461 275 475 288 q 481 262 468 262 m 111 625 l 111 770 q 161 830 111 803 q 288 872 212 858 q 445 887 363 887 q 795 779 670 887 q 931 426 931 661 q 800 111 931 223 q 439 -1 668 -1 l 268 -1 q 152 39 193 -1 q 111 160 111 79 l 111 272 l 68 272 q 32 334 48 292 q 15 428 15 375 q 28 524 15 481 q 64 595 41 567 l 183 595 q 178 617 183 609 q 155 625 172 625 l 111 625 z "},"Ñ":{"ha":845,"x_min":22,"x_max":823,"o":"m 224 -7 q 87 11 139 -7 q 22 52 36 28 l 22 812 q 74 866 22 846 q 197 887 127 887 q 355 846 295 887 q 507 607 392 800 q 520 612 514 607 q 526 629 526 618 q 509 666 526 640 l 436 792 l 436 828 q 471 851 444 836 q 503 849 479 849 q 601 873 566 849 q 623 888 610 880 q 762 857 709 888 q 823 740 823 819 l 823 103 q 758 18 823 47 q 643 -7 703 -7 q 559 -3 583 -7 q 501 13 535 1 q 408 143 448 81 q 325 277 368 205 q 305 256 305 274 q 325 212 305 243 l 395 100 l 395 33 q 224 -7 334 -7 m 367 918 l 229 918 q 224 1017 224 955 q 252 1114 224 1078 q 350 1156 283 1156 q 411 1150 390 1156 q 438 1143 432 1145 q 449 1140 444 1141 q 466 1134 454 1138 q 486 1127 477 1130 l 622 1127 q 629 1021 629 1080 q 602 926 629 962 q 499 884 569 884 q 367 918 429 884 z "},"Ò":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 460 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 q 149 786 15 661 q 456 897 269 897 q 780 770 661 897 q 899 437 899 644 q 771 87 899 208 q 460 -22 655 -22 m 347 917 l 239 952 l 239 1023 q 267 1114 239 1079 q 369 1157 300 1157 q 451 1135 416 1157 q 522 1063 487 1112 q 546 1031 535 1044 q 600 958 576 991 q 649 892 623 924 q 604 907 631 898 q 524 924 577 916 q 446 927 491 927 q 347 917 401 927 z "},"Ó":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 460 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 q 149 786 15 661 q 456 897 269 897 q 780 770 661 897 q 899 437 899 644 q 771 87 899 208 q 460 -22 655 -22 m 297 904 l 446 1120 q 558 1157 498 1157 q 654 1120 618 1157 q 690 1035 690 1083 q 659 957 690 987 q 583 913 632 931 q 440 927 513 927 q 297 904 368 927 z "},"Ô":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 460 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 q 149 786 15 661 q 456 897 269 897 q 780 770 661 897 q 899 437 899 644 q 771 87 899 208 q 460 -22 655 -22 m 435 928 q 231 880 315 919 l 307 1110 q 375 1133 333 1124 q 452 1141 416 1141 q 600 1115 548 1141 l 681 881 q 469 927 587 921 l 456 975 q 436 970 441 975 q 431 952 431 965 q 435 928 431 940 z "},"Õ":{"ha":913,"x_min":15,"x_max":899,"o":"m 15 437 q 119 755 15 635 q 369 890 213 863 q 532 853 446 853 q 614 873 581 853 q 824 715 749 830 q 899 437 899 601 q 771 87 899 208 q 460 -22 655 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 366 921 q 311 908 346 918 q 261 892 276 899 q 254 1015 254 955 q 281 1114 254 1078 q 379 1156 313 1156 q 440 1150 419 1156 q 467 1143 461 1145 q 478 1140 473 1141 q 495 1134 484 1138 q 515 1127 507 1130 l 651 1127 q 658 1021 658 1080 q 631 926 658 962 q 530 884 598 884 q 366 921 461 884 z "},"Ö":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 460 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 q 149 786 15 661 q 456 897 269 897 q 780 770 661 897 q 899 437 899 644 q 771 87 899 208 q 460 -22 655 -22 m 211 1032 q 211 1057 211 1032 q 245 1120 211 1082 q 340 1158 280 1158 q 446 1098 414 1158 q 557 1158 479 1158 q 647 1124 612 1158 q 682 1027 682 1090 q 660 950 682 981 q 600 907 637 920 q 486 926 539 923 q 450 974 458 945 q 416 924 442 945 q 307 906 359 921 q 237 950 262 918 q 211 1032 211 982 z "},"×":{"ha":722,"x_min":3,"x_max":719,"o":"m 135 383 q 136 382 135 383 q 143 377 137 381 q 161 373 149 373 q 179 387 174 373 l 3 543 q 90 699 12 623 q 248 792 168 775 q 363 677 248 792 l 477 793 q 633 698 556 776 q 719 539 710 620 l 716 536 l 619 444 q 602 458 612 450 q 589 469 592 467 q 563 479 576 479 q 545 465 549 479 l 719 310 q 633 151 710 229 q 477 56 556 73 l 363 172 l 248 56 q 90 150 167 75 q 3 307 12 225 l 104 408 q 112 401 106 406 q 120 394 118 396 q 127 388 123 392 q 135 383 132 385 z "},"Ø":{"ha":903,"x_min":14,"x_max":890,"o":"m 398 277 q 418 294 411 277 l 538 594 q 520 602 529 602 q 503 595 511 602 q 485 562 494 587 l 385 310 q 382 294 382 298 q 398 277 382 277 m 458 -12 q 367 -5 414 -12 l 345 -43 q 337 -44 342 -44 l 330 -44 q 204 -15 266 -44 q 106 63 142 14 l 128 115 q 14 444 14 235 q 144 790 14 668 q 446 899 262 899 q 528 893 488 899 l 553 939 l 568 939 q 703 903 632 939 q 794 823 761 874 l 770 772 q 890 444 890 646 q 764 95 890 213 q 458 -12 650 -12 z "},"Ù":{"ha":833,"x_min":22,"x_max":811,"o":"m 610 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 m 330 1157 q 411 1135 378 1157 q 484 1063 445 1113 l 591 918 q 432 875 498 913 l 201 952 l 201 1023 q 229 1114 201 1079 q 330 1157 262 1157 z "},"Ú":{"ha":833,"x_min":22,"x_max":811,"o":"m 610 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 m 604 958 q 531 915 581 935 l 500 903 q 455 886 480 898 l 382 860 q 251 917 336 907 l 391 1120 q 504 1157 444 1157 q 599 1120 564 1157 q 635 1036 635 1083 q 604 958 635 988 z "},"Û":{"ha":833,"x_min":22,"x_max":811,"o":"m 610 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 m 401 855 l 393 848 q 206 920 336 920 l 199 920 q 191 919 193 920 l 253 1110 q 318 1133 279 1124 q 391 1141 357 1141 q 545 1115 491 1141 l 614 919 l 610 919 q 432 875 512 919 l 401 975 q 382 970 387 975 q 376 954 376 965 q 381 926 376 943 q 392 886 386 909 q 401 855 398 864 z "},"Ü":{"ha":833,"x_min":22,"x_max":811,"o":"m 610 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 m 178 1023 q 215 1115 178 1076 q 305 1153 252 1153 q 413 1095 374 1153 q 519 1153 453 1153 q 610 1115 572 1153 q 648 1023 648 1077 q 593 917 648 953 q 492 899 534 913 q 414 950 440 911 q 328 896 388 908 q 231 918 286 914 q 178 1023 178 956 z "},"Ý":{"ha":864,"x_min":1,"x_max":859,"o":"m 300 206 q 319 227 319 206 q 90 472 169 327 q 1 792 11 617 q 93 862 32 838 q 218 886 153 886 q 363 853 302 886 q 426 658 401 751 q 393 511 393 511 q 390 492 390 501 q 414 469 390 469 q 452 625 422 495 q 472 718 460 659 q 505 858 485 777 q 647 888 567 888 q 802 841 744 888 q 859 705 859 793 q 786 451 859 574 q 633 269 728 353 l 633 45 q 532 -1 577 10 q 438 -12 488 -12 q 291 23 345 -12 q 237 128 237 58 l 237 248 q 269 221 250 235 q 300 206 288 206 m 628 957 q 555 915 604 933 l 397 857 l 387 876 q 271 912 338 902 l 415 1120 q 527 1157 467 1157 q 623 1120 587 1157 q 659 1035 659 1083 q 628 957 659 987 z "},"Þ":{"ha":811,"x_min":22,"x_max":803,"o":"m 394 396 q 410 394 397 394 q 429 404 422 394 q 436 437 436 414 l 436 462 q 430 497 436 486 q 411 507 425 507 q 393 505 398 507 q 394 493 394 501 l 394 396 m 214 -12 q 79 21 130 -12 q 22 125 22 56 q 22 749 22 125 q 76 852 22 818 q 215 887 131 887 q 306 879 262 887 q 396 842 349 870 l 396 798 q 316 791 337 798 q 296 770 296 785 l 296 763 q 391 767 359 767 q 694 674 585 767 q 803 428 803 581 q 698 194 803 275 q 412 114 593 114 q 321 121 346 114 q 316 106 316 115 q 330 92 316 98 q 393 84 345 87 l 393 33 q 214 -12 321 -12 z "},"ß":{"ha":864,"x_min":22,"x_max":864,"o":"m 695 376 q 776 407 733 376 q 840 343 816 391 q 864 228 864 295 q 765 37 864 100 q 565 -15 685 -15 q 471 -6 517 -15 q 397 17 425 3 q 363 142 363 66 q 377 212 363 180 q 412 264 391 244 q 510 240 451 240 q 545 263 545 240 q 543 271 545 267 l 520 271 q 408 309 449 271 q 363 415 363 348 q 404 524 363 482 q 500 575 444 566 q 500 579 500 576 l 500 583 q 484 601 500 601 q 387 557 435 601 q 327 418 327 503 q 344 334 327 374 q 382 279 361 295 q 328 144 328 220 q 364 6 328 67 q 232 -12 300 -12 q 77 39 132 -12 q 22 173 22 87 l 22 500 q 138 791 22 689 q 446 893 254 893 q 723 812 616 893 q 830 597 830 730 q 786 465 830 516 q 675 404 742 413 q 673 393 673 397 q 695 376 673 376 z "},"à":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 271 1034 q 354 1011 319 1034 q 424 940 389 989 q 491 846 446 909 q 559 752 535 783 q 361 788 480 788 q 280 783 314 788 l 141 829 l 141 900 q 169 991 141 956 q 271 1034 202 1034 z "},"á":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 366 788 q 192 766 279 788 l 351 997 q 464 1034 404 1034 q 559 997 524 1034 q 595 911 595 960 q 559 830 595 863 q 480 786 533 806 l 465 780 q 366 788 408 788 z "},"â":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 341 788 q 137 754 235 783 l 211 987 q 278 1010 237 1002 q 356 1019 320 1019 q 503 992 452 1019 l 589 739 q 376 789 502 785 q 359 852 363 836 q 340 848 345 852 q 334 832 334 843 q 341 788 334 821 z "},"ã":{"ha":753,"x_min":8,"x_max":757,"o":"m 519 736 q 707 469 707 677 l 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 291 754 170 743 q 446 723 371 723 q 519 736 495 723 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 446 754 q 365 763 399 754 q 319 777 332 772 q 288 787 290 786 q 175 766 233 780 q 168 899 168 842 q 195 991 168 956 q 293 1033 227 1033 q 354 1027 333 1033 q 381 1020 375 1022 q 392 1017 387 1019 q 409 1011 397 1015 q 429 1004 420 1007 q 565 1004 429 1004 q 572 897 572 957 q 545 799 572 836 q 446 754 512 754 z "},"ä":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 245 1029 q 353 971 313 1029 q 459 1029 393 1029 q 550 991 512 1029 q 588 904 588 954 q 564 821 588 854 q 490 774 539 788 q 438 784 470 780 q 394 788 406 788 q 354 827 370 803 q 314 788 340 805 q 215 774 260 784 q 143 820 170 785 q 117 903 117 854 q 154 991 117 953 q 245 1029 191 1029 z "},"å":{"ha":753,"x_min":8,"x_max":757,"o":"m 64 628 q 76 701 64 677 q 199 740 128 724 q 242 695 217 713 q 288 677 267 677 q 307 699 304 677 q 228 762 256 720 q 201 859 201 804 q 252 983 201 932 q 375 1034 302 1034 q 498 983 448 1034 q 549 861 549 932 q 508 739 549 790 q 707 469 707 682 l 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 l 355 302 z "},"æ":{"ha":1207,"x_min":8,"x_max":1194,"o":"m 610 59 q 631 102 631 83 q 626 116 631 109 q 610 122 621 122 q 497 24 577 60 q 311 -12 417 -12 q 91 56 173 -12 q 8 247 8 125 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 591 707 498 758 q 557 660 557 681 q 572 643 557 646 q 689 730 615 700 q 837 761 762 761 q 1096 672 998 761 q 1194 452 1194 583 q 1113 277 1194 336 q 909 222 1038 222 q 747 262 813 222 q 741 247 741 258 q 795 210 741 227 q 917 191 848 191 q 1041 209 985 191 q 1131 250 1097 226 q 1157 197 1147 235 q 1166 127 1166 159 q 1160 71 1166 96 q 1043 5 1115 31 q 879 -21 970 -21 q 715 2 787 -21 q 610 59 644 26 m 852 438 q 886 464 886 438 q 850 488 886 488 q 808 450 814 488 q 852 438 827 438 m 356 302 q 328 277 328 302 q 361 252 328 252 q 395 263 384 252 q 406 302 406 275 l 356 302 z "},"ç":{"ha":728,"x_min":14,"x_max":724,"o":"m 669 325 q 680 307 677 311 q 703 198 703 268 q 667 90 703 138 q 582 19 631 43 q 540 56 562 43 q 499 70 518 70 q 477 50 479 70 q 582 -103 582 9 q 519 -228 582 -184 q 380 -267 465 -267 q 243 -230 295 -267 q 192 -130 192 -194 q 243 -35 192 -65 q 292 -45 264 -45 q 331 -23 331 -45 q 323 -6 331 -12 q 95 119 177 18 q 14 379 14 221 q 132 669 14 563 q 397 764 238 764 q 631 695 538 764 q 724 506 724 625 q 672 371 724 423 q 538 319 621 319 q 425 356 470 319 q 372 450 380 392 q 342 429 342 450 q 391 338 342 379 q 530 289 447 289 q 669 325 612 289 z "},"è":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 304 1034 q 387 1011 352 1034 q 454 943 422 989 q 538 826 486 897 q 603 741 589 756 q 393 795 521 795 q 303 786 354 795 l 174 829 l 174 900 q 202 991 174 956 q 304 1034 235 1034 z "},"é":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 397 795 q 222 760 298 795 l 387 997 q 499 1034 439 1034 q 594 997 559 1034 q 630 912 630 960 q 600 833 630 864 q 526 791 576 810 l 505 783 q 397 795 453 795 z "},"ê":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 370 795 q 257 773 319 793 q 153 721 196 753 l 240 987 q 308 1010 266 1002 q 385 1019 349 1019 q 532 992 481 1019 l 623 734 q 524 779 585 761 q 406 795 464 794 q 389 852 397 823 q 369 848 374 852 q 363 832 363 843 q 370 795 363 821 z "},"ë":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 281 1029 q 389 971 350 1029 q 496 1029 429 1029 q 587 991 549 1029 q 625 904 625 954 q 598 820 625 855 q 530 777 572 785 q 422 795 481 791 q 391 827 403 807 q 359 794 378 807 q 256 774 304 790 q 182 817 211 782 q 154 903 154 852 q 191 991 154 953 q 281 1029 228 1029 z "},"ì":{"ha":415,"x_min":-2,"x_max":420,"o":"m 188 751 l 199 751 q 210 750 207 751 l -2 828 l -2 899 q 26 990 -2 955 q 127 1033 59 1033 q 211 1011 176 1033 q 281 939 246 989 l 389 785 q 368 744 385 766 q 334 712 351 722 q 370 627 370 683 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 l 25 712 q 188 751 95 751 z "},"í":{"ha":415,"x_min":25,"x_max":422,"o":"m 25 212 l 25 712 q 52 725 34 719 q 25 774 33 746 l 178 997 q 291 1034 231 1034 q 386 997 351 1034 q 422 912 422 960 q 391 833 422 864 q 318 791 368 810 l 206 751 q 330 715 290 748 q 370 627 370 683 q 370 342 370 627 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 z "},"î":{"ha":415,"x_min":-35,"x_max":420,"o":"m 25 712 q 188 751 95 751 q 328 717 281 751 q 370 627 370 685 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 l 25 712 m -5 734 q -35 755 -28 747 l 40 987 q 105 1009 66 1001 q 180 1018 144 1018 q 254 1010 217 1018 q 313 988 291 1002 l 395 747 q 362 732 374 735 q 210 781 313 777 q 199 815 209 784 q 189 852 189 847 q 169 847 174 852 q 163 830 163 842 q 174 781 163 819 q -5 734 64 777 z "},"ï":{"ha":415,"x_min":-47,"x_max":424,"o":"m 25 712 q 188 751 95 751 q 328 717 281 751 q 370 627 370 685 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 l 25 712 m 81 1029 q 189 970 149 1029 q 295 1029 229 1029 q 386 991 348 1029 q 424 900 424 953 q 389 809 424 846 q 296 772 353 772 q 190 826 227 772 q 82 771 154 771 q -11 808 25 771 q -47 899 -47 846 q -10 990 -47 952 q 81 1029 27 1029 z "},"ð":{"ha":782,"x_min":14,"x_max":768,"o":"m 381 319 l 381 269 q 397 264 386 264 q 412 271 408 264 q 417 297 417 279 l 417 326 q 412 406 417 385 q 391 427 406 427 q 375 420 382 427 q 381 319 381 359 m 252 669 q 165 647 219 669 q 71 585 111 625 q 24 673 31 629 l 96 739 l 46 793 q 121 908 66 847 q 220 977 176 968 q 328 936 275 960 q 439 867 381 911 q 454 882 454 871 q 418 922 454 894 l 476 964 q 598 873 546 935 q 665 730 650 812 l 611 688 q 709 570 671 634 q 768 335 768 465 q 661 71 768 166 q 393 -21 559 -21 q 123 71 227 -21 q 14 326 14 165 q 86 541 14 457 q 281 647 158 625 q 269 667 281 665 q 252 669 264 669 z "},"ñ":{"ha":783,"x_min":-9,"x_max":789,"o":"m 395 56 q 208 -12 328 -12 q 90 24 140 -12 q 31 132 31 64 l 31 469 q -9 608 -9 526 q 31 751 -9 690 l 156 751 q 238 715 204 751 q 208 669 208 687 q 232 648 208 648 q 367 751 274 723 q 485 731 431 731 q 566 750 538 731 q 689 668 645 727 q 741 481 741 598 l 741 448 q 741 410 741 435 q 739 323 739 384 q 750 257 739 287 q 788 210 761 227 q 789 197 789 207 l 789 185 q 735 40 789 92 q 596 -12 681 -12 q 458 36 511 -12 q 396 203 396 91 q 400 287 396 250 q 407 338 405 323 q 410 368 408 354 q 412 408 412 381 q 405 446 412 434 q 386 457 398 457 q 363 452 373 457 l 372 341 q 360 196 360 273 q 395 56 360 119 m 486 761 q 405 770 438 761 q 358 784 371 779 q 328 793 329 793 l 212 793 q 207 892 207 831 q 234 991 207 956 q 332 1033 266 1033 q 393 1027 372 1033 q 420 1020 414 1022 q 432 1017 427 1019 q 448 1011 437 1015 q 469 1004 460 1007 l 604 1004 q 611 898 611 957 q 584 804 611 839 q 486 761 551 761 z "},"ò":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 125 77 q 14 368 14 184 q 118 657 14 551 q 393 764 223 764 q 669 653 564 764 q 773 365 773 543 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 m 315 1033 q 396 1011 362 1033 q 468 939 429 989 l 587 781 q 576 755 583 767 q 392 794 492 794 q 307 787 349 794 l 185 828 l 185 899 q 213 990 185 955 q 315 1033 246 1033 z "},"ó":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 125 77 q 14 368 14 184 q 118 657 14 551 q 393 764 223 764 q 669 653 564 764 q 773 365 773 543 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 m 210 774 l 363 997 q 475 1034 415 1034 q 571 997 535 1034 q 606 912 606 960 q 576 833 606 864 q 503 791 552 810 l 484 785 q 396 794 438 794 q 214 758 296 794 q 210 774 211 772 z "},"ô":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 125 77 q 14 368 14 184 q 118 657 14 551 q 393 764 223 764 q 669 653 564 764 q 773 365 773 543 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 m 366 793 q 149 723 239 785 l 235 987 q 302 1009 260 1001 q 380 1018 344 1018 q 527 991 475 1018 l 617 733 q 400 794 525 791 q 383 852 387 840 q 363 847 369 852 q 358 828 358 842 q 366 793 358 814 z "},"õ":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 14 374 q 100 637 14 534 q 333 760 186 740 q 475 730 407 730 q 536 740 511 730 q 709 601 646 699 q 773 368 773 500 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 q 14 374 14 184 m 205 756 q 196 892 196 832 q 223 991 196 956 q 321 1033 255 1033 q 382 1027 361 1033 q 410 1020 404 1022 q 421 1017 416 1019 q 437 1011 426 1015 q 458 1004 449 1007 l 593 1004 q 600 898 600 957 q 573 804 600 839 q 476 761 541 761 q 356 781 412 761 q 330 791 338 788 q 205 756 281 785 z "},"ö":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 125 77 q 14 368 14 184 q 118 657 14 551 q 393 764 223 764 q 669 653 564 764 q 773 365 773 543 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 m 282 1029 q 390 970 351 1029 q 496 1029 430 1029 q 587 991 549 1029 q 625 902 625 953 q 598 818 625 852 q 525 775 571 784 q 425 793 480 789 q 391 826 405 806 q 358 793 378 806 q 255 774 301 789 q 182 817 210 783 q 155 902 155 851 q 192 990 155 952 q 282 1029 229 1029 z "},"÷":{"ha":726,"x_min":7,"x_max":720,"o":"m 215 183 q 217 211 215 197 l 524 211 q 527 183 527 199 q 482 73 527 118 q 373 28 437 28 q 261 74 308 28 q 215 183 215 119 m 261 523 q 238 545 261 523 q 215 633 215 568 q 261 744 215 698 q 371 789 307 789 q 481 744 435 789 q 527 632 527 698 q 482 522 527 567 q 373 477 437 477 q 261 523 308 477 m 377 448 q 408 448 377 448 q 485 482 440 448 q 549 576 530 516 l 663 576 q 706 494 692 533 q 720 407 720 456 q 706 320 720 359 q 663 241 692 282 l 63 241 q 7 407 7 319 q 21 495 7 456 q 63 576 35 535 l 194 576 q 269 477 216 511 q 377 448 313 448 z "},"ø":{"ha":784,"x_min":12,"x_max":772,"o":"m 362 260 q 382 277 376 260 l 444 454 q 426 462 435 462 q 409 455 416 462 q 393 421 401 448 l 350 293 q 347 277 347 281 q 362 260 347 260 m 393 -12 l 385 -12 q 376 -12 378 -12 l 357 -52 q 321 -54 338 -54 q 203 -31 260 -54 q 111 36 146 -7 l 126 82 q 12 369 12 187 q 117 657 12 551 q 393 764 222 764 l 408 764 q 422 762 413 764 l 436 794 q 466 796 450 796 q 592 771 532 796 q 687 702 653 746 l 669 650 q 772 366 772 539 q 670 91 772 193 q 393 -12 569 -12 z "},"ù":{"ha":779,"x_min":-9,"x_max":785,"o":"m 385 296 q 403 302 393 296 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 180 741 q 312 702 264 741 q 360 581 360 662 l 360 361 q 385 296 360 296 m 141 892 q 169 983 141 947 q 271 1025 202 1025 q 352 1003 318 1025 q 424 932 385 981 l 538 779 q 388 737 450 771 l 141 821 l 141 892 z "},"ú":{"ha":779,"x_min":-9,"x_max":785,"o":"m 385 296 q 403 302 393 296 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 180 741 q 312 702 264 741 q 360 581 360 662 l 360 361 q 385 296 360 296 m 549 833 q 475 791 525 810 l 321 735 q 180 772 271 772 l 336 997 q 448 1034 388 1034 q 544 997 508 1034 q 579 912 579 960 q 549 833 579 864 z "},"û":{"ha":779,"x_min":-9,"x_max":785,"o":"m 367 719 q 250 770 330 770 q 146 770 250 770 l 217 987 q 284 1009 243 1001 q 362 1018 326 1018 q 509 991 458 1018 l 581 781 q 396 745 469 781 q 377 811 386 779 q 367 847 368 843 q 366 852 366 850 q 346 847 351 852 q 340 828 340 842 q 367 719 340 825 m 385 297 q 403 302 396 297 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 236 741 q 325 715 290 741 q 360 641 360 688 l 360 361 q 385 297 360 297 z "},"ü":{"ha":779,"x_min":-9,"x_max":785,"o":"m 259 1029 q 367 970 328 1029 q 473 1029 407 1029 q 564 991 526 1029 q 602 900 602 953 q 567 809 602 846 q 475 772 532 772 q 368 826 405 772 q 260 771 332 771 q 168 808 203 771 q 132 899 132 846 q 169 990 132 952 q 259 1029 205 1029 m 385 296 q 403 302 393 296 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 180 741 q 312 702 264 741 q 360 581 360 662 l 360 361 q 385 296 360 296 z "},"ý":{"ha":742,"x_min":-19,"x_max":761,"o":"m 353 342 l 353 327 q 353 311 353 316 q 368 308 360 308 q 388 338 388 308 q 399 545 388 437 q 423 711 410 652 q 570 751 478 751 q 711 715 661 751 q 761 629 761 680 q 736 456 761 608 q 665 129 708 300 q 633 32 656 94 q 585 -72 610 -31 q 385 -231 504 -200 q 273 -245 330 -245 q 104 -191 164 -245 q 50 -70 50 -142 q 92 66 50 3 q 130 69 102 69 q 197 62 157 69 q 312 41 310 41 q 322 40 317 41 q 338 39 328 39 q 354 44 347 39 q 361 66 361 50 l 201 96 q 98 199 142 121 q 26 460 45 295 q -19 600 -19 518 q 22 741 -19 681 l 196 741 q 327 691 283 741 q 368 582 359 654 q 353 342 353 464 m 187 771 l 179 771 l 335 997 q 447 1034 387 1034 q 543 997 507 1034 q 578 912 578 960 q 548 833 578 864 q 475 791 524 810 l 326 737 q 187 771 286 771 z "},"þ":{"ha":764,"x_min":25,"x_max":751,"o":"m 378 366 l 378 275 q 394 271 383 271 q 410 278 405 271 q 414 304 414 286 l 414 373 q 409 459 414 438 q 389 481 404 481 q 372 474 379 481 q 378 366 378 407 m 248 24 q 243 12 243 21 q 275 -17 243 -8 q 384 -30 307 -26 l 384 -210 q 231 -241 314 -241 q 82 -205 132 -241 q 25 -87 25 -167 l 25 920 q 104 954 56 941 q 205 966 152 966 q 308 952 258 966 q 382 920 357 939 l 382 772 q 242 741 299 769 q 218 727 225 733 q 211 710 211 720 q 220 694 211 699 q 406 742 304 742 q 541 715 477 742 q 651 639 604 688 q 751 374 751 534 q 658 99 751 197 q 401 1 566 1 q 248 24 303 1 z "},"ÿ":{"ha":742,"x_min":-19,"x_max":761,"o":"m 260 1029 q 368 970 329 1029 q 475 1029 408 1029 q 566 991 528 1029 q 604 900 604 953 q 568 809 604 846 q 476 772 533 772 q 370 826 406 772 q 262 771 334 771 q 169 808 205 771 q 133 899 133 846 q 170 990 133 952 q 260 1029 207 1029 m 353 342 l 353 327 q 353 311 353 316 q 368 308 360 308 q 388 338 388 308 q 399 545 388 437 q 423 711 410 652 q 570 751 478 751 q 711 715 661 751 q 761 629 761 680 q 736 456 761 608 q 665 129 708 300 q 633 32 656 94 q 585 -72 610 -31 q 385 -231 504 -200 q 273 -245 330 -245 q 104 -191 164 -245 q 50 -70 50 -142 q 92 66 50 3 q 130 69 102 69 q 197 62 157 69 q 312 41 310 41 q 322 40 317 41 q 338 39 328 39 q 354 44 347 39 q 361 66 361 50 l 201 96 q 98 199 142 121 q 26 460 45 295 q -19 600 -19 518 q 22 741 -19 681 l 196 741 q 327 691 283 741 q 368 582 359 654 q 353 342 353 464 z "},"Ā":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 242 1103 l 633 1103 q 674 980 674 1038 q 651 882 674 921 q 447 925 568 925 q 222 883 325 925 q 201 982 201 923 q 242 1103 201 1041 z "},"ā":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 169 980 l 559 980 q 601 855 601 916 q 575 745 601 794 q 357 787 492 787 q 146 755 257 787 q 127 858 127 798 q 169 980 127 918 z "},"Ă":{"ha":915,"x_min":9,"x_max":912,"o":"m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 m 309 242 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 682 -12 842 -12 q 551 16 605 -12 q 489 95 498 43 l 474 178 q 553 193 515 178 q 591 224 591 208 q 582 242 591 235 q 519 214 556 224 q 450 205 481 205 q 309 242 358 205 m 239 883 q 194 987 194 926 q 230 1081 194 1048 q 300 1114 265 1114 q 353 1063 317 1084 q 439 1042 389 1042 q 574 1114 536 1042 q 648 1081 610 1114 q 686 990 686 1047 q 673 936 686 964 q 640 884 660 907 q 440 919 549 919 q 239 883 331 919 z "},"ă":{"ha":753,"x_min":8,"x_max":757,"o":"m 707 336 q 718 257 707 287 q 756 210 729 227 q 757 197 757 207 l 757 185 q 699 35 757 89 q 571 -12 647 -12 q 477 12 519 -12 q 416 83 434 37 q 393 60 393 83 q 416 18 393 41 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 200 740 125 723 q 359 758 275 758 q 619 682 531 758 q 707 469 707 607 l 707 336 m 355 302 q 327 277 327 302 q 360 252 327 252 q 394 263 383 252 q 405 302 405 275 q 355 302 405 302 m 245 990 q 300 939 262 960 q 383 918 338 918 q 465 937 428 918 q 520 990 502 956 q 593 957 555 990 q 631 866 631 923 q 570 748 631 798 q 360 787 488 787 q 181 766 267 787 q 140 866 140 809 q 175 957 140 924 q 245 990 211 990 z "},"Ą":{"ha":915,"x_min":9,"x_max":928,"o":"m 450 205 q 309 242 358 205 q 302 224 302 233 q 339 192 302 205 q 429 175 376 178 q 448 64 437 77 q 376 13 435 39 q 245 -12 318 -12 q 79 30 148 -12 q 9 137 9 71 q 13 168 9 155 l 157 814 q 287 868 212 848 q 444 888 362 888 q 643 848 560 888 q 758 719 737 804 l 912 79 q 845 22 891 47 q 813 -2 823 9 q 803 -30 803 -13 q 813 -56 803 -46 q 842 -66 824 -66 q 878 -56 859 -66 q 928 -150 928 -85 q 878 -251 928 -215 q 748 -287 828 -287 q 613 -246 669 -287 q 552 -123 552 -202 q 568 -54 552 -81 q 613 -5 583 -27 q 489 95 504 16 l 474 178 q 550 194 515 178 q 584 224 584 208 q 575 242 584 235 q 450 205 522 205 m 443 446 q 460 440 448 440 q 479 445 471 440 q 456 567 462 548 q 433 587 448 587 q 417 583 427 587 l 443 446 z "},"ą":{"ha":754,"x_min":8,"x_max":784,"o":"m 357 302 q 328 276 328 302 q 361 252 328 252 q 395 263 385 252 q 406 302 406 274 l 357 302 m 394 60 q 416 18 394 43 q 283 -12 372 -12 q 83 56 158 -12 q 8 247 8 124 q 87 436 8 369 q 275 496 160 496 q 351 491 315 496 q 378 486 376 486 q 380 497 380 492 q 350 521 380 515 q 272 527 320 527 q 97 486 170 527 q 64 628 64 542 q 76 701 64 677 q 196 741 124 723 q 360 759 268 759 q 620 683 532 759 q 709 468 709 607 l 709 335 q 720 256 709 286 q 758 210 730 227 q 758 197 758 206 l 758 184 q 739 96 758 132 q 688 27 720 60 q 665 -4 672 8 q 659 -32 659 -17 q 669 -55 659 -46 q 697 -64 679 -64 q 733 -54 715 -64 q 784 -149 784 -84 q 729 -249 784 -213 q 594 -286 674 -286 q 455 -243 514 -286 q 397 -122 397 -201 q 417 -42 397 -73 q 477 12 438 -10 q 417 82 432 36 q 394 60 394 82 z "},"Ć":{"ha":853,"x_min":8,"x_max":843,"o":"m 454 270 q 467 273 461 270 l 467 335 q 596 386 513 366 q 758 406 679 406 q 818 296 793 369 q 843 164 842 223 q 797 106 829 137 q 720 48 765 75 q 461 -18 607 -18 q 132 103 252 -18 q 8 443 8 226 q 144 785 8 661 q 283 868 203 840 q 450 897 362 897 q 730 814 621 897 q 839 610 839 731 q 783 474 839 518 q 630 431 726 431 q 524 457 577 431 q 460 506 470 483 q 462 593 460 562 q 457 594 460 594 l 452 594 q 436 588 442 594 q 426 564 431 583 q 422 465 422 546 q 454 270 422 270 m 452 927 q 258 892 349 927 l 412 1120 q 525 1157 465 1157 q 620 1120 585 1157 q 656 1036 656 1083 q 629 961 656 988 q 554 916 602 935 q 452 927 504 927 z "},"ć":{"ha":728,"x_min":14,"x_max":724,"o":"m 399 -21 q 118 88 223 -21 q 14 380 14 197 q 132 669 14 563 q 397 764 238 764 q 631 695 538 764 q 724 506 724 625 q 672 371 724 423 q 538 319 621 319 q 425 356 470 319 q 372 450 380 392 q 342 429 342 450 q 391 338 342 379 q 531 289 447 289 q 669 325 614 289 q 703 198 703 273 q 629 50 703 111 q 399 -21 543 -21 m 580 997 q 598 978 580 997 q 616 912 616 960 q 588 837 616 864 q 497 786 561 809 q 397 795 450 795 q 203 752 295 795 l 372 997 q 485 1034 425 1034 q 580 997 545 1034 z "},"Č":{"ha":853,"x_min":8,"x_max":843,"o":"m 454 270 q 467 273 461 270 l 467 335 q 596 386 513 366 q 758 406 679 406 q 818 296 793 369 q 843 164 842 223 q 797 106 829 137 q 720 48 765 75 q 461 -18 607 -18 q 132 103 252 -18 q 8 443 8 226 q 144 785 8 661 q 283 868 203 840 q 450 897 362 897 q 730 814 621 897 q 839 610 839 731 q 783 474 839 518 q 630 431 726 431 q 524 457 577 431 q 460 506 470 483 q 462 593 460 562 q 457 594 460 594 l 452 594 q 436 588 442 594 q 426 564 431 583 q 422 465 422 546 q 454 270 422 270 m 581 913 q 436 927 516 927 q 285 904 357 927 q 240 984 254 958 q 205 1048 227 1010 q 191 1096 191 1076 q 205 1127 191 1115 q 248 1140 219 1140 l 382 1140 l 424 1062 q 454 1086 454 1062 q 433 1140 454 1097 l 482 1140 q 534 1141 517 1140 l 607 1141 q 643 1127 629 1141 q 658 1093 658 1114 q 581 913 658 1061 z "},"č":{"ha":728,"x_min":14,"x_max":724,"o":"m 399 -21 q 118 88 223 -21 q 14 380 14 197 q 132 669 14 563 q 397 764 238 764 q 631 695 538 764 q 724 506 724 625 q 672 371 724 423 q 538 319 621 319 q 425 356 470 319 q 372 450 380 392 q 342 429 342 450 q 391 338 342 379 q 531 289 447 289 q 669 325 614 289 q 703 198 703 273 q 629 50 703 111 q 399 -21 543 -21 m 240 767 q 153 924 202 832 q 138 971 138 952 q 153 1003 138 991 q 196 1016 167 1016 l 330 1016 l 372 938 q 402 962 402 938 q 381 1016 402 972 l 430 1016 q 481 1017 465 1016 l 555 1017 q 591 1003 576 1017 q 606 966 606 990 q 552 836 606 941 q 524 779 531 793 q 391 795 465 795 q 240 767 317 795 z "},"Ď":{"ha":857,"x_min":22,"x_max":842,"o":"m 432 468 q 426 561 432 536 q 404 587 420 587 q 385 580 393 587 q 389 547 387 568 q 392 460 392 527 l 392 416 q 390 349 392 370 q 387 313 388 328 q 385 297 386 305 q 404 290 393 290 q 426 316 420 290 q 432 409 432 341 l 432 468 m 179 -1 q 63 39 104 -1 q 22 160 22 79 l 22 770 q 125 858 22 822 q 356 893 229 893 q 707 785 581 893 q 842 437 842 668 q 711 114 842 229 q 351 -1 580 -1 l 179 -1 m 246 916 q 206 988 222 958 q 192 1014 197 1004 q 181 1035 187 1024 q 159 1096 159 1075 q 174 1127 159 1115 q 217 1140 188 1140 l 351 1140 l 393 1062 q 423 1086 423 1062 q 402 1140 423 1097 l 451 1140 q 503 1141 486 1140 l 576 1141 q 612 1127 597 1141 q 627 1095 627 1114 q 612 1042 627 1075 q 574 963 597 1008 q 543 902 551 917 q 371 924 449 924 q 246 916 294 924 z "},"ď":{"ha":1051,"x_min":7,"x_max":1043,"o":"m 401 481 q 385 488 395 488 q 365 466 370 488 q 359 380 359 445 l 359 311 q 364 285 359 292 q 380 277 369 277 q 395 282 391 277 l 395 373 q 401 481 395 439 m 353 882 q 432 945 389 924 q 542 966 475 966 q 656 935 609 966 q 720 845 703 903 q 778 902 739 882 q 865 922 817 922 q 996 865 948 922 q 1043 722 1043 808 q 980 551 1043 613 q 842 494 923 494 q 763 524 788 494 l 763 615 q 826 604 789 604 q 881 611 862 604 q 900 631 900 618 q 895 647 900 637 q 831 634 869 634 q 727 684 764 634 l 727 342 q 776 210 727 241 q 777 197 777 207 l 777 185 q 718 35 777 89 q 591 -12 667 -12 q 499 10 538 -12 q 435 81 454 36 q 412 58 412 81 q 420 35 412 48 q 441 12 428 22 q 338 -12 401 -12 q 177 27 252 -12 q 58 147 102 67 q 7 369 7 239 q 104 642 7 543 q 353 741 201 741 q 509 707 442 741 q 516 722 516 714 q 468 757 516 743 q 371 771 420 771 q 353 882 371 840 z "},"Đ":{"ha":946,"x_min":15,"x_max":931,"o":"m 481 262 q 519 296 500 262 q 549 431 549 351 q 519 574 549 511 q 485 603 506 603 q 465 589 474 603 q 499 522 486 564 q 512 430 512 480 q 492 327 512 379 q 461 275 475 288 q 481 262 468 262 m 111 625 l 111 770 q 161 830 111 803 q 288 872 212 858 q 445 887 363 887 q 795 779 670 887 q 931 426 931 661 q 800 111 931 223 q 439 -1 668 -1 l 268 -1 q 152 39 193 -1 q 111 160 111 79 l 111 272 l 68 272 q 32 334 48 292 q 15 428 15 375 q 28 524 15 481 q 64 595 41 567 l 183 595 q 178 617 183 609 q 155 625 172 625 l 111 625 z "},"đ":{"ha":789,"x_min":7,"x_max":787,"o":"m 395 454 q 378 460 388 460 q 358 439 363 460 q 353 353 353 418 l 353 311 q 357 285 353 292 q 373 277 362 277 q 389 282 384 277 l 389 346 q 395 454 389 412 m 58 564 q 172 669 101 635 q 310 703 242 703 l 318 703 q 324 703 322 703 q 326 714 326 707 q 319 726 326 721 q 293 730 312 730 q 191 711 239 730 q 232 842 191 782 l 357 842 q 356 886 356 857 l 356 926 q 424 953 376 939 q 525 966 471 966 q 668 932 619 966 q 713 842 712 899 l 746 842 q 787 715 787 778 q 746 587 787 652 l 661 587 q 659 573 659 581 q 667 561 659 565 q 694 557 675 557 l 720 557 l 720 342 q 769 210 720 241 q 770 197 770 207 l 770 185 q 711 35 770 89 q 584 -12 660 -12 q 492 10 531 -12 q 429 81 447 36 q 406 58 406 81 q 413 35 406 48 q 435 12 421 22 q 338 -12 397 -12 q 181 24 252 -12 q 58 146 102 65 q 7 359 7 237 q 58 564 7 481 z "},"Ē":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 146 975 q 188 1103 146 1041 l 578 1103 q 620 975 620 1038 q 608 905 620 940 l 327 905 q 161 899 234 905 q 146 975 146 932 z "},"ē":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 187 979 l 578 979 q 619 857 619 915 q 594 752 619 799 q 391 795 509 795 q 178 738 273 795 q 146 854 146 791 q 187 979 146 918 z "},"Ĕ":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 323 905 q 175 899 248 905 q 143 991 143 935 q 179 1080 143 1047 q 249 1114 214 1114 q 302 1062 267 1083 q 388 1041 338 1041 q 524 1114 485 1041 q 597 1080 559 1114 q 635 989 635 1046 q 607 905 635 943 l 323 905 z "},"ĕ":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 184 960 q 252 990 217 990 q 307 939 269 960 q 389 918 345 918 q 471 937 434 918 q 526 990 508 956 q 596 960 562 990 q 637 863 637 923 q 585 755 637 803 q 397 795 504 795 q 202 752 291 795 q 146 862 146 800 q 184 960 146 924 z "},"Ė":{"ha":754,"x_min":22,"x_max":766,"o":"m 526 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 249 873 22 866 q 292 835 260 853 q 387 810 334 810 q 475 830 439 810 q 526 875 511 850 m 281 1098 q 387 1142 326 1142 q 494 1098 449 1142 q 538 990 538 1053 q 497 885 538 928 q 388 841 453 841 q 280 884 323 841 q 237 990 237 928 q 281 1098 237 1053 z "},"ė":{"ha":768,"x_min":14,"x_max":754,"o":"m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 401 686 q 533 741 484 686 q 695 629 637 705 q 754 452 754 553 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 q 125 83 233 -21 q 14 370 14 189 q 73 597 14 500 q 265 741 140 703 q 319 703 284 719 q 401 686 355 686 m 293 975 q 399 1019 337 1019 q 506 975 460 1019 q 550 867 550 929 q 509 762 550 804 q 399 718 465 718 q 292 761 334 718 q 249 867 249 804 q 293 975 249 929 z "},"Ę":{"ha":754,"x_min":22,"x_max":766,"o":"m 692 -1 q 649 -12 661 -1 q 637 -36 637 -23 q 647 -57 637 -49 q 675 -66 656 -66 q 712 -56 694 -66 q 763 -150 763 -85 q 713 -251 763 -215 q 582 -287 663 -287 q 448 -248 500 -287 q 387 -124 387 -205 q 447 -1 387 -43 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 q 357 572 357 578 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 692 -1 z "},"ę":{"ha":768,"x_min":14,"x_max":754,"o":"m 721 71 q 621 10 680 35 q 580 -35 580 -6 q 590 -57 580 -49 q 617 -66 600 -66 q 652 -56 633 -66 q 703 -150 703 -85 q 652 -251 703 -215 q 521 -287 602 -287 q 387 -248 440 -287 q 326 -123 326 -205 q 406 11 326 -32 q 386 34 405 34 q 354 20 372 34 q 322 -12 335 7 q 96 114 178 14 q 14 370 14 214 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 z "},"Ě":{"ha":754,"x_min":22,"x_max":766,"o":"m 327 875 l 718 875 q 747 804 738 842 q 757 735 757 766 q 730 632 757 667 q 655 597 703 597 l 382 597 q 357 578 357 597 l 357 572 q 358 567 357 568 l 682 567 q 703 514 694 546 q 711 452 711 479 q 682 326 711 372 l 534 326 q 395 318 431 326 q 349 305 358 311 q 340 290 340 299 q 350 275 340 280 q 424 291 385 286 q 534 296 475 296 l 725 296 q 766 155 766 237 q 755 67 766 109 q 720 -1 743 25 l 212 -1 q 77 40 128 -1 q 22 168 22 83 l 22 812 q 96 860 22 845 q 327 875 171 875 m 326 905 q 237 903 264 905 q 219 933 222 926 q 202 964 216 940 q 157 1048 189 988 q 142 1096 142 1076 q 157 1127 142 1115 q 200 1140 171 1140 l 334 1140 l 376 1062 q 406 1086 406 1062 q 385 1140 406 1097 l 434 1140 q 486 1141 469 1140 l 559 1141 q 595 1127 581 1141 q 610 1089 610 1114 q 552 951 610 1065 q 529 905 540 924 l 326 905 z "},"ě":{"ha":768,"x_min":14,"x_max":754,"o":"m 421 -21 q 125 83 233 -21 q 14 371 14 189 q 128 661 14 554 q 396 761 234 761 q 656 672 558 761 q 754 452 754 583 q 673 277 754 336 q 470 222 599 222 q 307 262 374 222 q 302 247 302 258 q 355 210 302 227 q 477 191 409 191 q 601 209 545 191 q 691 250 657 226 q 717 197 707 235 q 727 127 727 159 q 721 71 727 96 q 612 7 668 26 q 421 -21 534 -21 m 412 438 q 446 464 446 438 q 410 488 446 488 q 369 450 374 488 q 412 438 388 438 m 256 771 q 172 924 224 825 q 157 971 157 952 q 172 1003 157 991 q 215 1016 186 1016 l 349 1016 l 391 938 q 421 962 421 938 q 400 1016 421 972 l 449 1016 q 500 1017 484 1016 l 574 1017 q 610 1003 595 1017 q 625 968 625 990 q 551 795 625 937 q 539 772 543 780 q 398 795 477 795 q 256 771 319 795 z "},"Ğ":{"ha":911,"x_min":15,"x_max":910,"o":"m 469 565 l 871 565 q 910 428 910 509 q 877 298 910 348 l 849 298 l 849 94 q 496 -22 715 -22 q 259 26 363 -22 q 83 174 146 77 q 15 437 15 281 q 148 781 15 659 q 490 897 274 897 q 691 865 596 897 q 840 785 785 833 q 830 686 840 745 q 806 595 821 627 l 448 595 q 407 529 427 572 q 388 429 388 486 q 427 308 388 352 q 513 268 460 268 q 535 283 535 268 l 535 298 l 528 298 q 453 333 483 298 q 424 433 424 368 q 469 565 424 515 m 194 990 q 230 1081 194 1048 q 300 1114 265 1114 q 353 1063 317 1084 q 439 1042 389 1042 q 574 1114 536 1042 q 648 1081 610 1114 q 686 994 686 1047 q 652 907 686 941 q 486 927 574 927 q 248 881 357 927 q 208 931 221 900 q 194 990 194 962 z "},"ğ":{"ha":766,"x_min":12,"x_max":758,"o":"m 405 486 q 387 511 405 511 q 370 490 370 511 l 370 420 q 386 416 375 416 q 401 424 397 416 q 405 454 405 432 l 405 486 m 604 787 l 716 787 q 757 684 757 751 q 749 623 757 646 q 726 575 741 600 q 744 464 744 530 q 659 278 744 344 q 430 212 574 212 q 356 218 387 212 q 354 206 354 212 q 375 186 354 191 q 430 181 397 181 q 610 212 536 181 q 724 130 684 193 q 758 7 758 77 q 651 -189 758 -119 q 377 -258 545 -258 q 117 -199 209 -258 q 33 -58 33 -144 q 48 6 33 -24 q 84 49 64 37 q 184 3 118 20 q 320 -15 250 -15 q 410 -9 390 -15 q 430 9 430 -4 q 426 23 430 16 q 341 16 392 16 q 136 53 210 16 q 45 188 45 98 q 59 253 45 223 q 101 298 73 283 q 38 368 64 321 q 12 484 12 415 q 98 682 12 608 q 331 764 184 756 q 332 773 332 770 q 298 793 332 793 q 178 766 245 793 q 138 867 138 810 q 173 957 138 924 q 243 990 209 990 q 298 939 260 960 q 381 918 336 918 q 463 937 426 918 q 518 990 500 956 q 591 957 553 990 q 629 871 629 923 q 604 787 629 819 z "},"Ģ":{"ha":911,"x_min":15,"x_max":910,"o":"m 469 565 l 871 565 q 910 428 910 509 q 877 298 910 348 l 849 298 l 849 94 q 707 13 790 42 q 668 77 693 50 q 626 104 643 104 q 599 90 609 104 q 663 19 641 64 q 685 -85 685 -27 q 622 -256 685 -194 q 484 -313 565 -313 q 411 -288 435 -313 q 386 -232 386 -264 q 395 -187 386 -201 q 427 -198 402 -193 q 477 -203 451 -203 q 523 -196 504 -203 q 542 -176 542 -189 q 536 -160 542 -170 q 473 -173 511 -173 q 379 -135 416 -173 q 343 -39 343 -98 q 347 -2 343 -16 q 111 138 197 34 q 15 437 15 254 q 146 778 15 659 q 493 897 277 897 q 692 865 598 897 q 840 785 785 833 q 830 686 840 745 q 806 595 821 627 l 448 595 q 407 529 427 572 q 388 429 388 486 q 427 308 388 352 q 513 268 460 268 q 535 283 535 268 l 535 298 l 528 298 q 453 333 483 298 q 424 433 424 368 q 469 565 424 515 z "},"ģ":{"ha":766,"x_min":12,"x_max":758,"o":"m 405 486 q 387 511 405 511 q 370 490 370 511 l 370 420 q 386 416 375 416 q 401 424 397 416 q 405 454 405 432 l 405 486 m 349 899 q 355 883 349 892 q 422 896 380 896 q 502 868 465 896 q 546 787 538 840 l 716 787 q 757 689 757 751 q 726 575 757 627 q 744 464 744 530 q 659 278 744 344 q 430 212 574 212 q 356 218 387 212 q 354 206 354 212 q 375 186 354 191 q 430 181 397 181 q 610 212 536 181 q 724 130 684 193 q 758 7 758 77 q 651 -189 758 -119 q 377 -258 545 -258 q 117 -199 209 -258 q 33 -58 33 -144 q 48 6 33 -24 q 84 49 64 37 q 184 3 118 20 q 320 -15 250 -15 q 410 -9 390 -15 q 430 9 430 -4 q 426 23 430 16 q 341 16 392 16 q 136 53 210 16 q 45 188 45 98 q 59 253 45 223 q 101 298 73 283 q 38 368 64 321 q 12 484 12 415 q 56 635 12 572 q 180 732 100 699 q 210 669 193 693 q 244 641 228 641 q 266 652 260 641 q 206 812 206 708 q 269 979 206 916 q 407 1036 327 1036 q 480 1011 455 1036 q 505 955 505 987 q 496 910 505 924 q 423 926 459 926 q 349 899 349 926 z "},"Ī":{"ha":439,"x_min":-21,"x_max":452,"o":"m 418 752 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 m 20 1103 l 411 1103 q 452 977 452 1038 q 412 849 452 916 q 338 898 387 879 q 225 918 288 918 q 14 857 99 918 q -21 977 -21 913 q 20 1103 -21 1041 z "},"ī":{"ha":415,"x_min":-45,"x_max":421,"o":"m 25 712 q 188 751 95 751 q 328 717 281 751 q 370 627 370 685 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 l 25 712 m -8 730 q -45 850 -45 782 q -4 979 -45 918 l 380 979 q 421 851 421 915 q 376 717 421 787 q 317 760 358 741 q 188 781 266 781 q -8 730 80 781 z "},"Į":{"ha":439,"x_min":22,"x_max":430,"o":"m 418 752 l 418 52 q 319 1 381 20 q 304 -30 304 -12 q 315 -57 304 -47 q 343 -66 325 -66 q 379 -56 361 -66 q 430 -150 430 -85 q 380 -251 430 -215 q 250 -287 330 -287 q 112 -244 171 -287 q 54 -123 54 -202 q 76 -44 54 -79 q 125 1 92 -18 q 22 123 22 33 l 22 823 q 105 869 53 850 q 231 887 157 887 q 359 854 305 887 q 418 752 418 817 z "},"į":{"ha":415,"x_min":5,"x_max":420,"o":"m 123 14 q 25 212 25 71 l 25 652 q 52 667 37 661 q 81 680 66 672 q 28 732 52 695 q 5 819 5 769 q 61 958 5 904 q 199 1013 117 1013 q 336 957 281 1013 q 391 819 391 902 q 349 701 391 751 q 247 637 307 650 q 267 612 247 612 q 337 639 301 612 q 370 610 364 618 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 385 58 420 107 q 292 -4 352 12 q 286 -31 286 -14 q 296 -57 286 -47 q 325 -66 307 -66 q 361 -56 342 -66 q 412 -150 412 -85 q 361 -251 412 -215 q 232 -287 311 -287 q 96 -246 152 -287 q 35 -123 35 -202 q 123 14 35 -32 z "},"İ":{"ha":439,"x_min":22,"x_max":418,"o":"m 22 123 l 22 823 q 86 862 47 846 q 140 826 105 841 q 214 810 174 810 q 345 862 299 810 q 418 752 418 826 l 418 52 q 334 6 387 24 q 208 -12 282 -12 q 81 21 133 -12 q 22 123 22 57 m 108 1098 q 214 1142 152 1142 q 321 1098 275 1142 q 365 990 365 1053 q 323 885 365 928 q 214 841 279 841 q 106 884 149 841 q 64 990 64 928 q 108 1098 64 1053 z "},"ı":{"ha":415,"x_min":25,"x_max":420,"o":"m 25 712 q 188 751 95 751 q 328 717 281 751 q 370 627 370 685 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 366 35 420 85 q 232 -12 315 -12 q 94 35 148 -12 q 25 212 25 96 l 25 712 z "},"Ķ":{"ha":806,"x_min":22,"x_max":870,"o":"m 312 107 q 318 91 312 98 q 412 115 358 115 q 542 58 494 115 q 589 -85 589 1 q 526 -256 589 -194 q 389 -313 469 -313 q 315 -288 340 -313 q 290 -232 290 -264 q 299 -187 290 -201 q 331 -198 307 -193 q 382 -203 355 -203 q 427 -196 408 -203 q 446 -176 446 -189 q 441 -160 446 -170 q 378 -173 416 -173 q 284 -135 320 -173 q 248 -39 248 -98 l 251 -11 q 216 -12 228 -12 q 81 21 133 -12 q 22 123 22 57 l 22 823 q 234 887 92 887 q 359 856 308 887 q 418 746 418 819 l 418 715 q 376 628 391 659 q 362 585 362 596 q 385 565 362 565 l 518 858 q 646 888 565 888 q 785 844 727 888 q 849 707 849 793 q 800 564 849 634 q 670 442 750 494 q 603 463 633 463 q 573 434 573 463 q 630 417 604 428 q 690 374 655 406 l 870 208 q 650 -12 850 -12 q 614 -7 632 -12 q 558 92 593 56 q 431 147 509 140 l 363 317 l 359 317 q 337 298 337 317 q 394 146 337 283 q 312 107 312 135 z "},"ķ":{"ha":769,"x_min":25,"x_max":781,"o":"m 621 -10 q 563 90 597 54 q 411 147 505 147 q 387 146 401 147 q 362 255 368 196 l 332 241 q 346 138 334 187 q 312 107 312 126 q 318 91 312 98 q 412 115 358 115 q 542 58 494 115 q 589 -85 589 1 q 526 -256 589 -194 q 389 -313 469 -313 q 315 -288 340 -313 q 290 -232 290 -264 q 299 -187 290 -201 q 331 -198 307 -193 q 382 -203 355 -203 q 427 -196 408 -203 q 446 -176 446 -189 q 441 -160 446 -170 q 378 -173 416 -173 q 284 -135 320 -173 q 248 -39 248 -98 q 250 -7 248 -19 q 202 -12 227 -12 q 83 24 134 -12 q 25 132 25 64 q 25 923 25 132 q 103 954 58 942 q 196 966 149 966 q 325 936 274 966 q 382 833 382 900 l 382 761 q 351 585 382 671 q 329 559 345 576 q 304 529 313 543 q 295 506 295 515 q 311 488 295 496 q 394 595 364 537 q 450 750 425 654 q 470 753 458 751 q 508 760 481 755 q 546 764 535 764 q 709 716 650 764 q 767 585 767 669 q 714 442 767 502 q 587 361 665 389 q 745 309 650 325 q 781 171 781 243 q 740 49 781 100 q 621 -10 698 -1 z "},"Ĺ":{"ha":724,"x_min":22,"x_max":724,"o":"m 179 -1 q 63 39 104 -1 q 22 160 22 79 l 22 823 q 110 870 58 854 q 217 887 161 887 q 356 846 299 887 q 418 719 418 800 l 418 348 q 343 327 380 345 q 307 290 307 309 q 319 270 307 278 q 519 326 387 326 l 680 326 q 724 165 724 248 q 710 75 724 125 q 672 -1 696 26 l 179 -1 m 45 898 l 198 1120 q 310 1157 250 1157 q 406 1120 370 1157 q 441 1035 441 1083 q 411 957 441 987 q 338 915 387 933 l 310 905 q 212 918 271 918 q 50 880 123 918 q 48 885 50 882 q 47 889 47 888 q 45 898 47 890 z "},"ĺ":{"ha":415,"x_min":25,"x_max":431,"o":"m 370 819 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 371 38 420 88 q 231 -12 321 -12 q 88 38 141 -12 q 25 218 25 98 l 25 923 q 188 966 96 966 q 325 927 280 966 q 370 819 370 888 m 193 996 q 38 962 113 996 q 34 977 35 970 l 187 1199 q 299 1236 239 1236 q 395 1199 359 1236 q 431 1114 431 1162 q 398 1036 431 1067 q 323 992 373 1012 l 294 981 q 193 996 250 996 z "},"Ļ":{"ha":724,"x_min":22,"x_max":724,"o":"m 724 165 q 710 75 724 125 q 672 -1 696 26 l 539 -1 q 513 58 530 34 q 482 83 496 83 q 460 71 468 83 q 521 -90 521 14 q 458 -256 521 -194 q 320 -313 401 -313 q 247 -288 271 -313 q 222 -232 222 -264 q 231 -187 222 -201 q 262 -198 238 -193 q 313 -203 287 -203 q 359 -196 340 -203 q 378 -176 378 -189 q 372 -160 378 -170 q 309 -173 347 -173 q 215 -135 252 -173 q 179 -39 179 -98 q 183 -1 179 -18 q 179 -1 183 -1 q 63 39 104 -1 q 22 160 22 79 l 22 823 q 110 870 58 854 q 217 887 161 887 q 356 846 299 887 q 418 719 418 800 l 418 348 q 343 327 380 345 q 307 290 307 309 q 319 270 307 278 q 519 326 387 326 l 680 326 q 724 165 724 248 z "},"ļ":{"ha":415,"x_min":25,"x_max":420,"o":"m 370 819 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 349 19 420 68 q 372 -85 372 -22 q 309 -256 372 -194 q 171 -313 252 -313 q 97 -288 122 -313 q 73 -232 73 -264 q 81 -187 73 -201 q 113 -198 89 -193 q 164 -203 138 -203 q 210 -196 191 -203 q 229 -176 229 -189 q 223 -160 229 -170 q 160 -173 198 -173 q 66 -135 102 -173 q 30 -39 30 -98 q 112 97 30 57 q 104 114 109 109 q 86 119 99 119 q 50 96 73 119 q 25 218 25 151 l 25 923 q 188 966 96 966 q 325 927 280 966 q 370 819 370 888 z "},"Ľ":{"ha":724,"x_min":22,"x_max":734,"o":"m 179 -1 q 63 39 104 -1 q 22 160 22 79 l 22 823 q 110 870 58 854 q 217 887 161 887 q 320 866 273 887 q 395 803 368 845 q 451 891 406 860 q 556 922 496 922 q 686 865 639 922 q 734 722 734 808 q 671 551 734 613 q 533 494 614 494 q 454 524 479 494 l 454 615 q 516 604 480 604 q 572 611 553 604 q 591 631 591 618 q 585 647 591 637 q 522 634 560 634 q 418 684 454 634 l 418 348 q 343 327 380 345 q 307 290 307 309 q 319 270 307 278 q 519 326 387 326 l 680 326 q 724 165 724 248 q 710 75 724 125 q 672 -1 696 26 l 179 -1 z "},"ľ":{"ha":694,"x_min":25,"x_max":686,"o":"m 186 966 q 367 854 345 966 q 504 922 416 922 q 638 865 591 922 q 686 722 686 808 q 623 551 686 613 q 485 494 566 494 q 406 524 431 494 l 406 615 q 468 604 432 604 q 524 611 505 604 q 543 631 543 618 q 537 647 543 637 q 474 634 512 634 q 370 682 408 634 l 370 342 q 419 210 370 241 q 420 197 420 207 l 420 185 q 371 38 420 88 q 231 -12 321 -12 q 88 38 141 -12 q 25 218 25 98 l 25 923 q 186 966 96 966 z "},"Ł":{"ha":814,"x_min":8,"x_max":814,"o":"m 269 -1 q 152 39 193 -1 q 111 160 111 79 l 111 265 q 35 369 61 301 q 8 513 8 437 q 9 547 8 529 l 195 620 q 171 644 195 644 q 137 635 159 644 q 111 624 127 630 l 111 823 q 199 870 146 853 q 307 887 251 887 q 439 861 389 887 q 506 763 498 830 q 529 772 506 763 q 606 667 580 733 q 632 524 632 600 q 631 490 632 508 l 425 409 q 449 386 425 386 q 507 401 460 386 l 507 317 q 608 326 545 326 l 769 326 q 814 165 814 248 q 800 75 814 125 q 762 -1 785 26 l 269 -1 z "},"ł":{"ha":616,"x_min":25,"x_max":614,"o":"m 475 819 l 475 787 l 511 801 q 588 696 562 762 q 614 553 614 629 q 613 519 614 537 l 408 437 q 429 416 408 416 q 475 428 444 416 l 475 342 q 524 211 475 241 q 524 198 524 208 l 524 186 q 475 39 524 89 q 336 -12 426 -12 q 193 39 245 -12 q 130 219 130 98 l 130 306 q 53 410 81 341 q 25 555 25 479 q 26 589 25 571 l 205 659 q 199 676 205 669 q 184 683 194 683 q 149 673 175 683 q 130 666 138 669 l 130 923 q 293 966 201 966 q 430 927 385 966 q 475 819 475 888 z "},"Ń":{"ha":845,"x_min":22,"x_max":823,"o":"m 224 -12 q 87 5 139 -12 q 22 47 36 23 l 22 812 q 74 866 22 846 q 197 887 127 887 q 355 846 295 887 q 507 607 392 800 q 520 612 514 607 q 526 626 526 616 q 509 665 526 636 l 436 791 l 436 828 q 520 872 471 857 q 623 888 570 888 q 762 857 709 888 q 823 740 823 819 l 823 98 q 758 12 823 42 q 643 -12 703 -12 q 559 -8 583 -12 q 501 7 535 -4 q 355 227 432 96 q 325 277 340 251 q 305 256 305 274 q 325 212 305 244 l 395 99 l 395 27 q 224 -12 334 -12 m 599 955 q 521 911 570 929 l 388 863 l 374 878 q 250 916 315 908 l 391 1120 q 504 1157 444 1157 q 599 1120 564 1157 q 635 1035 635 1083 q 599 955 635 987 z "},"ń":{"ha":783,"x_min":-9,"x_max":789,"o":"m 395 56 q 208 -12 328 -12 q 90 24 140 -12 q 31 132 31 64 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 183 741 l 359 997 q 471 1034 411 1034 q 567 997 531 1034 q 602 912 602 960 q 571 828 602 864 q 505 787 543 798 q 484 788 490 788 l 462 788 q 334 766 397 788 q 229 695 271 745 q 209 657 209 673 q 232 638 209 638 q 320 724 262 691 q 454 758 377 758 q 595 732 532 758 q 697 648 659 706 q 741 475 741 579 l 741 443 q 739 321 739 408 q 750 257 739 287 q 788 210 761 227 q 789 197 789 207 l 789 185 q 735 40 789 92 q 596 -12 681 -12 q 458 36 511 -12 q 396 203 396 91 q 400 287 396 250 q 407 338 405 323 q 410 368 408 354 q 412 408 412 381 q 405 446 412 434 q 386 457 398 457 q 363 452 373 457 l 372 341 q 360 196 360 273 q 395 56 360 119 z "},"Ņ":{"ha":845,"x_min":22,"x_max":823,"o":"m 509 665 l 436 791 l 436 828 q 520 872 471 857 q 623 888 570 888 q 762 857 709 888 q 823 740 823 819 l 823 98 q 758 12 823 42 q 634 -12 703 -12 l 619 -12 q 631 -85 631 -47 q 568 -256 631 -194 q 431 -313 511 -313 q 357 -288 382 -313 q 332 -232 332 -264 q 341 -187 332 -201 q 373 -198 349 -193 q 424 -203 397 -203 q 469 -196 450 -203 q 488 -176 488 -189 q 483 -160 488 -170 q 420 -173 458 -173 q 326 -135 362 -173 q 290 -36 290 -98 q 328 65 290 26 q 428 113 366 105 q 325 277 388 171 q 305 256 305 274 q 325 212 305 244 l 375 132 q 257 -12 279 97 q 241 -12 252 -12 l 224 -12 q 87 5 139 -12 q 22 47 36 23 l 22 812 q 74 866 22 846 q 197 887 127 887 q 355 846 295 887 q 507 607 392 800 q 520 612 514 607 q 526 626 526 616 q 509 665 526 636 z "},"ņ":{"ha":783,"x_min":-9,"x_max":789,"o":"m 372 111 q 408 115 385 113 q 396 201 396 152 q 400 287 396 250 q 407 338 405 323 q 410 368 408 354 q 412 408 412 381 q 405 446 412 434 q 386 457 398 457 q 363 452 373 457 l 372 341 q 360 212 360 273 q 372 111 360 152 m 739 336 q 750 257 739 287 q 788 210 761 227 q 789 197 789 207 l 789 185 q 740 45 789 97 q 617 -12 692 -6 q 587 52 604 26 q 550 79 568 79 q 533 67 541 79 q 589 -92 589 11 q 526 -256 589 -194 q 389 -313 469 -313 q 315 -288 340 -313 q 290 -232 290 -264 q 299 -187 290 -201 q 331 -198 307 -193 q 382 -203 355 -203 q 427 -196 408 -203 q 446 -176 446 -189 q 441 -160 446 -170 q 378 -173 416 -173 q 284 -135 320 -173 q 248 -39 248 -98 q 250 -9 248 -24 q 208 -12 231 -12 q 90 24 140 -12 q 31 132 31 64 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 152 741 q 234 705 200 741 q 204 659 204 677 q 228 638 204 638 q 319 724 258 690 q 458 758 380 758 q 649 700 576 758 q 741 475 741 627 l 739 336 z "},"Ň":{"ha":845,"x_min":22,"x_max":823,"o":"m 224 -12 q 87 5 139 -12 q 22 47 36 23 l 22 812 q 74 866 22 846 q 197 887 127 887 q 355 846 295 887 q 507 607 392 800 q 520 612 514 607 q 526 626 526 616 q 509 665 526 636 l 387 871 q 271 914 323 907 q 248 954 261 931 q 182 1096 182 1065 q 197 1127 182 1115 q 240 1140 211 1140 l 374 1140 l 416 1062 q 446 1086 446 1062 q 425 1140 446 1101 l 474 1140 q 526 1141 509 1140 l 599 1141 q 635 1127 621 1141 q 650 1089 650 1114 q 574 916 650 1064 q 515 886 515 912 q 519 872 515 880 q 623 888 567 888 q 762 857 709 888 q 823 740 823 819 l 823 98 q 758 12 823 42 q 643 -12 703 -12 q 559 -8 583 -12 q 501 7 535 -4 q 355 227 432 96 q 325 277 340 251 q 305 256 305 274 q 325 212 305 241 q 395 99 325 212 l 395 27 q 224 -12 334 -12 z "},"ň":{"ha":783,"x_min":-9,"x_max":789,"o":"m 395 56 q 208 -12 328 -12 q 90 24 140 -12 q 31 132 31 64 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 172 741 q 237 735 213 741 q 185 824 199 798 q 153 885 172 850 q 132 924 135 919 q 117 971 117 952 q 132 1003 117 991 q 175 1016 146 1016 l 309 1016 l 351 938 q 381 962 381 938 q 360 1016 381 972 l 409 1016 q 460 1017 444 1016 l 534 1017 q 570 1003 555 1017 q 585 972 585 990 q 578 938 585 954 q 509 786 559 888 q 468 788 496 788 q 411 780 441 788 q 382 754 382 771 q 386 741 382 747 q 483 758 429 758 q 591 735 536 758 q 696 650 657 709 q 741 475 741 581 l 741 443 q 739 321 739 408 q 750 257 739 287 q 788 210 761 227 q 789 197 789 207 l 789 185 q 735 40 789 92 q 596 -12 681 -12 q 458 36 511 -12 q 396 203 396 91 q 400 287 396 250 q 407 338 405 323 q 410 368 408 354 q 412 408 412 381 q 405 446 412 434 q 386 457 398 457 q 363 452 373 457 l 372 341 q 360 196 360 273 q 395 56 360 119 z "},"Ō":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 460 -22 q 239 28 340 -22 q 77 181 138 78 q 15 437 15 283 q 149 786 15 661 q 456 897 269 897 q 780 770 661 897 q 899 437 899 644 q 771 87 899 208 q 460 -22 655 -22 m 216 975 q 257 1103 216 1041 l 648 1103 q 689 975 689 1038 q 668 887 689 926 q 451 927 566 927 q 239 883 336 927 q 216 975 216 926 z "},"ō":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 125 77 q 14 368 14 184 q 118 657 14 551 q 393 764 223 764 q 669 653 564 764 q 773 365 773 543 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 m 191 979 l 581 979 q 623 857 623 915 q 596 749 623 798 q 399 795 511 795 q 178 743 265 795 q 149 856 149 794 q 191 979 149 918 z "},"Ő":{"ha":913,"x_min":15,"x_max":899,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 77 695 q 235 846 132 793 q 207 881 216 865 l 328 1157 l 391 1157 q 489 1124 454 1157 q 524 1031 524 1090 q 484 926 524 971 q 472 926 481 926 l 462 926 q 434 921 442 926 q 427 901 427 915 l 427 896 q 435 897 429 897 l 444 897 q 548 886 492 897 q 552 901 552 894 q 545 913 552 909 q 520 922 538 918 q 558 1042 558 970 q 539 1105 558 1079 l 565 1157 l 635 1157 q 733 1124 699 1157 q 768 1031 768 1091 q 746 955 768 993 q 644 863 716 903 q 831 702 764 814 q 899 437 899 589 q 771 87 899 208 q 460 -22 655 -22 q 239 28 340 -22 q 77 181 138 78 q 15 435 15 283 q 77 695 15 587 z "},"ő":{"ha":787,"x_min":14,"x_max":773,"o":"m 378 378 l 378 259 q 394 254 383 254 q 410 262 405 254 q 414 288 414 269 l 414 385 q 409 471 414 450 q 389 492 404 492 q 372 486 379 492 q 378 378 378 418 m 579 720 q 721 580 670 671 q 773 368 773 485 q 672 83 773 188 q 399 -21 572 -21 q 125 77 226 -21 q 14 374 14 184 q 58 573 14 488 q 183 709 102 659 q 152 744 161 728 l 273 1020 l 336 1020 q 434 987 399 1020 q 469 895 469 954 q 429 791 469 837 q 417 792 426 792 l 407 792 q 379 786 387 792 q 372 767 372 781 l 372 763 q 383 764 379 763 l 394 764 q 493 752 444 764 q 497 767 497 760 q 491 779 497 774 q 470 787 485 784 q 503 890 503 838 q 484 968 503 942 l 510 1020 l 580 1020 q 679 987 644 1020 q 713 894 713 954 q 579 720 713 797 z "},"Œ":{"ha":1410,"x_min":15,"x_max":1422,"o":"m 488 468 q 481 561 488 536 q 459 587 475 587 q 441 580 449 587 q 445 547 442 568 q 448 460 448 527 l 448 416 q 446 349 448 370 q 442 313 444 328 q 441 297 441 305 q 459 290 449 290 q 481 316 475 290 q 488 409 488 341 l 488 468 m 451 897 q 774 769 659 897 q 792 788 792 775 q 770 825 792 802 q 724 867 748 848 q 901 875 795 875 l 1371 875 q 1400 804 1390 842 q 1409 735 1409 766 q 1367 597 1409 649 l 1044 597 q 1019 578 1019 597 l 1019 572 q 1021 567 1019 568 l 1324 567 q 1345 514 1337 546 q 1354 452 1354 479 q 1324 326 1354 372 l 1197 326 q 1058 318 1094 326 q 1012 305 1021 311 q 1003 290 1003 299 q 1013 275 1003 280 q 1086 291 1048 286 q 1197 296 1137 296 q 1281 296 1197 296 q 1387 253 1351 296 q 1422 132 1422 211 q 1376 -1 1422 52 l 884 -1 q 714 109 744 -1 q 699 104 707 109 q 690 83 690 99 q 707 38 690 66 q 606 -3 669 16 q 456 -22 543 -22 q 248 24 342 -22 q 82 171 140 75 q 15 435 15 281 q 76 693 15 590 q 235 846 136 796 q 451 897 334 897 z "},"œ":{"ha":1190,"x_min":7,"x_max":1177,"o":"m 373 378 l 373 259 q 389 254 378 254 q 404 262 399 254 q 409 288 409 269 l 409 385 q 404 471 409 450 q 383 492 398 492 q 367 486 374 492 q 373 378 373 418 m 776 450 q 828 448 799 448 q 871 451 858 448 q 862 481 871 468 q 828 494 852 494 q 790 480 804 494 q 776 450 776 467 m 730 261 q 728 250 728 258 q 760 227 728 235 q 876 219 793 219 q 1121 258 1013 219 q 1139 209 1131 246 q 1147 143 1147 172 q 1142 94 1147 114 q 1025 21 1109 54 q 841 -12 941 -12 q 634 34 713 -12 q 664 85 664 64 q 646 106 664 99 q 543 13 612 46 q 387 -21 474 -21 q 119 77 221 -21 q 7 367 7 184 q 111 657 7 550 q 380 764 214 764 q 590 714 509 764 q 561 680 566 688 q 555 659 555 671 q 570 643 555 646 q 681 733 613 702 q 819 765 748 765 q 1083 665 985 765 q 1177 414 1177 568 q 1165 342 1177 381 q 1137 295 1154 304 q 1025 262 1099 275 q 865 250 951 250 q 730 261 779 250 z "},"Ŕ":{"ha":841,"x_min":22,"x_max":868,"o":"m 401 482 q 416 480 404 480 q 436 490 429 480 q 443 524 443 500 l 443 548 q 437 583 443 572 q 418 593 431 593 q 400 591 405 593 q 401 579 401 587 l 401 482 m 751 328 l 868 208 q 801 45 856 102 q 650 -12 747 -12 q 524 22 578 -12 q 422 161 456 66 l 397 227 q 326 235 369 228 q 320 220 320 229 q 375 198 320 201 l 414 100 l 414 43 q 214 -12 336 -12 q 74 24 126 -12 q 22 128 22 60 l 22 772 q 77 830 22 802 q 220 876 132 859 q 398 893 309 893 q 716 810 602 893 q 837 564 837 722 q 786 408 837 473 q 656 318 734 343 q 683 296 656 296 q 751 328 709 296 m 254 911 l 398 1120 q 510 1157 450 1157 q 606 1120 570 1157 q 642 1036 642 1083 q 613 960 642 988 q 536 914 585 932 q 402 924 471 924 q 254 911 333 924 z "},"ŕ":{"ha":631,"x_min":-7,"x_max":637,"o":"m 215 -9 q 86 20 134 -9 q 33 111 33 51 l 33 460 q -7 598 -7 516 q 33 741 -7 681 l 136 741 q 124 770 127 755 l 281 997 q 393 1034 333 1034 q 489 997 453 1034 q 524 911 524 960 q 491 829 524 863 q 411 781 458 795 q 339 760 373 775 q 286 726 306 745 q 269 699 269 711 q 285 680 269 687 q 455 751 351 751 q 616 708 559 751 q 637 575 637 654 q 606 433 637 497 q 542 413 583 421 q 460 404 501 404 q 386 410 418 404 q 338 420 353 416 q 332 405 332 415 q 346 390 332 395 q 390 378 359 385 l 390 38 q 215 -9 316 -9 z "},"Ŗ":{"ha":841,"x_min":22,"x_max":868,"o":"m 401 482 q 416 480 404 480 q 436 490 429 480 q 443 524 443 500 l 443 548 q 437 583 443 572 q 418 593 431 593 q 400 591 405 593 q 401 579 401 587 l 401 482 m 650 -12 q 569 -2 600 -12 q 580 -45 576 -18 q 585 -92 585 -72 q 522 -259 585 -201 q 384 -313 465 -313 q 310 -288 335 -313 q 286 -232 286 -264 q 294 -187 286 -201 q 326 -198 302 -193 q 377 -203 351 -203 q 422 -196 404 -203 q 441 -176 441 -189 q 436 -160 441 -170 q 373 -173 411 -173 q 282 -139 317 -173 q 243 -48 247 -105 q 285 -42 272 -47 q 298 -22 298 -37 q 294 -5 298 -16 q 258 -9 290 -7 q 214 -12 227 -12 q 74 24 126 -12 q 22 128 22 60 l 22 772 q 77 830 22 802 q 220 876 132 859 q 398 893 309 893 q 716 810 602 893 q 837 564 837 722 q 786 408 837 473 q 656 318 734 343 q 683 296 656 296 q 751 328 709 296 l 868 208 q 801 45 856 102 q 650 -12 747 -12 m 375 198 l 408 115 q 415 109 410 112 q 430 105 420 105 q 444 115 439 105 q 423 161 431 138 l 399 227 q 326 235 368 228 q 320 220 320 229 q 375 198 320 201 z "},"ŗ":{"ha":631,"x_min":-9,"x_max":635,"o":"m 336 420 q 331 405 331 415 q 344 390 331 395 q 389 378 357 385 l 389 38 q 360 22 372 27 q 385 -85 385 -28 q 321 -256 385 -194 q 184 -313 264 -313 q 110 -288 135 -313 q 85 -232 85 -264 q 94 -187 85 -201 q 126 -198 102 -193 q 177 -203 151 -203 q 222 -196 203 -203 q 241 -176 241 -189 q 236 -160 241 -170 q 173 -173 211 -173 q 79 -135 115 -173 q 43 -39 43 -98 q 124 96 43 57 q 101 117 119 117 q 65 102 83 117 q 39 69 47 86 q 31 111 31 87 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 135 741 q 250 690 215 741 q 220 642 233 671 q 207 600 207 612 q 213 581 207 587 q 232 575 220 575 q 322 713 256 669 q 458 751 377 751 q 615 708 558 751 q 635 575 635 654 q 604 433 635 497 q 541 413 581 421 q 458 404 500 404 q 384 410 417 404 q 336 420 351 416 z "},"Ř":{"ha":841,"x_min":22,"x_max":868,"o":"m 401 482 q 416 480 404 480 q 436 490 429 480 q 443 524 443 500 l 443 548 q 437 583 443 572 q 418 593 431 593 q 400 591 405 593 q 401 579 401 587 l 401 482 m 751 328 l 868 208 q 801 45 856 102 q 650 -12 747 -12 q 524 22 578 -12 q 422 161 456 66 l 397 227 q 326 235 369 228 q 320 220 320 229 q 375 198 320 201 l 414 100 l 414 43 q 214 -12 336 -12 q 74 24 126 -12 q 22 128 22 60 l 22 772 q 77 830 22 802 q 220 876 132 859 q 398 893 309 893 q 716 810 602 893 q 837 564 837 722 q 786 408 837 473 q 656 318 734 343 q 683 296 656 296 q 751 328 709 296 m 577 954 q 554 910 577 954 q 406 924 486 924 q 255 912 325 924 q 213 987 231 951 q 180 1048 195 1022 q 165 1096 165 1076 q 180 1127 165 1115 q 223 1140 194 1140 l 357 1140 l 399 1062 q 429 1086 429 1062 q 408 1140 429 1097 l 457 1140 q 509 1141 492 1140 l 582 1141 q 618 1127 604 1141 q 633 1090 633 1114 q 577 954 633 1065 z "},"ř":{"ha":631,"x_min":-9,"x_max":635,"o":"m 214 -9 q 85 20 133 -9 q 31 111 31 51 l 31 460 q -9 598 -9 516 q 31 741 -9 681 l 135 741 q 250 690 215 741 q 220 642 233 671 q 207 600 207 612 q 213 581 207 587 q 232 575 220 575 q 322 713 256 669 q 458 751 377 751 q 615 708 558 751 q 635 575 635 654 q 604 433 635 497 q 541 413 581 421 q 458 404 500 404 q 384 410 417 404 q 336 420 351 416 q 331 405 331 415 q 344 390 331 395 q 389 378 357 385 l 389 38 q 214 -9 315 -9 m 441 781 q 347 764 393 781 q 273 716 301 748 q 155 770 232 767 q 70 925 83 898 q 56 971 56 952 q 70 1003 56 991 q 113 1016 84 1016 l 254 1016 l 296 938 q 326 962 326 938 q 305 1016 326 972 l 353 1016 q 402 1017 387 1016 l 472 1017 q 508 1003 494 1017 q 523 970 523 990 q 507 915 523 950 q 471 841 491 880 q 441 781 452 802 z "},"Ś":{"ha":797,"x_min":1,"x_max":816,"o":"m 387 247 q 409 270 409 251 q 397 312 409 288 q 362 356 385 335 q 199 410 302 410 q 104 393 148 410 q 29 469 57 417 q 1 580 1 520 q 132 821 1 736 q 408 893 243 893 q 613 867 530 893 q 749 800 696 841 q 765 707 765 755 q 752 620 765 659 q 715 557 739 581 q 631 591 692 574 q 522 609 571 609 q 455 603 472 609 q 439 584 439 597 q 441 572 439 578 q 502 578 465 578 q 718 516 634 578 q 816 292 816 441 q 709 74 816 161 q 399 -19 594 -19 q 214 -3 292 -19 q 60 53 135 13 q 9 203 9 127 q 62 330 9 279 q 190 380 114 380 q 315 349 267 380 q 387 247 363 317 m 224 896 q 326 1035 243 917 q 347 1063 344 1060 q 418 1135 382 1112 q 500 1157 453 1157 q 602 1114 568 1157 q 629 1023 629 1079 l 629 952 l 511 916 q 410 924 462 924 q 307 915 359 924 q 224 896 254 906 z "},"ś":{"ha":707,"x_min":8,"x_max":706,"o":"m 385 532 q 367 511 367 526 l 367 507 q 368 503 367 504 q 387 504 375 504 l 404 504 q 548 480 481 504 q 659 406 616 457 q 706 258 706 347 q 610 50 706 120 q 355 -21 515 -21 q 104 32 195 -21 q 14 187 14 85 q 30 257 14 225 q 66 301 46 288 q 175 247 104 270 q 325 224 245 224 q 357 242 357 224 q 355 256 357 250 q 343 255 350 255 l 336 255 q 106 312 192 255 q 8 494 8 376 q 96 684 8 611 q 362 764 193 764 q 518 746 446 764 q 642 699 590 728 q 654 617 654 671 q 609 490 654 534 q 525 522 574 509 q 435 534 475 534 q 385 532 395 534 m 382 791 l 362 791 q 143 748 245 791 q 205 827 157 764 q 289 939 253 890 q 360 1011 324 989 q 442 1034 395 1034 q 544 991 511 1034 q 572 900 572 956 l 572 829 l 442 787 q 382 791 385 791 z "},"Ş":{"ha":797,"x_min":1,"x_max":816,"o":"m 606 -103 q 543 -228 606 -184 q 404 -267 488 -267 q 267 -230 319 -267 q 216 -130 216 -194 q 267 -35 216 -65 q 316 -45 288 -45 q 354 -23 354 -45 q 353 -18 354 -19 q 60 53 184 -14 q 9 203 9 127 q 62 330 9 279 q 190 380 114 380 q 315 349 267 380 q 387 247 363 317 q 409 270 409 251 q 397 312 409 288 q 362 356 385 335 q 199 410 302 410 q 104 393 148 410 q 29 469 57 417 q 1 580 1 520 q 132 821 1 736 q 408 893 243 893 q 613 867 530 893 q 749 800 696 841 q 765 707 765 755 q 752 620 765 659 q 715 557 739 581 q 631 591 692 574 q 522 609 571 609 q 455 603 472 609 q 439 584 439 597 q 441 572 439 578 q 502 578 465 578 q 718 516 634 578 q 816 292 816 441 q 762 128 816 201 q 607 16 707 55 q 564 55 587 40 q 524 70 541 70 q 500 50 501 70 q 606 -103 606 9 z "},"ş":{"ha":707,"x_min":8,"x_max":706,"o":"m 706 258 q 538 12 706 75 q 501 42 525 28 q 463 57 477 57 q 439 39 442 57 q 514 -8 488 20 q 545 -103 545 -45 q 482 -228 545 -184 q 343 -267 428 -267 q 207 -230 258 -267 q 155 -127 155 -194 q 168 -72 155 -95 q 199 -41 180 -50 q 260 -56 225 -56 q 294 -34 294 -56 q 290 -19 294 -24 q 14 194 14 7 q 30 258 14 229 q 66 301 46 288 q 175 247 104 270 q 325 224 245 224 q 357 242 357 224 q 355 256 357 250 q 343 255 350 255 l 336 255 q 106 312 192 255 q 8 494 8 376 q 96 684 8 611 q 362 764 193 764 q 518 746 446 764 q 642 699 590 728 q 654 617 654 671 q 609 490 654 534 q 525 522 574 509 q 435 534 475 534 q 385 532 395 534 q 367 511 367 526 l 367 507 q 368 503 367 504 q 387 504 375 504 l 404 504 q 548 480 481 504 q 659 406 616 457 q 706 258 706 347 z "},"Š":{"ha":797,"x_min":1,"x_max":816,"o":"m 387 247 q 409 270 409 251 q 397 312 409 288 q 362 356 385 335 q 199 410 302 410 q 104 393 148 410 q 29 469 57 417 q 1 580 1 520 q 132 821 1 736 q 408 893 243 893 q 613 867 530 893 q 749 800 696 841 q 765 707 765 755 q 752 620 765 659 q 715 557 739 581 q 631 591 692 574 q 522 609 571 609 q 455 603 472 609 q 439 584 439 597 q 441 572 439 578 q 502 578 465 578 q 718 516 634 578 q 816 292 816 441 q 709 74 816 161 q 399 -19 594 -19 q 214 -3 292 -19 q 60 53 135 13 q 9 203 9 127 q 62 330 9 279 q 190 380 114 380 q 315 349 267 380 q 387 247 363 317 m 245 903 q 165 1048 211 963 q 151 1096 151 1076 q 165 1127 151 1115 q 208 1140 179 1140 l 342 1140 l 384 1062 q 414 1086 414 1062 q 393 1140 414 1097 l 442 1140 q 494 1141 477 1140 l 567 1141 q 603 1127 589 1141 q 618 1095 618 1114 q 603 1041 618 1075 q 541 911 588 1006 q 399 924 479 924 q 245 903 319 924 z "},"š":{"ha":707,"x_min":8,"x_max":706,"o":"m 385 532 q 367 511 367 526 l 367 507 q 368 503 367 504 q 387 504 375 504 l 404 504 q 548 480 481 504 q 659 406 616 457 q 706 258 706 347 q 610 50 706 120 q 355 -21 515 -21 q 104 32 195 -21 q 14 187 14 85 q 30 257 14 225 q 66 301 46 288 q 175 247 104 270 q 325 224 245 224 q 357 242 357 224 q 355 256 357 250 q 343 255 350 255 l 336 255 q 106 312 192 255 q 8 494 8 376 q 96 684 8 611 q 362 764 193 764 q 518 746 446 764 q 642 699 590 728 q 654 617 654 671 q 609 490 654 534 q 525 522 574 509 q 435 534 475 534 q 385 532 395 534 m 201 772 q 156 854 174 817 q 120 923 136 893 q 104 971 104 952 q 119 1003 104 991 q 162 1016 133 1016 l 296 1016 l 338 938 q 368 962 368 938 q 347 1016 368 972 l 396 1016 q 448 1017 431 1016 l 521 1017 q 557 1003 543 1017 q 572 971 572 990 q 544 887 572 952 q 492 781 515 821 q 351 794 431 794 q 201 772 271 794 z "},"Ţ":{"ha":819,"x_min":5,"x_max":814,"o":"m 235 52 q 212 123 212 81 l 212 559 l 54 559 q 5 712 5 629 q 23 810 5 768 q 67 875 41 852 l 768 875 q 801 801 788 844 q 814 715 814 758 q 779 597 814 635 q 684 559 743 559 l 485 559 q 483 549 483 555 q 497 533 483 537 q 561 528 512 528 l 608 528 l 608 52 q 559 20 588 35 q 586 -85 586 -31 q 523 -256 586 -194 q 385 -313 466 -313 q 312 -288 336 -313 q 287 -232 287 -264 q 296 -187 287 -201 q 328 -198 303 -193 q 378 -203 352 -203 q 424 -196 405 -203 q 443 -176 443 -189 q 437 -160 443 -170 q 374 -173 412 -173 q 280 -135 317 -173 q 244 -39 244 -98 q 326 92 244 52 q 317 109 321 104 q 300 113 313 113 q 266 95 288 113 q 235 52 243 77 z "},"ţ":{"ha":602,"x_min":8,"x_max":593,"o":"m 17 661 q 123 735 56 685 q 173 882 142 781 q 182 908 177 895 q 303 922 235 922 q 437 907 371 922 l 437 741 l 554 741 q 593 601 593 682 q 583 526 593 564 q 554 460 573 487 l 457 460 l 457 357 q 530 271 457 271 l 559 271 q 573 181 573 219 q 506 32 573 82 q 476 74 496 53 q 442 95 456 95 q 423 81 427 95 q 495 -84 495 26 q 432 -256 495 -194 q 294 -313 375 -313 q 221 -288 245 -313 q 196 -232 196 -264 q 205 -187 196 -201 q 237 -198 212 -193 q 288 -203 261 -203 q 333 -196 314 -203 q 352 -176 352 -189 q 347 -160 352 -170 q 283 -173 321 -173 q 190 -135 226 -173 q 153 -39 153 -98 q 174 43 153 6 q 100 233 100 107 l 100 429 l 142 429 q 176 451 176 429 q 175 459 176 454 l 23 459 q 8 565 8 507 q 17 661 8 624 z "},"Ť":{"ha":819,"x_min":5,"x_max":814,"o":"m 608 528 l 608 52 q 524 6 576 24 q 397 -12 472 -12 q 271 21 323 -12 q 212 123 212 57 l 212 559 l 54 559 q 5 712 5 629 q 23 810 5 768 q 67 875 41 852 l 768 875 q 801 801 788 844 q 814 715 814 758 q 779 597 814 635 q 684 559 743 559 l 485 559 q 483 549 483 555 q 497 533 483 537 q 561 528 512 528 l 608 528 m 625 1039 q 617 1020 625 1039 q 594 973 609 1002 q 573 929 580 944 q 560 905 566 914 l 268 905 q 189 1048 241 951 q 174 1096 174 1076 q 189 1127 174 1115 q 232 1140 203 1140 l 366 1140 l 408 1062 q 438 1086 438 1062 q 417 1140 438 1097 l 466 1140 q 517 1141 500 1140 q 591 1141 517 1141 q 627 1127 612 1141 q 642 1095 642 1114 q 625 1039 642 1076 z "},"ť":{"ha":878,"x_min":8,"x_max":870,"o":"m 17 661 q 123 735 56 685 q 173 882 142 781 q 182 908 177 895 q 303 922 235 922 q 437 907 371 922 l 437 741 l 494 741 q 545 638 502 673 q 658 604 589 604 q 708 611 689 604 q 727 631 727 618 q 722 647 727 637 q 659 634 696 634 q 565 672 601 634 q 528 768 528 709 q 575 881 528 841 q 692 922 622 922 q 823 865 775 922 q 870 722 870 808 q 807 551 870 613 q 669 494 750 494 q 585 523 613 494 q 557 460 571 481 l 457 460 l 457 357 q 530 271 457 271 l 559 271 q 573 181 573 219 q 514 38 573 87 q 344 -12 456 -12 q 166 50 233 -12 q 100 233 100 112 l 100 429 l 142 429 q 176 451 176 429 q 175 459 176 454 l 23 459 q 8 565 8 507 q 17 661 8 624 z "},"Ū":{"ha":833,"x_min":22,"x_max":811,"o":"m 610 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 m 610 919 q 484 898 542 919 q 393 848 427 878 q 206 920 336 920 q 184 918 199 920 q 177 975 177 944 q 218 1103 177 1041 l 609 1103 q 650 975 650 1038 q 642 918 650 948 q 633 919 638 919 q 610 919 633 919 z "},"ū":{"ha":799,"x_min":-9,"x_max":785,"o":"m 385 296 q 403 302 393 296 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 180 741 q 312 702 264 741 q 360 581 360 662 l 360 361 q 385 296 360 296 m 139 852 q 180 980 139 918 l 571 980 q 612 852 612 916 q 604 781 612 815 l 569 781 q 437 761 494 781 q 347 716 380 741 q 180 772 288 772 l 151 772 q 139 852 139 807 z "},"Ů":{"ha":833,"x_min":22,"x_max":811,"o":"m 595 979 q 566 883 595 927 q 621 887 591 887 q 755 840 700 884 q 811 718 811 796 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 207 888 102 888 q 236 886 216 888 q 295 817 256 846 q 387 777 334 787 q 398 701 398 745 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 425 774 434 746 q 479 782 465 774 q 493 800 493 791 q 484 817 493 808 q 421 805 453 805 q 298 856 349 805 q 247 979 247 907 q 298 1103 247 1052 q 421 1154 349 1154 q 545 1103 494 1154 q 595 979 595 1052 z "},"ů":{"ha":779,"x_min":-9,"x_max":785,"o":"m 385 297 q 403 302 396 297 q 396 372 396 325 l 396 651 q 444 676 444 654 q 435 692 444 684 q 372 681 404 681 q 249 732 300 681 q 198 855 198 783 q 249 979 198 928 q 372 1029 300 1029 q 496 979 445 1029 q 547 855 547 928 q 535 794 547 826 q 509 748 524 762 q 578 751 530 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 519 q 1 670 -9 630 q 31 741 10 710 l 201 741 q 255 685 220 708 q 351 650 295 657 q 360 591 360 621 l 360 361 q 385 297 360 297 z "},"Ű":{"ha":833,"x_min":22,"x_max":811,"o":"m 515 1034 q 496 1105 515 1079 l 522 1157 l 585 1157 q 687 1123 650 1157 q 725 1028 725 1088 q 640 886 725 947 q 761 836 711 879 q 811 718 811 792 l 811 340 q 706 75 811 168 q 415 -18 601 -18 q 127 73 230 -18 q 22 340 22 165 l 22 824 q 170 886 85 875 q 284 1157 170 886 l 347 1157 q 446 1124 411 1157 q 481 1031 481 1091 q 375 870 481 939 q 325 895 347 895 q 300 874 303 895 q 406 701 406 835 l 406 305 q 424 300 414 300 q 438 305 433 300 q 442 324 442 310 l 442 701 q 425 806 442 763 q 413 829 417 825 q 406 839 410 834 q 401 844 402 843 q 515 1034 515 922 z "},"ű":{"ha":779,"x_min":-9,"x_max":785,"o":"m 385 297 q 403 302 396 297 q 396 372 396 325 l 396 600 q 386 658 396 627 q 353 706 375 688 q 433 794 409 744 q 457 892 457 844 q 438 967 457 941 l 464 1019 l 534 1019 q 632 986 597 1019 q 667 893 667 954 q 644 813 667 855 q 588 750 621 771 q 735 695 689 743 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 732 35 785 86 q 602 -12 685 -12 q 507 12 549 -12 q 444 81 465 35 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 109 741 l 227 1019 l 290 1019 q 388 986 353 1019 q 423 893 423 954 q 396 803 423 848 q 326 728 369 757 q 297 745 314 737 q 267 752 279 752 q 245 733 246 752 q 360 581 360 704 l 360 361 q 385 297 360 297 z "},"Ų":{"ha":833,"x_min":22,"x_max":811,"o":"m 279 -3 q 88 113 155 26 q 22 340 22 200 l 22 824 q 207 888 102 888 q 347 841 295 888 q 398 701 398 795 l 398 305 q 415 300 406 300 q 430 305 425 300 q 434 324 434 310 l 434 701 q 430 769 434 744 q 414 819 426 794 q 610 887 495 887 q 751 843 692 887 q 811 718 811 799 l 811 340 q 740 111 811 200 q 528 -9 669 22 q 520 -33 520 -18 q 530 -57 520 -47 q 558 -66 541 -66 q 595 -56 576 -66 q 646 -150 646 -85 q 595 -251 646 -215 q 466 -287 545 -287 q 328 -244 387 -287 q 269 -123 269 -202 q 298 -35 269 -70 q 366 13 322 -5 q 346 37 364 37 q 279 -3 319 37 z "},"ų":{"ha":779,"x_min":-9,"x_max":812,"o":"m 385 297 q 403 302 396 297 q 396 372 396 325 l 396 707 q 569 751 468 751 q 669 735 626 751 q 735 695 712 720 l 735 342 q 784 210 735 241 q 785 197 785 207 l 785 185 q 723 27 785 79 q 687 -32 687 -3 q 697 -57 687 -48 q 726 -66 708 -66 q 762 -56 743 -66 q 812 -150 812 -85 q 762 -251 812 -215 q 633 -287 712 -287 q 495 -244 553 -287 q 436 -123 436 -202 q 513 8 436 -34 q 444 81 466 33 q 420 58 420 81 q 436 27 420 43 q 384 -1 414 9 q 294 -12 353 -12 q 178 12 235 -12 q 71 104 109 42 q 26 290 26 177 l 26 460 q -9 593 -9 520 q 1 670 -9 630 q 31 741 10 710 l 180 741 q 312 702 264 741 q 360 581 360 662 l 360 361 q 385 297 360 297 z "},"Ÿ":{"ha":864,"x_min":1,"x_max":859,"o":"m 300 206 q 319 227 319 206 q 90 472 169 327 q 1 792 11 617 q 93 862 32 838 q 218 886 153 886 q 363 853 302 886 q 426 658 401 751 q 393 511 393 511 q 390 492 390 501 q 414 469 390 469 q 452 625 422 495 q 472 718 460 659 q 505 858 485 777 q 647 888 567 888 q 802 841 744 888 q 859 705 859 793 q 786 451 859 574 q 633 269 728 353 l 633 45 q 532 -1 577 10 q 438 -12 488 -12 q 291 23 345 -12 q 237 128 237 58 l 237 248 q 269 221 250 235 q 300 206 288 206 m 192 1023 q 229 1115 192 1076 q 319 1153 266 1153 q 427 1095 388 1153 q 534 1153 467 1153 q 625 1115 587 1153 q 663 1023 663 1077 q 607 917 663 953 q 517 898 556 909 q 429 950 458 905 q 342 897 400 905 q 247 916 298 912 q 192 1023 192 951 z "},"Ź":{"ha":774,"x_min":8,"x_max":773,"o":"m 18 718 q 36 813 18 773 q 79 875 54 854 l 699 875 q 743 798 724 849 q 763 673 763 747 q 759 613 763 631 q 749 583 754 595 q 740 557 745 571 q 559 353 668 456 q 413 336 460 349 q 365 304 365 323 q 372 288 365 296 q 463 312 405 302 q 575 322 521 322 l 728 322 q 773 170 773 241 q 741 60 773 98 q 662 9 709 22 q 576 0 627 0 l 79 0 q 8 229 8 73 q 15 294 8 264 q 156 452 75 366 q 308 606 237 538 q 290 621 305 621 q 264 608 280 621 q 214 558 248 595 l 68 558 q 18 718 18 636 m 609 957 q 536 915 585 933 l 509 905 l 248 905 l 396 1120 q 508 1157 448 1157 q 604 1120 568 1157 q 640 1035 640 1083 q 609 957 640 987 z "},"ź":{"ha":673,"x_min":-7,"x_max":672,"o":"m 656 568 q 651 514 656 549 q 638 458 646 479 q 487 312 575 372 q 360 294 400 308 q 319 264 319 281 q 327 248 319 253 q 406 272 355 263 q 502 281 456 281 l 633 281 q 661 213 650 251 q 672 147 672 176 q 629 31 672 68 q 536 0 595 0 l 53 0 q -7 197 -7 63 q 10 313 -7 245 q 185 468 72 381 q 235 509 208 486 q 217 525 231 525 q 208 524 214 525 q 125 459 188 517 l 41 459 q 1 600 1 525 q 16 684 1 648 q 53 741 31 721 l 612 741 q 656 568 656 677 m 470 783 l 441 772 l 180 772 l 337 997 q 449 1034 389 1034 q 545 997 509 1034 q 581 912 581 960 q 549 833 581 865 q 470 783 518 802 z "},"Ż":{"ha":774,"x_min":8,"x_max":773,"o":"m 533 875 l 699 875 q 743 798 724 849 q 763 673 763 747 q 759 613 763 631 q 749 583 754 595 q 740 557 745 571 q 559 353 668 456 q 413 336 460 349 q 365 304 365 323 q 372 288 365 296 q 463 312 405 302 q 575 322 521 322 l 728 322 q 773 170 773 241 q 741 60 773 98 q 662 9 709 22 q 576 0 627 0 l 79 0 q 8 229 8 73 q 15 294 8 264 q 156 452 75 366 q 308 606 237 538 q 290 621 305 621 q 264 608 280 621 q 214 558 248 595 l 68 558 q 18 718 18 636 q 36 813 18 773 q 79 875 54 854 l 255 875 q 304 832 266 854 q 394 810 342 810 q 482 830 447 810 q 533 875 517 850 m 288 1098 q 394 1142 332 1142 q 501 1098 456 1142 q 545 990 545 1053 q 504 885 545 928 q 395 841 460 841 q 287 884 330 841 q 244 990 244 928 q 288 1098 244 1053 z "},"ż":{"ha":673,"x_min":-7,"x_max":672,"o":"m 231 975 q 337 1019 275 1019 q 444 975 399 1019 q 488 867 488 929 q 447 762 488 804 q 338 718 403 718 q 230 761 273 718 q 187 867 187 804 q 231 975 187 929 m 656 568 q 651 514 656 549 q 638 458 646 479 q 487 312 575 372 q 360 294 400 308 q 319 264 319 281 q 327 248 319 253 q 406 272 355 263 q 502 281 456 281 l 633 281 q 661 213 650 251 q 672 147 672 176 q 629 31 672 68 q 536 0 595 0 l 53 0 q -7 197 -7 63 q 10 313 -7 245 q 185 468 72 381 q 235 509 208 486 q 217 525 231 525 q 208 524 214 525 q 125 459 188 517 l 41 459 q 1 600 1 525 q 16 684 1 648 q 53 741 31 721 l 205 741 q 342 686 252 686 q 473 741 431 686 l 612 741 q 656 568 656 677 z "},"Ž":{"ha":774,"x_min":8,"x_max":773,"o":"m 18 718 q 36 813 18 773 q 79 875 54 854 l 699 875 q 743 798 724 849 q 763 673 763 747 q 759 613 763 631 q 749 583 754 595 q 740 557 745 571 q 559 353 668 456 q 413 336 460 349 q 365 304 365 323 q 372 288 365 296 q 463 312 405 302 q 575 322 521 322 l 728 322 q 773 170 773 241 q 741 60 773 98 q 662 9 709 22 q 576 0 627 0 l 79 0 q 8 229 8 73 q 15 294 8 264 q 156 452 75 366 q 308 606 237 538 q 290 621 305 621 q 264 608 280 621 q 214 558 248 595 l 68 558 q 18 718 18 636 m 618 1039 q 610 1020 618 1039 q 588 973 602 1002 q 566 929 573 944 q 553 905 559 914 l 261 905 q 182 1048 234 951 q 168 1096 168 1076 q 182 1127 168 1115 q 225 1140 196 1140 l 359 1140 l 401 1062 q 431 1086 431 1062 q 410 1140 431 1097 l 459 1140 q 511 1141 494 1140 l 584 1141 q 620 1127 606 1141 q 635 1095 635 1114 q 618 1039 635 1076 z "},"ž":{"ha":673,"x_min":-7,"x_max":672,"o":"m 656 568 q 651 514 656 549 q 638 458 646 479 q 487 312 575 372 q 360 294 400 308 q 319 264 319 281 q 327 248 319 253 q 406 272 355 263 q 502 281 456 281 l 633 281 q 661 213 650 251 q 672 147 672 176 q 629 31 672 68 q 536 0 595 0 l 53 0 q -7 197 -7 63 q 10 313 -7 245 q 185 468 72 381 q 235 509 208 486 q 217 525 231 525 q 208 524 214 525 q 125 459 188 517 l 41 459 q 1 600 1 525 q 16 684 1 648 q 53 741 31 721 l 612 741 q 656 568 656 677 m 485 770 l 203 770 q 119 924 161 844 q 104 971 104 952 q 119 1003 104 991 q 162 1016 133 1016 l 296 1016 l 338 938 q 368 962 368 938 q 347 1016 368 972 l 396 1016 q 448 1017 431 1016 l 521 1017 q 557 1003 543 1017 q 572 972 572 990 q 563 930 572 954 q 485 770 553 907 z "},"ƒ":{"ha":589,"x_min":-100,"x_max":655,"o":"m 345 700 q 340 687 340 694 q 347 675 340 680 q 491 654 373 654 q 595 663 547 654 q 599 614 599 652 q 588 534 599 576 q 559 469 578 492 l 456 469 l 433 180 q 332 -75 419 3 q 131 -142 258 -142 q -43 -79 20 -142 q -100 55 -100 -22 q -57 183 -100 132 q 69 238 -9 238 q 159 212 120 238 q 208 149 195 188 q 213 149 210 149 l 217 149 q 238 168 238 149 q 228 196 238 179 q 200 227 218 212 q 83 268 155 265 l 98 469 l 31 469 q 11 566 11 510 q 68 751 11 673 l 114 751 q 224 916 144 859 q 424 973 304 973 q 569 949 509 973 q 654 893 629 924 q 655 883 655 886 l 655 872 q 614 703 655 783 q 485 685 565 685 q 345 700 405 685 z "},"Ș":{"ha":790,"x_min":-5,"x_max":809,"o":"m 526 104 q 506 90 512 104 q 570 19 548 64 q 592 -85 592 -27 q 529 -256 592 -194 q 391 -313 472 -313 q 318 -288 342 -313 q 293 -232 293 -264 q 302 -187 293 -201 q 334 -198 309 -193 q 385 -203 358 -203 q 430 -196 411 -203 q 449 -176 449 -189 q 444 -160 449 -170 q 380 -173 418 -173 q 287 -135 323 -173 q 250 -39 250 -98 q 253 -5 250 -19 q 54 53 145 8 q 3 201 3 122 q 55 330 3 279 q 183 380 107 380 q 308 349 260 380 q 380 247 357 317 q 402 270 402 251 q 390 312 402 288 q 355 356 378 335 q 192 410 295 410 q 97 393 141 410 q 22 469 50 417 q -5 580 -5 520 q 125 817 -5 735 q 401 887 235 887 q 598 861 503 887 q 743 800 694 835 q 758 707 758 755 q 746 620 758 659 q 708 557 733 582 q 625 591 685 574 q 515 609 564 609 q 449 603 465 609 q 432 584 432 597 q 434 572 432 578 q 495 578 458 578 q 711 514 626 578 q 809 292 809 438 q 757 133 809 204 q 607 23 705 62 q 526 104 563 104 z "},"ș":{"ha":707,"x_min":8,"x_max":706,"o":"m 706 264 q 706 222 706 264 q 667 122 706 180 q 555 31 627 64 q 530 68 545 53 q 503 83 515 83 q 484 69 491 83 q 543 -91 543 12 q 480 -256 543 -194 q 342 -313 423 -313 q 269 -288 294 -313 q 244 -232 244 -264 q 253 -187 244 -201 q 285 -198 260 -193 q 336 -203 309 -203 q 381 -196 362 -203 q 400 -176 400 -189 q 395 -160 400 -170 q 332 -173 370 -173 q 238 -135 274 -173 q 201 -39 201 -98 q 206 3 201 -14 q 66 71 113 24 q 14 194 14 121 q 30 258 14 229 q 66 301 46 288 q 175 247 104 270 q 325 224 245 224 q 357 242 357 224 q 355 256 357 250 q 343 255 350 255 l 336 255 q 106 312 192 255 q 8 494 8 376 q 96 684 8 611 q 362 764 193 764 q 518 746 446 764 q 642 699 590 728 q 654 617 654 671 q 609 490 654 534 q 525 522 574 509 q 435 534 475 534 q 385 532 395 534 q 367 511 367 526 l 367 507 q 368 503 367 504 q 387 504 375 504 l 404 504 q 548 480 481 504 q 659 406 616 457 q 706 264 706 347 z "},"Ț":{"ha":819,"x_min":5,"x_max":814,"o":"m 235 52 q 212 123 212 81 l 212 559 l 54 559 q 5 712 5 629 q 23 810 5 768 q 67 875 41 852 l 768 875 q 801 801 788 844 q 814 715 814 758 q 779 597 814 635 q 684 559 743 559 l 485 559 q 483 549 483 555 q 497 533 483 537 q 561 528 512 528 l 608 528 l 608 52 q 559 20 588 35 q 586 -85 586 -31 q 523 -256 586 -194 q 385 -313 466 -313 q 312 -288 336 -313 q 287 -232 287 -264 q 296 -187 287 -201 q 328 -198 303 -193 q 378 -203 352 -203 q 424 -196 405 -203 q 443 -176 443 -189 q 437 -160 443 -170 q 374 -173 412 -173 q 280 -135 317 -173 q 244 -39 244 -98 q 326 92 244 52 q 317 109 321 104 q 300 113 313 113 q 266 95 288 113 q 235 52 243 77 z "},"ț":{"ha":602,"x_min":8,"x_max":593,"o":"m 17 661 q 123 735 56 685 q 173 882 142 781 q 182 908 177 895 q 303 922 235 922 q 437 907 371 922 l 437 741 l 554 741 q 593 601 593 682 q 583 526 593 564 q 554 460 573 487 l 457 460 l 457 357 q 530 271 457 271 l 559 271 q 573 181 573 219 q 506 32 573 82 q 476 74 496 53 q 442 95 456 95 q 423 81 427 95 q 495 -84 495 26 q 432 -256 495 -194 q 294 -313 375 -313 q 221 -288 245 -313 q 196 -232 196 -264 q 205 -187 196 -201 q 237 -198 212 -193 q 288 -203 261 -203 q 333 -196 314 -203 q 352 -176 352 -189 q 347 -160 352 -170 q 283 -173 321 -173 q 190 -135 226 -173 q 153 -39 153 -98 q 174 43 153 6 q 100 233 100 107 l 100 429 l 142 429 q 176 451 176 429 q 175 459 176 454 l 23 459 q 8 565 8 507 q 17 661 8 624 z "},"ˆ":{"ha":494,"x_min":14,"x_max":480,"o":"m 228 905 l 244 851 l 228 816 q 154 804 197 804 q 71 820 110 804 q 14 864 32 836 l 94 1110 q 161 1133 119 1124 q 239 1141 203 1141 q 386 1115 334 1141 l 480 846 q 427 816 462 827 q 357 804 393 804 q 293 811 321 804 q 287 831 291 817 q 263 905 282 845 q 242 975 243 965 q 222 970 228 975 q 217 953 217 965 q 228 905 217 941 z "},"ˇ":{"ha":494,"x_min":14,"x_max":481,"o":"m 389 758 q 256 738 329 738 q 188 744 229 738 q 119 760 147 749 q 58 868 92 806 q 18 946 24 930 q 14 974 14 957 q 28 1003 14 991 q 71 1016 42 1016 l 205 1016 l 247 938 q 277 962 277 938 q 256 1016 277 972 l 305 1016 q 357 1017 340 1016 l 430 1017 q 466 1003 452 1017 q 481 972 481 990 q 471 928 481 954 q 434 847 461 903 q 389 758 408 790 z "},"ˉ":{"ha":500,"x_min":14,"x_max":487,"o":"m 55 848 q 14 975 14 909 q 55 1103 14 1041 l 446 1103 q 487 975 487 1038 q 446 848 487 912 l 55 848 z "},"˘":{"ha":519,"x_min":14,"x_max":505,"o":"m 14 989 q 49 1080 14 1047 q 119 1114 85 1114 q 174 1062 136 1084 q 257 1041 212 1041 q 339 1060 302 1041 q 394 1114 376 1079 q 467 1080 429 1114 q 505 989 505 1046 q 446 873 505 920 q 259 819 378 819 q 74 873 140 819 q 14 989 14 921 z "},"˙":{"ha":328,"x_min":14,"x_max":315,"o":"m 58 1098 q 163 1142 102 1142 q 271 1098 225 1142 q 315 990 315 1053 q 273 885 315 928 q 164 841 229 841 q 56 884 99 841 q 14 990 14 928 q 58 1098 14 1053 z "},"˚":{"ha":376,"x_min":14,"x_max":362,"o":"m 64 856 q 39 881 64 856 q 14 979 14 907 q 64 1103 14 1052 q 188 1154 115 1154 q 311 1103 260 1154 q 362 979 362 1052 q 311 856 362 907 q 188 805 260 805 q 64 856 115 805 z "},"˛":{"ha":404,"x_min":14,"x_max":390,"o":"m 119 22 l 119 39 q 146 107 119 80 q 222 135 174 135 q 298 107 270 135 q 327 33 327 80 l 327 -1 q 277 -12 290 -1 q 264 -36 264 -23 q 274 -57 264 -49 q 302 -66 283 -66 q 339 -56 321 -66 q 390 -150 390 -85 q 340 -251 390 -215 q 209 -287 290 -287 q 75 -248 127 -287 q 14 -123 14 -205 q 119 22 14 -18 z "},"˜":{"ha":431,"x_min":14,"x_max":418,"o":"m 292 884 q 209 894 243 884 q 158 912 175 905 q 129 923 140 919 l 17 923 q 14 988 14 949 l 14 1015 q 41 1114 14 1078 q 139 1156 73 1156 q 200 1150 179 1156 q 227 1143 221 1145 q 238 1140 233 1141 q 255 1134 243 1138 q 275 1127 267 1130 l 411 1127 q 418 1021 418 1080 q 391 926 418 962 q 292 884 358 884 z "},"˝":{"ha":604,"x_min":14,"x_max":591,"o":"m 534 914 q 404 829 482 866 l 317 787 q 275 801 298 788 q 243 827 252 814 l 260 840 q 380 1034 380 926 q 361 1105 380 1079 l 387 1157 l 457 1157 q 556 1124 521 1157 q 591 1030 591 1091 q 534 914 591 969 m 347 1031 q 237 864 347 945 l 109 770 q 14 831 40 787 l 150 1157 l 213 1157 q 312 1124 277 1157 q 347 1031 347 1091 z "},"π":{"ha":833,"x_min":-20,"x_max":853,"o":"m 430 122 l 430 439 q 463 445 454 439 q 471 469 471 450 l 389 469 l 389 121 q 412 35 389 63 q 325 1 366 9 q 240 -7 285 -7 q 105 25 155 -7 q 56 122 56 58 l 56 469 l 19 469 q -20 608 -20 526 q 19 750 -20 690 l 814 750 q 853 611 853 694 q 814 469 853 529 l 777 469 l 777 45 q 613 -7 700 -7 q 478 25 526 -7 q 430 122 430 58 z "},"ऀ":{"ha":0,"x_min":-450,"x_max":42,"o":"m -302 1036 q -302 1056 -302 1036 q -273 1105 -302 1077 q -202 1133 -243 1133 q -133 1104 -160 1133 q -106 1035 -106 1075 q -135 966 -106 994 q -204 937 -163 937 q -273 966 -244 937 q -302 1036 -302 995 m -337 1022 l -337 1015 q -410 1047 -377 1017 q -450 1140 -450 1084 q -389 1257 -450 1208 q -204 1311 -323 1311 q -18 1257 -85 1311 q 42 1140 42 1209 q 4 1050 42 1084 q -70 1016 -35 1016 l -70 1021 q -107 1125 -70 1086 q -204 1163 -145 1163 q -300 1125 -263 1163 q -337 1022 -337 1086 z "},"ँ":{"ha":0,"x_min":-450,"x_max":42,"o":"m -273 1143 q -287 1157 -273 1143 q -302 1213 -302 1171 q -273 1282 -302 1254 q -204 1311 -245 1311 q -135 1283 -163 1311 q -106 1214 -106 1255 q -133 1144 -106 1173 q -202 1116 -160 1116 q -273 1143 -243 1116 m -337 1226 q -300 1123 -337 1162 q -204 1085 -263 1085 q -107 1124 -144 1085 q -70 1227 -70 1162 l -70 1232 q 4 1199 -34 1232 q 42 1108 42 1165 q -18 991 42 1039 q -204 937 -85 937 q -389 991 -323 937 q -450 1108 -450 1040 q -410 1201 -450 1164 q -337 1233 -377 1232 l -337 1226 z "},"ं":{"ha":0,"x_min":-330,"x_max":-31,"o":"m -288 976 q -309 997 -288 976 q -330 1082 -330 1019 q -287 1189 -330 1145 q -182 1234 -244 1234 q -75 1190 -120 1234 q -31 1081 -31 1144 q -72 975 -31 1017 q -180 933 -113 933 q -288 976 -246 933 z "},"ः":{"ha":356,"x_min":-56,"x_max":410,"o":"m 176 707 q 103 694 139 707 q 46 656 68 680 l -14 656 q -56 778 -56 713 q -46 841 -56 812 q -14 903 -36 869 l 368 903 q 399 842 389 869 q 410 778 410 815 q 368 656 410 714 l 311 656 q 176 707 267 707 m 284 397 q 216 422 245 422 q 186 396 186 422 q 293 352 251 393 q 338 237 338 307 q 291 124 338 167 q 177 81 244 81 q 64 127 110 81 q 18 239 18 173 q 39 320 18 283 q 98 377 61 357 q 39 434 60 397 q 18 519 18 471 q 63 631 18 585 q 177 677 109 677 q 291 634 244 677 q 338 516 338 591 q 284 397 338 442 z "},"ऄ":{"ha":1048,"x_min":14,"x_max":1104,"o":"m 656 933 q 488 985 543 933 q 441 1100 441 1029 q 516 1252 441 1191 l 578 1244 q 604 1210 584 1221 q 736 1185 636 1193 q 905 1149 843 1176 q 1006 1053 978 1119 q 1020 976 1020 1019 q 1006 903 1020 933 l 1063 903 q 1095 840 1086 867 q 1104 778 1104 814 q 1063 656 1104 713 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 806 903 q 816 913 816 905 q 753 936 816 936 l 656 933 z "},"अ":{"ha":1046,"x_min":14,"x_max":1104,"o":"m 748 259 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1063 903 q 1095 840 1086 867 q 1104 778 1104 814 q 1063 656 1104 713 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 z "},"आ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 q 1080 181 1087 165 q 1065 263 1065 212 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 z "},"इ":{"ha":749,"x_min":-58,"x_max":802,"o":"m 375 510 q 376 501 375 508 q 460 517 412 517 q 658 450 580 517 q 736 273 736 383 q 643 85 736 153 q 424 11 561 24 q 477 -14 424 -14 q 552 -1 507 -14 q 615 25 597 12 q 625 -45 625 -12 q 583 -155 625 -115 q 467 -195 541 -195 q 336 -141 393 -195 q 240 14 279 -87 q 62 61 133 27 q 28 185 28 126 q 80 308 28 260 q 213 355 132 355 q 348 308 294 355 q 408 194 401 261 q 431 221 431 195 q 417 275 431 246 q 377 327 403 303 q 220 386 315 386 q 138 376 174 386 q 87 355 115 370 q 45 419 62 382 q 28 509 28 456 q 93 642 28 589 q 251 694 158 694 l 367 694 q 368 701 368 696 q 331 725 368 725 l 251 725 q 58 656 131 725 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 760 903 q 791 842 781 869 q 802 778 802 815 q 760 656 802 714 l 682 656 l 682 586 q 670 537 682 559 q 640 507 658 515 q 473 547 570 547 q 375 510 375 547 z "},"ई":{"ha":749,"x_min":-58,"x_max":802,"o":"m 375 510 q 376 501 375 508 q 460 517 412 517 q 658 450 580 517 q 736 273 736 383 q 643 85 736 153 q 424 11 561 24 q 477 -14 424 -14 q 552 -1 507 -14 q 615 25 597 12 q 625 -45 625 -12 q 583 -155 625 -115 q 467 -195 541 -195 q 336 -141 393 -195 q 240 14 279 -87 q 62 61 133 27 q 28 185 28 126 q 80 308 28 260 q 213 355 132 355 q 348 308 294 355 q 408 194 401 261 q 431 221 431 195 q 417 275 431 246 q 377 327 403 303 q 220 386 315 386 q 138 376 174 386 q 87 355 115 370 q 45 419 62 382 q 28 509 28 456 q 93 642 28 589 q 251 694 158 694 l 367 694 q 368 701 368 696 q 331 725 368 725 l 251 725 q 58 656 131 725 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 380 903 q 295 1069 295 966 q 358 1222 295 1163 q 526 1280 420 1280 q 668 1229 611 1280 q 726 1097 726 1177 q 711 1015 726 1053 l 626 991 q 583 971 596 983 q 570 941 570 960 q 600 903 570 913 l 760 903 q 791 842 781 869 q 802 778 802 815 q 760 656 802 714 l 682 656 l 682 586 q 670 537 682 559 q 640 507 658 515 q 473 547 570 547 q 375 510 375 547 z "},"उ":{"ha":756,"x_min":-52,"x_max":813,"o":"m 307 627 q 392 619 346 619 q 437 640 437 619 q 435 656 437 650 l -10 656 q -52 778 -52 713 q -42 841 -52 812 q -10 903 -32 869 l 772 903 q 813 776 813 839 q 772 656 813 713 l 715 656 l 715 575 q 700 489 715 528 q 660 429 684 450 q 718 367 693 408 q 743 267 743 326 q 649 75 743 146 q 392 4 556 4 q 121 89 228 4 q 14 304 14 174 q 73 438 14 393 q 200 476 122 476 q 249 351 200 401 q 385 300 298 300 q 428 307 406 300 q 450 328 450 313 q 446 343 450 336 q 390 330 418 330 q 280 371 323 330 q 236 479 236 412 q 307 627 236 573 z "},"ऊ":{"ha":1219,"x_min":-52,"x_max":1267,"o":"m 307 627 q 392 619 346 619 q 437 640 437 619 q 435 656 437 650 l -10 656 q -52 778 -52 713 q -42 841 -52 812 q -10 903 -32 869 l 1225 903 q 1257 842 1246 869 q 1267 778 1267 815 q 1225 656 1267 714 l 786 656 q 774 721 786 694 q 747 747 763 747 q 729 736 735 747 q 750 656 750 710 q 700 547 750 590 q 708 540 702 545 q 720 526 713 535 q 918 603 802 603 q 1116 529 1034 603 q 1205 311 1205 448 q 1130 114 1205 189 q 946 39 1055 39 q 802 85 855 39 q 747 211 747 130 q 765 292 747 256 q 812 346 783 328 q 853 329 830 329 q 887 337 876 329 q 898 359 898 345 q 848 392 898 392 q 758 347 799 392 q 711 212 711 294 q 716 171 711 193 q 725 138 720 148 q 602 45 694 87 q 397 4 511 4 q 123 90 233 4 q 14 304 14 176 q 73 438 14 393 q 200 476 122 476 q 249 351 200 401 q 385 300 298 300 q 428 307 406 300 q 450 328 450 313 q 446 343 450 336 q 390 330 418 330 q 280 371 323 330 q 236 479 236 412 q 307 627 236 573 z "},"ऋ":{"ha":1192,"x_min":-75,"x_max":1240,"o":"m 485 590 q 500 608 500 593 q 481 647 500 624 q 432 690 463 669 q 248 741 353 741 q 125 715 178 741 q 43 656 73 690 l -33 656 q -75 778 -75 714 q -65 842 -75 815 q -33 903 -55 869 l 1198 903 q 1230 842 1219 869 q 1240 778 1240 815 q 1198 656 1240 714 l 1114 656 q 1047 701 1090 683 q 938 720 1003 720 q 798 671 856 720 q 741 550 741 623 q 770 478 741 478 q 784 481 779 478 q 777 539 777 507 q 823 650 777 609 q 937 690 870 690 q 1076 647 1029 690 q 1122 536 1122 604 q 1097 464 1122 489 q 1041 485 1065 485 q 1014 465 1017 485 q 1123 399 1074 452 q 1178 258 1178 338 q 1117 102 1178 159 q 966 45 1057 45 q 842 79 890 45 q 778 223 778 125 q 779 269 778 240 q 810 265 791 265 q 882 281 851 265 q 912 316 912 297 q 903 330 912 325 q 796 296 868 296 q 745 304 772 296 q 742 224 742 265 q 749 153 742 182 q 771 100 756 124 q 706 23 752 52 q 598 -5 661 -5 q 485 27 536 -5 q 418 123 434 60 q 499 231 490 218 q 509 260 509 246 q 493 279 509 273 l 393 155 q 307 77 351 102 q 200 52 264 52 q 94 94 137 52 q 43 227 43 143 q 45 273 43 256 l 340 412 q 342 431 342 422 q 333 447 342 439 q 311 454 324 454 q 288 446 297 454 q 279 421 279 437 l 102 338 q 40 395 66 353 q 13 490 13 437 q 82 649 13 587 q 248 711 152 711 q 485 590 402 711 z "},"ऌ":{"ha":1022,"x_min":-58,"x_max":1075,"o":"m 154 656 q -17 656 154 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1034 903 q 1066 840 1057 867 q 1075 778 1075 814 q 1034 656 1075 713 l 880 656 l 880 623 q 968 531 932 597 q 1004 384 1004 465 q 948 210 1004 286 q 873 233 912 224 q 826 171 863 204 q 742 127 790 138 q 747 112 742 116 q 762 108 752 108 q 834 136 795 108 q 893 199 873 163 q 973 153 944 185 q 1010 54 1010 113 q 933 -91 1010 -40 q 748 -142 856 -142 q 571 -93 640 -142 q 503 47 503 -43 q 554 174 503 119 q 602 216 574 195 q 686 288 663 261 q 701 325 701 305 q 682 345 701 345 q 614 269 661 296 q 510 243 568 243 q 406 273 453 243 q 339 354 359 302 q 325 348 330 354 q 319 332 319 341 q 369 255 319 292 q 475 212 419 218 q 490 146 490 178 q 447 38 490 81 q 323 -5 404 -5 q 205 21 262 -5 q 106 96 149 48 q 14 353 14 200 q 88 561 14 474 q 307 657 171 657 q 418 625 365 657 q 504 532 471 592 q 561 604 524 575 q 636 637 598 633 q 630 655 636 650 q 611 660 624 660 q 556 639 587 660 q 504 589 526 618 q 418 660 473 633 q 296 688 363 688 q 154 656 228 688 z "},"ऍ":{"ha":705,"x_min":-59,"x_max":762,"o":"m 467 224 q 616 258 549 224 q 658 138 658 201 q 600 14 658 55 q 467 -21 549 -21 q 133 124 254 -21 q 18 488 18 262 l 18 656 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 720 903 q 752 842 742 869 q 762 778 762 815 q 720 656 762 714 l 677 656 q 691 553 691 606 q 614 307 691 382 q 467 254 560 254 q 333 311 387 254 q 324 292 324 302 q 367 244 324 264 q 467 224 410 224 m 336 532 q 367 552 353 532 q 381 605 381 572 q 374 656 381 638 l 336 656 l 336 532 m 115 1108 q 150 1199 115 1166 q 220 1232 186 1232 q 275 1181 237 1202 q 358 1160 313 1160 q 440 1179 403 1160 q 495 1232 477 1198 q 568 1199 530 1232 q 606 1108 606 1165 q 547 991 606 1039 q 360 937 479 937 q 175 991 241 937 q 115 1108 115 1040 z "},"ऎ":{"ha":705,"x_min":-59,"x_max":762,"o":"m 336 532 q 367 552 353 532 q 381 605 381 572 q 374 656 381 638 l 336 656 l 336 532 m 298 933 q 130 985 184 933 q 83 1100 83 1029 q 157 1252 83 1191 l 220 1244 q 245 1210 225 1221 q 377 1185 277 1193 q 547 1149 484 1176 q 647 1053 619 1119 q 661 976 661 1019 q 647 903 661 933 l 720 903 q 752 842 742 869 q 762 778 762 815 q 720 656 762 714 l 677 656 q 691 553 691 606 q 614 307 691 382 q 467 254 560 254 q 333 311 387 254 q 324 292 324 302 q 367 244 324 264 q 467 224 410 224 q 616 258 549 224 q 658 138 658 201 q 600 14 658 55 q 467 -21 549 -21 q 133 124 254 -21 q 18 488 18 262 l 18 656 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 447 903 q 457 913 457 905 q 395 936 457 936 l 298 933 z "},"ए":{"ha":705,"x_min":-59,"x_max":762,"o":"m 467 224 q 616 258 549 224 q 658 138 658 201 q 600 14 658 55 q 467 -21 549 -21 q 133 124 254 -21 q 18 488 18 262 l 18 656 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 720 903 q 752 842 742 869 q 762 778 762 815 q 720 656 762 714 l 677 656 q 691 553 691 606 q 614 307 691 382 q 467 254 560 254 q 333 311 387 254 q 324 292 324 302 q 367 244 324 264 q 467 224 410 224 m 336 532 q 367 552 353 532 q 381 605 381 572 q 374 656 381 638 l 336 656 l 336 532 z "},"ऐ":{"ha":705,"x_min":-59,"x_max":762,"o":"m 336 532 q 367 552 353 532 q 381 605 381 572 q 374 656 381 638 l 336 656 l 336 532 m 467 224 q 616 258 549 224 q 658 138 658 201 q 600 14 658 55 q 467 -21 549 -21 q 133 124 254 -21 q 18 488 18 262 l 18 656 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 435 903 q 451 908 446 903 q 456 920 456 913 q 452 933 456 927 q 272 958 348 933 q 133 1050 176 988 q 195 1207 133 1147 q 340 1267 257 1267 q 564 1156 483 1267 q 640 903 638 1056 l 720 903 q 752 842 742 869 q 762 778 762 815 q 720 656 762 714 l 677 656 q 691 553 691 606 q 614 307 691 382 q 467 254 560 254 q 333 311 387 254 q 324 292 324 302 q 367 244 324 264 q 467 224 410 224 z "},"ऑ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 933 1108 q 969 1199 933 1166 q 1039 1232 1004 1232 q 1094 1181 1056 1202 q 1177 1160 1132 1160 q 1258 1179 1221 1160 q 1314 1232 1295 1198 q 1387 1199 1349 1232 q 1425 1108 1425 1165 q 1365 991 1425 1039 q 1179 937 1297 937 q 994 991 1060 937 q 933 1108 933 1040 m 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 q 1080 181 1087 165 q 1065 263 1065 212 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 z "},"ऒ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 1008 933 q 840 985 894 933 q 793 1100 793 1029 q 867 1252 793 1191 l 930 1244 q 956 1210 935 1221 q 1087 1185 987 1193 q 1257 1149 1194 1176 q 1357 1053 1329 1119 q 1371 976 1371 1019 q 1357 903 1371 933 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 q 1080 181 1087 165 q 1065 263 1065 212 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1157 903 q 1167 913 1167 905 q 1105 936 1167 936 l 1008 933 z "},"ओ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 q 1080 181 1087 165 q 1065 263 1065 212 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1158 903 q 1174 908 1168 903 q 1179 920 1179 913 q 1175 933 1179 927 q 995 958 1071 933 q 856 1050 899 988 q 918 1207 856 1147 q 1063 1267 980 1267 q 1287 1156 1206 1267 q 1362 903 1361 1056 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 z "},"औ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 1356 903 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 q 1080 181 1087 165 q 1065 263 1065 212 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1115 903 q 1142 922 1142 903 q 1140 932 1142 926 q 980 950 1053 932 q 842 1015 886 972 q 894 1157 842 1101 q 1015 1213 946 1213 q 1230 1065 1156 1213 q 1244 1088 1244 1070 q 1228 1133 1244 1107 q 1183 1183 1211 1158 q 1030 1244 1115 1240 q 1072 1338 1031 1302 q 1173 1375 1112 1375 q 1339 1301 1274 1375 q 1401 1110 1401 1228 q 1356 903 1401 1015 z "},"क":{"ha":1118,"x_min":-58,"x_max":1162,"o":"m 372 366 q 380 366 378 366 l 380 450 q 370 451 378 451 q 340 438 351 451 q 329 407 329 425 q 341 377 329 389 q 372 366 353 366 m 758 113 q 578 -5 721 -5 q 446 44 498 -5 q 395 171 395 94 l 395 201 q 359 161 359 201 q 365 123 359 144 q 286 110 335 110 q 90 188 167 110 q 14 386 14 267 q 85 586 14 505 q 288 675 161 675 q 429 633 373 675 q 434 648 434 640 q 392 688 434 670 q 288 705 351 705 q 113 656 189 705 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1120 903 q 1153 839 1145 864 q 1162 778 1162 814 q 1120 656 1162 714 l 1008 656 q 838 705 934 705 q 734 688 776 705 q 692 645 692 671 q 697 631 692 636 q 838 675 759 675 q 1032 587 955 675 q 1085 498 1067 549 q 1104 396 1104 448 q 1036 192 1104 268 q 873 117 968 117 q 749 160 793 117 q 705 280 705 203 q 726 382 705 330 q 751 374 739 374 q 772 384 764 374 q 780 412 780 395 q 770 440 780 429 q 745 451 760 451 q 722 448 730 451 q 686 379 702 427 q 669 280 669 332 q 758 113 669 164 z "},"ख":{"ha":1066,"x_min":-58,"x_max":1124,"o":"m 386 279 q 503 319 456 279 q 678 239 565 239 q 744 248 713 239 q 774 275 774 256 q 772 287 774 282 q 679 269 729 269 q 549 319 600 269 q 498 447 498 369 q 554 575 498 526 q 688 625 609 625 q 777 610 743 625 q 780 622 780 615 q 744 650 780 642 q 680 656 718 656 q 526 597 589 656 q 463 446 463 535 q 485 348 463 391 q 437 319 469 330 q 373 309 404 309 q 330 311 342 309 q 330 309 330 311 l 330 305 q 349 283 330 288 q 386 279 361 279 m 302 575 q 331 614 331 587 q 315 656 331 640 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1082 903 q 1115 840 1105 867 q 1124 778 1124 814 q 1082 656 1124 713 l 1048 656 l 1048 261 q 1058 185 1048 215 q 1088 132 1068 156 q 1027 32 1076 68 q 908 -5 979 -5 q 831 7 869 -5 q 770 43 793 20 q 796 121 796 81 q 768 164 796 161 q 711 25 768 78 q 553 -28 654 -28 q 346 47 436 -28 q 182 244 279 103 q 64 309 115 254 q 14 440 14 363 q 60 571 14 516 q 183 625 106 625 q 302 575 260 625 z "},"ग":{"ha":791,"x_min":-58,"x_max":849,"o":"m 459 621 q 426 667 444 650 q 396 684 409 684 q 375 673 382 684 q 435 584 412 639 q 461 447 461 521 q 408 269 461 339 q 222 186 345 186 q 72 239 130 186 q 14 370 14 293 q 36 472 14 424 q 72 464 53 464 q 122 485 104 464 q 140 544 140 505 q 126 612 140 583 q 92 656 111 641 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 808 903 q 840 840 831 867 q 849 778 849 814 q 808 656 849 713 l 774 656 l 774 261 q 783 187 774 216 q 812 132 791 157 q 751 31 800 67 q 628 -5 702 -5 q 504 35 554 -5 q 443 176 443 85 l 443 250 q 497 440 497 333 q 459 621 497 548 z "},"घ":{"ha":747,"x_min":-63,"x_max":805,"o":"m -63 778 q -53 841 -63 812 q -22 903 -43 869 l 764 903 q 796 840 787 867 q 805 778 805 814 q 764 656 805 713 l 730 656 l 730 261 q 740 185 730 215 q 769 132 749 156 q 707 31 756 67 q 595 -5 659 -5 q 482 21 532 -5 q 412 102 432 47 q 475 125 437 106 q 537 169 512 145 q 563 214 563 193 q 549 232 563 227 q 447 148 512 178 q 298 118 382 118 q 116 172 186 118 q 45 314 45 225 q 68 395 45 357 q 124 444 90 431 q 227 427 173 427 q 306 436 280 427 q 332 460 332 446 q 327 472 332 467 q 230 458 280 458 q 104 499 153 458 q 55 611 55 539 q 72 684 55 648 q 126 739 90 720 q 109 753 123 753 q 61 724 85 753 q 27 656 36 695 l -22 656 q -63 778 -63 713 z "},"ङ":{"ha":924,"x_min":-58,"x_max":974,"o":"m 658 334 q 614 437 614 376 q 658 543 614 499 q 763 586 700 586 q 868 543 826 586 q 910 436 910 499 q 867 332 910 373 q 763 290 824 290 q 658 334 701 290 m 429 264 q 428 273 429 266 q 376 271 412 271 q 245 302 306 271 q 149 399 176 337 q 68 370 101 391 q 22 500 22 431 q 87 652 22 595 q 249 710 151 710 q 371 694 314 710 q 373 704 373 700 q 322 736 373 726 q 253 741 295 741 q 47 656 117 741 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 932 903 q 964 842 954 869 q 974 778 974 815 q 932 656 974 714 l 675 656 l 675 596 q 591 510 618 571 q 479 528 537 528 q 365 489 365 528 q 368 478 365 484 q 472 497 413 497 q 580 479 530 497 q 577 439 577 461 q 620 322 577 372 q 729 260 662 272 l 729 256 q 634 52 728 128 q 384 -24 541 -24 q 124 44 227 -24 q 21 222 21 111 q 44 306 21 273 q 131 363 70 345 q 208 286 154 319 q 371 240 280 240 q 429 264 429 240 z "},"च":{"ha":899,"x_min":-58,"x_max":957,"o":"m 957 778 q 916 656 957 713 l 882 656 l 882 261 q 891 185 882 215 q 921 132 901 156 q 859 31 908 67 q 747 -5 810 -5 q 636 16 683 -5 q 562 77 589 38 q 650 131 609 97 q 690 189 690 165 q 676 211 690 203 q 569 117 640 155 q 386 72 488 72 q 170 135 250 72 q 90 306 90 199 q 114 400 90 361 q 43 443 73 404 q 14 537 14 481 q 39 625 14 593 l 529 625 q 558 524 558 581 q 530 433 558 467 q 453 399 500 399 l 399 399 q 387 374 387 389 q 399 351 387 360 q 430 342 412 342 q 465 349 448 342 q 490 371 482 355 q 594 520 594 399 q 581 596 594 559 q 551 656 568 633 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 916 903 q 948 840 939 867 q 957 778 957 814 z "},"छ":{"ha":876,"x_min":-58,"x_max":924,"o":"m 299 456 q 231 484 299 484 q 106 456 163 484 q 66 514 79 475 q 53 596 53 553 q 78 680 53 639 q 144 741 103 722 q 118 755 140 755 q 68 726 96 755 q 28 656 41 697 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 883 903 q 915 840 906 867 q 924 778 924 814 q 883 656 924 713 l 768 656 q 692 677 740 669 l 692 696 q 684 743 692 732 q 656 751 677 751 l 656 679 q 495 615 559 679 q 432 450 432 551 q 488 302 432 366 q 537 260 511 275 q 587 245 564 245 q 602 259 602 245 l 602 262 q 511 325 547 281 q 468 449 468 378 q 520 591 468 534 q 659 648 573 648 q 809 581 755 648 q 863 407 863 513 q 798 166 863 266 q 636 29 738 75 q 418 -17 535 -17 q 133 60 236 -17 q 29 258 29 136 q 88 398 29 342 q 241 454 147 454 q 296 445 277 454 q 298 452 298 450 q 299 456 299 454 z "},"ज":{"ha":937,"x_min":-45,"x_max":995,"o":"m -45 778 q -35 841 -45 812 q -3 903 -25 869 l 954 903 q 986 840 977 867 q 995 778 995 814 q 954 656 995 713 l 920 656 l 920 261 q 928 187 920 216 q 958 132 937 157 q 897 31 945 67 q 784 -5 848 -5 q 672 20 721 -5 q 603 100 623 46 q 689 279 689 178 q 673 355 689 323 q 636 385 658 385 q 623 382 627 385 q 653 279 653 335 q 589 134 653 195 q 392 66 517 66 q 121 159 232 66 q 42 259 70 202 q 14 378 14 315 q 67 512 14 460 q 207 564 121 564 q 204 528 204 550 q 254 387 204 441 q 379 332 303 332 q 416 359 416 332 q 286 405 332 359 q 240 530 240 451 q 247 582 240 553 q 264 625 254 611 l 640 625 q 631 649 640 642 q 593 656 621 656 l -3 656 q -45 778 -45 713 z "},"झ":{"ha":1026,"x_min":-58,"x_max":1084,"o":"m 58 656 q -17 656 58 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1042 903 q 1075 840 1065 867 q 1084 778 1084 814 q 1042 656 1084 713 l 1008 656 l 1008 261 q 1017 187 1008 216 q 1047 132 1026 157 q 987 31 1035 68 q 868 -5 939 -5 q 767 18 814 -5 q 697 86 720 41 q 745 153 724 113 q 765 232 765 193 q 736 265 765 258 q 640 83 732 149 q 424 11 559 24 q 477 -14 424 -14 q 552 -1 507 -14 q 615 25 597 12 q 625 -45 625 -12 q 583 -155 625 -115 q 467 -195 541 -195 q 336 -141 393 -195 q 240 14 279 -87 q 62 61 133 27 q 28 185 28 126 q 80 308 28 260 q 213 355 132 355 q 348 308 294 355 q 408 194 401 261 q 431 221 431 195 q 417 275 431 246 q 377 327 403 303 q 220 386 315 386 q 87 355 142 386 q 45 419 62 382 q 28 509 28 456 q 93 642 28 589 q 251 694 158 694 l 367 694 q 368 701 368 696 q 331 725 368 725 l 251 725 q 58 656 131 725 m 473 517 q 686 450 591 517 q 716 495 707 467 q 725 570 725 524 l 725 653 q 689 708 725 708 l 689 581 q 675 494 689 515 q 479 547 590 547 q 403 538 431 547 q 375 510 375 528 q 376 501 375 508 q 473 517 414 517 z "},"ञ":{"ha":814,"x_min":-66,"x_max":872,"o":"m -66 778 q -56 841 -66 812 q -24 903 -46 869 l 831 903 q 863 840 854 867 q 872 778 872 814 q 831 656 872 713 l 797 656 l 797 261 q 806 187 797 216 q 836 132 814 157 q 775 31 823 68 q 664 -5 727 -5 q 551 19 600 -5 q 479 99 503 44 q 564 184 528 132 q 600 281 600 237 q 576 313 600 313 q 478 145 557 208 q 288 82 399 82 q 95 146 176 82 q 14 309 14 211 q 30 383 14 347 q 69 435 46 419 q 158 378 107 399 q 251 357 209 357 q 311 370 293 357 q 329 402 329 382 q 320 431 329 422 q 296 440 311 440 q 256 388 262 440 q 172 406 220 388 q 84 463 123 425 q 36 558 46 501 q 144 684 66 638 q 291 726 214 726 q 431 692 368 726 q 534 596 494 657 q 552 615 552 600 q 535 650 552 627 q 406 739 496 705 q 289 757 357 757 q 157 728 220 757 q 54 656 103 702 l -24 656 q -66 778 -66 713 z "},"ट":{"ha":740,"x_min":-41,"x_max":774,"o":"m 774 778 q 733 656 774 713 l 659 656 q 671 576 671 606 q 583 413 671 473 q 418 348 531 378 q 356 329 381 338 q 330 309 330 321 q 389 283 330 283 q 521 316 448 283 q 619 380 595 348 q 697 313 668 355 q 726 216 726 271 q 627 55 726 117 q 387 -7 528 -7 q 117 79 220 -7 q 14 304 14 165 q 87 498 14 419 q 262 597 154 570 q 357 637 330 614 q 385 699 385 660 q 378 739 385 724 q 351 758 369 758 q 336 754 343 758 q 349 704 349 727 q 323 656 349 666 l 0 656 q -41 778 -41 713 q -32 841 -41 812 q 0 903 -22 869 l 733 903 q 765 840 756 867 q 774 778 774 814 z "},"ठ":{"ha":803,"x_min":-44,"x_max":850,"o":"m -44 778 q -34 841 -44 812 q -3 903 -24 869 l 808 903 q 840 842 830 869 q 850 778 850 815 q 808 656 850 714 l 680 656 q 684 608 684 635 q 659 534 684 561 q 585 557 616 557 q 556 534 562 557 q 724 432 659 510 q 789 261 789 354 q 681 46 789 121 q 407 -22 582 -22 q 125 59 232 -22 q 14 285 14 142 q 76 474 14 392 q 259 591 138 556 q 358 634 332 614 q 390 702 390 658 q 363 746 390 746 q 349 743 354 746 q 353 707 353 720 q 321 656 353 669 l -3 656 q -44 778 -44 715 m 454 281 q 454 288 454 281 q 445 305 454 296 q 416 323 435 315 q 365 304 382 315 q 349 279 349 294 q 364 257 349 264 q 402 250 379 250 q 440 258 425 250 q 454 281 454 267 z "},"ड":{"ha":743,"x_min":-60,"x_max":790,"o":"m 429 264 q 428 273 429 266 q 376 271 412 271 q 245 302 306 271 q 149 399 176 337 q 68 370 101 391 q 22 500 22 431 q 87 652 22 595 q 249 710 151 710 q 371 694 314 710 q 373 704 373 700 q 322 736 373 726 q 253 741 295 741 q 47 656 117 741 l -19 656 q -60 778 -60 713 q -51 841 -60 812 q -19 903 -41 869 l 748 903 q 780 842 770 869 q 790 778 790 815 q 748 656 790 714 l 675 656 l 675 575 q 663 524 675 547 q 632 493 652 501 q 479 528 565 528 q 365 489 365 528 q 368 478 365 484 q 471 497 413 497 q 587 477 530 497 q 682 408 644 456 q 729 260 729 349 q 634 52 729 128 q 384 -24 540 -24 q 124 44 227 -24 q 21 222 21 111 q 44 306 21 273 q 131 363 70 345 q 208 286 154 319 q 371 240 280 240 q 429 264 429 240 z "},"ढ":{"ha":791,"x_min":-52,"x_max":838,"o":"m 426 737 q 420 762 426 755 q 401 770 414 770 l 391 770 l 391 751 q 378 716 391 727 q 328 697 364 705 q 193 656 250 682 l -9 656 q -52 778 -52 714 q -41 842 -52 815 q -9 903 -31 869 l 796 903 q 828 842 818 869 q 838 778 838 815 q 796 656 838 714 l 694 656 q 696 599 696 631 q 658 499 696 532 q 549 519 605 519 q 369 461 437 519 q 300 311 300 402 q 312 244 300 271 q 347 216 325 216 q 355 218 351 216 q 336 304 336 255 q 396 435 336 381 q 555 489 456 489 q 715 421 654 489 q 777 258 777 353 q 679 49 777 122 q 420 -24 581 -24 q 129 71 243 -24 q 14 318 14 165 q 69 513 14 431 q 196 618 113 576 q 334 664 256 648 q 426 737 426 682 m 522 225 q 572 257 572 225 q 565 274 572 267 q 546 281 558 281 q 526 271 534 281 q 517 249 517 261 q 522 225 517 236 z "},"ण":{"ha":954,"x_min":-58,"x_max":1012,"o":"m -58 778 q -48 841 -58 812 q -16 903 -38 869 l 970 903 q 1003 840 994 867 q 1012 778 1012 814 q 970 656 1012 713 l 937 656 l 937 261 q 946 185 937 215 q 976 132 956 156 q 914 31 963 67 q 791 -5 865 -5 q 667 35 718 -5 q 606 175 606 83 l 606 255 q 688 490 688 346 q 672 625 688 574 q 629 677 655 677 q 614 673 620 677 q 643 592 633 640 q 652 496 652 544 q 563 267 652 349 q 337 185 473 185 q 114 267 200 185 q 18 516 18 356 q 24 656 18 573 l -16 656 q -58 778 -58 713 m 309 555 q 336 507 309 507 q 355 516 348 507 q 361 562 361 525 q 351 656 361 599 l 313 656 q 309 555 309 571 z "},"त":{"ha":772,"x_min":-58,"x_max":830,"o":"m 325 707 q 211 695 259 707 q 111 656 163 683 l -16 656 q -58 778 -58 713 q -48 841 -58 812 q -16 903 -38 869 l 789 903 q 821 840 812 867 q 830 778 830 814 q 789 656 830 713 l 755 656 l 755 261 q 765 185 755 215 q 794 132 774 156 q 732 31 781 67 q 615 -5 684 -5 q 517 15 563 -5 q 447 80 471 36 q 470 160 470 113 q 425 284 470 207 l 425 397 q 392 408 410 408 q 365 396 375 408 q 354 369 354 384 q 359 342 354 353 q 364 330 361 336 q 371 316 366 325 q 378 301 376 307 q 395 271 381 295 q 436 161 436 195 q 369 42 436 85 q 195 -11 302 -2 l 155 40 q 14 385 14 224 q 97 600 14 524 q 325 676 181 676 q 451 660 395 676 q 452 669 452 664 q 325 707 452 707 z "},"थ":{"ha":919,"x_min":11,"x_max":977,"o":"m 514 468 q 395 389 466 407 q 424 370 401 370 q 481 391 446 370 q 570 490 534 422 q 606 637 606 557 q 575 786 606 717 q 544 838 562 815 q 585 903 548 876 l 935 903 q 967 840 958 867 q 977 778 977 814 q 935 656 977 713 l 901 656 l 901 261 q 910 187 901 216 q 940 132 919 157 q 878 31 927 67 q 762 -5 829 -5 q 646 24 694 -5 q 577 110 597 54 q 655 158 629 135 q 680 197 680 182 q 669 220 680 212 q 561 140 628 170 q 410 110 494 110 q 128 214 237 110 q 14 502 14 321 q 37 500 26 500 l 65 500 q 243 538 179 500 q 308 642 308 576 q 275 685 308 685 q 256 677 264 685 q 248 656 248 669 q 271 621 248 630 q 216 559 260 582 q 112 532 172 536 q 45 588 79 542 q 11 694 11 635 q 87 863 11 795 q 287 930 163 930 q 503 836 425 930 q 570 647 570 754 q 514 468 570 539 z "},"द":{"ha":770,"x_min":-58,"x_max":814,"o":"m 688 150 q 762 32 688 150 q 712 -92 762 -43 q 586 -140 663 -140 q 456 -95 509 -140 q 400 0 409 -55 q 463 6 425 0 q 527 24 500 12 q 553 54 553 36 q 549 68 553 61 q 382 31 477 31 q 118 120 222 31 q 14 354 14 209 q 122 602 14 515 q 399 684 224 684 q 386 707 399 701 q 331 712 372 712 q 231 695 289 712 q 139 656 173 678 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 772 903 q 804 842 793 869 q 814 778 814 815 q 772 656 814 714 l 707 656 l 707 633 q 685 536 707 574 q 602 490 657 490 q 549 494 576 494 q 398 447 460 494 q 336 314 336 400 q 368 255 336 255 q 378 257 374 255 q 372 311 372 275 q 427 426 372 385 q 550 464 477 464 q 678 410 623 464 q 757 262 734 356 q 688 150 741 211 z "},"ध":{"ha":849,"x_min":-1,"x_max":907,"o":"m 490 762 q 479 838 490 802 q 519 903 483 876 l 865 903 q 898 840 888 867 q 907 778 907 814 q 865 656 907 713 l 831 656 l 831 261 q 840 187 831 216 q 870 132 849 157 q 808 31 857 67 q 691 -5 760 -5 q 599 13 642 -5 q 531 66 557 32 q 628 134 589 92 q 667 195 667 175 q 649 225 667 216 q 529 107 616 153 q 335 62 441 62 q 117 121 199 62 q 35 281 35 180 q 62 371 35 329 q 127 425 89 414 q 279 393 192 393 q 326 398 309 393 q 344 419 344 404 q 342 429 344 422 q 279 424 320 424 q 133 459 196 424 q 35 553 71 494 q -1 691 -1 612 q 73 871 -1 805 q 244 937 147 937 q 397 890 340 937 q 452 766 452 842 q 404 653 452 690 q 312 623 364 623 q 232 645 260 623 q 223 629 223 640 q 249 603 223 614 q 307 592 274 592 q 429 629 380 592 q 490 762 490 675 z "},"न":{"ha":805,"x_min":-48,"x_max":863,"o":"m -48 778 q -38 841 -48 812 q -7 903 -28 869 l 821 903 q 853 840 844 867 q 863 778 863 814 q 821 656 863 713 l 787 656 l 787 261 q 796 187 787 216 q 826 132 805 157 q 764 31 813 67 q 642 -5 715 -5 q 521 35 569 -5 q 464 176 464 83 l 464 368 q 419 383 451 383 q 403 380 409 383 q 417 346 410 370 q 424 296 424 323 q 380 176 424 220 q 252 129 334 129 q 83 203 153 129 q 14 382 14 277 q 96 566 14 502 q 304 625 172 625 q 399 617 356 625 q 464 596 429 610 l 464 656 l -7 656 q -48 778 -48 713 z "},"ऩ":{"ha":805,"x_min":-48,"x_max":863,"o":"m -48 778 q -38 841 -48 812 q -7 903 -28 869 l 821 903 q 853 840 844 867 q 863 778 863 814 q 821 656 863 713 l 787 656 l 787 261 q 796 187 787 216 q 826 132 805 157 q 764 31 813 67 q 642 -5 715 -5 q 521 35 569 -5 q 464 176 464 83 l 464 368 q 419 383 451 383 q 403 380 409 383 q 417 346 410 370 q 424 296 424 323 q 380 176 424 220 q 252 129 334 129 q 83 203 153 129 q 14 382 14 277 q 96 566 14 502 q 304 625 172 625 q 399 617 356 625 q 464 596 429 610 l 464 656 l -7 656 q -48 778 -48 713 m 296 66 q 309 79 296 66 q 360 93 323 93 q 425 66 397 93 q 452 0 452 38 q 425 -64 452 -37 q 359 -90 398 -90 q 295 -63 321 -90 q 269 1 269 -37 q 296 66 269 39 z "},"प":{"ha":721,"x_min":-59,"x_max":779,"o":"m -59 778 q -49 841 -59 812 q -18 903 -39 869 l 737 903 q 769 840 760 867 q 779 778 779 814 q 737 656 779 713 l 703 656 l 703 261 q 713 185 703 215 q 743 132 723 156 q 681 31 730 67 q 558 -5 632 -5 q 434 35 484 -5 q 373 176 373 85 l 373 204 q 472 237 421 210 q 523 292 523 264 q 513 312 523 304 q 424 252 480 274 q 304 231 367 231 q 95 309 172 231 q 18 518 18 388 q 28 656 18 593 l -18 656 q -59 778 -59 713 m 374 656 l 336 656 q 330 591 330 633 q 374 521 330 528 l 374 656 z "},"फ":{"ha":1120,"x_min":-59,"x_max":1164,"o":"m 741 125 q 691 39 730 73 q 562 -5 641 -5 q 434 35 484 -5 q 373 176 373 85 l 373 204 q 452 227 412 210 q 503 276 503 250 q 496 295 503 286 q 410 248 463 265 q 304 231 357 231 q 95 309 172 231 q 18 518 18 388 q 28 656 18 593 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 1122 903 q 1154 842 1144 869 q 1164 778 1164 815 q 1122 656 1164 714 l 1011 656 q 840 705 935 705 q 737 687 779 705 q 696 646 696 668 q 700 631 696 636 q 840 675 762 675 q 1035 587 958 675 q 1088 498 1069 549 q 1107 396 1107 448 q 1039 192 1107 268 q 876 117 970 117 q 752 160 796 117 q 708 280 708 203 q 728 382 708 330 q 754 374 741 374 q 774 384 766 374 q 783 412 783 395 q 770 439 783 429 q 746 450 758 450 q 725 448 733 450 q 688 379 705 427 q 672 280 672 332 q 741 125 672 180 m 374 656 l 336 656 q 330 591 330 633 q 374 521 330 528 l 374 656 z "},"ब":{"ha":730,"x_min":-58,"x_max":788,"o":"m 446 311 q 469 322 461 311 q 395 378 438 340 q 314 459 351 416 q 261 529 275 503 q 248 506 248 522 q 285 435 248 481 q 372 350 323 389 q 446 311 420 311 m 470 18 q 395 102 417 45 q 456 120 417 103 q 496 159 496 136 q 489 174 496 168 q 422 141 465 156 q 327 126 380 126 q 114 196 202 126 q 14 417 14 275 q 110 636 14 559 q 327 705 195 705 q 416 693 374 705 q 485 664 459 682 q 488 676 488 669 q 437 719 488 701 q 326 735 389 735 q 81 656 174 735 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 747 903 q 779 840 770 867 q 788 778 788 814 q 747 656 788 713 l 713 656 l 713 261 q 722 187 713 216 q 751 132 730 157 q 690 31 739 67 q 578 -5 641 -5 q 470 18 515 -5 z "},"भ":{"ha":939,"x_min":0,"x_max":996,"o":"m 267 659 q 245 650 254 659 q 236 629 236 642 q 269 595 236 603 l 269 529 q 200 507 238 524 q 135 468 162 490 q 41 543 83 485 q 0 679 0 600 q 75 854 0 777 q 271 930 150 930 q 491 847 418 930 q 564 608 564 763 l 564 514 q 576 512 566 513 q 600 505 587 510 l 600 640 q 586 742 600 684 q 546 838 572 801 q 586 903 550 876 l 955 903 q 987 840 978 867 q 996 778 996 814 q 955 656 996 713 l 921 656 l 921 261 q 930 187 921 216 q 960 132 939 157 q 899 31 947 68 q 776 -5 851 -5 q 651 35 701 -5 q 590 176 590 85 l 590 294 q 555 301 579 301 l 555 252 q 504 123 555 172 q 367 74 452 74 q 180 139 259 74 q 97 313 97 207 q 152 440 97 392 q 307 500 206 488 l 307 587 q 267 659 307 659 z "},"म":{"ha":848,"x_min":-42,"x_max":905,"o":"m 507 656 l 469 656 l 469 555 q 507 546 485 552 l 507 656 m -42 778 q -32 842 -42 815 q 0 903 -22 869 l 864 903 q 896 840 887 867 q 905 778 905 814 q 864 656 905 713 l 830 656 l 830 261 q 839 187 830 216 q 869 132 848 157 q 807 31 856 67 q 685 -5 758 -5 q 564 35 612 -5 q 507 176 507 83 l 507 318 q 491 331 498 328 q 469 334 484 334 l 469 278 q 420 152 469 205 q 281 100 371 100 q 181 119 229 100 q 96 174 133 138 q 14 357 14 250 q 153 550 14 507 l 153 656 l 0 656 q -42 778 -42 714 z "},"य":{"ha":818,"x_min":-48,"x_max":876,"o":"m -48 778 q -38 841 -48 812 q -7 903 -28 869 l 834 903 q 866 840 857 867 q 876 778 876 814 q 834 656 876 713 l 800 656 l 800 261 q 809 185 800 214 q 838 132 817 156 q 776 31 825 67 q 664 -5 727 -5 q 551 21 600 -5 q 484 96 503 47 q 569 131 528 104 q 610 182 610 157 q 600 199 610 195 q 377 118 517 118 q 236 140 301 118 q 123 203 172 162 q 14 441 14 294 q 40 554 14 505 q 89 542 59 542 q 137 558 119 542 q 155 600 155 575 q 115 656 155 639 l -7 656 q -48 778 -48 713 m 447 659 q 431 648 435 659 q 461 597 448 629 q 474 532 474 566 q 431 429 474 467 q 322 392 388 392 l 322 387 q 357 363 322 363 q 458 406 413 363 q 510 532 510 452 q 489 621 510 583 q 447 659 467 659 z "},"र":{"ha":659,"x_min":-48,"x_max":718,"o":"m 450 -20 q 281 58 352 -20 q 164 273 221 125 q 66 332 109 288 q 14 460 14 385 q 75 604 14 551 q 200 650 127 650 q 285 629 248 650 q 343 574 321 608 q 359 592 359 578 q 347 621 359 606 q 315 650 335 637 q 204 681 265 681 q 92 656 144 681 l -7 656 q -48 778 -48 713 q -38 841 -48 812 q -7 903 -28 869 l 677 903 q 718 777 718 840 q 676 656 718 714 l 612 656 q 646 534 646 606 q 565 354 646 426 q 362 278 484 283 q 405 250 362 250 q 468 258 436 250 q 520 279 499 267 q 571 207 541 241 q 632 150 602 172 q 576 30 624 79 q 450 -20 528 -20 z "},"ऱ":{"ha":659,"x_min":-47,"x_max":718,"o":"m 200 650 q 285 629 248 650 q 343 574 321 608 q 359 592 359 578 q 347 621 359 606 q 315 650 335 637 q 204 681 265 681 q 92 656 144 681 l -6 656 q -47 778 -47 713 q -38 841 -47 812 q -6 903 -28 869 l 677 903 q 718 777 718 840 q 676 656 718 714 l 612 656 q 646 534 646 606 q 565 354 646 426 q 362 278 484 283 q 405 250 362 250 q 468 258 436 250 q 520 279 499 267 q 571 207 541 241 q 632 150 602 172 q 576 30 624 79 q 448 -20 528 -20 q 304 35 367 -20 q 319 91 319 63 q 280 178 319 144 q 189 212 241 212 q 176 243 183 223 q 164 273 168 263 q 66 332 109 288 q 14 460 14 385 q 75 604 14 551 q 200 650 127 650 m 256 155 q 283 89 283 126 q 256 25 283 52 q 191 -2 229 -2 q 127 25 153 -2 q 100 89 100 52 q 127 154 100 127 q 191 181 154 181 q 256 155 229 181 z "},"ल":{"ha":933,"x_min":-48,"x_max":991,"o":"m 540 225 q 554 143 554 193 q 506 34 554 77 q 372 -9 457 -9 q 113 98 216 -9 q 40 213 66 148 q 14 350 14 279 q 81 557 14 472 q 288 652 157 652 q 399 619 345 652 q 481 529 454 586 l 487 529 q 551 613 508 583 q 647 644 593 644 q 732 631 700 644 q 734 642 734 635 q 699 669 734 661 q 650 675 677 675 q 482 587 536 675 q 400 656 452 630 q 282 682 349 682 q 153 656 214 682 l -7 656 q -48 778 -48 713 q -38 841 -48 812 q -7 903 -28 869 l 949 903 q 982 840 972 867 q 991 778 991 814 q 949 656 991 713 l 916 656 l 916 261 q 924 187 916 216 q 954 132 933 157 q 892 31 941 67 q 770 -5 844 -5 q 646 35 696 -5 q 585 176 585 85 l 585 237 q 640 279 614 252 q 665 328 665 306 q 648 353 665 349 q 588 279 631 304 q 494 253 547 253 q 401 278 441 253 q 339 354 355 304 q 319 329 319 350 q 368 257 319 291 q 492 222 416 222 l 504 222 q 540 225 524 222 z "},"ळ":{"ha":1077,"x_min":-45,"x_max":1118,"o":"m 300 676 q 238 672 263 676 q 169 656 212 668 l -3 656 q -45 778 -45 713 q -35 841 -45 812 q -3 903 -25 869 l 1077 903 q 1109 840 1100 867 q 1118 778 1118 814 q 1077 656 1118 713 l 935 656 l 935 607 q 1025 515 991 575 q 1063 343 1063 446 q 974 97 1063 188 q 749 5 884 5 q 644 23 692 5 q 571 74 596 41 q 611 125 592 93 q 631 175 631 157 q 611 203 631 193 q 491 53 563 100 q 319 5 419 5 q 107 88 192 5 q 14 336 14 178 q 84 549 14 460 q 296 646 162 646 q 421 617 365 646 q 512 533 477 589 l 517 533 q 704 632 585 632 q 705 639 705 633 q 669 660 705 660 q 591 641 633 660 q 517 585 550 623 q 300 676 431 676 m 733 379 q 692 306 733 379 q 716 293 699 293 q 746 310 734 293 q 758 343 758 326 q 733 379 758 379 m 321 326 q 321 317 321 326 q 328 298 321 307 q 343 290 334 290 l 388 361 q 362 376 380 376 q 332 360 344 376 q 321 326 321 345 z "},"ऴ":{"ha":1077,"x_min":-45,"x_max":1118,"o":"m 300 676 q 238 672 263 676 q 169 656 212 668 l -3 656 q -45 778 -45 713 q -35 841 -45 812 q -3 903 -25 869 l 1077 903 q 1109 840 1100 867 q 1118 778 1118 814 q 1077 656 1118 713 l 935 656 l 935 607 q 1025 515 991 575 q 1063 343 1063 446 q 974 97 1063 188 q 749 5 884 5 q 645 23 692 5 q 573 74 599 41 q 612 124 593 92 q 631 175 631 157 q 611 203 631 193 q 319 5 513 5 q 107 88 192 5 q 14 336 14 178 q 84 549 14 460 q 296 646 162 646 q 421 617 365 646 q 512 533 477 589 l 517 533 q 704 632 585 632 q 705 639 705 633 q 669 660 705 660 q 591 641 633 660 q 517 585 550 623 q 300 676 431 676 m 739 380 q 733 379 734 380 l 692 306 q 716 293 699 293 q 746 310 734 293 q 758 347 758 326 q 739 380 758 380 m 321 326 q 321 317 321 326 q 328 298 321 307 q 343 290 334 290 l 388 361 q 362 376 380 376 q 332 360 344 376 q 321 326 321 345 m 436 -64 q 436 -45 436 -64 q 463 1 436 -26 q 527 28 490 28 q 593 1 564 28 q 619 -64 619 -26 q 592 -128 619 -101 q 527 -155 566 -155 q 463 -127 489 -155 q 436 -64 436 -102 z "},"व":{"ha":723,"x_min":-58,"x_max":781,"o":"m 486 169 q 479 184 486 178 q 410 153 456 167 q 314 139 363 139 q 101 215 185 139 q 14 415 14 292 q 100 615 14 538 q 314 692 186 692 q 450 665 387 692 q 454 675 454 671 q 411 710 454 698 q 315 722 368 722 q 92 656 187 722 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 739 903 q 771 840 762 867 q 781 778 781 814 q 739 656 781 713 l 705 656 l 705 261 q 715 185 705 215 q 745 132 725 156 q 683 31 732 67 q 569 -5 634 -5 q 458 21 504 -5 q 383 114 401 52 q 486 169 486 133 m 378 377 q 386 378 385 377 l 386 462 q 371 463 385 463 q 346 450 357 463 q 334 419 334 438 q 346 389 334 400 q 378 377 358 377 z "},"श":{"ha":1000,"x_min":14,"x_max":1057,"o":"m 373 936 q 614 840 524 936 q 656 903 623 878 l 1016 903 q 1048 840 1039 867 q 1057 778 1057 814 q 1016 656 1057 713 l 982 656 l 982 261 q 991 187 982 216 q 1021 132 1000 157 q 960 31 1008 68 q 842 -5 912 -5 q 755 11 796 -5 q 688 60 714 26 q 704 156 704 100 q 651 191 673 172 l 651 348 q 715 453 692 389 q 737 571 737 517 q 728 641 737 625 q 703 656 719 656 q 696 656 698 656 q 701 577 701 616 q 613 361 701 456 q 393 257 524 265 q 426 231 393 231 q 533 260 477 231 q 668 139 592 184 q 615 12 668 67 q 468 -43 562 -43 q 302 24 373 -43 q 174 208 246 77 q 55 266 97 217 q 14 383 14 315 q 37 468 14 428 q 98 527 61 508 q 161 486 122 500 q 243 471 200 471 q 362 510 311 471 q 414 610 414 550 q 406 648 414 632 q 380 664 397 664 q 351 635 351 664 q 375 590 351 606 q 332 526 368 550 q 245 501 296 501 q 115 555 163 501 q 68 683 68 605 q 150 860 68 787 q 373 936 236 936 z "},"ष":{"ha":721,"x_min":-59,"x_max":779,"o":"m 373 176 q 373 204 373 176 q 472 237 421 210 q 523 292 523 264 q 513 312 523 304 q 424 252 480 274 q 304 231 367 231 q 95 309 172 231 q 18 518 18 388 q 28 656 18 593 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 737 903 q 769 840 760 867 q 779 778 779 814 q 737 656 779 713 l 703 656 l 703 261 q 713 185 703 215 q 743 132 723 156 q 681 31 730 67 q 558 -5 632 -5 q 434 35 484 -5 q 373 176 373 85 m 451 460 q 474 472 466 460 q 399 528 443 490 q 319 609 356 566 q 266 679 279 652 q 252 656 252 671 q 290 585 252 631 q 376 500 328 539 q 451 460 425 460 z "},"स":{"ha":990,"x_min":-48,"x_max":1048,"o":"m 482 297 q 652 241 543 241 q 660 184 660 216 q 613 36 660 85 q 475 -14 566 -14 q 290 64 373 -14 q 161 272 208 138 q 60 338 107 286 q 14 460 14 391 q 72 606 14 551 q 191 654 124 654 q 297 619 257 654 q 304 635 304 625 q 272 669 304 654 q 186 685 240 685 q 83 656 133 685 l -7 656 q -48 778 -48 713 q -38 841 -48 812 q -7 903 -28 869 l 1006 903 q 1039 840 1029 867 q 1048 778 1048 814 q 1006 656 1048 713 l 972 656 l 972 261 q 981 187 972 216 q 1011 132 990 157 q 949 31 998 67 q 832 -5 901 -5 q 741 13 784 -5 q 673 68 699 31 q 696 172 696 119 q 679 275 696 224 q 665 275 675 275 l 653 275 q 556 292 602 275 q 488 338 511 309 q 336 302 426 302 q 347 279 338 286 q 376 272 355 272 q 482 297 429 272 m 597 541 q 620 534 608 534 q 642 541 631 534 l 642 656 l 596 656 q 606 597 606 633 q 597 541 606 561 z "},"ह":{"ha":763,"x_min":-50,"x_max":810,"o":"m 58 656 q -7 656 58 656 q -50 778 -50 714 q -39 842 -50 815 q -7 903 -29 869 l 769 903 q 801 840 792 867 q 810 778 810 814 q 769 656 810 713 l 698 656 l 698 590 q 652 493 698 517 q 495 528 585 528 q 415 515 444 528 q 387 488 387 503 q 389 478 387 483 q 492 497 444 497 q 681 431 612 497 q 749 257 749 365 q 721 135 749 185 q 642 62 692 85 q 538 155 622 123 l 435 195 l 435 228 q 426 254 435 243 q 401 265 416 265 q 377 255 387 265 q 368 225 368 245 q 398 177 368 197 q 515 129 416 165 q 596 80 570 109 q 622 -2 622 52 q 604 -78 622 -39 q 549 -146 586 -117 q 303 -100 412 -138 q 107 18 176 -56 q 27 222 27 104 q 57 337 27 281 q 129 412 87 393 q 77 466 97 432 q 58 539 58 500 q 133 674 58 627 q 308 717 201 717 q 404 709 359 717 q 415 707 411 707 q 417 715 417 709 q 398 739 417 731 q 308 747 372 747 q 58 656 140 747 z "},"ऺ":{"ha":0,"x_min":-342,"x_max":-27,"o":"m -186 774 q -342 828 -269 774 l -342 1131 q -187 1177 -281 1177 q -27 1131 -93 1177 l -27 828 q -105 787 -70 799 q -186 774 -141 774 z "},"ऻ":{"ha":359,"x_min":-58,"x_max":417,"o":"m 17 903 l 17 1131 q 172 1177 77 1177 q 332 1131 266 1177 l 332 903 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 17 903 z "},"़":{"ha":0,"x_min":-463,"x_max":-280,"o":"m -463 -106 q -463 -87 -463 -106 q -436 -41 -463 -68 q -372 -14 -409 -14 q -307 -41 -335 -14 q -280 -106 -280 -69 q -307 -171 -280 -144 q -372 -197 -334 -197 q -436 -170 -410 -197 q -463 -106 -463 -144 z "},"ऽ":{"ha":711,"x_min":27,"x_max":684,"o":"m 27 222 q 60 323 27 280 q 149 377 94 366 q 244 311 186 345 q 333 277 302 277 q 356 295 353 277 q 324 307 349 298 q 248 345 300 315 q 146 429 195 376 q 76 560 97 483 q 64 648 64 601 q 113 806 64 745 q 374 903 190 903 l 595 903 q 624 786 624 848 q 601 688 624 724 q 507 642 572 642 l 401 642 q 395 625 395 635 q 413 593 395 607 q 466 560 431 578 q 517 533 501 542 q 609 465 572 502 q 684 273 684 389 q 591 68 684 140 q 340 -4 498 -4 q 121 54 208 -4 q 27 222 27 117 z "},"ा":{"ha":359,"x_min":-58,"x_max":417,"o":"m 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 z "},"ि":{"ha":359,"x_min":-58,"x_max":1125,"o":"m 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 45 903 q 38 959 38 924 q 145 1175 38 1092 q 467 1264 261 1264 q 734 1217 593 1264 q 955 1120 848 1180 q 1125 1004 1062 1059 q 960 856 1082 856 q 827 894 912 856 q 750 930 802 905 q 490 1003 599 1003 q 382 977 424 1003 q 340 903 340 950 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 z "},"ी":{"ha":359,"x_min":-385,"x_max":417,"o":"m -91 903 l 28 903 q 30 920 30 913 q -37 986 30 986 q -84 971 -68 986 q -100 935 -100 956 q -91 903 -100 913 m 18 656 l -153 656 q -321 769 -258 688 q -385 947 -385 850 q -283 1166 -385 1086 q -40 1240 -189 1240 q 215 1156 109 1240 q 329 918 329 1064 l 329 903 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 z "},"ु":{"ha":0,"x_min":-551,"x_max":45,"o":"m -27 0 q 45 -176 45 -62 q -33 -378 45 -298 q -256 -464 -117 -464 q -462 -399 -380 -464 q -551 -214 -551 -330 q -511 -109 -551 -146 q -412 -72 -471 -72 q -382 -75 -395 -72 q -385 -115 -385 -92 q -332 -244 -385 -196 q -271 -271 -302 -271 q -250 -251 -250 -271 q -328 -192 -302 -236 q -349 -108 -349 -156 q -294 18 -349 -31 q -167 62 -245 62 q -86 46 -127 62 l -132 4 q -101 -27 -132 -27 q -27 0 -71 -27 z "},"ू":{"ha":0,"x_min":-433,"x_max":170,"o":"m -199 64 q -90 31 -130 64 l -132 4 q -102 -27 -132 -27 q -41 -8 -76 -27 q 43 -105 4 -34 q 101 -238 61 -138 q 170 -378 142 -338 q 111 -461 155 -431 q 9 -491 67 -491 q -93 -461 -48 -491 q -160 -372 -138 -431 q -78 -320 -116 -363 q -39 -238 -39 -277 q -70 -210 -39 -210 q -111 -301 -75 -260 q -227 -351 -155 -351 q -371 -295 -313 -351 q -433 -142 -433 -237 q -361 12 -433 -47 q -199 64 -295 64 z "},"ृ":{"ha":0,"x_min":-420,"x_max":97,"o":"m 45 -52 q 29 -110 45 -82 q -16 -148 13 -137 q -83 -141 -52 -141 q -135 -168 -135 -141 q -121 -188 -135 -180 q -81 -195 -106 -195 q 28 -161 -18 -195 q 97 -282 97 -189 q 41 -394 97 -351 q -123 -437 -15 -437 q -332 -369 -250 -437 q -420 -174 -420 -297 q -371 -24 -420 -87 q -262 55 -330 28 q -124 82 -195 82 q -4 47 -54 82 q 45 -52 45 13 z "},"ॄ":{"ha":0,"x_min":-381,"x_max":74,"o":"m -18 -109 q -77 -104 -47 -104 q -127 -129 -127 -104 q -116 -147 -127 -140 q -83 -155 -104 -155 q 13 -126 -26 -155 q 74 -222 74 -153 q 32 -303 74 -273 q -86 -334 -9 -334 q -127 -357 -127 -334 q -116 -376 -127 -369 q -83 -384 -104 -384 q 13 -355 -33 -384 q 74 -452 74 -378 q 26 -543 74 -508 q -119 -580 -26 -580 q -300 -528 -231 -580 q -370 -380 -370 -477 q -264 -232 -370 -269 q -289 -212 -269 -212 q -346 -239 -318 -212 q -381 -135 -381 -195 q -292 33 -381 -27 q -134 83 -220 83 q -8 53 -48 83 q 32 -23 32 24 q -18 -109 32 -83 z "},"ॅ":{"ha":0,"x_min":-450,"x_max":42,"o":"m -450 1108 q -414 1199 -450 1166 q -344 1232 -378 1232 q -289 1181 -327 1202 q -206 1160 -251 1160 q -124 1179 -161 1160 q -69 1232 -87 1198 q 4 1199 -34 1232 q 42 1108 42 1165 q -18 991 42 1039 q -204 937 -85 937 q -389 991 -323 937 q -450 1108 -450 1040 z "},"ॆ":{"ha":0,"x_min":-608,"x_max":-30,"o":"m -393 933 q -562 985 -507 933 q -608 1100 -608 1029 q -534 1252 -608 1191 l -471 1244 q -446 1210 -466 1221 q -314 1185 -414 1193 q -144 1149 -207 1176 q -44 1053 -72 1119 q -30 972 -30 1019 q -48 894 -30 926 l -48 878 q -75 808 -48 834 q -148 782 -102 782 q -219 808 -194 782 q -244 873 -244 833 l -244 903 q -234 913 -234 905 q -296 936 -234 936 l -393 933 z "},"े":{"ha":0,"x_min":-552,"x_max":-45,"o":"m -229 921 q -233 933 -229 927 q -413 958 -337 933 q -552 1050 -509 988 q -484 1211 -552 1150 q -336 1266 -423 1266 q -121 1155 -203 1266 q -45 895 -45 1051 l -45 876 q -73 802 -45 829 q -150 774 -102 774 q -225 802 -197 774 q -253 871 -253 830 l -253 903 q -229 921 -229 903 z "},"ै":{"ha":0,"x_min":-564,"x_max":-4,"o":"m -174 1065 q -161 1089 -161 1071 q -177 1133 -161 1107 q -222 1183 -194 1158 q -375 1244 -290 1240 q -334 1338 -374 1302 q -232 1375 -293 1375 q -66 1301 -131 1375 q -4 1110 -4 1228 q -50 900 -4 1013 l -50 885 q -83 799 -50 831 q -173 767 -117 767 q -259 799 -229 767 q -290 878 -290 831 l -290 903 q -263 922 -263 903 q -265 932 -263 926 q -425 950 -352 932 q -564 1015 -519 972 q -511 1157 -564 1101 q -390 1213 -459 1213 q -174 1065 -250 1213 z "},"ॉ":{"ha":359,"x_min":-101,"x_max":417,"o":"m 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 m -101 1108 q -65 1199 -101 1166 q 5 1232 -30 1232 q 60 1181 22 1202 q 142 1160 98 1160 q 224 1179 187 1160 q 279 1232 261 1198 q 353 1199 315 1232 q 391 1108 391 1165 q 331 991 391 1039 q 144 937 263 937 q -41 991 26 937 q -101 1108 -101 1040 z "},"ॊ":{"ha":359,"x_min":-236,"x_max":417,"o":"m -21 933 q -189 985 -135 933 q -236 1100 -236 1029 q -161 1252 -236 1191 l -99 1244 q -73 1210 -94 1221 q 58 1185 -41 1193 q 228 1149 165 1176 q 328 1053 300 1119 q 342 976 342 1019 q 328 903 342 933 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 128 903 q 138 913 138 905 q 76 936 138 936 q -21 933 76 936 z "},"ो":{"ha":359,"x_min":-193,"x_max":417,"o":"m 106 903 q 131 921 131 903 q 127 933 131 927 q -54 958 22 933 q -193 1050 -150 988 q -125 1211 -193 1150 q 23 1266 -64 1266 q 236 1158 154 1266 q 315 903 311 1058 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 106 903 z "},"ौ":{"ha":359,"x_min":-199,"x_max":417,"o":"m 191 1065 q 204 1089 204 1071 q 188 1133 204 1107 q 143 1183 171 1158 q -10 1244 75 1240 q 31 1338 -9 1302 q 133 1375 72 1375 q 298 1301 234 1375 q 361 1110 361 1228 q 316 903 361 1015 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 75 903 q 102 922 102 903 q 100 932 102 926 q -60 950 13 932 q -199 1015 -155 972 q -146 1157 -199 1101 q -25 1213 -94 1213 q 191 1065 115 1213 z "},"्":{"ha":0,"x_min":-306,"x_max":74,"o":"m -56 -356 q -193 -289 -126 -356 l -304 -177 q -306 -148 -306 -161 q -264 -61 -306 -92 q -183 -36 -230 -36 q -102 -56 -137 -36 q -32 -122 -67 -76 l 74 -260 q 30 -329 64 -301 q -56 -356 -4 -356 z "},"ॎ":{"ha":359,"x_min":-58,"x_max":417,"o":"m 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 376 903 q 408 840 399 867 q 417 778 417 814 q 376 656 417 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 z "},"ॏ":{"ha":360,"x_min":-236,"x_max":418,"o":"m -21 933 q -189 985 -135 933 q -236 1100 -236 1029 q -161 1252 -236 1191 l -99 1244 q -65 1184 -94 1204 q 33 1153 -35 1164 l 109 1140 q 173 1117 151 1132 q 198 1066 194 1103 q 218 1086 218 1066 q 197 1135 218 1114 q 117 1168 170 1160 l 61 1177 q -27 1206 3 1185 q -58 1274 -58 1227 q -18 1357 -58 1320 l 44 1350 q 69 1313 47 1323 q 115 1303 83 1307 q 156 1298 115 1303 q 327 1229 273 1283 q 382 1088 382 1174 q 362 988 382 1037 q 309 903 342 939 l 376 903 q 409 840 399 867 q 418 778 418 814 q 376 656 418 713 l 342 656 l 342 261 q 351 187 342 216 q 380 132 359 157 q 320 31 368 68 q 198 -5 272 -5 q 75 35 123 -5 q 18 176 18 83 l 18 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 108 903 q 118 913 118 905 q 56 936 118 936 l -21 933 z "},"ॐ":{"ha":1334,"x_min":14,"x_max":1320,"o":"m 795 895 q 781 909 795 895 q 766 964 766 923 q 795 1034 766 1006 q 864 1063 823 1063 q 933 1035 905 1063 q 962 966 962 1006 q 935 896 962 925 q 866 867 908 867 q 795 895 825 867 m 731 970 q 768 871 731 905 q 864 837 805 837 q 961 872 924 837 q 998 972 998 908 l 998 984 q 1072 954 1034 984 q 1117 859 1117 916 q 1069 753 1117 801 q 1010 758 1041 758 q 901 736 947 758 q 829 685 856 715 q 669 747 730 693 q 612 856 612 797 q 655 953 612 916 q 731 985 690 983 l 731 970 m 578 884 q 576 861 576 869 q 760 667 576 722 q 764 621 764 647 q 743 532 764 573 q 680 467 722 492 q 709 454 687 454 q 756 490 730 454 q 787 549 768 508 q 861 667 827 633 q 1012 727 919 727 q 1238 633 1152 727 q 1320 385 1320 540 q 1290 229 1320 300 q 1187 101 1254 149 q 1017 54 1120 54 q 881 102 937 54 q 826 226 826 150 q 828 254 826 239 q 986 312 924 255 q 1048 448 1048 369 q 1042 471 1048 463 q 1019 479 1037 479 q 963 337 1019 390 q 823 285 907 285 q 791 288 803 285 q 792 276 791 279 l 792 264 q 696 54 792 130 q 488 -12 611 -12 q 270 47 365 -12 q 175 123 222 77 q 129 172 161 138 q 70 230 96 206 q 16 267 43 253 q 14 296 14 282 q 59 415 14 374 q 172 456 105 456 q 267 425 222 456 q 330 306 275 349 q 459 264 385 264 q 499 287 499 264 q 497 298 499 292 q 464 294 483 294 q 347 337 393 294 q 300 449 300 379 q 349 565 300 519 q 459 610 397 610 q 490 608 481 610 q 492 617 492 612 q 453 640 492 640 q 350 611 397 640 q 282 533 303 582 q 156 582 205 533 q 108 705 108 630 q 170 786 140 753 q 437 909 281 909 q 578 884 500 909 z "},"॑":{"ha":0,"x_min":-331,"x_max":-43,"o":"m -331 1265 q -188 1297 -275 1297 q -43 1265 -100 1297 l -43 962 q -188 930 -100 930 q -331 962 -275 930 l -331 1265 z "},"॒":{"ha":0,"x_min":-487,"x_max":29,"o":"m -7 -32 q 29 -142 29 -86 q -7 -250 29 -197 l -451 -250 q -487 -142 -487 -199 q -451 -32 -487 -86 l -7 -32 z "},"॓":{"ha":0,"x_min":-539,"x_max":-201,"o":"m -412 1237 q -348 1222 -374 1237 q -298 1175 -322 1206 l -201 1050 q -237 961 -201 998 q -318 927 -273 927 q -390 942 -363 927 q -442 989 -417 958 l -539 1114 q -502 1204 -539 1171 q -412 1237 -464 1237 z "},"॔":{"ha":0,"x_min":-539,"x_max":-201,"o":"m -539 1050 l -442 1175 q -392 1222 -418 1206 q -328 1237 -366 1237 q -238 1204 -276 1237 q -201 1114 -201 1171 l -298 989 q -350 942 -323 958 q -422 927 -376 927 q -503 962 -467 927 q -539 1050 -539 996 z "},"ॕ":{"ha":0,"x_min":-500,"x_max":91,"o":"m -345 1071 q -205 1046 -284 1046 q -62 1071 -125 1046 q 31 1151 1 1097 l 55 1151 q 91 1041 91 1097 q 82 986 91 1010 q 55 936 74 963 l -465 936 q -492 986 -484 963 q -500 1041 -500 1010 q -465 1151 -500 1097 l -441 1151 q -345 1071 -410 1097 m -37 1123 q -205 1076 -100 1076 q -373 1123 -310 1076 q -429 1226 -429 1165 q -340 1337 -429 1308 q -288 1288 -323 1308 q -204 1268 -252 1268 q -121 1288 -157 1268 q -69 1337 -86 1308 q 20 1226 20 1308 q -37 1123 20 1165 z "},"ॖ":{"ha":0,"x_min":-401,"x_max":90,"o":"m -401 -127 q -366 -37 -401 -70 q -296 -3 -330 -3 q -241 -55 -279 -33 q -158 -76 -203 -76 q -76 -57 -113 -76 q -21 -3 -39 -38 q 52 -37 14 -3 q 90 -127 90 -71 q 31 -244 90 -197 q -156 -298 -37 -298 q -341 -244 -275 -298 q -401 -127 -401 -196 z "},"ॗ":{"ha":0,"x_min":-401,"x_max":90,"o":"m -347 -270 q -268 -301 -321 -287 q -155 -315 -216 -315 q 33 -270 -44 -315 q 60 -340 60 -294 q 4 -439 60 -399 q -156 -478 -51 -478 q -316 -439 -260 -478 q -372 -344 -372 -400 q -347 -270 -372 -288 m -401 -127 q -366 -37 -401 -70 q -296 -3 -330 -3 q -241 -55 -279 -33 q -158 -76 -203 -76 q -76 -57 -113 -76 q -21 -3 -39 -38 q 52 -37 14 -3 q 90 -127 90 -71 q 27 -240 90 -195 q -156 -285 -36 -285 q -339 -239 -276 -285 q -401 -127 -401 -194 z "},"क़":{"ha":1118,"x_min":-58,"x_max":1162,"o":"m 372 366 q 380 366 378 366 l 380 450 q 370 451 378 451 q 340 438 351 451 q 329 407 329 425 q 341 377 329 389 q 372 366 353 366 m 118 138 q 132 152 118 138 q 182 165 145 165 q 248 139 220 165 q 275 73 275 111 q 248 8 275 35 q 182 -18 220 -18 q 117 9 143 -18 q 91 74 91 36 q 118 138 91 111 m 758 113 q 705 33 742 61 q 583 -5 657 -5 q 460 33 509 -5 q 395 171 395 81 l 395 201 q 359 161 359 201 q 365 123 359 144 q 302 110 340 113 q 256 173 288 151 q 183 195 225 195 q 110 170 140 195 q 39 264 64 208 q 14 389 14 321 q 85 586 14 505 q 288 675 161 675 q 429 633 373 675 q 434 648 434 640 q 392 688 434 670 q 288 705 351 705 q 113 656 189 705 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1120 903 q 1153 839 1145 864 q 1162 778 1162 814 q 1120 656 1162 714 l 1008 656 q 838 705 934 705 q 734 688 776 705 q 692 645 692 671 q 697 631 692 636 q 838 675 759 675 q 1032 587 955 675 q 1085 498 1067 549 q 1104 396 1104 448 q 1036 192 1104 268 q 873 117 968 117 q 749 160 793 117 q 705 280 705 203 q 726 382 705 330 q 751 374 739 374 q 772 384 764 374 q 780 412 780 395 q 770 440 780 429 q 745 451 760 451 q 722 448 730 451 q 686 379 702 427 q 669 280 669 332 q 758 113 669 164 z "},"ख़":{"ha":1067,"x_min":-58,"x_max":1125,"o":"m 197 142 q 211 156 197 142 q 262 170 224 170 q 327 143 299 170 q 354 77 354 115 q 327 12 354 39 q 261 -14 300 -14 q 196 13 222 -14 q 170 78 170 40 q 197 142 170 115 m 302 575 q 331 614 331 587 q 315 656 331 640 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1083 903 q 1115 842 1105 869 q 1125 778 1125 815 q 1083 656 1125 714 l 1048 656 l 1048 261 q 1058 185 1048 215 q 1088 132 1068 156 q 1026 31 1075 67 q 908 -5 977 -5 q 831 7 869 -5 q 770 43 793 20 q 796 121 796 81 q 768 164 796 161 q 711 25 768 78 q 554 -28 654 -28 q 376 24 454 -28 q 388 77 388 50 q 352 165 388 130 q 262 200 317 200 q 218 193 239 200 q 203 214 206 209 q 193 229 200 219 q 182 244 186 238 q 64 309 115 254 q 14 440 14 363 q 60 571 14 516 q 183 625 106 625 q 302 575 260 625 m 684 239 q 751 249 726 239 q 775 277 775 259 q 771 289 775 283 q 684 269 736 269 q 551 318 604 269 q 498 440 498 366 q 551 570 498 515 q 696 625 604 625 q 776 610 749 625 q 780 618 780 613 q 756 646 780 636 q 687 656 731 656 q 524 596 585 656 q 463 444 463 536 q 485 347 463 387 q 364 309 452 309 q 330 311 342 309 q 330 307 330 311 q 386 279 330 279 q 503 317 456 279 q 684 239 566 239 z "},"ग़":{"ha":791,"x_min":-58,"x_max":849,"o":"m 459 627 q 427 669 444 654 q 397 684 410 684 q 375 673 384 684 q 439 577 417 640 q 461 438 461 515 q 426 296 461 361 q 305 197 385 221 q 241 214 281 214 q 172 191 201 214 q 56 255 99 204 q 14 364 14 304 q 36 472 14 424 q 72 464 53 464 q 122 485 104 464 q 140 544 140 505 q 126 612 140 583 q 92 656 111 641 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 808 903 q 840 840 831 867 q 849 778 849 814 q 808 656 849 713 l 774 656 l 774 261 q 783 187 774 216 q 812 132 791 157 q 751 31 800 67 q 628 -5 702 -5 q 504 35 554 -5 q 443 176 443 85 l 443 250 q 497 445 497 333 q 459 627 497 557 m 178 156 q 192 170 178 156 q 243 183 205 183 q 308 157 280 183 q 335 91 335 128 q 308 26 335 53 q 242 0 281 0 q 177 27 203 0 q 151 91 151 54 q 178 156 151 129 z "},"ज़":{"ha":937,"x_min":-58,"x_max":995,"o":"m 137 214 q 81 200 109 214 q 14 378 14 280 q 67 512 14 460 q 207 564 121 564 q 204 528 204 550 q 254 387 204 441 q 379 332 303 332 q 416 359 416 332 q 286 405 332 359 q 240 530 240 451 q 247 582 240 553 q 264 625 254 611 l 640 625 q 631 649 640 642 q 593 656 621 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 954 903 q 986 840 977 867 q 995 778 995 814 q 954 656 995 713 l 920 656 l 920 261 q 928 187 920 216 q 958 132 937 157 q 897 31 945 67 q 784 -5 848 -5 q 672 20 721 -5 q 603 100 623 46 q 689 279 689 178 q 673 355 689 323 q 636 385 658 385 q 623 382 627 385 q 653 279 653 335 q 589 134 653 195 q 392 66 517 66 q 263 85 328 66 q 229 177 263 141 q 137 214 195 214 m 72 156 q 85 170 72 156 q 136 183 99 183 q 201 157 174 183 q 229 91 229 128 q 201 26 229 53 q 136 0 174 0 q 71 27 97 0 q 45 91 45 54 q 72 156 45 129 z "},"ड़":{"ha":739,"x_min":-64,"x_max":787,"o":"m 426 264 q 425 273 426 266 q 372 271 409 271 q 242 302 302 271 q 145 399 173 337 q 64 370 98 391 q 19 500 19 431 q 83 652 19 595 q 245 710 148 710 q 368 694 311 710 q 370 704 370 700 q 319 736 370 726 q 250 741 292 741 q 43 656 113 741 l -22 656 q -64 778 -64 713 q -54 841 -64 812 q -22 903 -44 869 l 745 903 q 777 842 766 869 q 787 778 787 815 q 745 656 787 714 l 671 656 l 671 575 q 660 524 671 547 q 629 493 648 501 q 476 528 562 528 q 361 489 361 528 q 365 478 361 484 q 468 497 410 497 q 584 477 526 497 q 679 408 641 456 q 726 260 726 349 q 665 84 726 154 q 490 -12 604 14 q 447 47 478 24 q 373 69 416 69 q 300 46 330 69 q 260 -12 271 23 q 84 72 151 10 q 18 222 18 134 q 41 306 18 273 q 127 363 66 345 q 204 286 151 319 q 368 240 277 240 q 426 264 426 240 m 310 12 q 323 25 310 12 q 374 39 337 39 q 439 12 412 39 q 467 -54 467 -16 q 439 -119 467 -92 q 374 -144 412 -144 q 309 -118 335 -144 q 283 -53 283 -91 q 310 12 283 -16 z "},"ढ़":{"ha":791,"x_min":-52,"x_max":838,"o":"m 354 12 q 368 25 354 12 q 418 39 381 39 q 484 12 456 39 q 511 -54 511 -16 q 484 -119 511 -92 q 418 -144 456 -144 q 353 -118 379 -144 q 327 -53 327 -91 q 354 12 327 -16 m 391 751 q 378 716 391 727 q 328 697 364 705 q 193 656 250 682 l -9 656 q -52 778 -52 714 q -41 842 -52 815 q -9 903 -31 869 l 796 903 q 828 842 818 869 q 838 778 838 815 q 796 656 838 714 l 694 656 q 696 599 696 631 q 658 499 696 532 q 549 519 605 519 q 369 461 437 519 q 300 311 300 402 q 312 244 300 271 q 347 216 325 216 q 355 218 351 216 q 336 304 336 255 q 396 435 336 381 q 555 489 456 489 q 715 421 654 489 q 777 258 777 353 q 713 80 777 149 q 537 -12 650 10 q 492 47 522 26 q 419 69 462 69 q 346 48 376 69 q 301 -11 315 26 q 92 106 170 18 q 14 313 14 194 q 69 513 14 431 q 196 618 113 576 q 334 664 256 648 q 426 737 426 682 q 420 762 426 755 q 401 770 414 770 l 391 770 l 391 751 m 522 225 q 572 257 572 225 q 565 274 572 267 q 546 281 558 281 q 526 271 534 281 q 517 249 517 261 q 522 225 517 236 z "},"फ़":{"ha":1120,"x_min":-59,"x_max":1164,"o":"m 741 125 q 691 39 730 73 q 562 -5 641 -5 q 434 35 484 -5 q 373 176 373 85 l 373 204 q 452 227 412 210 q 503 276 503 250 q 496 295 503 286 q 410 248 463 265 q 304 231 357 231 q 95 309 172 231 q 18 518 18 388 q 28 656 18 593 l -18 656 q -59 778 -59 713 q -49 841 -59 812 q -18 903 -39 869 l 1122 903 q 1154 842 1144 869 q 1164 778 1164 815 q 1122 656 1164 714 l 1011 656 q 840 705 935 705 q 737 687 779 705 q 696 646 696 668 q 700 631 696 636 q 840 675 762 675 q 1035 587 958 675 q 1088 498 1069 549 q 1107 396 1107 448 q 1039 192 1107 268 q 876 117 970 117 q 752 160 796 117 q 708 280 708 203 q 728 382 708 330 q 754 374 741 374 q 774 384 766 374 q 783 412 783 395 q 770 439 783 429 q 746 450 758 450 q 725 448 733 450 q 688 379 705 427 q 672 280 672 332 q 741 125 672 180 m 374 656 l 336 656 q 330 591 330 633 q 374 521 330 528 l 374 656 m 190 156 q 203 170 190 156 q 254 183 217 183 q 319 157 292 183 q 347 91 347 128 q 319 26 347 53 q 254 0 292 0 q 189 27 215 0 q 163 91 163 54 q 190 156 163 129 z "},"य़":{"ha":818,"x_min":-48,"x_max":876,"o":"m 141 156 q 155 170 141 156 q 205 183 168 183 q 271 157 243 183 q 298 91 298 128 q 271 26 298 53 q 205 0 243 0 q 140 27 166 0 q 114 91 114 54 q 141 156 114 129 m 371 118 q 325 121 342 118 q 282 189 315 163 q 209 214 250 214 q 136 193 168 214 q 14 441 14 284 q 40 554 14 499 q 89 542 59 542 q 137 558 119 542 q 155 600 155 575 q 115 656 155 639 l -7 656 q -48 778 -48 713 q -38 841 -48 812 q -7 903 -28 869 l 834 903 q 866 840 857 867 q 876 778 876 814 q 834 656 876 713 l 800 656 l 800 261 q 809 185 800 214 q 838 132 817 156 q 776 31 825 67 q 664 -5 727 -5 q 551 21 600 -5 q 484 96 503 47 q 569 131 528 104 q 610 182 610 157 q 600 199 610 195 q 506 139 560 160 q 371 118 452 118 m 447 659 q 431 648 435 659 q 461 597 448 629 q 474 532 474 566 q 431 429 474 467 q 322 392 388 392 l 322 387 q 357 363 322 363 q 458 406 413 363 q 510 532 510 452 q 489 621 510 583 q 447 659 467 659 z "},"ॠ":{"ha":1206,"x_min":-75,"x_max":1256,"o":"m 910 743 q 772 693 829 743 q 715 570 715 643 q 720 532 715 543 q 737 520 725 520 q 752 523 749 520 q 750 559 750 539 q 798 670 750 627 q 909 712 846 712 q 1036 667 989 712 q 1076 565 1076 627 q 1065 510 1076 532 l 1185 481 q 1193 389 1193 442 q 1166 297 1193 335 q 1089 260 1139 260 q 1015 267 1053 260 q 1008 253 1008 263 q 1079 223 1008 223 q 1159 241 1128 223 q 1181 207 1171 233 q 1192 155 1192 176 q 1138 35 1192 75 q 1015 -1 1091 -1 q 854 49 920 -1 q 788 184 788 98 q 809 265 788 227 q 867 328 831 303 q 857 339 863 332 q 802 311 836 323 q 743 297 768 298 l 743 236 q 750 153 743 182 q 772 100 757 124 q 707 23 753 52 q 599 -5 661 -5 q 486 27 537 -5 q 418 123 435 60 q 500 231 491 218 q 510 260 510 246 q 494 279 510 273 l 393 155 q 308 77 351 102 q 201 52 264 52 q 94 94 138 52 q 43 227 43 143 q 46 273 43 256 l 341 412 q 342 431 342 422 q 334 447 342 439 q 311 454 325 454 q 289 446 298 454 q 279 421 279 437 l 103 338 q 40 395 67 353 q 14 490 14 437 q 83 649 14 587 q 248 711 153 711 q 486 590 403 711 q 500 608 500 593 q 482 647 500 624 q 433 690 464 669 q 248 741 354 741 q 119 713 179 741 q 44 656 73 690 l -33 656 q -75 778 -75 714 q -64 842 -75 815 q -33 903 -54 869 l 1214 903 q 1246 842 1236 869 q 1256 778 1256 815 q 1214 656 1256 714 l 1092 656 q 910 743 1030 743 z "},"ॡ":{"ha":1022,"x_min":-58,"x_max":1075,"o":"m 154 656 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 1034 903 q 1066 840 1057 867 q 1075 778 1075 814 q 1034 656 1075 713 l 880 656 l 880 623 q 969 533 934 596 q 1004 391 1004 470 q 948 217 1004 292 q 874 241 907 235 q 827 179 863 213 q 742 134 791 145 q 747 119 742 123 q 762 115 752 115 q 834 142 795 115 q 893 206 873 170 q 973 160 944 192 q 1010 60 1010 120 q 955 -64 1010 -18 q 814 -123 901 -111 q 850 -147 822 -147 q 913 -131 878 -147 q 974 -93 949 -115 q 1007 -180 1007 -126 q 939 -303 1007 -258 q 766 -347 871 -347 q 594 -302 660 -347 q 529 -180 529 -257 q 562 -87 529 -130 q 635 -26 587 -53 q 614 -11 632 -11 q 546 -57 590 -11 q 503 54 503 -10 q 602 220 503 150 q 683 284 665 264 q 701 325 701 305 q 682 345 701 345 q 614 269 661 296 q 510 243 568 243 q 406 273 453 243 q 339 354 359 302 q 325 348 330 354 q 319 332 319 341 q 369 255 319 292 q 475 212 419 218 q 490 146 490 178 q 447 38 490 81 q 323 -5 404 -5 q 205 21 262 -5 q 106 96 149 48 q 14 353 14 200 q 88 561 14 474 q 307 657 171 657 q 418 625 365 657 q 504 532 471 592 q 561 604 524 575 q 636 637 598 633 q 630 655 636 650 q 611 660 624 660 q 556 639 587 660 q 504 589 526 618 q 418 660 473 633 q 296 688 363 688 q 154 656 228 688 z "},"ॢ":{"ha":0,"x_min":-548,"x_max":123,"o":"m -57 33 q 76 -28 28 33 q 118 -156 118 -81 q 85 -274 118 -231 q 33 -258 60 -262 q 0 -301 24 -281 q -60 -329 -24 -321 q -42 -347 -60 -347 q 9 -329 -18 -347 q 48 -288 37 -311 q 123 -384 123 -311 q 71 -482 123 -447 q -50 -516 23 -516 q -166 -484 -123 -516 q -214 -389 -214 -450 q -180 -300 -214 -337 q -136 -263 -165 -283 q -96 -229 -108 -243 q -84 -201 -84 -215 q -104 -184 -84 -184 q -215 -252 -132 -252 q -281 -233 -252 -252 q -323 -180 -309 -214 q -342 -197 -342 -180 q -310 -249 -342 -225 q -243 -277 -278 -272 q -232 -321 -232 -299 q -258 -393 -232 -367 q -341 -424 -286 -424 q -486 -355 -426 -424 q -548 -182 -548 -286 q -500 -41 -548 -100 q -360 18 -453 18 q -213 -62 -254 18 q -57 33 -165 33 z "},"ॣ":{"ha":0,"x_min":-548,"x_max":123,"o":"m -57 33 q 76 -28 28 33 q 118 -156 118 -81 q 85 -274 118 -231 q 33 -258 60 -262 q 0 -301 24 -281 q -60 -329 -24 -321 q -42 -347 -60 -347 q 9 -329 -18 -347 q 48 -288 37 -311 q 103 -321 83 -298 q 123 -389 123 -345 q 86 -463 123 -433 q -7 -500 54 -490 q 17 -522 -2 -522 q 59 -511 35 -522 q 100 -486 83 -500 q 122 -541 122 -505 q 77 -624 122 -595 q -40 -653 31 -653 q -155 -623 -111 -653 q -199 -538 -199 -593 q -135 -441 -199 -482 q -154 -428 -138 -428 q -192 -456 -169 -428 q -214 -384 -214 -430 q -180 -300 -214 -337 q -136 -263 -165 -283 q -96 -229 -108 -243 q -84 -201 -84 -215 q -104 -184 -84 -184 q -215 -252 -132 -252 q -281 -233 -252 -252 q -323 -180 -309 -214 q -342 -197 -342 -180 q -310 -249 -342 -225 q -243 -277 -278 -272 q -232 -321 -232 -299 q -258 -393 -232 -367 q -341 -424 -286 -424 q -486 -355 -426 -424 q -548 -182 -548 -286 q -500 -41 -548 -100 q -360 18 -453 18 q -213 -62 -254 18 q -57 33 -165 33 z "},"।":{"ha":628,"x_min":125,"x_max":526,"o":"m 488 261 q 496 187 488 216 q 526 132 505 157 q 466 31 514 68 q 343 -5 418 -5 q 221 35 269 -5 q 164 176 164 83 l 164 641 q 156 715 164 686 q 125 770 147 744 q 186 871 138 834 q 309 907 235 907 q 431 867 382 907 q 488 726 488 819 l 488 261 z "},"॥":{"ha":988,"x_min":125,"x_max":886,"o":"m 848 261 q 857 187 848 216 q 886 132 865 157 q 826 31 874 68 q 707 -5 778 -5 q 612 15 656 -5 q 544 73 568 35 q 564 146 560 106 q 538 181 546 165 q 524 263 524 212 l 524 726 q 505 823 524 781 q 665 907 552 907 q 791 867 743 907 q 848 726 848 819 l 848 261 m 488 261 q 496 187 488 216 q 526 132 505 157 q 466 31 514 68 q 343 -5 418 -5 q 221 35 269 -5 q 164 176 164 83 l 164 641 q 156 715 164 686 q 125 770 147 744 q 186 871 138 834 q 309 907 235 907 q 431 867 382 907 q 488 726 488 819 l 488 261 z "},"०":{"ha":675,"x_min":7,"x_max":668,"o":"m 323 356 q 326 352 323 356 q 337 348 328 348 q 351 356 346 348 q 355 389 355 364 l 355 488 q 351 523 355 514 q 337 532 346 532 q 318 488 318 532 l 318 390 q 323 356 318 363 m 337 795 q 470 769 408 795 q 575 697 531 744 q 668 443 668 599 q 576 190 668 288 q 338 92 484 92 q 99 189 192 92 q 7 443 7 286 q 100 697 7 600 q 337 795 193 795 z "},"१":{"ha":682,"x_min":7,"x_max":682,"o":"m 307 633 q 340 580 307 601 q 373 633 373 602 q 364 659 373 648 q 340 669 355 669 q 315 659 324 669 q 307 633 307 648 m 7 650 q 101 850 7 779 q 339 922 195 922 q 579 843 483 922 q 682 619 682 758 q 578 408 682 494 q 350 307 489 334 q 372 281 350 281 q 484 312 411 281 l 522 274 q 582 143 582 214 q 535 23 582 72 q 412 -25 488 -25 q 354 -18 387 -25 q 301 0 321 -12 q 302 13 302 9 q 285 63 302 39 q 232 117 268 87 q 147 182 195 146 q 40 266 99 218 q 29 340 29 298 q 40 410 29 382 q 137 454 96 431 q 41 538 77 481 q 7 650 7 590 z "},"२":{"ha":724,"x_min":20,"x_max":717,"o":"m 25 402 q 25 424 25 402 q 41 488 25 447 q 76 544 58 530 q 141 508 108 520 q 223 496 175 496 q 356 538 300 496 q 390 571 377 553 q 402 603 402 589 q 390 621 402 616 q 382 623 384 623 q 323 555 365 583 q 219 527 282 527 q 84 578 142 527 q 20 724 20 634 l 20 741 q 22 762 20 748 q 24 785 23 775 q 347 918 137 918 q 615 823 514 918 q 717 583 717 728 q 622 353 717 437 q 380 259 527 269 q 390 239 382 245 q 417 233 397 233 q 538 262 473 233 q 581 231 553 240 q 625 221 595 226 q 637 146 637 182 q 595 37 637 82 q 448 -18 545 -18 q 267 51 337 -18 q 165 224 207 108 q 88 249 123 231 q 43 314 62 272 q 25 402 25 357 z "},"३":{"ha":741,"x_min":7,"x_max":734,"o":"m 450 33 q 557 47 510 33 l 612 -20 q 550 -111 598 -76 q 427 -146 503 -146 q 290 -98 351 -146 q 189 65 219 -43 q 115 87 157 69 q 47 124 72 104 q 7 260 7 181 q 58 392 7 339 q 181 444 109 444 l 195 444 q 207 444 202 444 q 272 336 219 376 q 386 295 326 295 q 427 301 411 295 q 441 318 441 306 q 438 330 441 321 q 396 326 412 326 q 279 372 319 326 q 238 478 238 418 q 279 586 238 539 q 390 633 321 633 q 422 631 408 633 q 424 640 424 636 q 369 664 424 664 q 267 621 315 664 q 207 480 210 570 q 72 532 127 480 q 16 659 16 585 q 39 755 16 709 q 104 839 61 802 q 370 922 203 922 q 635 846 537 922 q 724 666 724 777 q 692 564 724 608 q 618 503 661 520 q 694 444 663 486 q 734 307 734 391 q 644 122 734 190 q 447 61 563 61 l 432 61 q 416 62 421 61 q 416 55 416 60 q 450 33 416 33 z "},"४":{"ha":770,"x_min":-14,"x_max":784,"o":"m 344 281 q 376 252 344 252 q 409 281 409 252 q 377 323 409 304 q 344 281 344 304 m 745 275 q 641 63 745 136 q 388 -4 546 -4 q 136 66 231 -4 q 34 277 34 142 q 81 425 34 365 q 208 500 128 484 q 190 527 208 527 q 149 519 172 527 q 109 500 125 511 q -14 699 -14 568 q 52 850 -14 796 q 206 898 111 898 q 319 875 276 898 q 391 809 363 852 q 376 766 380 783 q 372 718 372 750 q 396 653 372 686 q 427 692 414 661 q 439 751 439 723 q 431 805 439 780 q 412 846 422 830 q 478 883 437 867 q 570 899 519 899 q 730 840 670 899 q 784 700 784 785 q 726 548 784 614 q 560 457 665 477 q 581 430 560 430 q 618 439 593 430 q 659 456 642 446 q 718 382 692 438 q 745 275 745 327 z "},"५":{"ha":767,"x_min":7,"x_max":760,"o":"m 372 416 q 388 423 381 416 q 360 534 360 468 q 410 652 360 600 q 542 705 460 705 q 699 646 637 705 q 760 484 760 588 q 721 345 760 408 q 608 243 681 282 q 655 104 655 177 q 595 -31 655 16 q 459 -75 542 -75 q 319 -29 377 -75 q 249 99 256 19 q 316 171 289 129 q 352 165 325 168 q 406 163 380 163 q 445 169 433 163 q 456 186 456 174 q 455 197 456 187 q 391 193 420 193 q 204 234 292 193 q 62 356 117 275 q 7 551 7 437 q 85 787 7 679 q 250 919 154 882 q 262 920 254 920 l 273 920 q 420 887 347 920 q 526 804 492 855 l 497 739 q 370 661 416 720 q 326 530 326 602 q 341 452 326 488 q 372 416 355 416 z "},"६":{"ha":741,"x_min":7,"x_max":734,"o":"m 734 276 q 710 180 734 227 q 647 110 686 132 l 692 26 q 633 -93 690 -49 q 504 -136 581 -136 q 375 -93 428 -136 q 317 27 322 -50 l 335 27 q 416 35 382 27 q 458 66 458 45 q 456 77 458 73 q 334 57 412 57 q 109 121 202 57 q 7 307 7 190 q 47 444 7 390 q 123 503 78 486 q 48 564 79 520 q 17 666 17 608 q 106 846 17 777 q 371 922 203 922 q 637 839 538 922 q 724 659 724 765 q 669 532 724 585 q 534 480 613 480 q 474 621 531 569 q 371 664 425 664 q 317 640 317 664 q 319 631 317 636 q 351 633 333 633 q 461 586 420 633 q 503 478 503 539 q 465 375 503 417 q 345 326 422 326 q 302 330 328 326 q 299 318 299 321 q 355 295 299 295 q 468 336 415 295 q 534 444 522 376 q 547 444 538 444 l 559 444 q 684 401 633 444 q 734 276 734 358 z "},"७":{"ha":827,"x_min":7,"x_max":821,"o":"m 529 373 q 550 421 550 391 q 526 452 550 452 q 508 444 515 452 q 501 422 501 436 q 509 396 501 408 q 529 373 517 385 m 392 245 q 326 324 352 273 q 299 437 299 375 q 366 621 299 549 q 541 693 434 693 q 742 604 663 693 q 821 391 821 514 q 797 258 821 323 q 727 140 774 192 q 422 20 616 20 q 221 67 316 20 q 67 215 127 115 q 7 461 7 315 q 68 712 7 585 q 191 884 120 820 q 245 888 222 888 q 378 862 316 888 q 480 782 441 836 l 454 715 q 316 615 370 692 q 262 439 262 539 q 307 288 262 354 q 342 246 323 262 q 372 231 360 231 q 392 245 385 231 z "},"८":{"ha":652,"x_min":7,"x_max":707,"o":"m 7 308 q 49 489 7 405 q 154 629 80 551 q 220 696 191 669 q 387 888 359 831 q 553 832 488 883 q 618 699 618 781 q 570 557 618 627 q 456 435 542 515 l 383 370 q 329 283 329 321 q 353 268 329 268 q 380 319 363 300 q 431 359 397 339 q 478 386 466 380 q 519 401 490 391 q 641 315 591 372 q 707 181 690 258 q 585 59 661 107 q 380 1 494 1 q 119 80 224 1 q 7 308 7 165 z "},"९":{"ha":640,"x_min":-36,"x_max":647,"o":"m 278 596 q 298 550 278 564 q 331 563 319 550 q 343 594 343 575 q 312 633 343 633 q 288 624 297 633 q 278 596 278 615 m 288 3 l 288 24 q 276 102 288 62 q 235 172 263 142 l 119 292 q 13 427 49 365 q -36 597 -36 511 q 54 832 -36 744 q 302 920 146 920 q 555 827 458 920 q 647 611 647 739 q 565 402 647 483 q 388 329 490 329 q 415 302 388 302 q 517 328 467 302 l 570 257 q 614 134 614 196 q 563 20 614 62 q 432 -24 511 -24 q 288 3 353 -24 z "},"॰":{"ha":516,"x_min":14,"x_max":503,"o":"m 300 387 q 321 399 313 387 q 210 510 253 432 q 197 487 197 503 q 235 425 197 462 q 300 387 273 387 m 82 638 q 258 707 151 707 q 434 637 365 707 q 503 453 503 568 q 434 270 503 339 q 258 200 366 200 q 81 269 149 200 q 14 453 14 338 q 82 638 14 568 z "},"ॱ":{"ha":463,"x_min":81,"x_max":381,"o":"m 123 670 q 102 691 123 670 q 81 776 81 713 q 124 883 81 839 q 230 928 168 928 q 337 884 292 928 q 381 775 381 838 q 340 669 381 711 q 232 627 298 627 q 123 670 165 627 z "},"ॲ":{"ha":1046,"x_min":14,"x_max":1104,"o":"m 748 259 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1063 903 q 1095 840 1086 867 q 1104 778 1104 814 q 1063 656 1104 713 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 m 578 1108 q 614 1199 578 1166 q 684 1232 650 1232 q 739 1181 701 1202 q 822 1160 777 1160 q 904 1179 867 1160 q 959 1232 941 1198 q 1032 1199 994 1232 q 1070 1108 1070 1165 q 1010 991 1070 1039 q 824 937 943 937 q 639 991 705 937 q 578 1108 578 1040 z "},"ॳ":{"ha":1046,"x_min":14,"x_max":1104,"o":"m 736 654 q 704 785 736 719 l 704 1131 q 859 1177 764 1177 q 1019 1131 953 1177 l 1019 903 l 1063 903 q 1095 840 1086 867 q 1104 778 1104 814 q 1063 656 1104 713 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 z "},"ॴ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 l 1093 159 q 1065 263 1065 184 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1065 903 l 1065 1131 q 1220 1177 1126 1177 q 1380 1131 1314 1177 l 1380 903 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 z "},"ॵ":{"ha":1407,"x_min":14,"x_max":1464,"o":"m 887 1252 l 949 1244 q 985 1184 954 1204 q 1081 1153 1015 1164 l 1158 1140 q 1221 1117 1200 1132 q 1246 1066 1242 1103 q 1267 1086 1267 1066 q 1245 1135 1267 1114 q 1166 1168 1218 1160 l 1109 1177 q 1020 1207 1050 1185 q 991 1274 991 1228 q 1030 1357 991 1320 l 1093 1350 q 1118 1314 1095 1325 q 1164 1303 1131 1307 l 1204 1298 q 1430 1078 1430 1274 q 1411 987 1430 1036 q 1357 903 1392 937 l 1423 903 q 1455 840 1446 867 q 1464 778 1464 814 q 1423 656 1464 713 l 1389 656 l 1389 261 q 1398 187 1389 216 q 1428 132 1407 157 q 1367 31 1415 68 q 1249 -5 1319 -5 q 1153 15 1197 -5 q 1085 73 1109 35 q 1105 146 1101 106 l 1093 159 q 1065 263 1065 184 l 1065 656 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 892 -5 959 -5 q 775 24 825 -5 q 707 113 724 54 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 619 70 712 143 q 369 -3 526 -3 q 125 77 230 -3 q 14 290 14 162 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1110 903 q 1120 915 1120 905 q 1108 930 1120 925 q 1064 934 1095 934 l 1044 934 q 1027 933 1038 933 q 859 985 913 933 q 812 1100 812 1029 q 887 1252 812 1191 z "},"ॶ":{"ha":1046,"x_min":14,"x_max":1104,"o":"m 593 -1 q 614 -1 593 -1 q 672 17 635 -1 q 726 69 708 35 q 707 113 713 90 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 q 660 109 712 173 q 513 17 608 45 q 593 -1 551 -1 m 873 -5 q 859 -4 868 -5 q 814 48 837 48 q 799 39 805 48 q 839 -53 839 1 q 779 -170 839 -122 q 593 -224 711 -224 q 408 -170 474 -224 q 347 -54 347 -121 q 397 50 347 13 q 382 59 392 59 q 359 48 373 59 q 326 0 345 37 q 107 93 201 13 q 14 290 14 172 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1063 903 q 1095 840 1086 867 q 1104 778 1104 814 q 1063 656 1104 713 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 888 -5 959 -5 l 873 -5 z "},"ॷ":{"ha":1046,"x_min":14,"x_max":1104,"o":"m 712 261 q 660 109 712 173 q 513 17 608 45 q 593 -1 551 -1 q 672 17 635 -1 q 726 69 708 35 q 707 113 713 90 q 748 259 748 180 q 728 352 748 314 q 691 384 711 384 q 674 372 678 384 q 712 261 712 329 m 402 -195 q 480 -227 428 -212 q 593 -241 533 -241 q 782 -195 705 -241 q 808 -266 808 -220 q 753 -364 808 -325 q 593 -404 698 -404 q 433 -365 488 -404 q 377 -270 377 -326 q 402 -195 377 -214 m 873 -5 q 859 -4 868 -5 q 836 36 847 24 q 815 48 824 48 q 799 39 806 48 q 839 -53 839 1 q 776 -165 839 -120 q 593 -210 713 -210 q 410 -165 473 -210 q 347 -53 347 -119 q 397 50 347 13 q 382 59 392 59 q 359 48 373 59 q 326 0 345 37 q 107 93 201 13 q 14 290 14 172 q 75 424 14 377 q 201 463 125 461 q 253 325 202 377 q 389 273 303 273 q 430 296 430 273 q 428 308 430 302 q 393 304 412 304 q 278 346 319 304 q 236 457 236 388 q 280 567 236 526 q 389 608 324 608 q 420 606 412 608 q 422 615 422 610 q 377 639 422 639 q 286 610 332 639 q 214 531 239 582 q 82 603 131 538 q 39 726 39 660 q 155 859 85 808 q 370 924 248 924 q 612 848 524 924 q 700 646 700 772 q 693 591 700 611 q 709 587 699 587 q 728 605 720 587 q 736 654 736 623 q 671 838 736 763 q 711 903 675 876 l 1063 903 q 1095 840 1086 867 q 1104 778 1104 814 q 1063 656 1104 713 l 1029 656 l 1029 261 q 1038 187 1029 216 q 1067 132 1046 157 q 1007 31 1055 68 q 888 -5 959 -5 l 873 -5 z "},"ॹ":{"ha":937,"x_min":-45,"x_max":995,"o":"m 474 152 q 475 142 474 146 q 514 109 500 130 q 528 60 528 87 q 501 -6 528 21 q 436 -32 474 -32 q 427 -31 429 -32 q 444 -90 444 -56 q 417 -151 444 -123 q 351 -176 390 -176 q 287 -150 313 -176 q 260 -90 260 -123 q 278 -31 260 -56 q 272 -32 276 -32 l 266 -32 q 200 -5 227 -32 q 174 59 174 22 q 201 124 174 97 q 266 151 229 151 q 344 108 316 151 q 357 127 357 112 q 330 161 357 142 q 266 181 300 181 q 160 130 201 181 q 54 238 94 172 q 14 382 14 304 q 67 512 14 460 q 207 564 121 564 q 204 528 204 550 q 254 387 204 441 q 379 332 303 332 q 416 359 416 332 q 286 405 332 359 q 240 530 240 451 q 247 582 240 553 q 264 625 254 611 l 640 625 q 631 649 640 642 q 593 656 621 656 l -3 656 q -45 778 -45 713 q -35 841 -45 812 q -3 903 -25 869 l 954 903 q 986 840 977 867 q 995 778 995 814 q 954 656 995 713 l 920 656 l 920 261 q 928 187 920 216 q 958 132 937 157 q 897 31 945 67 q 784 -5 848 -5 q 672 20 721 -5 q 603 100 623 46 q 689 279 689 178 q 673 355 689 323 q 636 385 658 385 q 623 382 627 385 q 653 282 653 335 q 629 184 653 230 q 557 109 604 139 q 526 148 545 132 q 490 164 507 164 q 474 152 474 164 z "},"ॺ":{"ha":819,"x_min":-48,"x_max":876,"o":"m 543 381 q 567 395 559 381 q 436 506 515 429 q 338 623 358 583 q 321 600 321 616 q 368 524 321 577 q 467 425 414 469 q 543 381 520 381 m -48 778 q -38 841 -48 812 q -7 903 -28 869 l 834 903 q 866 840 857 867 q 876 778 876 814 q 834 656 876 713 l 800 656 l 800 261 q 809 185 800 214 q 838 132 817 156 q 776 31 825 67 q 664 -5 727 -5 q 551 21 600 -5 q 484 96 503 47 q 569 131 528 104 q 610 182 610 157 q 600 199 610 195 q 377 118 517 118 q 236 140 301 118 q 123 203 172 162 q 14 441 14 294 q 40 554 14 505 q 89 542 59 542 q 137 558 119 542 q 155 600 155 575 q 115 656 155 639 l -7 656 q -48 778 -48 713 z "},"ॻ":{"ha":791,"x_min":-58,"x_max":849,"o":"m 385 233 q 522 233 385 233 q 524 243 524 239 q 486 264 524 264 l 427 264 q 497 476 497 342 q 459 621 497 551 q 426 667 443 650 q 395 684 408 684 q 375 673 382 684 q 435 593 410 648 q 461 474 461 533 q 408 299 461 368 q 222 220 346 220 q 72 273 130 220 q 14 404 14 327 q 36 506 14 458 q 78 498 53 498 q 122 515 103 498 q 140 562 140 532 q 125 618 140 591 q 92 656 109 646 l -17 656 q -58 778 -58 713 q -48 841 -58 812 q -17 903 -39 869 l 808 903 q 840 840 831 867 q 849 778 849 814 q 808 656 849 713 l 774 656 l 774 95 q 659 -27 774 -27 l 90 -27 q 61 27 73 -6 q 49 95 49 60 q 85 224 49 178 q 140 200 102 212 q 226 188 178 188 q 312 199 275 188 q 385 233 349 210 z "},"ॼ":{"ha":924,"x_min":-45,"x_max":981,"o":"m 640 293 q 579 151 640 208 q 596 141 585 141 q 661 214 632 141 q 675 291 675 250 q 661 366 675 332 q 625 400 646 400 q 609 395 615 400 q 640 293 640 349 m 207 564 q 204 528 204 550 q 249 393 204 441 q 366 345 293 345 q 403 373 403 345 q 279 412 319 373 q 240 530 240 452 q 247 582 240 553 q 264 625 254 611 l 627 625 q 617 649 627 642 q 579 656 608 656 l -3 656 q -45 778 -45 713 q -35 841 -45 812 q -3 903 -25 869 l 940 903 q 972 840 963 867 q 981 778 981 814 q 940 656 981 713 l 906 656 l 906 98 q 791 -27 906 -27 l 63 -27 q 22 93 22 23 q 44 201 22 163 q 120 135 76 158 q 191 111 165 111 q 210 132 210 111 q 64 225 115 160 q 14 375 14 290 q 67 512 14 460 q 207 564 121 564 z "},"ॽ":{"ha":842,"x_min":115,"x_max":828,"o":"m 417 583 q 401 583 417 583 q 337 565 385 583 q 247 510 289 547 q 149 603 182 543 q 115 736 115 663 q 127 821 115 780 q 292 902 184 874 q 436 922 369 922 q 664 868 570 922 q 787 740 747 821 q 828 566 828 659 q 741 336 828 428 q 480 234 644 234 q 522 205 480 205 q 572 210 546 205 l 572 43 q 392 -7 497 -7 q 219 45 287 -7 l 219 364 q 302 507 219 454 q 467 555 370 551 q 458 577 467 572 q 417 583 449 583 z "},"ॾ":{"ha":743,"x_min":-60,"x_max":790,"o":"m 637 16 q 661 -70 661 -22 q 620 -197 661 -139 l 119 -197 q 78 -70 78 -140 q 107 18 78 -22 q 219 -32 146 -10 q 377 -54 293 -54 q 637 16 528 -54 m 429 264 q 428 273 429 266 q 376 271 412 271 q 245 302 306 271 q 149 399 176 337 q 68 370 101 391 q 22 500 22 431 q 87 652 22 595 q 249 710 151 710 q 371 694 314 710 q 373 704 373 700 q 322 736 373 726 q 253 741 295 741 q 47 656 117 741 l -19 656 q -60 778 -60 713 q -51 841 -60 812 q -19 903 -41 869 l 748 903 q 780 842 770 869 q 790 778 790 815 q 748 656 790 714 l 675 656 l 675 575 q 663 524 675 547 q 632 493 652 501 q 479 528 565 528 q 365 489 365 528 q 368 478 365 484 q 471 497 413 497 q 587 477 530 497 q 682 408 644 456 q 729 260 729 349 q 634 52 729 128 q 384 -24 540 -24 q 124 44 227 -24 q 21 222 21 111 q 44 306 21 273 q 131 363 70 345 q 208 286 154 319 q 371 240 280 240 q 429 264 429 240 z "},"ॿ":{"ha":730,"x_min":-45,"x_max":788,"o":"m 444 342 q 357 424 402 374 q 281 515 304 479 q 268 492 268 508 q 297 439 268 476 q 367 366 327 401 q 421 331 407 331 q 444 342 436 331 m 327 123 q 447 143 399 123 q 496 186 496 163 q 489 201 496 197 q 422 168 465 183 q 327 153 380 153 q 123 220 209 153 q 27 418 27 294 q 119 640 27 564 q 327 705 199 705 q 416 693 374 705 q 485 664 459 682 q 488 676 488 669 q 437 719 488 701 q 326 735 389 735 q 88 656 179 735 l -3 656 q -45 778 -45 713 q -34 844 -45 815 q -3 903 -23 872 l 747 903 q 779 840 770 867 q 788 778 788 814 q 747 656 788 713 l 713 656 l 713 95 q 597 -27 713 -27 l 90 -27 q 55 91 55 18 q 66 159 55 126 q 90 204 77 191 q 327 123 191 123 z "},"–":{"ha":728,"x_min":7,"x_max":722,"o":"m 722 414 q 722 390 722 414 q 708 327 722 366 q 665 248 694 289 l 63 248 q 7 414 7 326 q 21 502 7 463 q 63 583 35 542 l 665 583 q 708 501 694 540 q 722 414 722 463 z "},"—":{"ha":907,"x_min":7,"x_max":900,"o":"m 900 414 q 900 390 900 414 q 886 327 900 366 q 843 248 872 289 l 63 248 q 7 414 7 326 q 21 502 7 463 q 63 583 35 542 l 843 583 q 886 501 873 540 q 900 414 900 463 z "},"‘":{"ha":374,"x_min":7,"x_max":361,"o":"m 153 800 q 156 790 153 793 q 161 784 158 788 q 227 798 184 798 q 321 760 281 798 q 361 662 361 722 q 313 544 361 587 q 193 502 266 502 q 57 560 106 502 q 7 709 7 618 q 68 886 7 821 q 203 945 122 945 q 293 922 260 945 q 326 857 326 899 q 310 806 326 825 q 234 829 273 829 q 174 821 195 829 q 153 800 153 814 z "},"’":{"ha":374,"x_min":14,"x_max":368,"o":"m 221 640 q 219 649 221 646 q 214 655 216 651 q 148 641 190 641 q 54 678 92 641 q 14 777 14 717 q 61 895 14 852 q 182 937 108 937 q 318 878 268 937 q 368 729 368 819 q 308 556 368 617 q 164 494 248 494 q 80 518 112 494 q 48 583 48 541 q 64 633 48 614 q 141 610 102 610 q 200 618 180 610 q 221 640 221 625 z "},"‚":{"ha":374,"x_min":14,"x_max":368,"o":"m 221 86 q 219 95 221 93 q 214 102 216 98 q 148 87 190 87 q 54 125 92 87 q 14 224 14 163 q 61 341 14 299 q 182 384 108 384 q 318 325 268 384 q 368 176 368 266 q 308 2 368 64 q 164 -59 248 -59 q 80 -36 112 -59 q 48 29 48 -12 q 64 80 48 61 q 141 57 102 57 q 200 64 180 57 q 221 86 221 72 z "},"“":{"ha":660,"x_min":7,"x_max":646,"o":"m 458 789 q 460 781 458 783 l 465 774 q 524 786 487 786 q 610 753 575 786 q 646 663 646 717 q 603 556 646 594 q 490 518 560 518 q 372 568 420 518 q 395 669 395 607 q 378 738 395 705 q 336 793 361 772 q 404 888 356 854 q 501 921 448 921 q 585 900 554 921 q 615 841 615 880 q 602 796 615 815 q 525 817 573 817 q 476 809 495 817 q 458 789 458 802 m 153 800 q 156 790 153 793 q 161 784 158 788 q 227 798 184 798 q 321 760 281 798 q 361 662 361 722 q 313 544 361 587 q 193 502 266 502 q 57 560 106 502 q 7 709 7 618 q 68 886 7 821 q 203 945 122 945 q 293 922 260 945 q 326 857 326 899 q 310 806 326 825 q 234 829 273 829 q 174 821 195 829 q 153 800 153 814 z "},"”":{"ha":659,"x_min":14,"x_max":652,"o":"m 506 640 q 504 649 506 646 q 498 655 501 651 q 433 641 475 641 q 339 678 376 641 q 298 777 298 717 q 346 895 298 852 q 467 937 393 937 q 603 878 553 937 q 652 729 652 819 q 592 556 652 617 q 449 494 532 494 q 365 518 397 494 q 333 583 333 541 q 349 633 333 614 q 426 610 387 610 q 485 618 465 610 q 506 640 506 625 m 202 648 q 200 656 202 653 q 195 662 197 660 q 136 650 173 650 q 51 684 84 650 q 14 773 14 719 q 57 880 14 842 q 170 918 100 918 q 288 869 240 918 q 264 777 264 829 q 324 646 264 696 q 258 549 304 583 q 159 515 212 515 q 75 536 106 515 q 45 595 45 557 q 58 640 45 621 q 135 620 87 620 q 183 627 165 620 q 202 648 202 634 z "},"„":{"ha":659,"x_min":14,"x_max":652,"o":"m 506 85 q 504 94 506 92 q 498 100 501 96 q 433 86 475 86 q 339 123 376 86 q 298 222 298 162 q 346 340 298 298 q 467 382 393 382 q 603 323 553 382 q 652 174 652 264 q 592 1 652 62 q 449 -60 532 -60 q 365 -37 397 -60 q 333 28 333 -14 q 349 79 333 60 q 426 56 387 56 q 485 63 465 56 q 506 85 506 71 m 202 93 q 199 102 202 99 q 195 107 197 105 q 136 96 173 96 q 51 129 84 96 q 14 218 14 164 q 57 325 14 287 q 170 363 100 363 q 288 314 240 363 q 264 222 264 275 q 324 91 264 141 q 258 -6 304 28 q 159 -39 212 -39 q 75 -19 106 -39 q 45 41 45 2 q 58 85 45 66 q 135 65 87 65 q 183 72 165 65 q 202 93 202 79 z "},"†":{"ha":696,"x_min":7,"x_max":690,"o":"m 60 782 l 205 770 l 184 873 q 224 922 184 900 q 296 949 256 940 q 351 959 336 959 q 376 956 355 959 q 437 938 397 952 q 499 898 477 924 q 510 869 510 885 l 490 736 q 505 734 496 734 q 524 751 521 734 l 528 772 l 636 782 q 677 707 666 736 q 690 622 690 667 q 677 541 690 577 q 636 465 665 504 l 509 475 q 543 339 543 406 q 517 186 543 271 q 461 42 492 107 q 412 -44 431 -22 q 354 -52 382 -52 q 295 -44 325 -52 q 239 47 271 -18 q 182 191 206 113 q 157 342 157 269 q 187 476 157 414 l 60 465 q 20 538 33 502 q 7 622 7 574 q 19 704 7 670 q 60 782 31 739 z "},"‡":{"ha":696,"x_min":7,"x_max":690,"o":"m 191 168 q 172 152 175 168 q 168 130 172 152 l 60 121 q 19 198 31 164 q 7 280 7 233 q 19 361 7 328 q 60 436 31 395 l 226 436 l 219 467 l 60 467 q 20 539 33 504 q 7 623 7 575 q 19 704 7 670 q 60 782 31 739 l 205 770 l 184 873 q 224 922 184 900 q 296 949 256 940 q 351 959 336 959 q 376 956 355 959 q 437 938 397 952 q 499 898 477 924 q 510 869 510 885 l 490 736 q 505 734 496 734 q 524 751 521 734 l 528 772 l 636 782 q 677 707 666 736 q 690 622 690 667 q 677 542 690 578 q 636 467 665 506 l 477 467 l 470 436 l 636 436 q 678 359 667 393 q 690 280 690 325 q 678 201 690 235 q 636 121 666 166 l 491 132 l 511 29 q 476 -18 511 2 q 400 -47 440 -37 q 345 -56 360 -56 q 259 -35 319 -56 q 197 5 217 -20 q 186 33 186 16 l 206 167 q 191 168 199 168 z "},"•":{"ha":564,"x_min":0,"x_max":524,"o":"m 263 165 q 201 165 263 165 q 69 218 138 165 q 0 363 0 272 q 33 478 0 428 q 111 563 52 509 q 196 654 170 618 q 231 694 218 684 q 262 704 243 704 q 293 693 280 704 q 331 650 307 683 q 414 563 355 618 q 492 478 473 508 q 524 363 524 428 q 455 218 524 271 q 263 165 387 165 z "},"…":{"ha":1090,"x_min":14,"x_max":1083,"o":"m 886 385 q 1025 328 966 385 q 1083 190 1083 270 q 1025 51 1083 109 q 886 -7 967 -7 q 788 19 832 -7 q 718 91 744 45 q 646 19 691 45 q 547 -7 601 -7 q 450 19 494 -7 q 379 91 406 45 q 307 20 353 46 q 208 -7 261 -7 q 71 51 128 -7 q 14 188 14 108 q 71 328 14 269 q 208 385 129 385 q 307 359 262 385 q 378 287 352 332 q 449 359 405 332 q 546 385 494 385 q 645 359 599 385 q 718 288 692 332 q 788 359 744 332 q 886 385 833 385 z "},"‰":{"ha":1270,"x_min":12,"x_max":1258,"o":"m 968 241 q 986 210 968 210 q 1004 241 1004 210 q 1000 329 1004 309 q 979 349 996 349 q 968 347 972 349 l 968 241 m 296 543 q 314 511 296 511 q 332 543 332 511 q 328 630 332 610 q 307 650 323 650 q 296 648 300 650 l 296 543 m 649 241 q 667 210 649 210 q 685 241 685 210 q 681 329 685 309 q 659 349 676 349 q 649 347 652 349 l 649 241 m 978 580 q 1183 501 1109 580 q 1258 288 1258 422 q 1184 73 1258 153 q 973 -7 1109 -7 q 819 39 882 -7 q 647 -7 747 -7 q 515 23 573 -7 q 418 106 456 52 l 350 5 q 281 -7 320 -7 q 129 50 201 -7 q 42 176 60 104 l 128 304 q 227 278 184 278 q 252 298 252 278 l 252 302 q 252 304 252 302 q 76 388 138 317 q 12 580 12 460 q 90 802 12 716 q 303 888 168 888 q 435 859 376 888 q 531 775 494 829 l 600 876 q 669 888 630 888 q 822 832 750 888 q 908 706 890 778 l 822 577 q 723 604 766 604 q 698 583 698 604 q 699 576 698 578 q 818 535 767 568 q 978 580 882 580 z "},"‹":{"ha":527,"x_min":10,"x_max":517,"o":"m 10 441 q 35 587 10 521 l 342 825 q 462 736 420 802 q 494 619 494 684 q 486 534 494 573 l 313 414 l 313 410 q 317 399 313 404 q 330 394 321 394 q 397 425 349 394 l 424 410 q 493 342 469 385 q 517 253 517 299 q 456 122 517 180 q 350 56 408 76 l 45 288 q 20 356 29 314 q 10 441 10 398 z "},"›":{"ha":511,"x_min":10,"x_max":500,"o":"m 198 473 q 170 463 187 473 l 143 448 l 21 534 q 12 619 12 574 q 45 736 12 684 q 164 825 86 802 l 476 587 q 500 441 500 521 q 491 356 500 398 q 466 288 481 314 l 177 56 q 71 122 119 76 q 10 253 10 180 q 124 396 10 333 l 219 449 q 198 473 219 473 z "},"⁄":{"ha":712,"x_min":-68,"x_max":780,"o":"m 595 940 q 709 917 656 940 q 780 863 753 897 l 270 -71 q 117 -106 211 -106 q 5 -83 56 -106 q -68 -29 -45 -61 l 448 907 q 595 940 505 940 z "},"₨":{"ha":776,"x_min":7,"x_max":769,"o":"m 22 684 l 296 684 q 281 714 292 704 l 28 714 q 7 808 7 755 q 22 903 7 861 l 753 903 q 769 808 769 861 q 748 714 769 755 l 677 714 q 683 700 680 709 q 687 684 685 690 l 753 684 q 769 589 769 642 q 748 494 769 536 l 686 494 q 617 359 669 414 q 469 284 558 297 q 474 262 469 269 q 496 256 479 256 q 537 263 513 256 q 574 279 562 271 q 616 229 592 250 q 673 186 640 208 q 612 47 669 101 q 473 -7 555 -7 q 314 49 376 -7 q 217 218 252 104 q 103 259 146 223 q 60 366 60 295 q 76 464 60 415 l 171 464 q 249 472 226 464 q 288 494 273 479 l 28 494 q 7 589 7 536 q 22 684 7 642 z "},"€":{"ha":771,"x_min":-28,"x_max":785,"o":"m 3 576 l 28 576 q 193 814 71 734 q 450 887 301 887 q 669 842 578 887 q 785 740 749 802 q 742 587 777 666 l 452 587 q 402 557 410 587 l 725 557 q 736 476 736 523 q 724 384 736 429 q 694 318 711 339 l 389 318 q 405 292 390 299 q 450 286 419 286 l 722 286 q 759 194 744 254 q 774 93 774 134 q 658 20 736 46 q 466 -7 580 -7 q 193 66 302 -7 q 41 306 68 148 l -15 307 q -28 400 -28 347 q 3 576 -28 506 z "},"₺":{"ha":0,"x_min":0,"x_max":0,"o":""},"₽":{"ha":0,"x_min":0,"x_max":0,"o":""},"ℓ":{"ha":639,"x_min":14,"x_max":632,"o":"m 307 496 q 321 486 310 486 q 351 517 336 486 q 373 595 373 565 q 356 626 373 626 q 346 623 351 626 q 339 593 339 595 q 307 496 321 522 m 44 586 q 140 819 44 739 q 353 887 221 887 q 558 813 484 887 q 632 614 632 739 q 470 300 632 424 q 488 283 470 283 q 567 336 515 283 q 596 279 587 303 q 611 186 611 235 q 551 54 611 111 q 363 -12 480 -12 q 130 119 199 -12 q 46 174 79 119 q 14 299 14 229 q 62 374 14 348 l 75 380 q 44 586 44 485 z "},"™":{"ha":939,"x_min":-14,"x_max":928,"o":"m 376 640 l 397 640 q 424 644 416 640 q 432 661 432 649 l 431 669 q 304 671 343 669 l 277 671 q 275 660 275 666 q 281 646 275 653 q 304 640 287 640 l 340 640 l 322 400 q 229 377 286 377 q 139 396 172 377 q 107 451 107 414 l 107 669 l 14 669 q -14 774 -14 722 q 22 880 -14 844 l 493 880 q 617 864 559 880 l 627 823 q 608 736 608 741 q 636 713 608 713 l 673 867 q 763 888 716 888 q 842 872 810 888 q 880 821 875 857 q 902 663 886 785 q 918 524 918 533 q 923 484 922 501 q 926 452 925 466 q 928 432 928 438 q 880 393 916 409 q 794 377 844 377 q 708 396 744 377 q 670 441 671 414 l 668 481 q 746 528 720 491 q 757 554 757 544 q 750 571 757 565 q 733 576 743 576 q 693 525 714 540 q 644 511 672 511 q 595 525 616 511 q 555 576 574 540 q 532 555 532 576 q 540 532 532 545 q 579 495 554 508 q 629 481 605 482 l 629 415 q 583 389 617 401 q 487 377 549 377 q 389 402 425 377 q 361 446 361 421 q 376 640 361 456 z "},"Ω":{"ha":900,"x_min":14,"x_max":886,"o":"m 638 2 q 526 13 567 2 q 469 35 485 24 l 469 501 q 448 551 469 551 q 431 549 438 551 l 431 35 q 374 12 415 23 q 262 1 333 1 l 64 1 q 14 139 14 60 q 43 274 14 219 l 87 274 q 31 380 46 331 q 15 499 15 429 q 65 687 15 598 q 211 831 115 775 q 442 887 307 887 q 674 832 578 887 q 819 689 771 777 q 866 504 866 601 q 850 382 866 433 q 795 275 834 330 l 857 275 q 886 141 886 222 q 836 2 886 60 l 638 2 z "},"℮":{"ha":1092,"x_min":41,"x_max":1051,"o":"m 867 708 q 854 738 867 725 q 551 867 725 867 q 239 734 377 867 q 226 703 226 720 q 226 459 226 703 q 232 452 226 452 l 861 452 q 867 459 867 452 l 867 708 m 232 427 q 226 422 226 427 l 226 174 q 238 146 226 160 q 376 47 296 82 q 550 12 456 12 q 728 52 644 12 q 872 162 812 93 l 947 162 q 771 32 876 79 q 539 -16 666 -16 q 294 46 412 -16 q 111 210 176 107 q 41 439 41 317 q 109 667 41 562 q 294 833 177 772 q 547 894 410 894 q 799 833 684 894 q 982 669 914 772 q 1051 439 1051 562 l 1051 427 l 232 427 z "},"∂":{"ha":715,"x_min":-27,"x_max":748,"o":"m 351 297 q 387 311 374 297 q 400 349 400 326 q 359 357 385 357 q 317 325 317 357 q 351 297 317 297 m 137 612 q 89 692 105 642 q 73 798 73 743 q 76 840 73 824 q 183 874 113 861 q 328 888 254 888 q 514 842 424 888 q 677 689 617 787 q 748 420 748 574 q 688 166 748 266 q 542 32 635 77 q 334 -12 448 -12 q 74 74 174 -12 q -27 300 -27 161 q 57 523 -27 439 q 292 606 141 606 q 386 595 344 606 q 444 576 429 585 q 447 585 447 581 q 402 620 447 604 q 287 637 357 637 q 137 612 217 637 z "},"∆":{"ha":799,"x_min":-14,"x_max":812,"o":"m 456 267 q 405 445 409 435 q 382 463 397 463 q 369 458 373 463 l 420 267 q 438 262 425 262 q 456 267 452 262 m -14 154 q 5 252 -14 196 q 18 286 12 271 q 218 767 24 300 q 283 850 241 823 q 402 878 327 878 q 588 766 542 878 q 777 300 773 309 q 812 154 812 218 q 772 45 812 92 q 663 -7 728 -7 l 116 -7 q 19 45 56 -7 q -14 154 -14 90 z "},"∏":{"ha":820,"x_min":-41,"x_max":861,"o":"m 417 122 l 417 522 q 450 527 441 522 q 458 552 458 533 l 376 552 l 376 121 q 399 35 376 63 q 312 1 353 9 q 227 -7 272 -7 q 93 25 142 -7 q 43 122 43 58 l 43 552 l 8 552 q -41 712 -41 628 q -23 810 -41 768 q 22 875 -5 852 l 812 875 q 848 798 836 836 q 861 709 861 759 q 843 617 861 659 q 798 552 825 575 l 764 552 l 764 45 q 600 -7 687 -7 q 465 25 513 -7 q 417 122 417 58 z "},"∑":{"ha":726,"x_min":14,"x_max":739,"o":"m 713 715 q 663 552 713 633 l 581 552 q 514 612 530 598 q 450 657 466 657 q 430 642 434 657 l 524 554 q 573 502 559 523 q 587 450 587 480 q 572 398 587 420 q 524 347 556 376 l 404 244 q 409 233 406 237 q 426 229 413 229 q 470 255 438 229 q 496 277 484 266 q 520 299 508 288 q 538 316 532 311 l 694 316 q 739 165 739 235 q 670 20 739 60 q 541 -7 623 -7 l 92 -7 q 26 212 26 64 q 28 250 26 225 q 33 281 31 275 l 168 426 l 35 564 q 14 687 14 621 q 32 801 14 752 q 75 875 51 850 l 652 875 q 713 715 713 817 z "},"−":{"ha":692,"x_min":14,"x_max":679,"o":"m 679 407 q 679 382 679 407 q 665 320 679 358 q 622 241 651 281 l 70 241 q 14 406 14 318 q 28 495 14 455 q 70 576 42 534 l 622 576 q 665 494 652 532 q 679 407 679 455 z "},"∕":{"ha":484,"x_min":27,"x_max":484,"o":"m 312 888 q 417 865 366 888 q 484 811 457 845 l 378 55 q 208 -7 326 -7 q 99 15 147 -7 q 27 72 52 37 l 131 817 q 312 888 189 888 z "},"∙":{"ha":389,"x_min":34,"x_max":355,"o":"m 81 603 q 194 650 127 650 q 308 603 260 650 q 355 489 355 555 q 308 376 355 422 q 194 329 260 329 q 81 376 127 329 q 34 489 34 422 q 81 603 34 555 z "},"√":{"ha":664,"x_min":20,"x_max":664,"o":"m 399 294 q 397 314 399 301 q 386 435 396 326 q 355 524 381 486 q 281 578 329 562 l 311 827 q 492 899 368 899 q 597 876 546 899 q 664 822 637 856 l 567 133 q 357 -7 548 -7 q 250 7 298 -7 q 181 33 208 18 l 104 244 l 75 244 q 37 312 54 268 q 20 399 20 354 q 50 526 20 468 l 137 547 q 211 556 174 556 q 353 434 332 556 q 359 377 359 405 q 372 294 361 305 q 386 288 376 288 q 399 294 395 288 z "},"∞":{"ha":1007,"x_min":14,"x_max":994,"o":"m 725 649 q 915 572 836 649 q 994 372 994 495 q 912 177 994 248 q 719 106 831 106 q 526 160 607 106 q 353 347 446 214 q 323 384 336 374 q 296 395 311 395 q 270 374 270 395 q 273 364 270 368 l 283 364 q 315 351 304 364 q 321 342 317 348 q 327 334 325 337 q 458 176 378 250 q 378 123 418 139 q 283 106 338 106 q 96 178 171 106 q 14 378 14 254 q 99 578 14 501 q 289 649 178 649 q 485 593 401 649 q 654 408 563 540 q 684 371 672 382 q 712 361 696 361 q 738 381 738 361 q 735 391 738 388 l 725 391 q 701 398 709 391 q 681 422 692 405 q 549 580 629 505 q 630 633 590 616 q 725 649 669 649 z "},"∫":{"ha":472,"x_min":-7,"x_max":479,"o":"m 71 111 q 58 356 71 135 q 44 695 44 577 q 121 911 44 845 q 306 966 184 966 q 387 962 357 966 q 454 947 417 957 q 479 820 479 897 q 448 684 479 743 q 401 634 401 684 q 414 394 401 612 q 428 50 428 176 q 352 -165 428 -100 q 166 -221 288 -221 q 85 -216 115 -221 q 18 -201 55 -212 q -7 -74 -7 -151 q 24 62 -7 3 q 71 111 71 62 z "},"≈":{"ha":711,"x_min":14,"x_max":697,"o":"m 697 585 q 532 432 697 432 q 355 455 465 432 q 179 477 241 477 q 45 441 92 477 q 14 588 14 512 q 66 706 14 664 q 211 747 119 747 q 395 719 304 747 q 455 701 415 712 l 688 701 q 697 585 697 655 m 14 290 q 179 442 14 442 q 356 420 243 442 q 532 397 466 397 q 665 433 618 397 q 697 286 697 362 q 645 168 697 209 q 501 127 593 127 q 379 140 433 127 q 313 156 326 153 q 256 174 301 160 l 23 174 q 14 290 14 218 z "},"≠":{"ha":647,"x_min":14,"x_max":633,"o":"m 416 857 q 551 816 510 857 q 515 723 551 816 l 587 723 q 633 585 633 660 q 623 513 633 544 q 587 445 612 482 l 60 445 q 14 583 14 508 q 25 655 14 624 q 60 723 36 687 l 283 723 l 334 845 q 416 857 364 857 m 257 -7 q 122 34 163 -7 q 158 127 122 34 l 60 127 q 14 265 14 191 q 24 338 14 307 q 60 406 35 368 l 587 406 q 633 268 633 342 q 622 195 633 227 q 587 127 611 163 l 390 127 l 339 5 q 257 -7 309 -7 z "},"≤":{"ha":671,"x_min":14,"x_max":699,"o":"m 14 158 q 26 240 14 205 q 68 320 38 276 l 137 320 l 478 134 q 564 205 517 158 q 627 320 623 267 l 645 320 q 699 160 699 250 q 644 0 699 70 l 68 0 q 14 158 14 72 m 38 535 q 85 694 38 627 l 479 892 q 560 806 530 854 q 590 709 590 759 q 546 597 590 638 q 350 511 491 545 q 378 490 350 490 q 468 512 407 490 l 535 461 q 596 354 596 415 q 566 260 596 302 q 472 173 536 218 l 84 385 q 51 455 64 414 q 38 535 38 495 z "},"≥":{"ha":671,"x_min":-27,"x_max":658,"o":"m 26 320 l 51 320 q 111 212 55 268 q 197 145 147 175 l 518 320 l 604 320 q 646 240 633 276 q 658 159 658 205 q 645 76 658 113 q 604 0 632 39 l 28 0 q -27 160 -27 70 q 26 320 -27 250 m 58 708 q 87 806 58 759 q 169 892 117 854 l 563 694 q 610 535 610 627 q 596 455 610 497 q 564 385 583 414 l 200 186 q 106 274 136 233 q 76 368 76 315 q 99 442 76 407 q 182 505 121 477 l 298 558 q 284 575 295 575 q 251 568 271 575 q 188 543 231 561 q 58 708 58 601 z "},"◊":{"ha":693,"x_min":-14,"x_max":707,"o":"m 330 330 q 342 326 334 326 q 356 328 351 326 q 370 343 361 330 q 408 427 378 357 q 397 452 404 436 q 362 521 372 513 q 343 529 352 529 q 330 525 334 529 l 371 427 l 330 330 m 25 552 l 205 808 q 264 859 228 840 q 348 878 300 878 q 429 861 395 878 q 488 808 463 844 l 668 552 q 692 508 688 519 q 707 430 707 473 q 668 302 707 366 l 488 47 q 429 -5 463 12 q 348 -22 395 -22 q 264 -4 300 -22 q 205 47 228 15 l 25 302 q -1 355 12 319 q -14 432 -14 391 q 25 552 -14 500 z "},"◌":{"ha":884,"x_min":54,"x_max":823,"o":"m 698 182 q 672 182 698 182 q 608 220 646 182 q 571 309 571 257 q 609 398 571 361 q 698 434 646 434 q 786 397 749 434 q 823 309 823 361 q 786 220 823 258 q 698 182 750 182 m 313 167 q 313 193 313 167 q 349 255 313 218 q 438 292 386 292 q 527 256 490 292 q 564 167 564 220 q 527 77 564 114 q 438 40 490 40 q 349 78 385 40 q 313 167 313 115 m 54 309 q 54 335 54 309 q 91 397 54 361 q 179 434 127 434 q 269 398 231 434 q 306 309 306 362 q 269 219 306 256 q 179 182 232 182 q 91 220 127 182 q 54 309 54 258 m 823 596 q 823 571 823 596 q 786 508 823 545 q 698 471 749 471 q 609 508 646 471 q 571 596 571 544 q 608 686 571 649 q 698 723 645 723 q 787 686 751 723 q 823 596 823 648 m 438 865 q 464 865 438 865 q 528 829 491 865 q 564 739 564 792 q 527 650 564 686 q 438 614 490 614 q 349 650 386 614 q 313 739 313 687 q 349 828 313 791 q 438 865 385 865 m 179 723 q 206 723 179 723 q 269 686 233 723 q 306 596 306 650 q 269 507 306 543 q 179 471 231 471 q 91 508 127 471 q 54 596 54 545 q 90 686 54 648 q 179 723 126 723 z "},"ﬁ":{"ha":1029,"x_min":8,"x_max":1034,"o":"m 289 -9 q 160 20 208 -9 q 106 111 106 51 l 106 429 l 127 429 q 161 451 161 429 q 160 459 161 454 l 47 459 q 8 598 8 515 q 47 741 8 681 l 106 741 q 194 914 122 854 q 386 973 267 973 q 535 948 471 973 q 631 889 598 923 q 701 979 652 945 q 814 1013 750 1013 q 950 957 895 1013 q 1006 819 1006 902 q 964 701 1006 751 q 861 637 922 650 q 881 612 861 612 q 951 639 916 612 q 985 610 979 618 l 985 342 q 1034 210 985 241 q 1034 197 1034 207 l 1034 185 q 980 35 1034 85 q 846 -12 930 -12 q 708 35 762 -12 q 640 212 640 96 l 640 652 q 666 667 652 661 q 696 680 680 672 q 629 761 648 705 q 613 703 623 729 q 482 685 566 685 q 407 690 448 685 q 346 699 366 694 q 341 686 341 694 q 374 664 341 674 q 476 654 406 654 q 604 665 545 654 l 604 459 l 464 459 l 464 38 q 289 -9 390 -9 z "},"ﬂ":{"ha":1038,"x_min":8,"x_max":1043,"o":"m 289 -9 q 160 20 208 -9 q 106 111 106 51 l 106 429 l 127 429 q 161 451 161 429 q 160 459 161 454 l 47 459 q 8 598 8 515 q 47 741 8 681 l 106 741 q 195 913 123 854 q 386 973 267 973 q 522 954 464 973 q 612 907 580 934 l 612 703 q 482 685 566 685 q 407 690 448 685 q 346 699 366 694 q 341 686 341 694 q 374 664 341 674 q 479 654 406 654 q 599 663 552 654 q 608 622 604 652 q 612 562 612 591 q 589 459 612 500 l 464 459 l 464 38 q 289 -9 390 -9 m 994 819 l 994 342 q 1042 210 994 241 q 1043 197 1043 207 l 1043 185 q 994 38 1043 88 q 854 -12 945 -12 q 711 38 764 -12 q 648 218 648 98 l 648 923 q 811 966 720 966 q 948 927 903 966 q 994 819 994 888 z "},"ﬃ":{"ha":1535,"x_min":8,"x_max":1540,"o":"m 795 -9 q 666 20 714 -9 q 612 111 612 51 l 612 429 l 633 429 q 667 451 667 429 q 666 459 667 454 l 464 459 l 464 38 q 289 -9 390 -9 q 160 20 208 -9 q 106 111 106 51 l 106 429 l 127 429 q 161 451 161 429 q 160 459 161 454 l 47 459 q 8 598 8 515 q 47 741 8 681 l 106 741 q 194 914 122 854 q 386 973 267 973 q 528 951 465 973 q 627 893 592 929 q 571 691 573 805 q 491 685 528 685 q 411 689 454 685 q 347 699 368 694 q 342 686 342 694 q 377 664 342 674 q 486 654 411 654 q 607 663 560 654 l 607 684 q 678 896 607 819 q 892 973 749 973 q 1041 948 977 973 q 1137 889 1104 923 q 1207 979 1158 945 q 1320 1013 1256 1013 q 1456 957 1401 1013 q 1512 819 1512 902 q 1470 701 1512 751 q 1367 637 1428 650 q 1387 612 1367 612 q 1457 639 1421 612 q 1491 610 1485 618 l 1491 342 q 1539 210 1491 241 q 1540 197 1540 207 l 1540 185 q 1486 35 1540 85 q 1352 -12 1436 -12 q 1214 35 1268 -12 q 1145 212 1145 96 l 1145 652 q 1172 667 1158 661 q 1202 680 1186 672 q 1135 761 1154 705 q 1119 703 1129 729 q 988 685 1072 685 q 912 690 954 685 q 852 699 871 694 q 847 686 847 694 q 880 664 847 674 q 982 654 912 654 q 1109 665 1051 654 l 1109 459 l 970 459 l 970 38 q 795 -9 896 -9 z "}},"familyName":"Modak","ascender":1380,"descender":-711,"underlinePosition":-70,"underlineThickness":69,"boundingBox":{"yMin":-711,"xMin":-718,"yMax":1380,"xMax":2703},"resolution":1000,"original_font_information":{"format":0,"copyright":"Copyright (c) 2014, Ek Type. All rights reserved.","fontFamily":"Modak","fontSubfamily":"Regular","uniqueID":"1.036;EKTF;Modak","fullName":"Modak","version":"Version 1.036;PS Version 1.000;hotconv 1.0.79;makeotf.lib2.5.61930; ttfautohint (v1.2.42-39fb)","postScriptName":"Modak","manufacturer":"Ek Type","designer":"Sarang Kulkarni, Maithili Shingre, Noopur Datye","description":"Modak is a Free and Open Source, Heavy-Chubby Devanagari-Latin display typeface. The design started off as one of our heavy hand sketched letterform explorations ...  The characters were cute/round and not bulky/rigid. The consonants and Matras were overlapping, instead of them being successive characters. Conjuncts were drawn as fused forms in which the two separate characters would merge into each other. The challenge was to maintain legibility and consistency in the thin white counter spaces across all characters irrespective of their structural complexity. In an attempt to translate this into a functional font, we designed additional Matras that would match exactly with every character, leaving a thin counter space in between. Custom Ukars were designed according to each character. The resulting typeface is one of its kind and probably the chubbiest Devanagari typeface to be designed so far. Modak Devanagari was designed by Sarang Kulkarni and Maithili Shingre and Modak Latin by Noopur Datye with support from Girish Dalvi and Pradnya Naik. We would like to thank Santosh Kshirsagar, Shubhanand Jog, Vinay Saynekar and Yashodeep Gholap for their suggestions and feedback during the font design process. We would also like to thank faculty and friends from the Industrial Design Centre, IIT Bombay and from Sir J J Institute of Applied Art for their support and encouragement. This project is led by [Ek Type]( http://ektype.in/), a collective of type designers based in Mumbai focused on designing contemporary Indian typefaces.","designerURL":"www.ektype.in","licence":"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL","licenceURL":"http://scripts.sil.org/OFL"},"cssFontWeight":"normal","cssFontStyle":"normal"}');function sq(t){return sq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},sq(t)}function lq(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,n=new Array(e);i<e;i++)n[i]=t[i];return n}function hq(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,cq(n.key),n)}}function cq(t){var e=function(t,e){if("object"!==sq(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,"string");if("object"!==sq(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===sq(e)?e:String(e)}var uq=function(){function t(e,i,n){var r,o,a;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,a=function(){var t=null,e=Math.atan(3/8),i=Math.atan(3/Math.sqrt(Math.pow(3,2)+Math.pow(8,2)));return function(n){if(!t)return t=n,null;if(!n)return t=null,null;var r=window.APP.Layout,o=r.W,a=r.H,s=o/a,l=a/2,h=o/2,c=t,u=c.clientX,q=c.clientY,p=15*(n.clientX-u)*s/h,d=-1*(n.clientY-q)*15/l,m=p*Math.cos(e),f=d*Math.cos(i),v=p*Math.sin(e)+d*Math.sin(i);return t=n,{dx:m,dy:f,dz:v}}},(o=cq(o="getCoordsDiff"))in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,this.loader=new xc;var s=this.loader.parse(aq);this.worlds=["Paralect","Startup","Summer"],this.scene=e,this.world=i,this.camera=n,this.totalMass=1,this.cMaterial=new(oq().Material),this.worldMat=new(oq().Material),this.mouse=new Re,this.raycaster=new ou,this.pointerHandler=this.onPointer(),this.pointDiffer=this.getCoordsDiff(),this.setup(s),this.bindEvents()}var e,i;return e=t,i=[{key:"bindEvents",value:function(){var t=this;document.addEventListener("pointerdown",(function(e){return t.pointerHandler(e)})),document.addEventListener("pointerup",(function(e){return t.pointerHandler(e)})),document.addEventListener("pointermove",(function(e){return t.pointerHandler(e)})),document.addEventListener("touchstart",(function(e){return t.pointerHandler(e)})),document.addEventListener("touchend",(function(e){return t.pointerHandler(e)})),document.addEventListener("touchmove",(function(e){return t.pointerHandler(e)})),document.addEventListener("click",(function(){return t.onClick()})),window.addEventListener("mousemove",(function(e){return t.onMouseMove(e)}))}},{key:"onPointer",value:function(){var t=this,e=null,i=0;return function(n){switch(n.preventDefault(),n.type){case"pointerdown":t.raycaster.setFromCamera(t.mouse,t.camera);var r=t.raycaster.intersectObjects(t.scene.children,!0);if(r.length>0){var o=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var i=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=i){var n,r,o,a,s=[],l=!0,h=!1;try{if(o=(i=i.call(t)).next,0===e){if(Object(i)!==i)return;l=!1}else for(;!(l=(n=o.call(i)).done)&&(s.push(n.value),s.length!==e);l=!0);}catch(t){h=!0,r=t}finally{try{if(!l&&null!=i.return&&(a=i.return(),Object(a)!==a))return}finally{if(h)throw r}}return s}}(t,e)||function(t,e){if(t){if("string"==typeof t)return lq(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?lq(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(r,1)[0];e=o.object.isMesh&&o.object}return;case"pointerup":t.moving=!1;var a=t.pointDiffer(n);if(!a)return t.pointDiffer(null),void(e=null);var s=new(oq().Vec3)(a.dx/5,a.dy,-a.dz).scale(10);return e.body.applyLocalImpulse(s,new(oq().Vec3)),t.pointDiffer(null),void(e=null);case"pointermove":if(e){t.moving=!0;var l=t.pointDiffer(n),h=t.words.find((function(t,i){return t.children.some((function(t){return t===e}))}));if(!l)return;if(5===i){var c=new(oq().Vec3)(l.dx/10,l.dy,-l.dz).scale(10);e.body.applyLocalImpulse(c,new(oq().Vec3)),i=0}h.position.set(h.position.x+l.dx,h.position.y+l.dy>15?h.position.y:h.position.y+l.dy,h.position.z+l.dz>10?h.position.z:h.position.z+l.dz),i++}}}}},{key:"setup",value:function(t){var e=this;this.words=[],this.margin=6,this.offset=this.worlds.length*this.margin*.5;var i={font:t,size:5,height:.4,curveSegments:24,bevelEnabled:!0,bevelThickness:.9,bevelSize:.3,bevelOffset:0,bevelSegments:10};Array.from(this.worlds).reverse().forEach((function(t,n){var r=new _a;r.len=0,r.ground=new(oq().Body)({mass:0,shape:new(oq().Box)(new(oq().Vec3)(100,100,.1)),quaternion:(new(oq().Quaternion)).setFromEuler(Math.PI/-2,0,0),position:new(oq().Vec3)(0,n*e.margin-e.offset,0),material:e.worldMat}),r.isGroundDisplayed=!1,Array.from(t).forEach((function(o,a){var s=a/(t.length-1),l=new Hl({color:new ln("#7A5099").clone().lerp(new ln("#7A5099"),s)}),h=new bl(o,i);h.computeBoundingBox(),h.computeBoundingSphere();var c=new $n(h,l);c.size=c.geometry.boundingBox.getSize(new Oe),c.size.multiply(new Oe(.5,.5,.5)),c.initPosition=new(oq().Vec3)(2*r.len,(e.worlds.length-1-n)*e.margin-e.offset,0),c.initPositionOffset=new(oq().Vec3)(c.initPosition.x,c.initPosition.y+30*(n+1)+30+.01*a,c.initPosition.z),r.len+=c.size.x;var u=new(oq().Box)(new(oq().Vec3)(c.size.x,c.size.y,c.size.z));c.body=new(oq().Body)({mass:e.totalMass/t.length,position:c.initPositionOffset,material:e.cMaterial,linearDamping:.1,angularDamping:.99}),c.body.addShape(u,new(oq().Vec3)(c.geometry.boundingSphere.center.x,c.geometry.boundingSphere.center.y,c.geometry.boundingSphere.center.z)),e.world.addBody(c.body),r.add(c)})),r.children.forEach((function(t){t.body.position.x-=r.len})),e.words.push(r),e.scene.add(r)}));var n=new(oq().ContactMaterial)(this.cMaterial,this.worldMat,{friction:.002,frictionEquationStiffness:1e6,frictionEquationRelaxation:3,restitution:.2,contactEquationStiffness:1e20,contactEquationRelaxation:3});this.world.addContactMaterial(n),this.setConstraints()}},{key:"onMouseMove",value:function(t){this.mouse.x=t.clientX/window.innerWidth*2-1,this.mouse.y=-t.clientY/window.innerHeight*2+1,this.raycaster.setFromCamera(this.mouse,this.camera);var e=this.raycaster.intersectObjects(this.scene.children,!0);document.body.style.cursor=e.length>0?"pointer":""}},{key:"onClick",value:function(){if(!this.moving){this.raycaster.setFromCamera(this.mouse,this.camera);var t=this.raycaster.intersectObjects(this.scene.children,!0);if(t.length>0){var e=t[0],i=e.object,n=e.face;if(!i.isMesh)return;var r=(new(oq().Vec3)).copy(n.normal).scale(-10);this.words.forEach((function(t,e){t.children.forEach((function(t){var e=t.body;t===i&&e.applyLocalImpulse(r,new(oq().Vec3))}))}))}}}},{key:"update",value:function(){var t=this;this.words&&this.words.forEach((function(e,i){for(var n=0;n<e.children.length;n++){var r=e.children[n];r.position.copy(r.body.position),r.quaternion.copy(r.body.quaternion),i===t.words.length-1&&r.body.position.y<=-50&&t.reset(),e.isGroundDisplayed||r.body.position.y+r.initPosition.y<=0&&(t.world.addBody(e.ground),e.isGroundDisplayed=!0)}}))}},{key:"reset",value:function(){this.words.forEach((function(t){t.isGroundDisplayed=!1;for(var e={from:new ln("#7A5099"),to:new ln("#7A5099")},i=0;i<t.children.length;i++){var n=i/(t.children.length-1),r=t.children[i];r.body.sleep();var o=r.initPositionOffset,a=o.x,s=o.y,l=o.z;r.material.color=e.from.clone().lerp(e.to,n),r.material.needsUpdate=!0,r.body.position.set(a-t.len,s,l),r.body.quaternion.set(0,0,0,1),r.body.angularVelocity.setZero(),r.body.torque.setZero(),r.body.force.setZero(),r.body.wakeUp()}}))}},{key:"setConstraints",value:function(){var t=this;this.words.forEach((function(e){for(var i=0;i<e.children.length;i++){var n=e.children[i],r=i+1===e.children.length?null:e.children[i+1];if(r){var o=new(oq().ConeTwistConstraint)(n.body,r.body,{pivotA:new(oq().Vec3)(2*n.size.x,0,0),pivotB:new(oq().Vec3)(0,0,0),axisA:oq().Vec3.UNIT_X,axisB:oq().Vec3.UNIT_X,angle:0,twistAngle:0,maxForce:1e30});o.collideConnected=!0,t.world.addConstraint(o)}}}))}}],i&&hq(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}();function qq(t){return qq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},qq(t)}function pq(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==qq(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,"string");if("object"!==qq(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===qq(r)?r:String(r)),n)}var r}var dq=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.$stage=document.getElementById("stage"),this.setup(),this.bindEvents()}var e,i;return e=t,(i=[{key:"bindEvents",value:function(){var t=this;window.addEventListener("resize",(function(){return t.onResize()}))}},{key:"setup",value:function(){this.world=new(oq().World),this.world.gravity.set(0,-50,0),this.scene=new gi,this.setCamera(),this.setLights(),this.setRender(),this.addObjects()}},{key:"onResize",value:function(){var t=APP.Layout,e=t.W,i=t.H;this.camera.aspect=e/i,this.camera.top=15,this.camera.right=15*this.camera.aspect,this.camera.bottom=-15,this.camera.left=-15*this.camera.aspect,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,i)}},{key:"setCamera",value:function(){var t=APP.Layout,e=t.W/t.H;this.camera=new tc(-15*e,15*e,15,-15,-10,100),this.camera.position.set(-3,3,8),this.camera.lookAt(new Oe)}},{key:"setLights",value:function(){var t=new nc(13421772);this.scene.add(t);var e=new ic(16777215,.5);e.position.set(5,5,20),this.scene.add(e);var i=new ic(16777215,1);i.position.set(-5,-5,-10),this.scene.add(i)}},{key:"setRender",value:function(){var t=this;this.renderer=new Pa({antialias:!0,canvas:this.$stage}),this.renderer.setClearColor(16772606),this.renderer.setSize(APP.Layout.W,APP.Layout.H),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setAnimationLoop((function(){return t.draw()}))}},{key:"addObjects",value:function(){this.menu=new uq(this.scene,this.world,this.camera)}},{key:"draw",value:function(){this.updatePhysics(),this.renderer.render(this.scene,this.camera)}},{key:"updatePhysics",value:function(){this.dbr&&this.dbr.update(),this.menu.update(),this.world.step(1/60)}}])&&pq(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}();function mq(t){return mq="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},mq(t)}function fq(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==mq(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,"string");if("object"!==mq(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===mq(r)?r:String(r)),n)}var r}var vq=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.setup(),this.onResize(),this.bindEvents()}var e,i;return e=t,(i=[{key:"bindEvents",value:function(){var t=this;window.addEventListener("resize",(function(){return t.onResize()}))}},{key:"setup",value:function(){this.mainScene=new dq}},{key:"onResize",value:function(){var t=APP.Layout.isSmallMobile?.5:APP.Layout.isMobile?.7:1;this.mainScene.scene.scale.set(t,t,t)}}])&&fq(e.prototype,i),Object.defineProperty(e,"prototype",{writable:!1}),t}(),gq=window.APP||{},yq=function(){window.APP=gq,gq.Layout=new n,gq.Stage=new vq};"complete"===document.readyState||"loading"!==document.readyState&&!document.documentElement.doScroll?yq():document.addEventListener("DOMContentLoaded",yq)}()}();